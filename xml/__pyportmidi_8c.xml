<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="__pyportmidi_8c" kind="file" language="C++">
    <compoundname>_pyportmidi.c</compoundname>
    <includes local="yes">Python.h</includes>
    <includes local="yes">structmember.h</includes>
    <incdepgraph>
      <node id="31019">
        <label>structmember.h</label>
      </node>
      <node id="31017">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/_pyportmidi.c</label>
        <link refid="_pyportmidi.c"/>
        <childnode refid="31018" relation="include">
        </childnode>
        <childnode refid="31019" relation="include">
        </childnode>
      </node>
      <node id="31018">
        <label>Python.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="__pyportmidi_8c_1ac9efdaac9411d0868b715edccca3269d" prot="public" static="no">
        <name>PY_SSIZE_T_CLEAN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/_pyportmidi.c" line="3" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/_pyportmidi.c" bodystart="3" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Generated<sp/>by<sp/>Cython<sp/>0.12.1<sp/>on<sp/>Sun<sp/>Sep<sp/>26<sp/>13:30:09<sp/>2010<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="__pyportmidi_8c_1ac9efdaac9411d0868b715edccca3269d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_SSIZE_T_CLEAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Python.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;structmember.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_PYTHON_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Python<sp/>headers<sp/>needed<sp/>to<sp/>compile<sp/>C<sp/>extensions,<sp/>please<sp/>install<sp/>development<sp/>version<sp/>of<sp/>Python.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PY_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PY_LONG_LONG<sp/>LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DL_EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>DL_EXPORT(t)<sp/>t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02040000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>METH_COEXIST<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyDict_CheckExact(op)<sp/>(Py_TYPE(op)<sp/>==<sp/>&amp;PyDict_Type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyDict_Contains(d,o)<sp/><sp/><sp/>PySequence_Contains(d,o)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Py_ssize_t;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PY_SSIZE_T_MAX<sp/>INT_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PY_SSIZE_T_MIN<sp/>INT_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PY_FORMAT_SIZE_T<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromSsize_t(z)<sp/>PyInt_FromLong(z)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AsSsize_t(o)<sp/><sp/><sp/>PyInt_AsLong(o)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyNumber_Index(o)<sp/><sp/><sp/><sp/>PyNumber_Int(o)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyIndex_Check(o)<sp/><sp/><sp/><sp/><sp/>PyNumber_Check(o)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyErr_WarnEx(category,<sp/>message,<sp/>stacklevel)<sp/>PyErr_Warn(category,<sp/>message)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02060000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_REFCNT(ob)<sp/>(((PyObject*)(ob))-&gt;ob_refcnt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_TYPE(ob)<sp/><sp/><sp/>(((PyObject*)(ob))-&gt;ob_type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_SIZE(ob)<sp/><sp/><sp/>(((PyVarObject*)(ob))-&gt;ob_size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyVarObject_HEAD_INIT(type,<sp/>size)<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_HEAD_INIT(type)<sp/>size,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyType_Modified(t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*obj;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>itemsize;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readonly;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndim;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>*shape;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>*strides;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>*suboffsets;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">internal</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}<sp/>Py_buffer;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_SIMPLE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_WRITABLE<sp/>0x0001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_FORMAT<sp/>0x0004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_ND<sp/>0x0008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_STRIDES<sp/>(0x0010<sp/>|<sp/>PyBUF_ND)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_C_CONTIGUOUS<sp/>(0x0020<sp/>|<sp/>PyBUF_STRIDES)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_F_CONTIGUOUS<sp/>(0x0040<sp/>|<sp/>PyBUF_STRIDES)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_ANY_CONTIGUOUS<sp/>(0x0080<sp/>|<sp/>PyBUF_STRIDES)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBUF_INDIRECT<sp/>(0x0100<sp/>|<sp/>PyBUF_STRIDES)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_BUILTIN_MODULE_NAME<sp/>&quot;__builtin__&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_BUILTIN_MODULE_NAME<sp/>&quot;builtins&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_TPFLAGS_CHECKTYPES<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_TPFLAGS_HAVE_INDEX<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(PY_VERSION_HEX<sp/>&lt;<sp/>0x02060000)<sp/>||<sp/>(PY_MAJOR_VERSION<sp/>&gt;=<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>Py_TPFLAGS_HAVE_NEWBUFFER<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBaseString_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyString_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyString_CheckExact<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_CheckExact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBytes_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyBytes_CheckExact<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_CheckExact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_Check(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_Check(op)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_CheckExact(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_CheckExact(op)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromUnicode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromUnicode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromLong<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromLong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromSize_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromSize_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_FromSsize_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_FromSsize_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AsLong<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_AsLong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AS_LONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_AS_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AsSsize_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyLong_AsSsize_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AsUnsignedLongMask<sp/><sp/><sp/><sp/><sp/>PyLong_AsUnsignedLongMask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyInt_AsUnsignedLongLongMask<sp/>PyLong_AsUnsignedLongLongMask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyNumber_Divide(x,y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyNumber_TrueDivide(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyNumber_InPlaceDivide(x,y)<sp/><sp/>PyNumber_InPlaceTrueDivide(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyNumber_Divide(x,y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyNumber_Divide(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_PyNumber_InPlaceDivide(x,y)<sp/><sp/>PyNumber_InPlaceDivide(x,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PyMethod_New(func,<sp/>self,<sp/>klass)<sp/>PyInstanceMethod_New(func)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(WIN32)<sp/>&amp;&amp;<sp/>!defined(MS_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>__stdcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__stdcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>__cdecl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__cdecl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>__fastcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__fastcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_GetAttrString(o,n)<sp/><sp/><sp/>PyObject_GetAttrString((o),((char<sp/>*)(n)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_SetAttrString(o,n,a)<sp/>PyObject_SetAttrString((o),((char<sp/>*)(n)),(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_DelAttrString(o,n)<sp/><sp/><sp/>PyObject_DelAttrString((o),((char<sp/>*)(n)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_GetAttrString(o,n)<sp/><sp/><sp/>PyObject_GetAttrString((o),(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_SetAttrString(o,n,a)<sp/>PyObject_SetAttrString((o),(n),(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_DelAttrString(o,n)<sp/><sp/><sp/>PyObject_DelAttrString((o),(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_NAMESTR(n)<sp/>((char<sp/>*)(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_DOCSTR(n)<sp/><sp/>((char<sp/>*)(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_NAMESTR(n)<sp/>(n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_DOCSTR(n)<sp/><sp/>(n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_EXTERN_C<sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_EXTERN_C<sp/>extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PYX_HAVE_API___pyportmidi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portmidi_8h" kindref="compound">portmidi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="porttime_8h" kindref="compound">porttime.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYTHON_INLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_INLINE<sp/>__inline__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_INLINE<sp/>__inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>CYTHON_INLINE<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{PyObject<sp/>**<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="lib_2expat_8h_1a4dfeb87c47b4dde2571b24c1a6798056" kindref="member">encoding</ref>;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>is_unicode;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>is_str;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>intern;<sp/>}<sp/>__Pyx_StringTabEntry;<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Type<sp/>Conversion<sp/>Predeclarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_FromString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_FromString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_FromStringAndSize<sp/><sp/><sp/>PyString_FromStringAndSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_AsString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_AsString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_FromString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyBytes_FromString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_FromStringAndSize<sp/><sp/><sp/>PyBytes_FromStringAndSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_AsString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyBytes_AsString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_FromUString(s)<sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_PyBytes_FromString((char*)s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBytes_AsUString(s)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((unsigned<sp/>char*)<sp/>__Pyx_PyBytes_AsString(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_PyBool_FromLong(b)<sp/>((b)<sp/>?<sp/>(Py_INCREF(Py_True),<sp/>Py_True)<sp/>:<sp/>(Py_INCREF(Py_False),<sp/>Py_False))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyObject_IsTrue(PyObject*);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyNumber_Int(PyObject*<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(T_PYSSIZET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>T_PYSSIZET<sp/>T_INT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>!defined(T_LONGLONG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>T_PYSSIZET<sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(Py_ssize_t)<sp/>==<sp/>sizeof(int))<sp/><sp/>?<sp/>T_INT<sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(Py_ssize_t)<sp/>==<sp/>sizeof(long))<sp/>?<sp/>T_LONG<sp/>:<sp/>-1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>T_PYSSIZET<sp/>\</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(Py_ssize_t)<sp/>==<sp/>sizeof(int))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>T_INT<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(Py_ssize_t)<sp/>==<sp/>sizeof(long))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>T_LONG<sp/><sp/><sp/><sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(Py_ssize_t)<sp/>==<sp/>sizeof(PY_LONG_LONG))<sp/>?<sp/>T_LONGLONG<sp/>:<sp/>-1)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(T_ULONGLONG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_T_UNSIGNED_INT(x)<sp/>\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(unsigned<sp/>char))<sp/><sp/>?<sp/>T_UBYTE<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(unsigned<sp/>short))<sp/>?<sp/>T_USHORT<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(unsigned<sp/>int))<sp/><sp/><sp/>?<sp/>T_UINT<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(unsigned<sp/>long))<sp/><sp/>?<sp/>T_ULONG<sp/>:<sp/>-1))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_T_UNSIGNED_INT(x)<sp/>\</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(unsigned<sp/>char))<sp/><sp/>?<sp/>T_UBYTE<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(unsigned<sp/>short))<sp/>?<sp/>T_USHORT<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(unsigned<sp/>int))<sp/><sp/><sp/>?<sp/>T_UINT<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(unsigned<sp/>long))<sp/><sp/>?<sp/>T_ULONG<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(unsigned<sp/>PY_LONG_LONG))<sp/>?<sp/>T_ULONGLONG<sp/>:<sp/>-1)))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(T_LONGLONG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_T_SIGNED_INT(x)<sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(char))<sp/><sp/>?<sp/>T_BYTE<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(short))<sp/>?<sp/>T_SHORT<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(int))<sp/><sp/><sp/>?<sp/>T_INT<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(long))<sp/><sp/>?<sp/>T_LONG<sp/>:<sp/>-1))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_T_SIGNED_INT(x)<sp/>\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(char))<sp/><sp/>?<sp/>T_BYTE<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(short))<sp/>?<sp/>T_SHORT<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(int))<sp/><sp/><sp/>?<sp/>T_INT<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(long))<sp/><sp/>?<sp/>T_LONG<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(PY_LONG_LONG))<sp/><sp/><sp/>?<sp/>T_LONGLONG<sp/>:<sp/>-1)))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_T_FLOATING(x)<sp/>\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(float))<sp/>?<sp/>T_FLOAT<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(x)<sp/>==<sp/>sizeof(double))<sp/>?<sp/>T_DOUBLE<sp/>:<sp/>-1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(T_SIZET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(T_ULONGLONG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>T_SIZET<sp/>\</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(size_t)<sp/>==<sp/>sizeof(unsigned<sp/>int))<sp/><sp/>?<sp/>T_UINT<sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(size_t)<sp/>==<sp/>sizeof(unsigned<sp/>long))<sp/>?<sp/>T_ULONG<sp/>:<sp/>-1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>T_SIZET<sp/>\</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(size_t)<sp/>==<sp/>sizeof(unsigned<sp/>int))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>T_UINT<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(size_t)<sp/>==<sp/>sizeof(unsigned<sp/>long))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>T_ULONG<sp/><sp/><sp/><sp/><sp/>:<sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sizeof(size_t)<sp/>==<sp/>sizeof(unsigned<sp/>PY_LONG_LONG))<sp/>?<sp/>T_ULONGLONG<sp/>:<sp/>-1)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>Py_ssize_t<sp/>__Pyx_PyIndex_AsSsize_t(PyObject*);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*<sp/>__Pyx_PyInt_FromSize_t(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSize_t(PyObject*);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__pyx_PyFloat_AsDouble(x)<sp/>(PyFloat_CheckExact(x)<sp/>?<sp/>PyFloat_AS_DOUBLE(x)<sp/>:<sp/>PyFloat_AsDouble(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Test<sp/>for<sp/>GCC<sp/>&gt;<sp/>2.95<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__GNUC__<sp/>&gt;<sp/>2<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__GNUC__<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>(__GNUC_MINOR__<sp/>&gt;<sp/>95))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>likely(x)<sp/><sp/><sp/>__builtin_expect(!!(x),<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>unlikely(x)<sp/>__builtin_expect(!!(x),<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>__GNUC__<sp/>&gt;<sp/>2<sp/>...<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>likely(x)<sp/><sp/><sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>unlikely(x)<sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__GNUC__<sp/>&gt;<sp/>2<sp/>...<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>__GNUC__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>likely(x)<sp/><sp/><sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>unlikely(x)<sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__GNUC__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_m;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_b;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_empty_tuple;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_empty_bytes;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_lineno;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_clineno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>__pyx_cfilenm=<sp/>__FILE__;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filename;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**__pyx_f;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Type<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:394</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>Input:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>class<sp/>Input:</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Input<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>PyObject_HEAD</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a00ffab472a8cb21bd3511721c9474658" kindref="member">PmStream</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="src_2flac_2main_8c_1a6f11ce505641910527169e5b39d693cc" kindref="member">debug</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:201</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pm_Channel(chan-1)</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>Output:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>class<sp/>Output:</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Output<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>PyObject_HEAD</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a00ffab472a8cb21bd3511721c9474658" kindref="member">PmStream</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="src_2flac_2main_8c_1a6f11ce505641910527169e5b39d693cc" kindref="member">debug</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_aborted;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">};</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYTHON_REFNANNY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>CYTHON_REFNANNY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CYTHON_REFNANNY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*INCREF)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>PyObject*,<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*DECREF)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>PyObject*,<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*GOTREF)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>PyObject*,<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*GIVEREF)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>PyObject*,<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>(*SetupContext)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*FinishContext)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}<sp/>__Pyx_RefNannyAPIStruct;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__Pyx_RefNannyAPIStruct<sp/>*__Pyx_RefNanny<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__Pyx_RefNannyAPIStruct<sp/>*<sp/>__Pyx_RefNannyImportAPI(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*modname)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>PyImport_ImportModule((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)modname);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>PyObject_GetAttrString(m,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;RefNannyAPI&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>PyLong_AsVoidPtr(p);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(p);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(m);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(__Pyx_RefNannyAPIStruct<sp/>*)r;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_RefNannySetupContext(name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>*__pyx_refnanny<sp/>=<sp/>__Pyx_RefNanny-&gt;SetupContext((name),<sp/>__LINE__,<sp/>__FILE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_RefNannyFinishContext()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RefNanny-&gt;FinishContext(&amp;__pyx_refnanny)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_INCREF(r)<sp/>__Pyx_RefNanny-&gt;INCREF(__pyx_refnanny,<sp/>(PyObject<sp/>*)(r),<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_DECREF(r)<sp/>__Pyx_RefNanny-&gt;DECREF(__pyx_refnanny,<sp/>(PyObject<sp/>*)(r),<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_GOTREF(r)<sp/>__Pyx_RefNanny-&gt;GOTREF(__pyx_refnanny,<sp/>(PyObject<sp/>*)(r),<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_GIVEREF(r)<sp/>__Pyx_RefNanny-&gt;GIVEREF(__pyx_refnanny,<sp/>(PyObject<sp/>*)(r),<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_XDECREF(r)<sp/>do<sp/>{<sp/>if((r)<sp/>!=<sp/>NULL)<sp/>{__Pyx_DECREF(r);}<sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_RefNannySetupContext(name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_RefNannyFinishContext()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_INCREF(r)<sp/>Py_INCREF(r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_DECREF(r)<sp/>Py_DECREF(r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_GOTREF(r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_GIVEREF(r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>__Pyx_XDECREF(r)<sp/>Py_XDECREF(r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CYTHON_REFNANNY<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_XGIVEREF(r)<sp/>do<sp/>{<sp/>if((r)<sp/>!=<sp/>NULL)<sp/>{__Pyx_GIVEREF(r);}<sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_XGOTREF(r)<sp/>do<sp/>{<sp/>if((r)<sp/>!=<sp/>NULL)<sp/>{__Pyx_GOTREF(r);}<sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseDoubleKeywordsError(</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func_name,<sp/>PyObject*<sp/>kw_name);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exact,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_min,<sp/>Py_ssize_t<sp/>num_max,<sp/>Py_ssize_t<sp/>num_found);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_ParseOptionalKeywords(PyObject<sp/>*kwds,<sp/>PyObject<sp/>**argnames[],<sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*kwds2,<sp/>PyObject<sp/>*values[],<sp/>Py_ssize_t<sp/>num_pos_args,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>function_name);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_GetItemInt_Generic(PyObject<sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/>PyObject*<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*r;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!j)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>PyObject_GetItem(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/>j);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(j);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GetItemInt_List(o,<sp/>i,<sp/>size,<sp/>to_py_func)<sp/>((size<sp/>&lt;=<sp/>sizeof(Py_ssize_t))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_List_Fast(o,<sp/>i,<sp/>size<sp/>&lt;=<sp/>sizeof(long))<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_Generic(o,<sp/>to_py_func(i)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_GetItemInt_List_Fast(PyObject<sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/>Py_ssize_t<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fits_long)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref><sp/>!=<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((0<sp/>&lt;=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>&amp;<sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>PyList_GET_SIZE(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>))))<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*r<sp/>=<sp/>PyList_GET_ITEM(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((-PyList_GET_SIZE(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)<sp/>&lt;=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>&amp;<sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*r<sp/>=<sp/>PyList_GET_ITEM(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/>PyList_GET_SIZE(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)<sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_GetItemInt_Generic(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/>fits_long<sp/>?<sp/>PyInt_FromLong(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>:<sp/>PyLong_FromLongLong(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GetItemInt_Tuple(o,<sp/>i,<sp/>size,<sp/>to_py_func)<sp/>((size<sp/>&lt;=<sp/>sizeof(Py_ssize_t))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_Tuple_Fast(o,<sp/>i,<sp/>size<sp/>&lt;=<sp/>sizeof(long))<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_Generic(o,<sp/>to_py_func(i)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_GetItemInt_Tuple_Fast(PyObject<sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/>Py_ssize_t<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fits_long)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref><sp/>!=<sp/>Py_None))<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely((0<sp/>&lt;=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>&amp;<sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>PyTuple_GET_SIZE(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>))))<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*r<sp/>=<sp/>PyTuple_GET_ITEM(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((-PyTuple_GET_SIZE(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)<sp/>&lt;=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>&amp;<sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*r<sp/>=<sp/>PyTuple_GET_ITEM(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/>PyTuple_GET_SIZE(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)<sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_GetItemInt_Generic(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/>fits_long<sp/>?<sp/>PyInt_FromLong(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>:<sp/>PyLong_FromLongLong(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_GetItemInt(o,<sp/>i,<sp/>size,<sp/>to_py_func)<sp/>((size<sp/>&lt;=<sp/>sizeof(Py_ssize_t))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_Fast(o,<sp/>i,<sp/>size<sp/>&lt;=<sp/>sizeof(long))<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GetItemInt_Generic(o,<sp/>to_py_func(i)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_GetItemInt_Fast(PyObject<sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/>Py_ssize_t<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fits_long)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*r;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyList_CheckExact(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)<sp/>&amp;&amp;<sp/>((0<sp/>&lt;=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>&amp;<sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>PyList_GET_SIZE(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>))))<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>PyList_GET_ITEM(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_CheckExact(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)<sp/>&amp;&amp;<sp/>((0<sp/>&lt;=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>&amp;<sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>PyTuple_GET_SIZE(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>))))<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>PyTuple_GET_ITEM(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(r);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Py_TYPE(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)-&gt;tp_as_sequence<sp/>&amp;&amp;<sp/>Py_TYPE(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)-&gt;tp_as_sequence-&gt;sq_item<sp/>&amp;&amp;<sp/>(likely(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&gt;=<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>PySequence_GetItem(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>__Pyx_GetItemInt_Generic(<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/>fits_long<sp/>?<sp/>PyInt_FromLong(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>:<sp/>PyLong_FromLongLong(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyObject_Append(PyObject*<sp/>L,<sp/>PyObject*<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(L)))<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyList_Append(L,<sp/>x)<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(Py_None);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Py_None;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>just<sp/>to<sp/>have<sp/>an<sp/>accurate<sp/>signature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*r,<sp/>*<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>__Pyx_GetAttrString(L,<sp/></highlight><highlight class="stringliteral">&quot;append&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>PyObject_CallFunctionObjArgs(m,<sp/>x,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(m);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_Import(PyObject<sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/>PyObject<sp/>*from_list);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_PyInt_to_py_PmDeviceID(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref><sp/>__Pyx_PyInt_from_py_PmDeviceID(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_PyInt_to_py_PtTimestamp(<ref refid="porttime_8h_1afae5a66584458fb7e0e9ace7f200a7a3" kindref="member">PtTimestamp</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_Print(PyObject<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__pyx_print<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>__pyx_print_kwargs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PrintOne(PyObject<sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_GetName(PyObject<sp/>*dict,<sp/>PyObject<sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_ErrRestore(PyObject<sp/>*<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,<sp/>PyObject<sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>,<sp/>PyObject<sp/>*tb);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_ErrFetch(PyObject<sp/>**<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,<sp/>PyObject<sp/>**<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>,<sp/>PyObject<sp/>**tb);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_Raise(PyObject<sp/>*<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,<sp/>PyObject<sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>,<sp/>PyObject<sp/>*tb);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_PyInt_to_py_PmMessage(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/><ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref><sp/>__Pyx_PyInt_from_py_PmMessage(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>__Pyx_PyInt_from_py_PmTimestamp(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_PyInt_to_py_PmTimestamp(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedChar(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedShort(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedInt(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsChar(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsShort(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsInt(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedChar(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedShort(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedInt(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedLong(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>__Pyx_PyInt_AsUnsignedLongLong(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsLong(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PY_LONG_LONG<sp/>__Pyx_PyInt_AsLongLong(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedLong(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>__Pyx_PyInt_AsSignedLongLong(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_AddTraceback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*funcname);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_InitStrings(__Pyx_StringTabEntry<sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Module<sp/>declarations<sp/>from<sp/>_pyportmidi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>*__pyx_ptype_11_pyportmidi_Output<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>*__pyx_ptype_11_pyportmidi_Input<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__Pyx_MODULE_NAME<sp/>&quot;_pyportmidi&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_module_is_main__pyportmidi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Implementation<sp/>of<sp/>_pyportmidi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_builtin_Exception;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_builtin_IndexError;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_builtin_range;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_1[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Opening<sp/>Midi<sp/>Output&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_2[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>open<sp/>Midi<sp/>OutputDevice=&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_3[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>err=&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_4[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Closing<sp/>MIDI<sp/>output<sp/>stream<sp/>and<sp/>destroying<sp/>instance&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_5[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;midi<sp/>Output<sp/>not<sp/>open.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_6[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;midi<sp/>Output<sp/>aborted.<sp/><sp/>Need<sp/>to<sp/>call<sp/>Close<sp/>after<sp/>Abort.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_7[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;maximum<sp/>list<sp/>length<sp/>is<sp/>1024&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_8[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>arguments<sp/>in<sp/>event<sp/>list&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_9[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_10[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>to<sp/>midi<sp/>buffer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_11[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Writing<sp/>to<sp/>MIDI<sp/>buffer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_12[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MIDI<sp/>input<sp/>opened.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_13[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Closing<sp/>MIDI<sp/>input<sp/>stream<sp/>and<sp/>destroying<sp/>instance&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_14[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;midi<sp/>Input<sp/>not<sp/>open.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_15[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;maximum<sp/>buffer<sp/>length<sp/>is<sp/>1024&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_16[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;minimum<sp/>buffer<sp/>length<sp/>is<sp/>1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_17[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0.07&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_18[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_CHANNEL_AFTERTOUCH&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_19[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_POLY_AFTERTOUCH&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_20[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Initialize<sp/>(line<sp/>132)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_21[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Terminate<sp/>(line<sp/>139)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_22[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GetDeviceInfo<sp/>(line<sp/>156)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_23[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Time<sp/>(line<sp/>173)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_24[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GetErrorText<sp/>(line<sp/>180)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_25[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>(line<sp/>187)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_26[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output._check_open<sp/>(line<sp/>248)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_27[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output.Close<sp/>(line<sp/>258)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_28[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output.Abort<sp/>(line<sp/>274)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_29[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output.Write<sp/>(line<sp/>293)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_30[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output.WriteShort<sp/>(line<sp/>333)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_31[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output.WriteSysEx<sp/>(line<sp/>356)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_32[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Input._check_open<sp/>(line<sp/>422)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_33[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Input.Close<sp/>(line<sp/>430)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_34[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Input.SetFilter<sp/>(line<sp/>447)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_35[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Input.SetChannelMask<sp/>(line<sp/>481)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_36[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Input.Poll<sp/>(line<sp/>502)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k_37[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Input.Read<sp/>(line<sp/>514)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__B[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__i[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__msg[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;msg&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__Poll[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Poll&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__Read[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Read&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__TRUE[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__Time[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Time&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__midi[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;midi&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__name[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__when[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;when&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__Abort[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Abort&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__Close[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Close&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FALSE[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FALSE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__Input[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Input&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__Write[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Write&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__array[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;array&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__data1[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;data1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__data2[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;data2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__debug[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__input[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__range[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;range&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__Output[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Output&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__interf[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;interf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__opened[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;opened&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__output[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;output&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__status[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__Channel[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Channel&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_F9[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_F9&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_FD[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_FD&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__latency[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;latency&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__message[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_MTC[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_MTC&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k____main__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k____test__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__test__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___aborted[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_aborted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__tostring[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;tostring&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__Exception[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Exception&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_NOTE[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_NOTE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_PLAY[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_PLAY&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_TICK[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_TICK&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_TUNE[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_TUNE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__SetFilter[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SetFilter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__Terminate[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Terminate&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__timestamp[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;timestamp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_CLOCK[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_CLOCK&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_RESET[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_RESET&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_SYSEX[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_SYSEX&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__IndexError[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IndexError&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__Initialize[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__WriteShort[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;WriteShort&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__WriteSysEx[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;WriteSysEx&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__buffersize[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;buffersize&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_ACTIVE[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_ACTIVE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__InputDevice[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;InputDevice&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k____version__[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;__version__&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k___check_open[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_check_open&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_CONTROL[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_CONTROL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_PROGRAM[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_PROGRAM&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__GetErrorText[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GetErrorText&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__OutputDevice[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;OutputDevice&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_REALTIME[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_REALTIME&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__GetDeviceInfo[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GetDeviceInfo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_PITCHBEND[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_PITCHBEND&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_UNDEFINED[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_UNDEFINED&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__SetChannelMask[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SetChannelMask&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_AFTERTOUCH[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_AFTERTOUCH&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_SONG_SELECT[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_SONG_SELECT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_k__FILT_SONG_POSITION[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FILT_SONG_POSITION&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_1;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_10;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_11;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_12;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_13;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_14;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_15;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_16;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_17;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_18;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s_19;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_2;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_20;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_21;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_22;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_23;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_24;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_25;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_26;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_27;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_28;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_29;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_3;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_30;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_31;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_32;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_33;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_34;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_35;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_36;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_u_37;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_4;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_5;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_6;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_7;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_8;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_kp_s_9;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__Abort;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__B;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__Channel;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__Close;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__Exception;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FALSE;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_ACTIVE;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_AFTERTOUCH;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_CLOCK;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_CONTROL;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_F9;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_FD;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_MTC;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_NOTE;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_PITCHBEND;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_PLAY;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_PROGRAM;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_REALTIME;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_RESET;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_SONG_POSITION;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_SONG_SELECT;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_SYSEX;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_TICK;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_TUNE;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__FILT_UNDEFINED;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__GetDeviceInfo;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__GetErrorText;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__IndexError;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__Initialize;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__Input;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__InputDevice;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__Output;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__OutputDevice;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__Poll;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__Read;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__SetChannelMask;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__SetFilter;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__TRUE;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__Terminate;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__Time;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__Write;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__WriteShort;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__WriteSysEx;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s____main__;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s____test__;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s____version__;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s___aborted;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s___check_open;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__array;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__buffersize;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__data1;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__data2;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__debug;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__i;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__input;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__interf;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__latency;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__message;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__midi;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__msg;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__name;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__opened;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__output;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__range;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__status;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__timestamp;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__tostring;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_n_s__when;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_1;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_8;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_16;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x1;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x2;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x4;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x8;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x10;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x20;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x30;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x40;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x7F;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x80;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0xFF;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_1024;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_4096;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x100;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x200;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x300;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x400;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x800;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x1000;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x2000;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x4000;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x8000;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0xFF00;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0x10000;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_int_0xFF0000;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:132</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/>*<sp/>TRUE=1</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/>*<sp/>def<sp/>Initialize():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/>*<sp/>Initialize:<sp/>call<sp/>this<sp/>first</highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_Initialize(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_Initialize[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nInitialize:<sp/>call<sp/>this<sp/>first\n<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_Initialize(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>__pyx_self<sp/>=<sp/>__pyx_self;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:136</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/>*<sp/>Initialize:<sp/>call<sp/>this<sp/>first</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Pm_Initialize()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Pt_Start(1,<sp/>NULL,<sp/>NULL)<sp/>#<sp/>/[inserted<sp/>by<sp/>cython<sp/>to<sp/>avoid<sp/>comment<sp/>start]*<sp/>equiv<sp/>to<sp/>TIME_START:<sp/>start<sp/>timer<sp/>w/<sp/>ms<sp/>accuracy<sp/>*[inserted<sp/>by<sp/>cython<sp/>to<sp/>avoid<sp/>comment<sp/>closer]/</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8c_1a5e9d0c116061f0cc25fb789fc393b417" kindref="member">Pm_Initialize</ref>();</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:137</highlight></codeline>
<codeline lineno="802"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Pm_Initialize()</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Pt_Start(1,<sp/>NULL,<sp/>NULL)<sp/>#<sp/>/[inserted<sp/>by<sp/>cython<sp/>to<sp/>avoid<sp/>comment<sp/>start]*<sp/>equiv<sp/>to<sp/>TIME_START:<sp/>start<sp/>timer<sp/>w/<sp/>ms<sp/>accuracy<sp/>*[inserted<sp/>by<sp/>cython<sp/>to<sp/>avoid<sp/>comment<sp/>closer]/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="806"><highlight class="comment"><sp/>*<sp/>def<sp/>Terminate():</highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><ref refid="porttime_8h_1aa0fd8500047387bbe26b5f1c4d91831c" kindref="member">Pt_Start</ref>(1,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:139</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Pt_Start(1,<sp/>NULL,<sp/>NULL)<sp/>#<sp/>/[inserted<sp/>by<sp/>cython<sp/>to<sp/>avoid<sp/>comment<sp/>start]*<sp/>equiv<sp/>to<sp/>TIME_START:<sp/>start<sp/>timer<sp/>w/<sp/>ms<sp/>accuracy<sp/>*[inserted<sp/>by<sp/>cython<sp/>to<sp/>avoid<sp/>comment<sp/>closer]/</highlight></codeline>
<codeline lineno="818"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/>*<sp/>def<sp/>Terminate():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/>*<sp/>Terminate:<sp/>call<sp/>this<sp/>to<sp/>clean<sp/>up<sp/>Midi<sp/>streams<sp/>when<sp/>done.</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_Terminate(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_Terminate[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nTerminate:<sp/>call<sp/>this<sp/>to<sp/>clean<sp/>up<sp/>Midi<sp/>streams<sp/>when<sp/>done.\nIf<sp/>you<sp/>do<sp/>not<sp/>call<sp/>this<sp/>on<sp/>Windows<sp/>machines<sp/>when<sp/>you<sp/>are\ndone<sp/>with<sp/>MIDI,<sp/>your<sp/>system<sp/>may<sp/>crash.\n<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_Terminate(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>)<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;Terminate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>__pyx_self<sp/>=<sp/>__pyx_self;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:145</highlight></codeline>
<codeline lineno="832"><highlight class="comment"><sp/>*<sp/>done<sp/>with<sp/>MIDI,<sp/>your<sp/>system<sp/>may<sp/>crash.</highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Pm_Terminate()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="835"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/>*<sp/>def<sp/>GetDefaultInputDeviceID():</highlight></codeline>
<codeline lineno="837"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8c_1a6c5dd5cd3657ac1cdab6bc5f3063193e" kindref="member">Pm_Terminate</ref>();</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:147</highlight></codeline>
<codeline lineno="847"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Pm_Terminate()</highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/>*<sp/>def<sp/>GetDefaultInputDeviceID():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pm_GetDefaultInputDeviceID()</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_GetDefaultInputDeviceID(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_GetDefaultInputDeviceID(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;GetDefaultInputDeviceID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>__pyx_self<sp/>=<sp/>__pyx_self;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:148</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/>*<sp/>def<sp/>GetDefaultInputDeviceID():</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pm_GetDefaultInputDeviceID()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/>*<sp/>def<sp/>GetDefaultOutputDeviceID():</highlight></codeline>
<codeline lineno="867"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyInt_to_py_PmDeviceID(<ref refid="portmidi_8h_1aea8a714900f14e5214f3b503ecffa497" kindref="member">Pm_GetDefaultInputDeviceID</ref>());<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>148;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.GetDefaultInputDeviceID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:150</highlight></codeline>
<codeline lineno="888"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pm_GetDefaultInputDeviceID()</highlight></codeline>
<codeline lineno="889"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="890"><highlight class="comment"><sp/>*<sp/>def<sp/>GetDefaultOutputDeviceID():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="891"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pm_GetDefaultOutputDeviceID()</highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="893"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_GetDefaultOutputDeviceID(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_GetDefaultOutputDeviceID(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>)<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;GetDefaultOutputDeviceID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>__pyx_self<sp/>=<sp/>__pyx_self;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:151</highlight></codeline>
<codeline lineno="903"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="904"><highlight class="comment"><sp/>*<sp/>def<sp/>GetDefaultOutputDeviceID():</highlight></codeline>
<codeline lineno="905"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pm_GetDefaultOutputDeviceID()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="906"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="907"><highlight class="comment"><sp/>*<sp/>def<sp/>CountDevices():</highlight></codeline>
<codeline lineno="908"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyInt_to_py_PmDeviceID(<ref refid="portmidi_8h_1a5fc98bd54bd260f0db1e4e67513c838d" kindref="member">Pm_GetDefaultOutputDeviceID</ref>());<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>151;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.GetDefaultOutputDeviceID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:153</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pm_GetDefaultOutputDeviceID()</highlight></codeline>
<codeline lineno="930"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/>*<sp/>def<sp/>CountDevices():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="932"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pm_CountDevices()</highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="934"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_CountDevices(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_CountDevices(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>)<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;CountDevices&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>__pyx_self<sp/>=<sp/>__pyx_self;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:154</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/>*<sp/>def<sp/>CountDevices():</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pm_CountDevices()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/>*<sp/>def<sp/>GetDeviceInfo(i):</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyInt_FromLong(<ref refid="portmidi_8c_1aa09d809f5c5bdc5d2fc9b3d2290ec282" kindref="member">Pm_CountDevices</ref>());<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>154;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.CountDevices&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:156</highlight></codeline>
<codeline lineno="970"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pm_CountDevices()</highlight></codeline>
<codeline lineno="971"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="972"><highlight class="comment"><sp/>*<sp/>def<sp/>GetDeviceInfo(i):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="973"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="974"><highlight class="comment"><sp/>*<sp/>GetDeviceInfo(&lt;device<sp/>number&gt;):<sp/>returns<sp/>5<sp/>parameters</highlight></codeline>
<codeline lineno="975"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_GetDeviceInfo(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_i);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_GetDeviceInfo[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nGetDeviceInfo(&lt;device<sp/>number&gt;):<sp/>returns<sp/>5<sp/>parameters\n<sp/><sp/>-<sp/>underlying<sp/>MIDI<sp/>API\n<sp/><sp/>-<sp/>device<sp/>name\n<sp/><sp/>-<sp/>TRUE<sp/>iff<sp/>input<sp/>is<sp/>available\n<sp/><sp/>-<sp/>TRUE<sp/>iff<sp/>output<sp/>is<sp/>available\n<sp/><sp/>-<sp/>TRUE<sp/>iff<sp/>device<sp/>stream<sp/>is<sp/>already<sp/>open\n<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_GetDeviceInfo(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_i)<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><ref refid="struct_pm_device_info" kindref="compound">PmDeviceInfo</ref><sp/>*__pyx_v_info;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_5<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_6<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_7<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_8<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;GetDeviceInfo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>__pyx_self<sp/>=<sp/>__pyx_self;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_i);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:168</highlight></codeline>
<codeline lineno="995"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="996"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#<sp/>disregarding<sp/>the<sp/>constness<sp/>from<sp/>Pm_GetDeviceInfo,<sp/>since<sp/>pyrex<sp/>doesn&apos;t<sp/>do<sp/>const.</highlight></codeline>
<codeline lineno="997"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>info<sp/>=<sp/>&lt;PmDeviceInfo<sp/>*&gt;Pm_GetDeviceInfo(i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="998"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="999"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>info<sp/>&lt;&gt;<sp/>NULL:<sp/>return<sp/>info.interf,<sp/>info.name,<sp/>info.input,<sp/>info.output,<sp/>info.opened</highlight></codeline>
<codeline lineno="1000"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyInt_from_py_PmDeviceID(__pyx_v_i);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_1<sp/>==<sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>168;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>__pyx_v_info<sp/>=<sp/>((<ref refid="struct_pm_device_info" kindref="compound">PmDeviceInfo</ref><sp/>*)<ref refid="group__grp__device_1ga2ff3676bcff6077e64ef6f3eb57fb37e" kindref="member">Pm_GetDeviceInfo</ref>(__pyx_t_1));</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:170</highlight></codeline>
<codeline lineno="1005"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>info<sp/>=<sp/>&lt;PmDeviceInfo<sp/>*&gt;Pm_GetDeviceInfo(i)</highlight></codeline>
<codeline lineno="1006"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1007"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>info<sp/>&lt;&gt;<sp/>NULL:<sp/>return<sp/>info.interf,<sp/>info.name,<sp/>info.input,<sp/>info.output,<sp/>info.opened<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:<sp/>return</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>(__pyx_v_info<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2)<sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyBytes_FromString(__pyx_v_info-&gt;<ref refid="struct_pm_device_info_1a8c83e0e882db5a980a007437a806363b" kindref="member">interf</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>170;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_3));</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyBytes_FromString(__pyx_v_info-&gt;<ref refid="struct_pm_device_info_1a5f708c92e58b1c77454bffeee1d7c61c" kindref="member">name</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>170;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_4));</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyInt_FromLong(__pyx_v_info-&gt;<ref refid="struct_pm_device_info_1a9447230099afd8efc3f57906a02f6eba" kindref="member">input</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_5))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>170;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyInt_FromLong(__pyx_v_info-&gt;<ref refid="struct_pm_device_info_1a0e395068e4eee637cc576541884d7e69" kindref="member">output</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>170;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PyInt_FromLong(__pyx_v_info-&gt;<ref refid="struct_pm_device_info_1ab4d3d62344b0c525d444bd844e7d70eb" kindref="member">opened</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_7))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>170;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>PyTuple_New(5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_8))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>170;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_8,<sp/>0,<sp/>((PyObject<sp/>*)__pyx_t_3));</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_t_3));</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_8,<sp/>1,<sp/>((PyObject<sp/>*)__pyx_t_4));</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_t_4));</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_8,<sp/>2,<sp/>__pyx_t_5);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_8,<sp/>3,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_8,<sp/>4,<sp/>__pyx_t_7);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_8;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:171</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1050"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>info<sp/>&lt;&gt;<sp/>NULL:<sp/>return<sp/>info.interf,<sp/>info.name,<sp/>info.input,<sp/>info.output,<sp/>info.opened</highlight></codeline>
<codeline lineno="1051"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:<sp/>return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1052"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1053"><highlight class="comment"><sp/>*<sp/>def<sp/>Time():</highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_5);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_7);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.GetDeviceInfo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_i);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:173</highlight></codeline>
<codeline lineno="1080"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>else:<sp/>return</highlight></codeline>
<codeline lineno="1081"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1082"><highlight class="comment"><sp/>*<sp/>def<sp/>Time():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1084"><highlight class="comment"><sp/>*<sp/>Time()<sp/>returns<sp/>the<sp/>current<sp/>time<sp/>in<sp/>ms</highlight></codeline>
<codeline lineno="1085"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_Time(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_Time[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nTime()<sp/>returns<sp/>the<sp/>current<sp/>time<sp/>in<sp/>ms\nof<sp/>the<sp/>PortMidi<sp/>timer\n<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_Time(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;Time&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/>__pyx_self<sp/>=<sp/>__pyx_self;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:178</highlight></codeline>
<codeline lineno="1096"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>PortMidi<sp/>timer</highlight></codeline>
<codeline lineno="1097"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1098"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pt_Time()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1099"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1100"><highlight class="comment"><sp/>*<sp/>def<sp/>GetErrorText(err):</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyInt_to_py_PtTimestamp(<ref refid="porttime_8h_1a9a335bb8c04c85bf85d807dd448d72d0" kindref="member">Pt_Time</ref>());<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>178;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Time&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:180</highlight></codeline>
<codeline lineno="1122"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pt_Time()</highlight></codeline>
<codeline lineno="1123"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1124"><highlight class="comment"><sp/>*<sp/>def<sp/>GetErrorText(err):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1125"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1126"><highlight class="comment"><sp/>*<sp/>GetErrorText(&lt;err<sp/>num&gt;)<sp/>returns<sp/>human-readable<sp/>error</highlight></codeline>
<codeline lineno="1127"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_GetErrorText(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_err);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_GetErrorText[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nGetErrorText(&lt;err<sp/>num&gt;)<sp/>returns<sp/>human-readable<sp/>error\nmessages<sp/>translated<sp/>from<sp/>error<sp/>numbers\n<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_GetErrorText(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_err)<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;GetErrorText&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>__pyx_self<sp/>=<sp/>__pyx_self;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:185</highlight></codeline>
<codeline lineno="1139"><highlight class="comment"><sp/>*<sp/>messages<sp/>translated<sp/>from<sp/>error<sp/>numbers</highlight></codeline>
<codeline lineno="1140"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1141"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1142"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1143"><highlight class="comment"><sp/>*<sp/>def<sp/>Channel(chan):</highlight></codeline>
<codeline lineno="1144"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>((<ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref>)PyInt_AsLong(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>185;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_t_1));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>185;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_2));</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>((PyObject<sp/>*)__pyx_t_2);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.GetErrorText&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:187</highlight></codeline>
<codeline lineno="1166"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="1167"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1168"><highlight class="comment"><sp/>*<sp/>def<sp/>Channel(chan):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1169"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/>*<sp/>Channel(&lt;chan&gt;)<sp/>is<sp/>used<sp/>with<sp/>ChannelMask<sp/>on<sp/>input<sp/>MIDI<sp/>streams.</highlight></codeline>
<codeline lineno="1171"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_Channel(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_chan);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_Channel[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nChannel(&lt;chan&gt;)<sp/>is<sp/>used<sp/>with<sp/>ChannelMask<sp/>on<sp/>input<sp/>MIDI<sp/>streams.\nExample:<sp/>to<sp/>receive<sp/>input<sp/>on<sp/>channels<sp/>1<sp/>and<sp/>10<sp/>on<sp/>a<sp/>MIDI\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>called<sp/>MidiIn:\nMidiIn.SetChannelMask(pypm.Channel(1)<sp/>|<sp/>pypm.Channel(10))\n\nnote:<sp/>PyPortMidi<sp/>Channel<sp/>function<sp/>has<sp/>been<sp/>altered<sp/>from\n<sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>original<sp/>PortMidi<sp/>c<sp/>call<sp/>to<sp/>correct<sp/>for<sp/>what\n<sp/><sp/><sp/><sp/><sp/><sp/>seems<sp/>to<sp/>be<sp/>a<sp/>bug<sp/>---<sp/>i.e.<sp/>channel<sp/>filters<sp/>were\n<sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>numbered<sp/>from<sp/>0<sp/>to<sp/>15<sp/>instead<sp/>of<sp/>1<sp/>to<sp/>16.\n<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_Channel(PyObject<sp/>*__pyx_self,<sp/>PyObject<sp/>*__pyx_v_chan)<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;Channel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/>__pyx_self<sp/>=<sp/>__pyx_self;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:199</highlight></codeline>
<codeline lineno="1183"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>numbered<sp/>from<sp/>0<sp/>to<sp/>15<sp/>instead<sp/>of<sp/>1<sp/>to<sp/>16.</highlight></codeline>
<codeline lineno="1184"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1185"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>return<sp/>Pm_Channel(chan-1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1186"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1187"><highlight class="comment"><sp/>*<sp/>cdef<sp/>class<sp/>Output:</highlight></codeline>
<codeline lineno="1188"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyNumber_Subtract(__pyx_v_chan,<sp/>__pyx_int_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>199;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyInt_AsInt(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_2<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>199;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyInt_FromLong(<ref refid="group__grp__events__filters_1ga33262c53c6591f143fc61e12a8e2205c" kindref="member">Pm_Channel</ref>(__pyx_t_2));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>199;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Channel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:214</highlight></codeline>
<codeline lineno="1213"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>int<sp/>_aborted</highlight></codeline>
<codeline lineno="1214"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1215"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>OutputDevice,<sp/>latency=0):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1216"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1217"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>PmError<sp/>err</highlight></codeline>
<codeline lineno="1218"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_11_pyportmidi_6Output___init__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_11_pyportmidi_6Output___init__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_OutputDevice<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_latency<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_v_err;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a86cdcb85cfa72e067bc2fd1b96fca05d" kindref="member">PmTimeProcPtr</ref><sp/>__pyx_v_PmPtr;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_s;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s__OutputDevice,&amp;__pyx_n_s__latency,0};</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[2]<sp/>=<sp/>{0,0};</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>values[1]<sp/>=<sp/>((PyObject<sp/>*)__pyx_int_0);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyDict_GetItem(__pyx_kwds,<sp/>__pyx_n_s__OutputDevice);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(values[0]))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kw_args<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>PyDict_GetItem(__pyx_kwds,<sp/>__pyx_n_s__latency);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(value))<sp/>{<sp/>values[1]<sp/>=<sp/><ref refid="structdict__struct_1a8f0a429176b1c1a0eabb9e1e73d228a1" kindref="member">value</ref>;<sp/>kw_args--;<sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>PyTuple_GET_SIZE(__pyx_args),<sp/></highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>214;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_OutputDevice<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_latency<sp/>=<sp/>values[1];</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_latency<sp/>=<sp/>((PyObject<sp/>*)__pyx_int_0);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>__pyx_v_latency<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>__pyx_v_OutputDevice<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/>2,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>214;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Output.__init__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_OutputDevice);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_latency);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/>__pyx_v_s<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:220</highlight></codeline>
<codeline lineno="1282"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>PmTimeProcPtr<sp/>PmPtr</highlight></codeline>
<codeline lineno="1283"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1284"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.i<sp/>=<sp/>OutputDevice<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1285"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.debug<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1286"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._aborted<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1287"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyInt_AsInt(__pyx_v_OutputDevice);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_1<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>220;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;i<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:221</highlight></codeline>
<codeline lineno="1292"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1293"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.i<sp/>=<sp/>OutputDevice</highlight></codeline>
<codeline lineno="1294"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.debug<sp/>=<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1295"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._aborted<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1296"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1297"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;debug<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:222</highlight></codeline>
<codeline lineno="1301"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.i<sp/>=<sp/>OutputDevice</highlight></codeline>
<codeline lineno="1302"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.debug<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1303"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._aborted<sp/>=<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1304"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1305"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>latency<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="1306"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;_aborted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:224</highlight></codeline>
<codeline lineno="1310"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._aborted<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1311"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1312"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>latency<sp/>==<sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1313"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PmPtr<sp/>=<sp/>NULL</highlight></codeline>
<codeline lineno="1314"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1315"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_RichCompare(__pyx_v_latency,<sp/>__pyx_int_0,<sp/>Py_EQ);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>224;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_3<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>224;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:225</highlight></codeline>
<codeline lineno="1323"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1324"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>latency<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="1325"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PmPtr<sp/>=<sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1326"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PmPtr<sp/>=<sp/>&lt;PmTimeProcPtr&gt;&amp;Pt_Time</highlight></codeline>
<codeline lineno="1328"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_PmPtr<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L6;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:227</highlight></codeline>
<codeline lineno="1335"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PmPtr<sp/>=<sp/>NULL</highlight></codeline>
<codeline lineno="1336"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1337"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PmPtr<sp/>=<sp/>&lt;PmTimeProcPtr&gt;&amp;Pt_Time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1338"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;Opening<sp/>Midi<sp/>Output&quot;</highlight></codeline>
<codeline lineno="1339"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Why<sp/>is<sp/>bufferSize<sp/>0<sp/>here?</highlight></codeline>
<codeline lineno="1340"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_PmPtr<sp/>=<sp/>((<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))(&amp;<ref refid="porttime_8h_1a9a335bb8c04c85bf85d807dd448d72d0" kindref="member">Pt_Time</ref>));</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/>__pyx_L6:;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:228</highlight></codeline>
<codeline lineno="1346"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1347"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PmPtr<sp/>=<sp/>&lt;PmTimeProcPtr&gt;&amp;Pt_Time</highlight></codeline>
<codeline lineno="1348"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;Opening<sp/>Midi<sp/>Output&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1349"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Why<sp/>is<sp/>bufferSize<sp/>0<sp/>here?</highlight></codeline>
<codeline lineno="1350"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_OpenOutput(&amp;(self.midi),<sp/>self.i,<sp/>NULL,<sp/>0,<sp/>PmPtr,<sp/>NULL,<sp/>latency)</highlight></codeline>
<codeline lineno="1351"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;debug;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_PrintOne(((PyObject<sp/>*)__pyx_kp_s_1))<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>228;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L7;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>__pyx_L7:;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:230</highlight></codeline>
<codeline lineno="1360"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;Opening<sp/>Midi<sp/>Output&quot;</highlight></codeline>
<codeline lineno="1361"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Why<sp/>is<sp/>bufferSize<sp/>0<sp/>here?</highlight></codeline>
<codeline lineno="1362"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_OpenOutput(&amp;(self.midi),<sp/>self.i,<sp/>NULL,<sp/>0,<sp/>PmPtr,<sp/>NULL,<sp/>latency)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1363"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="1364"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="1365"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyInt_AsLong(__pyx_v_latency);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_4<sp/>==<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>230;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/><ref refid="group__grp__device_1ga134924cfa8badeecff3c5e1f22aee178" kindref="member">Pm_OpenOutput</ref>((&amp;((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>),<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>__pyx_v_PmPtr,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>__pyx_t_4);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:231</highlight></codeline>
<codeline lineno="1370"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Why<sp/>is<sp/>bufferSize<sp/>0<sp/>here?</highlight></codeline>
<codeline lineno="1371"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_OpenOutput(&amp;(self.midi),<sp/>self.i,<sp/>NULL,<sp/>0,<sp/>PmPtr,<sp/>NULL,<sp/>latency)</highlight></codeline>
<codeline lineno="1372"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1373"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="1374"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Something&apos;s<sp/>amiss<sp/>here<sp/>-<sp/>if<sp/>we<sp/>try<sp/>to<sp/>throw<sp/>an<sp/>Exception</highlight></codeline>
<codeline lineno="1375"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__pyx_v_err<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:232</highlight></codeline>
<codeline lineno="1380"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_OpenOutput(&amp;(self.midi),<sp/>self.i,<sp/>NULL,<sp/>0,<sp/>PmPtr,<sp/>NULL,<sp/>latency)</highlight></codeline>
<codeline lineno="1381"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="1382"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1383"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Something&apos;s<sp/>amiss<sp/>here<sp/>-<sp/>if<sp/>we<sp/>try<sp/>to<sp/>throw<sp/>an<sp/>Exception</highlight></codeline>
<codeline lineno="1384"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>here,<sp/>we<sp/>crash.</highlight></codeline>
<codeline lineno="1385"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>232;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_2));</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_s);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_s<sp/>=<sp/>((PyObject<sp/>*)__pyx_t_2);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:235</highlight></codeline>
<codeline lineno="1393"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Something&apos;s<sp/>amiss<sp/>here<sp/>-<sp/>if<sp/>we<sp/>try<sp/>to<sp/>throw<sp/>an<sp/>Exception</highlight></codeline>
<codeline lineno="1394"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>here,<sp/>we<sp/>crash.</highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>err<sp/>==<sp/>-10000:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1396"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,s</highlight></codeline>
<codeline lineno="1397"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1398"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>(!(__pyx_v_err<sp/>==<sp/>-10000));</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:236</highlight></codeline>
<codeline lineno="1403"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>here,<sp/>we<sp/>crash.</highlight></codeline>
<codeline lineno="1404"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>err<sp/>==<sp/>-10000:</highlight></codeline>
<codeline lineno="1405"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,s<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1406"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1407"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>&quot;Unable<sp/>to<sp/>open<sp/>Midi<sp/>OutputDevice=&quot;,OutputDevice,&quot;<sp/>err=&quot;,s</highlight></codeline>
<codeline lineno="1408"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>__pyx_v_s,<sp/>0);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>236;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L9;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:238</highlight></codeline>
<codeline lineno="1416"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,s</highlight></codeline>
<codeline lineno="1417"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1418"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>&quot;Unable<sp/>to<sp/>open<sp/>Midi<sp/>OutputDevice=&quot;,OutputDevice,&quot;<sp/>err=&quot;,s<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1419"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1420"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="1421"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_New(4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>238;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_kp_s_2));</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>((PyObject<sp/>*)__pyx_kp_s_2));</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_kp_s_2));</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_OutputDevice);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>1,<sp/>__pyx_v_OutputDevice);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_OutputDevice);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_kp_s_3));</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>2,<sp/>((PyObject<sp/>*)__pyx_kp_s_3));</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_kp_s_3));</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_s);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>3,<sp/>__pyx_v_s);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_s);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_Print(__pyx_t_2,<sp/>1)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>238;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_L9:;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L8;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/>__pyx_L8:;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Output.__init__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_s);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_OutputDevice);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_latency);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:240</highlight></codeline>
<codeline lineno="1460"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>&quot;Unable<sp/>to<sp/>open<sp/>Midi<sp/>OutputDevice=&quot;,OutputDevice,&quot;<sp/>err=&quot;,s</highlight></codeline>
<codeline lineno="1461"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1462"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1463"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;Closing<sp/>MIDI<sp/>output<sp/>stream<sp/>and<sp/>destroying<sp/>instance&quot;</highlight></codeline>
<codeline lineno="1464"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#err<sp/>=<sp/>Pm_Abort(self.midi)</highlight></codeline>
<codeline lineno="1465"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_pf_11_pyportmidi_6Output___dealloc__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_pf_11_pyportmidi_6Output___dealloc__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_err;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__dealloc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:241</highlight></codeline>
<codeline lineno="1479"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1480"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="1481"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;Closing<sp/>MIDI<sp/>output<sp/>stream<sp/>and<sp/>destroying<sp/>instance&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1482"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#err<sp/>=<sp/>Pm_Abort(self.midi)</highlight></codeline>
<codeline lineno="1483"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="1484"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;debug;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_PrintOne(((PyObject<sp/>*)__pyx_kp_s_4))<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>241;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:244</highlight></codeline>
<codeline lineno="1493"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#err<sp/>=<sp/>Pm_Abort(self.midi)</highlight></codeline>
<codeline lineno="1494"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="1495"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Close(self.midi)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1496"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="1497"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1498"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyInt_FromLong(<ref refid="group__grp__events__filters_1ga6b26be2fbcf092c9625ade5303edd0ac" kindref="member">Pm_Close</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>244;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_err);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:245</highlight></codeline>
<codeline lineno="1506"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="1507"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Close(self.midi)</highlight></codeline>
<codeline lineno="1508"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1509"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1510"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1511"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_RichCompare(__pyx_v_err,<sp/>__pyx_int_0,<sp/>Py_LT);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>245;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_3<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>245;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>((<ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref>)PyInt_AsLong(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>245;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_t_4));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>245;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_2));</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_t_2),<sp/>0);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_2));<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>245;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L6;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/>__pyx_L6:;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Output.__dealloc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_err);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="1535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:248</highlight></codeline>
<codeline lineno="1538"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1539"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1540"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>_check_open(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1541"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;<sp/>checks<sp/>to<sp/>see<sp/>if<sp/>the<sp/>midi<sp/>is<sp/>open,<sp/>and<sp/>if<sp/>not,<sp/>raises<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="1542"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1543"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_6Output__check_open(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_6Output__check_open[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>checks<sp/>to<sp/>see<sp/>if<sp/>the<sp/>midi<sp/>is<sp/>open,<sp/>and<sp/>if<sp/>not,<sp/>raises<sp/>an<sp/>error.\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_6Output__check_open(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;_check_open&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:252</highlight></codeline>
<codeline lineno="1555"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1556"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1557"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.midi<sp/>==<sp/>NULL:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1558"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>&quot;midi<sp/>Output<sp/>not<sp/>open.&quot;</highlight></codeline>
<codeline lineno="1559"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1560"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>(((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;midi<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:253</highlight></codeline>
<codeline lineno="1565"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1566"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.midi<sp/>==<sp/>NULL:</highlight></codeline>
<codeline lineno="1567"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>&quot;midi<sp/>Output<sp/>not<sp/>open.&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1568"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self._aborted:</highlight></codeline>
<codeline lineno="1570"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_kp_s_5),<sp/>0);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>253;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:255</highlight></codeline>
<codeline lineno="1578"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>&quot;midi<sp/>Output<sp/>not<sp/>open.&quot;</highlight></codeline>
<codeline lineno="1579"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1580"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self._aborted:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1581"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>&quot;midi<sp/>Output<sp/>aborted.<sp/><sp/>Need<sp/>to<sp/>call<sp/>Close<sp/>after<sp/>Abort.&quot;</highlight></codeline>
<codeline lineno="1582"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1583"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;_aborted;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2)<sp/>{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:256</highlight></codeline>
<codeline lineno="1588"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1589"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self._aborted:</highlight></codeline>
<codeline lineno="1590"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>&quot;midi<sp/>Output<sp/>aborted.<sp/><sp/>Need<sp/>to<sp/>call<sp/>Close<sp/>after<sp/>Abort.&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1591"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1592"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>Close(self):</highlight></codeline>
<codeline lineno="1593"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_kp_s_6),<sp/>0);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>256;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L6;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/>__pyx_L6:;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Output._check_open&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:258</highlight></codeline>
<codeline lineno="1613"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>&quot;midi<sp/>Output<sp/>aborted.<sp/><sp/>Need<sp/>to<sp/>call<sp/>Close<sp/>after<sp/>Abort.&quot;</highlight></codeline>
<codeline lineno="1614"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1615"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>Close(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1616"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1617"><highlight class="comment"><sp/>*<sp/>Close()</highlight></codeline>
<codeline lineno="1618"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_6Output_Close(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_6Output_Close[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nClose()\n<sp/><sp/><sp/><sp/>closes<sp/>a<sp/>midi<sp/>stream,<sp/>flushing<sp/>any<sp/>pending<sp/>buffers.\n<sp/><sp/><sp/><sp/>(PortMidi<sp/>attempts<sp/>to<sp/>close<sp/>open<sp/>streams<sp/>when<sp/>the<sp/>application\n<sp/><sp/><sp/><sp/>exits<sp/>--<sp/>this<sp/>is<sp/>particularly<sp/>difficult<sp/>under<sp/>Windows.)\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_6Output_Close(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_err;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;Close&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:268</highlight></codeline>
<codeline lineno="1633"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/>return</highlight></codeline>
<codeline lineno="1634"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1635"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Close(self.midi)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1636"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="1637"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="1638"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyInt_FromLong(<ref refid="group__grp__events__filters_1ga6b26be2fbcf092c9625ade5303edd0ac" kindref="member">Pm_Close</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>268;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_err);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:269</highlight></codeline>
<codeline lineno="1646"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1647"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Close(self.midi)</highlight></codeline>
<codeline lineno="1648"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1649"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="1650"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#self.midi<sp/>=<sp/>NULL</highlight></codeline>
<codeline lineno="1651"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_RichCompare(__pyx_v_err,<sp/>__pyx_int_0,<sp/>Py_LT);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>269;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_2<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>269;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2)<sp/>{</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:270</highlight></codeline>
<codeline lineno="1659"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Close(self.midi)</highlight></codeline>
<codeline lineno="1660"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="1661"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1662"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#self.midi<sp/>=<sp/>NULL</highlight></codeline>
<codeline lineno="1663"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1664"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>((<ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref>)PyInt_AsLong(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>270;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_t_3));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>270;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_t_1),<sp/>0);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>270;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Output.Close&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_err);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:274</highlight></codeline>
<codeline lineno="1690"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1691"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1692"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>Abort(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1693"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1694"><highlight class="comment"><sp/>*<sp/>Abort()<sp/>terminates<sp/>outgoing<sp/>messages<sp/>immediately</highlight></codeline>
<codeline lineno="1695"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_6Output_Abort(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_6Output_Abort[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nAbort()<sp/>terminates<sp/>outgoing<sp/>messages<sp/>immediately\n<sp/><sp/><sp/><sp/>The<sp/>caller<sp/>should<sp/>immediately<sp/>close<sp/>the<sp/>output<sp/>port;\n<sp/><sp/><sp/><sp/>this<sp/>call<sp/>may<sp/>result<sp/>in<sp/>transmission<sp/>of<sp/>a<sp/>partial<sp/>midi<sp/>message.\n<sp/><sp/><sp/><sp/>There<sp/>is<sp/>no<sp/>abort<sp/>for<sp/>Midi<sp/>input<sp/>because<sp/>the<sp/>user<sp/>can<sp/>simply\n<sp/><sp/><sp/><sp/>ignore<sp/>messages<sp/>in<sp/>the<sp/>buffer<sp/>and<sp/>close<sp/>an<sp/>input<sp/>device<sp/>at\n<sp/><sp/><sp/><sp/>any<sp/>time.\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_6Output_Abort(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_err;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;Abort&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:286</highlight></codeline>
<codeline lineno="1710"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/>return</highlight></codeline>
<codeline lineno="1711"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1712"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Abort(self.midi)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1713"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="1714"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="1715"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyInt_FromLong(<ref refid="group__grp__events__filters_1ga8934ac3b02359b60177a06580c66a20e" kindref="member">Pm_Abort</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>286;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_err);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:287</highlight></codeline>
<codeline lineno="1723"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1724"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Abort(self.midi)</highlight></codeline>
<codeline lineno="1725"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1726"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="1727"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1728"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_RichCompare(__pyx_v_err,<sp/>__pyx_int_0,<sp/>Py_LT);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>287;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_2<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>287;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2)<sp/>{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:288</highlight></codeline>
<codeline lineno="1736"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Abort(self.midi)</highlight></codeline>
<codeline lineno="1737"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="1738"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1739"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1740"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._aborted<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="1741"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>((<ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref>)PyInt_AsLong(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>288;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_t_3));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>288;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_t_1),<sp/>0);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>288;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:290</highlight></codeline>
<codeline lineno="1753"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="1754"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1755"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._aborted<sp/>=<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1756"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1757"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1758"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;_aborted<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Output.Abort&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_err);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:293</highlight></codeline>
<codeline lineno="1776"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1777"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1778"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>Write(self,<sp/>data):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1779"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1780"><highlight class="comment"><sp/>*<sp/>Write(data)</highlight></codeline>
<codeline lineno="1781"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_6Output_Write(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_data);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_6Output_Write[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nWrite(data)\n<sp/><sp/><sp/><sp/>output<sp/>a<sp/>series<sp/>of<sp/>MIDI<sp/>information<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>list:\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write([[[status<sp/>&lt;,data1&gt;&lt;,data2&gt;&lt;,data3&gt;],timestamp],\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[status<sp/>&lt;,data1&gt;&lt;,data2&gt;&lt;,data3&gt;],timestamp],...])\n<sp/><sp/><sp/><sp/>&lt;data&gt;<sp/>fields<sp/>are<sp/>optional\n<sp/><sp/><sp/><sp/>example:<sp/>choose<sp/>program<sp/>change<sp/>1<sp/>at<sp/>time<sp/>20000<sp/>and\n<sp/><sp/><sp/><sp/>send<sp/>note<sp/>65<sp/>with<sp/>velocity<sp/>100<sp/>500<sp/>ms<sp/>later.\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write([[[0xc0,0,0],20000],[[0x90,60,100],20500]])\n<sp/><sp/><sp/><sp/>notes:\n<sp/><sp/><sp/><sp/><sp/><sp/>1.<sp/>timestamps<sp/>will<sp/>be<sp/>ignored<sp/>if<sp/>latency<sp/>=<sp/>0.\n<sp/><sp/><sp/><sp/><sp/><sp/>2.<sp/>To<sp/>get<sp/>a<sp/>note<sp/>to<sp/>play<sp/>immediately,<sp/>send<sp/>MIDI<sp/>info<sp/>with\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp<sp/>read<sp/>from<sp/>function<sp/>Time.\n<sp/><sp/><sp/><sp/><sp/><sp/>3.<sp/>understanding<sp/>optional<sp/>data<sp/>fields:\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write([[[0xc0,0,0],20000]])<sp/>is<sp/>equivalent<sp/>to\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write([[[0xc0],20000]])\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_6Output_Write(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_data)<sp/>{</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>__pyx_v_buffer[1024];</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_v_err;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_v_i;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_loop1;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_6<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_7;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_8;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_9<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_10<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref><sp/>__pyx_t_11;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>__pyx_t_12;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;Write&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_data);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/>__pyx_v_loop1<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:315</highlight></codeline>
<codeline lineno="1809"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>int<sp/>i</highlight></codeline>
<codeline lineno="1810"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1811"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._check_open()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1812"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1813"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1814"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_GetAttr(__pyx_v_self,<sp/>__pyx_n_s___check_open);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>315;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>315;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:318</highlight></codeline>
<codeline lineno="1823"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1824"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1825"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>len(data)<sp/>&gt;<sp/>1024:<sp/>raise<sp/>IndexError,<sp/>&apos;maximum<sp/>list<sp/>length<sp/>is<sp/>1024&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1826"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1827"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>loop1<sp/>in<sp/>range(len(data)):</highlight></codeline>
<codeline lineno="1828"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_Length(__pyx_v_data);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_3<sp/>==<sp/>-1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>318;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>(__pyx_t_3<sp/>&gt;<sp/>1024);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_4)<sp/>{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_IndexError,<sp/>((PyObject<sp/>*)__pyx_kp_s_7),<sp/>0);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>318;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*else*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:320</highlight></codeline>
<codeline lineno="1839"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>len(data)<sp/>&gt;<sp/>1024:<sp/>raise<sp/>IndexError,<sp/>&apos;maximum<sp/>list<sp/>length<sp/>is<sp/>1024&apos;</highlight></codeline>
<codeline lineno="1840"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1841"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>loop1<sp/>in<sp/>range(len(data)):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1842"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((len(data[loop1][0])<sp/>&gt;<sp/>4)<sp/>|</highlight></codeline>
<codeline lineno="1843"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(len(data[loop1][0])<sp/>&lt;<sp/>1)):</highlight></codeline>
<codeline lineno="1844"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyObject_Length(__pyx_v_data);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_5<sp/>==<sp/>-1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>320;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyInt_FromSsize_t(__pyx_t_5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>320;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>320;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_1,<sp/>0,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(__pyx_builtin_range,<sp/>__pyx_t_1,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>320;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyList_CheckExact(__pyx_t_2)<sp/>||<sp/>PyTuple_CheckExact(__pyx_t_2))<sp/>{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>0;<sp/>__pyx_t_1<sp/>=<sp/>__pyx_t_2;<sp/>__Pyx_INCREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>-1;<sp/>__pyx_t_1<sp/>=<sp/>PyObject_GetIter(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>320;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_1)))<sp/>{</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_1))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_1,<sp/>__pyx_t_3);<sp/>__Pyx_INCREF(__pyx_t_2);<sp/>__pyx_t_3++;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyTuple_CheckExact(__pyx_t_1)))<sp/>{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_1))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_1,<sp/>__pyx_t_3);<sp/>__Pyx_INCREF(__pyx_t_2);<sp/>__pyx_t_3++;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyIter_Next(__pyx_t_1);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_2)<sp/>{</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>320;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_loop1);</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_loop1<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:321</highlight></codeline>
<codeline lineno="1883"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="1884"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>loop1<sp/>in<sp/>range(len(data)):</highlight></codeline>
<codeline lineno="1885"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((len(data[loop1][0])<sp/>&gt;<sp/>4)<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1886"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(len(data[loop1][0])<sp/>&lt;<sp/>1)):</highlight></codeline>
<codeline lineno="1887"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>IndexError,<sp/>str(len(data[loop1][0]))+&apos;<sp/>arguments<sp/>in<sp/>event<sp/>list&apos;</highlight></codeline>
<codeline lineno="1888"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetItem(__pyx_v_data,<sp/>__pyx_v_loop1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_2)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>321;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_GetItemInt(__pyx_t_2,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),<sp/>PyInt_FromLong);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_6)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>321;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>PyObject_Length(__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_5<sp/>==<sp/>-1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>321;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:322</highlight></codeline>
<codeline lineno="1898"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>loop1<sp/>in<sp/>range(len(data)):</highlight></codeline>
<codeline lineno="1899"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((len(data[loop1][0])<sp/>&gt;<sp/>4)<sp/>|</highlight></codeline>
<codeline lineno="1900"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(len(data[loop1][0])<sp/>&lt;<sp/>1)):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1901"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>IndexError,<sp/>str(len(data[loop1][0]))+&apos;<sp/>arguments<sp/>in<sp/>event<sp/>list&apos;</highlight></codeline>
<codeline lineno="1902"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].message<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1903"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyObject_GetItem(__pyx_v_data,<sp/>__pyx_v_loop1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_6)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>322;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetItemInt(__pyx_t_6,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),<sp/>PyInt_FromLong);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_2)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>322;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PyObject_Length(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_7<sp/>==<sp/>-1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>322;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>((__pyx_t_5<sp/>&gt;<sp/>4)<sp/>|<sp/>(__pyx_t_7<sp/>&lt;<sp/>1));</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_4)<sp/>{</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:323</highlight></codeline>
<codeline lineno="1915"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((len(data[loop1][0])<sp/>&gt;<sp/>4)<sp/>|</highlight></codeline>
<codeline lineno="1916"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(len(data[loop1][0])<sp/>&lt;<sp/>1)):</highlight></codeline>
<codeline lineno="1917"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>IndexError,<sp/>str(len(data[loop1][0]))+&apos;<sp/>arguments<sp/>in<sp/>event<sp/>list&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1918"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].message<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1919"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(len(data[loop1][0])):</highlight></codeline>
<codeline lineno="1920"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetItem(__pyx_v_data,<sp/>__pyx_v_loop1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_2)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>323;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_GetItemInt(__pyx_t_2,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),<sp/>PyInt_FromLong);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_6)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>323;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PyObject_Length(__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_7<sp/>==<sp/>-1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>323;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyInt_FromSsize_t(__pyx_t_7);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>323;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>323;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>__pyx_t_6);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyObject_Call(((PyObject<sp/>*)((PyObject*)&amp;PyString_Type)),<sp/>__pyx_t_2,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>323;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyNumber_Add(__pyx_t_6,<sp/>((PyObject<sp/>*)__pyx_kp_s_8));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>323;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_IndexError,<sp/>__pyx_t_2,<sp/>0);</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>323;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L8;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L8:;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:324</highlight></codeline>
<codeline lineno="1949"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(len(data[loop1][0])<sp/>&lt;<sp/>1)):</highlight></codeline>
<codeline lineno="1950"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>IndexError,<sp/>str(len(data[loop1][0]))+&apos;<sp/>arguments<sp/>in<sp/>event<sp/>list&apos;</highlight></codeline>
<codeline lineno="1951"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].message<sp/>=<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1952"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(len(data[loop1][0])):</highlight></codeline>
<codeline lineno="1953"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].message<sp/>=<sp/>buffer[loop1].message<sp/>+<sp/>((data[loop1][0][i]&amp;0xFF)<sp/>&lt;&lt;<sp/>(8*i))</highlight></codeline>
<codeline lineno="1954"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyIndex_AsSsize_t(__pyx_v_loop1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_7<sp/>==<sp/>(Py_ssize_t)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>324;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(__pyx_v_buffer[__pyx_t_7]).message<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:325</highlight></codeline>
<codeline lineno="1959"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>IndexError,<sp/>str(len(data[loop1][0]))+&apos;<sp/>arguments<sp/>in<sp/>event<sp/>list&apos;</highlight></codeline>
<codeline lineno="1960"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].message<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1961"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(len(data[loop1][0])):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1962"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].message<sp/>=<sp/>buffer[loop1].message<sp/>+<sp/>((data[loop1][0][i]&amp;0xFF)<sp/>&lt;&lt;<sp/>(8*i))</highlight></codeline>
<codeline lineno="1963"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].timestamp<sp/>=<sp/>data[loop1][1]</highlight></codeline>
<codeline lineno="1964"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetItem(__pyx_v_data,<sp/>__pyx_v_loop1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_2)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>325;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_GetItemInt(__pyx_t_2,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),<sp/>PyInt_FromLong);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_6)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>325;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>PyObject_Length(__pyx_t_6);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_7<sp/>==<sp/>-1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>325;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(__pyx_t_8<sp/>=<sp/>0;<sp/>__pyx_t_8<sp/>&lt;<sp/>__pyx_t_7;<sp/>__pyx_t_8+=1)<sp/>{</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_i<sp/>=<sp/>__pyx_t_8;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:326</highlight></codeline>
<codeline lineno="1976"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].message<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1977"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(len(data[loop1][0])):</highlight></codeline>
<codeline lineno="1978"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].message<sp/>=<sp/>buffer[loop1].message<sp/>+<sp/>((data[loop1][0][i]&amp;0xFF)<sp/>&lt;&lt;<sp/>(8*i))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="1979"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].timestamp<sp/>=<sp/>data[loop1][1]</highlight></codeline>
<codeline lineno="1980"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>loop1,&quot;<sp/>:<sp/>&quot;,buffer[loop1].message,&quot;<sp/>:<sp/>&quot;,buffer[loop1].timestamp</highlight></codeline>
<codeline lineno="1981"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyIndex_AsSsize_t(__pyx_v_loop1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_5<sp/>==<sp/>(Py_ssize_t)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>326;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyInt_to_py_PmMessage((__pyx_v_buffer[__pyx_t_5]).message);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>326;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetItem(__pyx_v_data,<sp/>__pyx_v_loop1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_2)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>326;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>__Pyx_GetItemInt(__pyx_t_2,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),<sp/>PyInt_FromLong);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_9)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>326;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetItemInt(__pyx_t_9,<sp/>__pyx_v_i,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>PyInt_FromLong);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_2)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>326;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_9);<sp/>__pyx_t_9<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>PyNumber_And(__pyx_t_2,<sp/>__pyx_int_0xFF);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_9))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>326;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyInt_FromLong((8<sp/>*<sp/>__pyx_v_i));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>326;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_10<sp/>=<sp/>PyNumber_Lshift(__pyx_t_9,<sp/>__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_10))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>326;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_9);<sp/>__pyx_t_9<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyNumber_Add(__pyx_t_6,<sp/>__pyx_t_10);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>326;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_10);<sp/>__pyx_t_10<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>__Pyx_PyInt_from_py_PmMessage(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_11<sp/>==<sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>326;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyIndex_AsSsize_t(__pyx_v_loop1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_5<sp/>==<sp/>(Py_ssize_t)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>326;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__pyx_v_buffer[__pyx_t_5]).message<sp/>=<sp/>__pyx_t_11;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:327</highlight></codeline>
<codeline lineno="2013"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(len(data[loop1][0])):</highlight></codeline>
<codeline lineno="2014"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].message<sp/>=<sp/>buffer[loop1].message<sp/>+<sp/>((data[loop1][0][i]&amp;0xFF)<sp/>&lt;&lt;<sp/>(8*i))</highlight></codeline>
<codeline lineno="2015"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].timestamp<sp/>=<sp/>data[loop1][1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2016"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>loop1,&quot;<sp/>:<sp/>&quot;,buffer[loop1].message,&quot;<sp/>:<sp/>&quot;,buffer[loop1].timestamp</highlight></codeline>
<codeline lineno="2017"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;writing<sp/>to<sp/>midi<sp/>buffer&quot;</highlight></codeline>
<codeline lineno="2018"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetItem(__pyx_v_data,<sp/>__pyx_v_loop1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_2)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>327;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_10<sp/>=<sp/>__Pyx_GetItemInt(__pyx_t_2,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),<sp/>PyInt_FromLong);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_10)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>327;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_12<sp/>=<sp/>__Pyx_PyInt_from_py_PmTimestamp(__pyx_t_10);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_12<sp/>==<sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>327;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_10);<sp/>__pyx_t_10<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyIndex_AsSsize_t(__pyx_v_loop1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_5<sp/>==<sp/>(Py_ssize_t)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>327;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(__pyx_v_buffer[__pyx_t_5]).timestamp<sp/>=<sp/>__pyx_t_12;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:328</highlight></codeline>
<codeline lineno="2030"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].message<sp/>=<sp/>buffer[loop1].message<sp/>+<sp/>((data[loop1][0][i]&amp;0xFF)<sp/>&lt;&lt;<sp/>(8*i))</highlight></codeline>
<codeline lineno="2031"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].timestamp<sp/>=<sp/>data[loop1][1]</highlight></codeline>
<codeline lineno="2032"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>loop1,&quot;<sp/>:<sp/>&quot;,buffer[loop1].message,&quot;<sp/>:<sp/>&quot;,buffer[loop1].timestamp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2033"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;writing<sp/>to<sp/>midi<sp/>buffer&quot;</highlight></codeline>
<codeline lineno="2034"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err=<sp/>Pm_Write(self.midi,<sp/>buffer,<sp/>len(data))</highlight></codeline>
<codeline lineno="2035"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;debug;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_8)<sp/>{</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyIndex_AsSsize_t(__pyx_v_loop1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_5<sp/>==<sp/>(Py_ssize_t)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>328;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_10<sp/>=<sp/>__Pyx_PyInt_to_py_PmMessage((__pyx_v_buffer[__pyx_t_5]).message);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_10))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>328;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyIndex_AsSsize_t(__pyx_v_loop1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_5<sp/>==<sp/>(Py_ssize_t)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>328;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyInt_to_py_PmTimestamp((__pyx_v_buffer[__pyx_t_5]).timestamp);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>328;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>PyTuple_New(5);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_6))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>328;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_loop1);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_6,<sp/>0,<sp/>__pyx_v_loop1);</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_loop1);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_kp_s_9));</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_6,<sp/>1,<sp/>((PyObject<sp/>*)__pyx_kp_s_9));</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_kp_s_9));</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_6,<sp/>2,<sp/>__pyx_t_10);</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_kp_s_9));</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_6,<sp/>3,<sp/>((PyObject<sp/>*)__pyx_kp_s_9));</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_kp_s_9));</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_6,<sp/>4,<sp/>__pyx_t_2);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_10<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_Print(__pyx_t_6,<sp/>1)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>328;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_6);<sp/>__pyx_t_6<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L11;</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_L11:;</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:329</highlight></codeline>
<codeline lineno="2072"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[loop1].timestamp<sp/>=<sp/>data[loop1][1]</highlight></codeline>
<codeline lineno="2073"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>loop1,&quot;<sp/>:<sp/>&quot;,buffer[loop1].message,&quot;<sp/>:<sp/>&quot;,buffer[loop1].timestamp</highlight></codeline>
<codeline lineno="2074"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;writing<sp/>to<sp/>midi<sp/>buffer&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2075"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err=<sp/>Pm_Write(self.midi,<sp/>buffer,<sp/>len(data))</highlight></codeline>
<codeline lineno="2076"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2077"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/>__pyx_t_8<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;debug;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_8)<sp/>{</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_PrintOne(((PyObject<sp/>*)__pyx_kp_s_10))<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>329;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L12;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/>__pyx_L12:;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:330</highlight></codeline>
<codeline lineno="2086"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>loop1,&quot;<sp/>:<sp/>&quot;,buffer[loop1].message,&quot;<sp/>:<sp/>&quot;,buffer[loop1].timestamp</highlight></codeline>
<codeline lineno="2087"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;writing<sp/>to<sp/>midi<sp/>buffer&quot;</highlight></codeline>
<codeline lineno="2088"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err=<sp/>Pm_Write(self.midi,<sp/>buffer,<sp/>len(data))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2089"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2090"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2091"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_Length(__pyx_v_data);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_3<sp/>==<sp/>-1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>330;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/><ref refid="group__grp__io_1ga82950117f003d28f9ca6536c00af985a" kindref="member">Pm_Write</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/>__pyx_v_buffer,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:331</highlight></codeline>
<codeline lineno="2096"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;writing<sp/>to<sp/>midi<sp/>buffer&quot;</highlight></codeline>
<codeline lineno="2097"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err=<sp/>Pm_Write(self.midi,<sp/>buffer,<sp/>len(data))</highlight></codeline>
<codeline lineno="2098"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2099"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2100"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>WriteShort(self,<sp/>status,<sp/>data1<sp/>=<sp/>0,<sp/>data2<sp/>=<sp/>0):</highlight></codeline>
<codeline lineno="2101"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>(__pyx_v_err<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_4)<sp/>{</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>331;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_t_1),<sp/>0);</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>331;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L13;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/>__pyx_L13:;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_6);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Output.Write&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_loop1);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_data);</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:333</highlight></codeline>
<codeline lineno="2133"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2134"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2135"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>WriteShort(self,<sp/>status,<sp/>data1<sp/>=<sp/>0,<sp/>data2<sp/>=<sp/>0):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2136"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2137"><highlight class="comment"><sp/>*<sp/>WriteShort(status<sp/>&lt;,<sp/>data1&gt;&lt;,<sp/>data2&gt;)</highlight></codeline>
<codeline lineno="2138"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_6Output_WriteShort(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_6Output_WriteShort[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nWriteShort(status<sp/>&lt;,<sp/>data1&gt;&lt;,<sp/>data2&gt;)\n<sp/><sp/><sp/><sp/><sp/>output<sp/>MIDI<sp/>information<sp/>of<sp/>3<sp/>bytes<sp/>or<sp/>less.\n<sp/><sp/><sp/><sp/><sp/>data<sp/>fields<sp/>are<sp/>optional\n<sp/><sp/><sp/><sp/><sp/>status<sp/>byte<sp/>could<sp/>be:\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xc0<sp/>=<sp/>program<sp/>change\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x90<sp/>=<sp/>note<sp/>on\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>etc.\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>bytes<sp/>are<sp/>optional<sp/>and<sp/>assumed<sp/>0<sp/>if<sp/>omitted\n<sp/><sp/><sp/><sp/><sp/>example:<sp/>note<sp/>65<sp/>on<sp/>with<sp/>velocity<sp/>100\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteShort(0x90,65,100)\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_6Output_WriteShort(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_data1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_data2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>__pyx_v_buffer[1];</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_v_err;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref><sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s__status,&amp;__pyx_n_s__data1,&amp;__pyx_n_s__data2,0};</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;WriteShort&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[3]<sp/>=<sp/>{0,0,0};</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/>values[1]<sp/>=<sp/>((PyObject<sp/>*)__pyx_int_0);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/>values[2]<sp/>=<sp/>((PyObject<sp/>*)__pyx_int_0);</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>3:<sp/>values[2]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>2);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyDict_GetItem(__pyx_kwds,<sp/>__pyx_n_s__status);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(values[0]))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kw_args<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>PyDict_GetItem(__pyx_kwds,<sp/>__pyx_n_s__data1);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(value))<sp/>{<sp/>values[1]<sp/>=<sp/><ref refid="structdict__struct_1a8f0a429176b1c1a0eabb9e1e73d228a1" kindref="member">value</ref>;<sp/>kw_args--;<sp/>}</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kw_args<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>PyDict_GetItem(__pyx_kwds,<sp/>__pyx_n_s__data2);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(value))<sp/>{<sp/>values[2]<sp/>=<sp/><ref refid="structdict__struct_1a8f0a429176b1c1a0eabb9e1e73d228a1" kindref="member">value</ref>;<sp/>kw_args--;<sp/>}</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>PyTuple_GET_SIZE(__pyx_args),<sp/></highlight><highlight class="stringliteral">&quot;WriteShort&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>333;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_status<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_data1<sp/>=<sp/>values[1];</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_data2<sp/>=<sp/>values[2];</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_data1<sp/>=<sp/>((PyObject<sp/>*)__pyx_int_0);</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_data2<sp/>=<sp/>((PyObject<sp/>*)__pyx_int_0);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>3:<sp/>__pyx_v_data2<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>2);</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>__pyx_v_data1<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>__pyx_v_status<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;WriteShort&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/>3,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>333;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Output.WriteShort&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_status);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_data1);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_data2);</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:348</highlight></codeline>
<codeline lineno="2215"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>PmEvent<sp/>buffer[1]</highlight></codeline>
<codeline lineno="2216"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>PmError<sp/>err</highlight></codeline>
<codeline lineno="2217"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._check_open()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2218"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2219"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0].timestamp<sp/>=<sp/>Pt_Time()</highlight></codeline>
<codeline lineno="2220"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_GetAttr(__pyx_v_self,<sp/>__pyx_n_s___check_open);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>348;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>348;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:350</highlight></codeline>
<codeline lineno="2229"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._check_open()</highlight></codeline>
<codeline lineno="2230"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2231"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0].timestamp<sp/>=<sp/>Pt_Time()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2232"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0].message<sp/>=<sp/>((((data2)<sp/>&lt;&lt;<sp/>16)<sp/>&amp;<sp/>0xFF0000)<sp/>|<sp/>(((data1)<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0xFF00)<sp/>|<sp/>((status)<sp/>&amp;<sp/>0xFF))</highlight></codeline>
<codeline lineno="2233"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;Writing<sp/>to<sp/>MIDI<sp/>buffer&quot;</highlight></codeline>
<codeline lineno="2234"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/>(__pyx_v_buffer[0]).timestamp<sp/>=<sp/><ref refid="porttime_8h_1a9a335bb8c04c85bf85d807dd448d72d0" kindref="member">Pt_Time</ref>();</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:351</highlight></codeline>
<codeline lineno="2238"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2239"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0].timestamp<sp/>=<sp/>Pt_Time()</highlight></codeline>
<codeline lineno="2240"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0].message<sp/>=<sp/>((((data2)<sp/>&lt;&lt;<sp/>16)<sp/>&amp;<sp/>0xFF0000)<sp/>|<sp/>(((data1)<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0xFF00)<sp/>|<sp/>((status)<sp/>&amp;<sp/>0xFF))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2241"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;Writing<sp/>to<sp/>MIDI<sp/>buffer&quot;</highlight></codeline>
<codeline lineno="2242"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Write(self.midi,<sp/>buffer,<sp/>1)<sp/>#<sp/>stream,<sp/>buffer,<sp/>length</highlight></codeline>
<codeline lineno="2243"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyNumber_Lshift(__pyx_v_data2,<sp/>__pyx_int_16);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>351;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyNumber_And(__pyx_t_2,<sp/>__pyx_int_0xFF0000);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>351;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyNumber_Lshift(__pyx_v_data1,<sp/>__pyx_int_8);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>351;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyNumber_And(__pyx_t_2,<sp/>__pyx_int_0xFF00);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>351;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyNumber_Or(__pyx_t_1,<sp/>__pyx_t_3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>351;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyNumber_And(__pyx_v_status,<sp/>__pyx_int_0xFF);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>351;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyNumber_Or(__pyx_t_2,<sp/>__pyx_t_3);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>351;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyInt_from_py_PmMessage(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_4<sp/>==<sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>351;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/>(__pyx_v_buffer[0]).message<sp/>=<sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:352</highlight></codeline>
<codeline lineno="2269"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0].timestamp<sp/>=<sp/>Pt_Time()</highlight></codeline>
<codeline lineno="2270"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0].message<sp/>=<sp/>((((data2)<sp/>&lt;&lt;<sp/>16)<sp/>&amp;<sp/>0xFF0000)<sp/>|<sp/>(((data1)<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0xFF00)<sp/>|<sp/>((status)<sp/>&amp;<sp/>0xFF))</highlight></codeline>
<codeline lineno="2271"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;Writing<sp/>to<sp/>MIDI<sp/>buffer&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2272"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Write(self.midi,<sp/>buffer,<sp/>1)<sp/>#<sp/>stream,<sp/>buffer,<sp/>length</highlight></codeline>
<codeline lineno="2273"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0<sp/>:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2274"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;debug;</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_5)<sp/>{</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_PrintOne(((PyObject<sp/>*)__pyx_kp_s_11))<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>352;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L6;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/>__pyx_L6:;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:353</highlight></codeline>
<codeline lineno="2283"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0].message<sp/>=<sp/>((((data2)<sp/>&lt;&lt;<sp/>16)<sp/>&amp;<sp/>0xFF0000)<sp/>|<sp/>(((data1)<sp/>&lt;&lt;<sp/>8)<sp/>&amp;<sp/>0xFF00)<sp/>|<sp/>((status)<sp/>&amp;<sp/>0xFF))</highlight></codeline>
<codeline lineno="2284"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;Writing<sp/>to<sp/>MIDI<sp/>buffer&quot;</highlight></codeline>
<codeline lineno="2285"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Write(self.midi,<sp/>buffer,<sp/>1)<sp/>#<sp/>stream,<sp/>buffer,<sp/>length<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2286"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0<sp/>:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2287"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2288"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/><ref refid="group__grp__io_1ga82950117f003d28f9ca6536c00af985a" kindref="member">Pm_Write</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/>__pyx_v_buffer,<sp/>1);</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:354</highlight></codeline>
<codeline lineno="2292"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;Writing<sp/>to<sp/>MIDI<sp/>buffer&quot;</highlight></codeline>
<codeline lineno="2293"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Write(self.midi,<sp/>buffer,<sp/>1)<sp/>#<sp/>stream,<sp/>buffer,<sp/>length</highlight></codeline>
<codeline lineno="2294"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0<sp/>:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2295"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2296"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>WriteSysEx(self,<sp/>when,<sp/>msg):</highlight></codeline>
<codeline lineno="2297"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>(__pyx_v_err<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_6)<sp/>{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>354;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_t_1),<sp/>0);</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>354;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L7;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/>__pyx_L7:;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Output.WriteShort&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_status);</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_data1);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_data2);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:356</highlight></codeline>
<codeline lineno="2328"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0<sp/>:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2329"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2330"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>WriteSysEx(self,<sp/>when,<sp/>msg):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2331"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2332"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteSysEx(&lt;timestamp&gt;,&lt;msg&gt;)</highlight></codeline>
<codeline lineno="2333"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_6Output_WriteSysEx(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_6Output_WriteSysEx[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteSysEx(&lt;timestamp&gt;,&lt;msg&gt;)\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writes<sp/>a<sp/>timestamped<sp/>system-exclusive<sp/>midi<sp/>message.\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;msg&gt;<sp/>can<sp/>be<sp/>a<sp/>*list*<sp/>or<sp/>a<sp/>*string*\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>example:\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(assuming<sp/>y<sp/>is<sp/>an<sp/>input<sp/>MIDI<sp/>stream)\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y.WriteSysEx(0,&apos;\\xF0\\x7D\\x10\\x11\\x12\\x13\\xF7&apos;)\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>equivalent<sp/>to\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y.WriteSysEx(pypm.Time,\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0xF0,<sp/>0x7D,<sp/>0x10,<sp/>0x11,<sp/>0x12,<sp/>0x13,<sp/>0xF7])\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_6Output_WriteSysEx(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_when<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_msg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_v_err;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_v_cmsg;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><ref refid="porttime_8h_1afae5a66584458fb7e0e9ace7f200a7a3" kindref="member">PtTimestamp</ref><sp/>__pyx_v_CurTime;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_t_5;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s__when,&amp;__pyx_n_s__msg,0};</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;WriteSysEx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[2]<sp/>=<sp/>{0,0};</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyDict_GetItem(__pyx_kwds,<sp/>__pyx_n_s__when);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(values[0]))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[1]<sp/>=<sp/>PyDict_GetItem(__pyx_kwds,<sp/>__pyx_n_s__msg);</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(values[1]))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;WriteSysEx&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>2,<sp/>1);<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>356;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>PyTuple_GET_SIZE(__pyx_args),<sp/></highlight><highlight class="stringliteral">&quot;WriteSysEx&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>356;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_when<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_msg<sp/>=<sp/>values[1];</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args)<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_when<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_msg<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;WriteSysEx&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>2,<sp/>2,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>356;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Output.WriteSysEx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_when);</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_msg);</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:372</highlight></codeline>
<codeline lineno="2396"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>PtTimestamp<sp/>CurTime</highlight></codeline>
<codeline lineno="2397"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2398"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._check_open()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2399"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2400"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>type(msg)<sp/>is<sp/>list:</highlight></codeline>
<codeline lineno="2401"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_GetAttr(__pyx_v_self,<sp/>__pyx_n_s___check_open);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>372;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>372;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:374</highlight></codeline>
<codeline lineno="2410"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._check_open()</highlight></codeline>
<codeline lineno="2411"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2412"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>type(msg)<sp/>is<sp/>list:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2413"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>array.array(&apos;B&apos;,msg).tostring()<sp/>#<sp/>Markus<sp/>Pfaff<sp/>contribution</highlight></codeline>
<codeline lineno="2414"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmsg<sp/>=<sp/>msg</highlight></codeline>
<codeline lineno="2415"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>(((PyObject<sp/>*)Py_TYPE(__pyx_v_msg))<sp/>==<sp/>((PyObject<sp/>*)((PyObject*)&amp;PyList_Type)));</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:375</highlight></codeline>
<codeline lineno="2420"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2421"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>type(msg)<sp/>is<sp/>list:</highlight></codeline>
<codeline lineno="2422"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>array.array(&apos;B&apos;,msg).tostring()<sp/>#<sp/>Markus<sp/>Pfaff<sp/>contribution<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2423"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmsg<sp/>=<sp/>msg</highlight></codeline>
<codeline lineno="2424"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2425"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetName(__pyx_m,<sp/>__pyx_n_s__array);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>375;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_GetAttr(__pyx_t_2,<sp/>__pyx_n_s__array);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>375;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>375;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(((PyObject<sp/>*)__pyx_n_s__B));</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>((PyObject<sp/>*)__pyx_n_s__B));</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_n_s__B));</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_msg);</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>1,<sp/>__pyx_v_msg);</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_msg);</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_Call(__pyx_t_1,<sp/>__pyx_t_2,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>375;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_t_4,<sp/>__pyx_n_s__tostring);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>375;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_4);<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>PyObject_Call(__pyx_t_2,<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>375;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_msg);</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_msg<sp/>=<sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L6;</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/>__pyx_L6:;</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:376</highlight></codeline>
<codeline lineno="2457"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>type(msg)<sp/>is<sp/>list:</highlight></codeline>
<codeline lineno="2458"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>array.array(&apos;B&apos;,msg).tostring()<sp/>#<sp/>Markus<sp/>Pfaff<sp/>contribution</highlight></codeline>
<codeline lineno="2459"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmsg<sp/>=<sp/>msg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2460"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2461"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurTime<sp/>=<sp/>Pt_Time()</highlight></codeline>
<codeline lineno="2462"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/>__pyx_t_5<sp/>=<sp/>__Pyx_PyBytes_AsString(__pyx_v_msg);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((!__pyx_t_5)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>376;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/>__pyx_v_cmsg<sp/>=<sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:378</highlight></codeline>
<codeline lineno="2467"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmsg<sp/>=<sp/>msg</highlight></codeline>
<codeline lineno="2468"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2469"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurTime<sp/>=<sp/>Pt_Time()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2470"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_WriteSysEx(self.midi,<sp/>when,<sp/>&lt;unsigned<sp/>char<sp/>*&gt;<sp/>cmsg)</highlight></codeline>
<codeline lineno="2471"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0<sp/>:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2472"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/>__pyx_v_CurTime<sp/>=<sp/><ref refid="porttime_8h_1a9a335bb8c04c85bf85d807dd448d72d0" kindref="member">Pt_Time</ref>();</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:379</highlight></codeline>
<codeline lineno="2476"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2477"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurTime<sp/>=<sp/>Pt_Time()</highlight></codeline>
<codeline lineno="2478"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_WriteSysEx(self.midi,<sp/>when,<sp/>&lt;unsigned<sp/>char<sp/>*&gt;<sp/>cmsg)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2479"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0<sp/>:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2480"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>Pt_Time()<sp/>==<sp/>CurTime:<sp/>#<sp/>wait<sp/>for<sp/>SysEx<sp/>to<sp/>go<sp/>thru<sp/>or...my</highlight></codeline>
<codeline lineno="2481"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/>__pyx_t_6<sp/>=<sp/>__Pyx_PyInt_from_py_PmTimestamp(__pyx_v_when);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_6<sp/>==<sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>379;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/><ref refid="group__grp__io_1ga4bd5753bdfb53a1611bcdf5ba159fc87" kindref="member">Pm_WriteSysEx</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Output<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/>__pyx_t_6,<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)__pyx_v_cmsg));</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:380</highlight></codeline>
<codeline lineno="2486"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CurTime<sp/>=<sp/>Pt_Time()</highlight></codeline>
<codeline lineno="2487"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_WriteSysEx(self.midi,<sp/>when,<sp/>&lt;unsigned<sp/>char<sp/>*&gt;<sp/>cmsg)</highlight></codeline>
<codeline lineno="2488"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0<sp/>:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2489"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>Pt_Time()<sp/>==<sp/>CurTime:<sp/>#<sp/>wait<sp/>for<sp/>SysEx<sp/>to<sp/>go<sp/>thru<sp/>or...my</highlight></codeline>
<codeline lineno="2490"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>win32<sp/>machine<sp/>crashes<sp/>w/<sp/>multiple<sp/>SysEx</highlight></codeline>
<codeline lineno="2491"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__pyx_v_err<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>380;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_4));</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_t_4),<sp/>0);</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_4));<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>380;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L7;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/>__pyx_L7:;</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:381</highlight></codeline>
<codeline lineno="2504"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_WriteSysEx(self.midi,<sp/>when,<sp/>&lt;unsigned<sp/>char<sp/>*&gt;<sp/>cmsg)</highlight></codeline>
<codeline lineno="2505"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0<sp/>:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2506"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>Pt_Time()<sp/>==<sp/>CurTime:<sp/>#<sp/>wait<sp/>for<sp/>SysEx<sp/>to<sp/>go<sp/>thru<sp/>or...my<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2507"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>win32<sp/>machine<sp/>crashes<sp/>w/<sp/>multiple<sp/>SysEx</highlight></codeline>
<codeline lineno="2508"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2509"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>(<ref refid="porttime_8h_1a9a335bb8c04c85bf85d807dd448d72d0" kindref="member">Pt_Time</ref>()<sp/>==<sp/>__pyx_v_CurTime);</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_3)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Output.WriteSysEx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_when);</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_msg);</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:404</highlight></codeline>
<codeline lineno="2533"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>cdef<sp/>int<sp/>i</highlight></codeline>
<codeline lineno="2534"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2535"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>InputDevice,<sp/>buffersize=4096):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2536"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>PmError<sp/>err</highlight></codeline>
<codeline lineno="2537"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.i<sp/>=<sp/>InputDevice</highlight></codeline>
<codeline lineno="2538"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_11_pyportmidi_5Input___init__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_pf_11_pyportmidi_5Input___init__(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_args,<sp/>PyObject<sp/>*__pyx_kwds)<sp/>{</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_InputDevice<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_buffersize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_v_err;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_4<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>**__pyx_pyargnames[]<sp/>=<sp/>{&amp;__pyx_n_s__InputDevice,&amp;__pyx_n_s__buffersize,0};</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_kwds))<sp/>{</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>kw_args<sp/>=<sp/>PyDict_Size(__pyx_kwds);</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>values[2]<sp/>=<sp/>{0,0};</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/>values[1]<sp/>=<sp/>((PyObject<sp/>*)__pyx_int_4096);</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>values[1]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>values[0]<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>PyDict_GetItem(__pyx_kwds,<sp/>__pyx_n_s__InputDevice);</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(values[0]))<sp/>kw_args--;</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kw_args<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>PyDict_GetItem(__pyx_kwds,<sp/>__pyx_n_s__buffersize);</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(value))<sp/>{<sp/>values[1]<sp/>=<sp/><ref refid="structdict__struct_1a8f0a429176b1c1a0eabb9e1e73d228a1" kindref="member">value</ref>;<sp/>kw_args--;<sp/>}</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(kw_args<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds,<sp/>__pyx_pyargnames,<sp/>0,<sp/>values,<sp/>PyTuple_GET_SIZE(__pyx_args),<sp/></highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>404;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_InputDevice<sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_buffersize<sp/>=<sp/>values[1];</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_buffersize<sp/>=<sp/>((PyObject<sp/>*)__pyx_int_4096);</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(PyTuple_GET_SIZE(__pyx_args))<sp/>{</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>2:<sp/>__pyx_v_buffersize<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>1);</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>1:<sp/>__pyx_v_InputDevice<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_args,<sp/>0);</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5_argtuple_error;</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L4_argument_unpacking_done;</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/>__pyx_L5_argtuple_error:;</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/>__Pyx_RaiseArgtupleInvalid(</highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>1,<sp/>2,<sp/>PyTuple_GET_SIZE(__pyx_args));<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>404;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L3_error;}</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/>__pyx_L3_error:;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Input.__init__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/>__pyx_L4_argument_unpacking_done:;</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_InputDevice);</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_buffersize);</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:406</highlight></codeline>
<codeline lineno="2599"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>InputDevice,<sp/>buffersize=4096):</highlight></codeline>
<codeline lineno="2600"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>PmError<sp/>err</highlight></codeline>
<codeline lineno="2601"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.i<sp/>=<sp/>InputDevice<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2602"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.debug<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2603"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err=<sp/>Pm_OpenInput(&amp;(self.midi),self.i,NULL,buffersize,&amp;Pt_Time,NULL)</highlight></codeline>
<codeline lineno="2604"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyInt_AsInt(__pyx_v_InputDevice);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_1<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>406;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;i<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:407</highlight></codeline>
<codeline lineno="2609"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>PmError<sp/>err</highlight></codeline>
<codeline lineno="2610"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.i<sp/>=<sp/>InputDevice</highlight></codeline>
<codeline lineno="2611"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.debug<sp/>=<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2612"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err=<sp/>Pm_OpenInput(&amp;(self.midi),self.i,NULL,buffersize,&amp;Pt_Time,NULL)</highlight></codeline>
<codeline lineno="2613"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2614"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;debug<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:408</highlight></codeline>
<codeline lineno="2618"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.i<sp/>=<sp/>InputDevice</highlight></codeline>
<codeline lineno="2619"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.debug<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2620"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err=<sp/>Pm_OpenInput(&amp;(self.midi),self.i,NULL,buffersize,&amp;Pt_Time,NULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2621"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2622"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;MIDI<sp/>input<sp/>opened.&quot;</highlight></codeline>
<codeline lineno="2623"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyInt_AsLong(__pyx_v_buffersize);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_2<sp/>==<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>408;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/><ref refid="group__grp__device_1gabd50a31baaa494ad8b405f9ad54c966e" kindref="member">Pm_OpenInput</ref>((&amp;((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>),<sp/>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>__pyx_t_2,<sp/>(&amp;<ref refid="porttime_8h_1a9a335bb8c04c85bf85d807dd448d72d0" kindref="member">Pt_Time</ref>),<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:409</highlight></codeline>
<codeline lineno="2628"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.debug<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2629"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err=<sp/>Pm_OpenInput(&amp;(self.midi),self.i,NULL,buffersize,&amp;Pt_Time,NULL)</highlight></codeline>
<codeline lineno="2630"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2631"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;MIDI<sp/>input<sp/>opened.&quot;</highlight></codeline>
<codeline lineno="2632"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2633"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__pyx_v_err<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>409;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_4));</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_t_4),<sp/>0);</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_4));<sp/>__pyx_t_4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>409;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L6;</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/>__pyx_L6:;</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:410</highlight></codeline>
<codeline lineno="2646"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err=<sp/>Pm_OpenInput(&amp;(self.midi),self.i,NULL,buffersize,&amp;Pt_Time,NULL)</highlight></codeline>
<codeline lineno="2647"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2648"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;MIDI<sp/>input<sp/>opened.&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2649"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2650"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="2651"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;debug;</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_PrintOne(((PyObject<sp/>*)__pyx_kp_s_12))<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>410;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L7;</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/>__pyx_L7:;</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_4);</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Input.__init__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_InputDevice);</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_buffersize);</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:412</highlight></codeline>
<codeline lineno="2674"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;MIDI<sp/>input<sp/>opened.&quot;</highlight></codeline>
<codeline lineno="2675"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2676"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2677"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>PmError<sp/>err</highlight></codeline>
<codeline lineno="2678"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;Closing<sp/>MIDI<sp/>input<sp/>stream<sp/>and<sp/>destroying<sp/>instance&quot;</highlight></codeline>
<codeline lineno="2679"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_pf_11_pyportmidi_5Input___dealloc__(PyObject<sp/>*__pyx_v_self);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_pf_11_pyportmidi_5Input___dealloc__(PyObject<sp/>*__pyx_v_self)<sp/>{</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_v_err;</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;__dealloc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:414</highlight></codeline>
<codeline lineno="2691"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>__dealloc__(self):</highlight></codeline>
<codeline lineno="2692"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>PmError<sp/>err</highlight></codeline>
<codeline lineno="2693"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;Closing<sp/>MIDI<sp/>input<sp/>stream<sp/>and<sp/>destroying<sp/>instance&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2694"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2695"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Close(self.midi)</highlight></codeline>
<codeline lineno="2696"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;debug;</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_PrintOne(((PyObject<sp/>*)__pyx_kp_s_13))<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>414;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:416</highlight></codeline>
<codeline lineno="2705"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.debug:<sp/>print<sp/>&quot;Closing<sp/>MIDI<sp/>input<sp/>stream<sp/>and<sp/>destroying<sp/>instance&quot;</highlight></codeline>
<codeline lineno="2706"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2707"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Close(self.midi)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2708"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="2709"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2710"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/><ref refid="group__grp__events__filters_1ga6b26be2fbcf092c9625ade5303edd0ac" kindref="member">Pm_Close</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>);</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:417</highlight></codeline>
<codeline lineno="2714"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2715"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Close(self.midi)</highlight></codeline>
<codeline lineno="2716"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2717"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2718"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2719"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>(__pyx_v_err<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2)<sp/>{</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:418</highlight></codeline>
<codeline lineno="2724"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Close(self.midi)</highlight></codeline>
<codeline lineno="2725"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="2726"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2727"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2728"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2729"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>418;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_3));</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_t_3),<sp/>0);</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_3));<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>418;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L6;</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/>__pyx_L6:;</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Input.__dealloc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:422</highlight></codeline>
<codeline lineno="2749"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2750"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2751"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>_check_open(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2752"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;<sp/>checks<sp/>to<sp/>see<sp/>if<sp/>the<sp/>midi<sp/>is<sp/>open,<sp/>and<sp/>if<sp/>not,<sp/>raises<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="2753"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2754"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"></highlight></codeline>
<codeline lineno="2756"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_5Input__check_open(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2757"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_5Input__check_open[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>checks<sp/>to<sp/>see<sp/>if<sp/>the<sp/>midi<sp/>is<sp/>open,<sp/>and<sp/>if<sp/>not,<sp/>raises<sp/>an<sp/>error.\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_5Input__check_open(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;_check_open&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:426</highlight></codeline>
<codeline lineno="2765"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2766"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2767"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.midi<sp/>==<sp/>NULL:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2768"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>&quot;midi<sp/>Input<sp/>not<sp/>open.&quot;</highlight></codeline>
<codeline lineno="2769"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2770"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>(((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;midi<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"></highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:427</highlight></codeline>
<codeline lineno="2775"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2776"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.midi<sp/>==<sp/>NULL:</highlight></codeline>
<codeline lineno="2777"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>&quot;midi<sp/>Input<sp/>not<sp/>open.&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2778"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2779"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2780"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_kp_s_14),<sp/>0);</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>427;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Input._check_open&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:430</highlight></codeline>
<codeline lineno="2800"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2801"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2802"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>Close(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2803"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2804"><highlight class="comment"><sp/>*<sp/>Close()</highlight></codeline>
<codeline lineno="2805"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_5Input_Close(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_5Input_Close[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nClose()\n<sp/><sp/><sp/><sp/>closes<sp/>a<sp/>midi<sp/>stream,<sp/>flushing<sp/>any<sp/>pending<sp/>buffers.\n<sp/><sp/><sp/><sp/>(PortMidi<sp/>attempts<sp/>to<sp/>close<sp/>open<sp/>streams<sp/>when<sp/>the<sp/>application\n<sp/><sp/><sp/><sp/>exits<sp/>--<sp/>this<sp/>is<sp/>particularly<sp/>difficult<sp/>under<sp/>Windows.)\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_5Input_Close(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_err;</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;Close&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:440</highlight></codeline>
<codeline lineno="2820"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/>return</highlight></codeline>
<codeline lineno="2821"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2822"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Close(self.midi)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2823"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="2824"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2825"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyInt_FromLong(<ref refid="group__grp__events__filters_1ga6b26be2fbcf092c9625ade5303edd0ac" kindref="member">Pm_Close</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>440;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_err);</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:441</highlight></codeline>
<codeline lineno="2833"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2834"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Close(self.midi)</highlight></codeline>
<codeline lineno="2835"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2836"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2837"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#self.midi<sp/>=<sp/>NULL</highlight></codeline>
<codeline lineno="2838"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_RichCompare(__pyx_v_err,<sp/>__pyx_int_0,<sp/>Py_LT);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>441;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_2<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>441;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_2)<sp/>{</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"></highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:442</highlight></codeline>
<codeline lineno="2846"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Close(self.midi)</highlight></codeline>
<codeline lineno="2847"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="2848"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2849"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#self.midi<sp/>=<sp/>NULL</highlight></codeline>
<codeline lineno="2850"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2851"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_3<sp/>=<sp/>((<ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref>)PyInt_AsLong(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>442;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_t_3));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>442;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_t_1),<sp/>0);</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>442;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Input.Close&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_err);</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2874"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:447</highlight></codeline>
<codeline lineno="2877"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2878"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2879"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>SetFilter(self,<sp/>filters):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2880"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2881"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>SetFilter(&lt;filters&gt;)<sp/>sets<sp/>filters<sp/>on<sp/>an<sp/>open<sp/>input<sp/>stream</highlight></codeline>
<codeline lineno="2882"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_5Input_SetFilter(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_filters);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_5Input_SetFilter[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/>SetFilter(&lt;filters&gt;)<sp/>sets<sp/>filters<sp/>on<sp/>an<sp/>open<sp/>input<sp/>stream\n<sp/><sp/><sp/><sp/>to<sp/>drop<sp/>selected<sp/>input<sp/>types.<sp/>By<sp/>default,<sp/>only<sp/>active<sp/>sensing\n<sp/><sp/><sp/><sp/>messages<sp/>are<sp/>filtered.<sp/>To<sp/>prohibit,<sp/>say,<sp/>active<sp/>sensing<sp/>and\n<sp/><sp/><sp/><sp/>sysex<sp/>messages,<sp/>call\n<sp/><sp/><sp/><sp/>SetFilter(stream,<sp/>FILT_ACTIVE<sp/>|<sp/>FILT_SYSEX);\n\n<sp/><sp/><sp/><sp/>Filtering<sp/>is<sp/>useful<sp/>when<sp/>midi<sp/>routing<sp/>or<sp/>midi<sp/>thru<sp/>functionality\n<sp/><sp/><sp/><sp/>is<sp/>being<sp/>provided<sp/>by<sp/>the<sp/>user<sp/>application.\n<sp/><sp/><sp/><sp/>For<sp/>example,<sp/>you<sp/>may<sp/>want<sp/>to<sp/>exclude<sp/>timing<sp/>messages\n<sp/><sp/><sp/><sp/>(clock,<sp/>MTC,<sp/>start/stop/continue),<sp/>while<sp/>allowing<sp/>note-related\n<sp/><sp/><sp/><sp/>messages<sp/>to<sp/>pass.<sp/>Or<sp/>you<sp/>may<sp/>be<sp/>using<sp/>a<sp/>sequencer<sp/>or<sp/>drum-machine\n<sp/><sp/><sp/><sp/>for<sp/>MIDI<sp/>clock<sp/>information<sp/>but<sp/>want<sp/>to<sp/>exclude<sp/>any<sp/>notes\n<sp/><sp/><sp/><sp/>it<sp/>may<sp/>play.\n\n<sp/><sp/><sp/><sp/>Note:<sp/>SetFilter<sp/>empties<sp/>the<sp/>buffer<sp/>after<sp/>setting<sp/>the<sp/>filter,\n<sp/><sp/><sp/><sp/>just<sp/>in<sp/>case<sp/>anything<sp/>got<sp/>through.\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_5Input_SetFilter(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_filters)<sp/>{</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>__pyx_v_buffer[1];</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_v_err;</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;SetFilter&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_filters);</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:469</highlight></codeline>
<codeline lineno="2899"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>PmError<sp/>err</highlight></codeline>
<codeline lineno="2900"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2901"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._check_open()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2902"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2903"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2904"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_GetAttr(__pyx_v_self,<sp/>__pyx_n_s___check_open);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>469;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>469;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:472</highlight></codeline>
<codeline lineno="2913"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2914"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2915"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_SetFilter(self.midi,<sp/>filters)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2916"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2917"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2918"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyInt_AsLong(__pyx_v_filters);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_3<sp/>==<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>472;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/><ref refid="group__grp__events__filters_1ga1a2b69b85efe9743345e18fc96607994" kindref="member">Pm_SetFilter</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:474</highlight></codeline>
<codeline lineno="2923"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_SetFilter(self.midi,<sp/>filters)</highlight></codeline>
<codeline lineno="2924"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2925"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2926"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2927"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(Pm_Poll(self.midi)<sp/>!=<sp/>pmNoError):</highlight></codeline>
<codeline lineno="2928"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>(__pyx_v_err<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_4)<sp/>{</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>474;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_2));</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_t_2),<sp/>0);</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_2));<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>474;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:476</highlight></codeline>
<codeline lineno="2941"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2942"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2943"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(Pm_Poll(self.midi)<sp/>!=<sp/>pmNoError):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2944"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2945"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Read(self.midi,buffer,1)</highlight></codeline>
<codeline lineno="2946"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>(<ref refid="group__grp__io_1ga54198ca9dc1af9d82ec5f44f661faeea" kindref="member">Pm_Poll</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>)<sp/>!=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>);</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_4)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:478</highlight></codeline>
<codeline lineno="2952"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(Pm_Poll(self.midi)<sp/>!=<sp/>pmNoError):</highlight></codeline>
<codeline lineno="2953"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2954"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Read(self.midi,buffer,1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2955"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2956"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2957"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_v_err<sp/>=<sp/><ref refid="group__grp__io_1ga3d59225bc890ede974f245ada3de6456" kindref="member">Pm_Read</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/>__pyx_v_buffer,<sp/>1);</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:479</highlight></codeline>
<codeline lineno="2961"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2962"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Read(self.midi,buffer,1)</highlight></codeline>
<codeline lineno="2963"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2964"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2965"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>SetChannelMask(self,<sp/>mask):</highlight></codeline>
<codeline lineno="2966"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_4<sp/>=<sp/>(__pyx_v_err<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_4)<sp/>{</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>479;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_2));</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_t_2),<sp/>0);</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_2));<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>479;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L8;</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_L8:;</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"></highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Input.SetFilter&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_filters);</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="2992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:481</highlight></codeline>
<codeline lineno="2995"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="2996"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="2997"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>SetChannelMask(self,<sp/>mask):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="2998"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2999"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>SetChannelMask(&lt;mask&gt;)<sp/>filters<sp/>incoming<sp/>messages<sp/>based<sp/>on<sp/>channel.</highlight></codeline>
<codeline lineno="3000"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3001"><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_5Input_SetChannelMask(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_mask);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_5Input_SetChannelMask[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/>SetChannelMask(&lt;mask&gt;)<sp/>filters<sp/>incoming<sp/>messages<sp/>based<sp/>on<sp/>channel.\n<sp/><sp/><sp/><sp/>The<sp/>mask<sp/>is<sp/>a<sp/>16-bit<sp/>bitfield<sp/>corresponding<sp/>to<sp/>appropriate<sp/>channels\n<sp/><sp/><sp/><sp/>Channel(&lt;channel&gt;)<sp/>can<sp/>assist<sp/>in<sp/>calling<sp/>this<sp/>function.\n<sp/><sp/><sp/><sp/>i.e.<sp/>to<sp/>set<sp/>receive<sp/>only<sp/>input<sp/>on<sp/>channel<sp/>1,<sp/>call<sp/>with\n<sp/><sp/><sp/><sp/>SetChannelMask(Channel(1))\n<sp/><sp/><sp/><sp/>Multiple<sp/>channels<sp/>should<sp/>be<sp/>OR&apos;d<sp/>together,<sp/>like\n<sp/><sp/><sp/><sp/>SetChannelMask(Channel(10)<sp/>|<sp/>Channel(11))\n<sp/><sp/><sp/><sp/>note:<sp/>PyPortMidi<sp/>Channel<sp/>function<sp/>has<sp/>been<sp/>altered<sp/>from\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>original<sp/>PortMidi<sp/>c<sp/>call<sp/>to<sp/>correct<sp/>for<sp/>what\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seems<sp/>to<sp/>be<sp/>a<sp/>bug<sp/>---<sp/>i.e.<sp/>channel<sp/>filters<sp/>were\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>numbered<sp/>from<sp/>0<sp/>to<sp/>15<sp/>instead<sp/>of<sp/>1<sp/>to<sp/>16.\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_5Input_SetChannelMask(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_mask)<sp/>{</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_v_err;</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;SetChannelMask&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_mask);</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:497</highlight></codeline>
<codeline lineno="3016"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>PmError<sp/>err</highlight></codeline>
<codeline lineno="3017"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3018"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._check_open()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3019"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3020"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_SetChannelMask(self.midi,mask)</highlight></codeline>
<codeline lineno="3021"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_GetAttr(__pyx_v_self,<sp/>__pyx_n_s___check_open);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>497;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>497;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:499</highlight></codeline>
<codeline lineno="3030"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._check_open()</highlight></codeline>
<codeline lineno="3031"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3032"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_SetChannelMask(self.midi,mask)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3033"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="3034"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3035"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyInt_AsInt(__pyx_v_mask);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_3<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>499;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/><ref refid="group__grp__events__filters_1ga87f9bc67a21a8b058a3f915a2f98746a" kindref="member">Pm_SetChannelMask</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/>__pyx_t_3);</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"></highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:500</highlight></codeline>
<codeline lineno="3040"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3041"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_SetChannelMask(self.midi,mask)</highlight></codeline>
<codeline lineno="3042"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3043"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3044"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>Poll(self):</highlight></codeline>
<codeline lineno="3045"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>(__pyx_v_err<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_4)<sp/>{</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>500;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_2));</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_t_2),<sp/>0);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_2));<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>500;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Input.SetChannelMask&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_mask);</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:502</highlight></codeline>
<codeline lineno="3073"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="3074"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3075"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>Poll(self):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3076"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3077"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Poll<sp/>tests<sp/>whether<sp/>input<sp/>is<sp/>available,</highlight></codeline>
<codeline lineno="3078"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"></highlight></codeline>
<codeline lineno="3080"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_5Input_Poll(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_5Input_Poll[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/>Poll<sp/>tests<sp/>whether<sp/>input<sp/>is<sp/>available,\n<sp/><sp/><sp/><sp/>returning<sp/>TRUE,<sp/>FALSE,<sp/>or<sp/>an<sp/>error<sp/>value.\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_5Input_Poll(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_v_err;</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;Poll&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"></highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:508</highlight></codeline>
<codeline lineno="3092"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3093"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>PmError<sp/>err</highlight></codeline>
<codeline lineno="3094"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._check_open()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3095"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3096"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Poll(self.midi)</highlight></codeline>
<codeline lineno="3097"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_GetAttr(__pyx_v_self,<sp/>__pyx_n_s___check_open);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>508;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>508;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:510</highlight></codeline>
<codeline lineno="3106"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._check_open()</highlight></codeline>
<codeline lineno="3107"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3108"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Poll(self.midi)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3109"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="3110"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>err</highlight></codeline>
<codeline lineno="3111"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/>__pyx_v_err<sp/>=<sp/><ref refid="group__grp__io_1ga54198ca9dc1af9d82ec5f44f661faeea" kindref="member">Pm_Poll</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>);</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"></highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:511</highlight></codeline>
<codeline lineno="3115"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3116"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Poll(self.midi)</highlight></codeline>
<codeline lineno="3117"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3118"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>err</highlight></codeline>
<codeline lineno="3119"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3120"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>(__pyx_v_err<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_v_err));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>511;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_2));</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_t_2),<sp/>0);</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_2));<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>511;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:512</highlight></codeline>
<codeline lineno="3133"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>Pm_Poll(self.midi)</highlight></codeline>
<codeline lineno="3134"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>err<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(err)</highlight></codeline>
<codeline lineno="3135"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>err<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3136"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3137"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>Read(self,length):</highlight></codeline>
<codeline lineno="3138"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyInt_FromLong(__pyx_v_err);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>512;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"></highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Input.Poll&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"></highlight></codeline>
<codeline lineno="3160"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:514</highlight></codeline>
<codeline lineno="3161"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>err</highlight></codeline>
<codeline lineno="3162"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3163"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>def<sp/>Read(self,length):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3164"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3165"><highlight class="comment"><sp/>*<sp/>Read(length):<sp/>returns<sp/>up<sp/>to<sp/>&lt;length&gt;<sp/>midi<sp/>events<sp/>stored<sp/>in</highlight></codeline>
<codeline lineno="3166"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_5Input_Read(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_length);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3169"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__pyx_doc_11_pyportmidi_5Input_Read[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nRead(length):<sp/>returns<sp/>up<sp/>to<sp/>&lt;length&gt;<sp/>midi<sp/>events<sp/>stored<sp/>in\nthe<sp/>buffer<sp/>and<sp/>returns<sp/>them<sp/>as<sp/>a<sp/>list:\n[[[status,data1,data2,data3],timestamp],\n<sp/>[[status,data1,data2,data3],timestamp],...]\nexample:<sp/>Read(50)<sp/>returns<sp/>all<sp/>the<sp/>events<sp/>in<sp/>the<sp/>buffer,\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>up<sp/>to<sp/>50<sp/>events.\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_pf_11_pyportmidi_5Input_Read(PyObject<sp/>*__pyx_v_self,<sp/>PyObject<sp/>*__pyx_v_length)<sp/>{</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>__pyx_v_buffer[1024];</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_x;</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_NumEvents;</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_v_loop;</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__pyx_t_3;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__pyx_t_4;</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>__pyx_t_5;</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_6;</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>__pyx_t_7;</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_8<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_9<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_10<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_11<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/>__Pyx_RefNannySetupContext(</highlight><highlight class="stringliteral">&quot;Read&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/>__Pyx_INCREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_length);</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/>__pyx_v_x<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/>__pyx_v_NumEvents<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/>__pyx_v_loop<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:525</highlight></codeline>
<codeline lineno="3195"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdef<sp/>PmEvent<sp/>buffer[1024]</highlight></codeline>
<codeline lineno="3196"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3197"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._check_open()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3198"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3199"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="3200"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_GetAttr(__pyx_v_self,<sp/>__pyx_n_s___check_open);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>525;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_Call(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_empty_tuple),<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>525;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"></highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:527</highlight></codeline>
<codeline lineno="3209"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._check_open()</highlight></codeline>
<codeline lineno="3210"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3211"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3212"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3213"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>length<sp/>&gt;<sp/>1024:<sp/>raise<sp/>IndexError,<sp/>&apos;maximum<sp/>buffer<sp/>length<sp/>is<sp/>1024&apos;</highlight></codeline>
<codeline lineno="3214"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyList_New(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>527;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_2));</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_x);</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/>__pyx_v_x<sp/>=<sp/>((PyObject<sp/>*)__pyx_t_2);</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"></highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:529</highlight></codeline>
<codeline lineno="3222"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="3223"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3224"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>length<sp/>&gt;<sp/>1024:<sp/>raise<sp/>IndexError,<sp/>&apos;maximum<sp/>buffer<sp/>length<sp/>is<sp/>1024&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3225"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>length<sp/>&lt;<sp/>1:<sp/>raise<sp/>IndexError,<sp/>&apos;minimum<sp/>buffer<sp/>length<sp/>is<sp/>1&apos;</highlight></codeline>
<codeline lineno="3226"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumEvents<sp/>=<sp/>Pm_Read(self.midi,buffer,length)</highlight></codeline>
<codeline lineno="3227"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_RichCompare(__pyx_v_length,<sp/>__pyx_int_1024,<sp/>Py_GT);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>529;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_3<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>529;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_IndexError,<sp/>((PyObject<sp/>*)__pyx_kp_s_15),<sp/>0);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>529;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L5;</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/>__pyx_L5:;</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"></highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:530</highlight></codeline>
<codeline lineno="3240"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3241"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>length<sp/>&gt;<sp/>1024:<sp/>raise<sp/>IndexError,<sp/>&apos;maximum<sp/>buffer<sp/>length<sp/>is<sp/>1024&apos;</highlight></codeline>
<codeline lineno="3242"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>length<sp/>&lt;<sp/>1:<sp/>raise<sp/>IndexError,<sp/>&apos;minimum<sp/>buffer<sp/>length<sp/>is<sp/>1&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3243"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumEvents<sp/>=<sp/>Pm_Read(self.midi,buffer,length)</highlight></codeline>
<codeline lineno="3244"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>NumEvents<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(NumEvents)</highlight></codeline>
<codeline lineno="3245"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_RichCompare(__pyx_v_length,<sp/>__pyx_int_1,<sp/>Py_LT);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>530;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_3<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>530;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_IndexError,<sp/>((PyObject<sp/>*)__pyx_kp_s_16),<sp/>0);</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>530;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L6;</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/>__pyx_L6:;</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:531</highlight></codeline>
<codeline lineno="3258"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>length<sp/>&gt;<sp/>1024:<sp/>raise<sp/>IndexError,<sp/>&apos;maximum<sp/>buffer<sp/>length<sp/>is<sp/>1024&apos;</highlight></codeline>
<codeline lineno="3259"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>length<sp/>&lt;<sp/>1:<sp/>raise<sp/>IndexError,<sp/>&apos;minimum<sp/>buffer<sp/>length<sp/>is<sp/>1&apos;</highlight></codeline>
<codeline lineno="3260"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumEvents<sp/>=<sp/>Pm_Read(self.midi,buffer,length)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3261"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>NumEvents<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(NumEvents)</highlight></codeline>
<codeline lineno="3262"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[]</highlight></codeline>
<codeline lineno="3263"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/>__pyx_t_4<sp/>=<sp/>__Pyx_PyInt_AsLong(__pyx_v_length);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_4<sp/>==<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>531;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyInt_FromLong(<ref refid="group__grp__io_1ga3d59225bc890ede974f245ada3de6456" kindref="member">Pm_Read</ref>(((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>__pyx_obj_11_pyportmidi_Input<sp/>*)__pyx_v_self)-&gt;<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/>__pyx_v_buffer,<sp/>__pyx_t_4));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>531;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_NumEvents);</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/>__pyx_v_NumEvents<sp/>=<sp/>__pyx_t_2;</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:532</highlight></codeline>
<codeline lineno="3272"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>length<sp/>&lt;<sp/>1:<sp/>raise<sp/>IndexError,<sp/>&apos;minimum<sp/>buffer<sp/>length<sp/>is<sp/>1&apos;</highlight></codeline>
<codeline lineno="3273"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumEvents<sp/>=<sp/>Pm_Read(self.midi,buffer,length)</highlight></codeline>
<codeline lineno="3274"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>NumEvents<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(NumEvents)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3275"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[]</highlight></codeline>
<codeline lineno="3276"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>NumEvents<sp/>&gt;=<sp/>1:</highlight></codeline>
<codeline lineno="3277"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_RichCompare(__pyx_v_NumEvents,<sp/>__pyx_int_0,<sp/>Py_LT);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>532;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_3<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>532;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_5<sp/>=<sp/>((<ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref>)PyInt_AsLong(__pyx_v_NumEvents));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>532;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_PyBytes_FromString(<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(__pyx_t_5));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>532;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_2));</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_Raise(__pyx_builtin_Exception,<sp/>((PyObject<sp/>*)__pyx_t_2),<sp/>0);</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_2));<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>532;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L7;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/>__pyx_L7:;</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:533</highlight></codeline>
<codeline lineno="3294"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumEvents<sp/>=<sp/>Pm_Read(self.midi,buffer,length)</highlight></codeline>
<codeline lineno="3295"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>NumEvents<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(NumEvents)</highlight></codeline>
<codeline lineno="3296"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3297"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>NumEvents<sp/>&gt;=<sp/>1:</highlight></codeline>
<codeline lineno="3298"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>loop<sp/>in<sp/>range(NumEvents):</highlight></codeline>
<codeline lineno="3299"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyList_New(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>533;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_2));</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_x);</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/>__pyx_v_x<sp/>=<sp/>((PyObject<sp/>*)__pyx_t_2);</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"></highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:534</highlight></codeline>
<codeline lineno="3307"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>NumEvents<sp/>&lt;<sp/>0:<sp/>raise<sp/>Exception,<sp/>Pm_GetErrorText(NumEvents)</highlight></codeline>
<codeline lineno="3308"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[]</highlight></codeline>
<codeline lineno="3309"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>NumEvents<sp/>&gt;=<sp/>1:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3310"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>loop<sp/>in<sp/>range(NumEvents):</highlight></codeline>
<codeline lineno="3311"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.append([[buffer[loop].message<sp/>&amp;<sp/>0xff,<sp/>(buffer[loop].message<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF,<sp/>(buffer[loop].message<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF,<sp/>(buffer[loop].message<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF],<sp/>buffer[loop].timestamp])</highlight></codeline>
<codeline lineno="3312"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_RichCompare(__pyx_v_NumEvents,<sp/>__pyx_int_1,<sp/>Py_GE);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>534;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_PyObject_IsTrue(__pyx_t_2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__pyx_t_3<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>534;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_3)<sp/>{</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:535</highlight></codeline>
<codeline lineno="3320"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[]</highlight></codeline>
<codeline lineno="3321"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>NumEvents<sp/>&gt;=<sp/>1:</highlight></codeline>
<codeline lineno="3322"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>loop<sp/>in<sp/>range(NumEvents):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3323"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.append([[buffer[loop].message<sp/>&amp;<sp/>0xff,<sp/>(buffer[loop].message<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF,<sp/>(buffer[loop].message<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF,<sp/>(buffer[loop].message<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF],<sp/>buffer[loop].timestamp])</highlight></codeline>
<codeline lineno="3324"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>x</highlight></codeline>
<codeline lineno="3325"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyTuple_New(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>535;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_INCREF(__pyx_v_NumEvents);</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(__pyx_t_2,<sp/>0,<sp/>__pyx_v_NumEvents);</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_v_NumEvents);</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyObject_Call(__pyx_builtin_range,<sp/>__pyx_t_2,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>535;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyList_CheckExact(__pyx_t_1)<sp/>||<sp/>PyTuple_CheckExact(__pyx_t_1))<sp/>{</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>0;<sp/>__pyx_t_2<sp/>=<sp/>__pyx_t_1;<sp/>__Pyx_INCREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_6<sp/>=<sp/>-1;<sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetIter(__pyx_t_1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>535;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyList_CheckExact(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_6<sp/>&gt;=<sp/>PyList_GET_SIZE(__pyx_t_2))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyList_GET_ITEM(__pyx_t_2,<sp/>__pyx_t_6);<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_6++;</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyTuple_CheckExact(__pyx_t_2)))<sp/>{</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_t_6<sp/>&gt;=<sp/>PyTuple_GET_SIZE(__pyx_t_2))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyTuple_GET_ITEM(__pyx_t_2,<sp/>__pyx_t_6);<sp/>__Pyx_INCREF(__pyx_t_1);<sp/>__pyx_t_6++;</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyIter_Next(__pyx_t_2);</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_t_1)<sp/>{</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>535;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_v_loop);</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_v_loop<sp/>=<sp/>__pyx_t_1;</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:536</highlight></codeline>
<codeline lineno="3361"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>NumEvents<sp/>&gt;=<sp/>1:</highlight></codeline>
<codeline lineno="3362"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>loop<sp/>in<sp/>range(NumEvents):</highlight></codeline>
<codeline lineno="3363"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.append([[buffer[loop].message<sp/>&amp;<sp/>0xff,<sp/>(buffer[loop].message<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF,<sp/>(buffer[loop].message<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF,<sp/>(buffer[loop].message<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF],<sp/>buffer[loop].timestamp])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3364"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>x</highlight></codeline>
<codeline lineno="3365"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyIndex_AsSsize_t(__pyx_v_loop);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_7<sp/>==<sp/>(Py_ssize_t)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>536;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_PyInt_to_py_PmMessage(((__pyx_v_buffer[__pyx_t_7]).message<sp/>&amp;<sp/>0xff));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>536;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyIndex_AsSsize_t(__pyx_v_loop);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_7<sp/>==<sp/>(Py_ssize_t)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>536;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>__Pyx_PyInt_to_py_PmMessage((((__pyx_v_buffer[__pyx_t_7]).message<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_8))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>536;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyIndex_AsSsize_t(__pyx_v_loop);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_7<sp/>==<sp/>(Py_ssize_t)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>536;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>__Pyx_PyInt_to_py_PmMessage((((__pyx_v_buffer[__pyx_t_7]).message<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_9))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>536;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyIndex_AsSsize_t(__pyx_v_loop);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_7<sp/>==<sp/>(Py_ssize_t)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>536;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_10<sp/>=<sp/>__Pyx_PyInt_to_py_PmMessage((((__pyx_v_buffer[__pyx_t_7]).message<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_10))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>536;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>PyList_New(4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_11))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>536;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_11));</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_11,<sp/>0,<sp/>__pyx_t_1);</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_11,<sp/>1,<sp/>__pyx_t_8);</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_11,<sp/>2,<sp/>__pyx_t_9);</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_11,<sp/>3,<sp/>__pyx_t_10);</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_10<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_7<sp/>=<sp/>__Pyx_PyIndex_AsSsize_t(__pyx_v_loop);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((__pyx_t_7<sp/>==<sp/>(Py_ssize_t)-1)<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>536;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_10<sp/>=<sp/>__Pyx_PyInt_to_py_PmTimestamp((__pyx_v_buffer[__pyx_t_7]).timestamp);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_10))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>536;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_9<sp/>=<sp/>PyList_New(2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_9))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>536;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_9));</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_9,<sp/>0,<sp/>((PyObject<sp/>*)__pyx_t_11));</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(((PyObject<sp/>*)__pyx_t_11));</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyList_SET_ITEM(__pyx_t_9,<sp/>1,<sp/>__pyx_t_10);</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GIVEREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_11<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_10<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_t_10<sp/>=<sp/>__Pyx_PyObject_Append(__pyx_v_x,<sp/>((PyObject<sp/>*)__pyx_t_9));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_10))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>536;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_GOTREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_9));<sp/>__pyx_t_9<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_10);<sp/>__pyx_t_10<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L8;</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/>__pyx_L8:;</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"></highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:537</highlight></codeline>
<codeline lineno="3414"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>loop<sp/>in<sp/>range(NumEvents):</highlight></codeline>
<codeline lineno="3415"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.append([[buffer[loop].message<sp/>&amp;<sp/>0xff,<sp/>(buffer[loop].message<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF,<sp/>(buffer[loop].message<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF,<sp/>(buffer[loop].message<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF],<sp/>buffer[loop].timestamp])</highlight></codeline>
<codeline lineno="3416"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="3417"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_r);</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/>__Pyx_INCREF(__pyx_v_x);</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>__pyx_v_x;</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"></highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/>Py_None;<sp/>__Pyx_INCREF(Py_None);</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_8);</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_9);</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_10);</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_11);</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Input.Read&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/>__pyx_r<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_x);</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_NumEvents);</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_loop);</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/>__Pyx_DECREF((PyObject<sp/>*)__pyx_v_self);</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_v_length);</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/>__Pyx_XGIVEREF(__pyx_r);</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_r;</highlight></codeline>
<codeline lineno="3443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"></highlight></codeline>
<codeline lineno="3445"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tp_new_11_pyportmidi_Output(PyTypeObject<sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/>PyObject<sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/>PyObject<sp/>*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/>PyObject<sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref><sp/>=<sp/>(*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;tp_alloc)(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>;</highlight></codeline>
<codeline lineno="3449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"></highlight></codeline>
<codeline lineno="3451"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_tp_dealloc_11_pyportmidi_Output(PyObject<sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*etype,<sp/>*<ref refid="sndfile__load_8m_1a2e42535874848cdfc8a19e67b71befc9" kindref="member">eval</ref>,<sp/>*etb;</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Fetch(&amp;etype,<sp/>&amp;eval,<sp/>&amp;etb);</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/>++Py_REFCNT(o);</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_pf_11_pyportmidi_6Output___dealloc__(o);</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyErr_Occurred())<sp/>PyErr_WriteUnraisable(o);</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/>--Py_REFCNT(o);</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Restore(etype,<sp/>eval,<sp/>etb);</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/>(*Py_TYPE(o)-&gt;tp_free)(o);</highlight></codeline>
<codeline lineno="3462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"></highlight></codeline>
<codeline lineno="3464"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PyMethodDef<sp/>__pyx_methods_11_pyportmidi_Output[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;_check_open&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_6Output__check_open,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_6Output__check_open)},</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;Close&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_6Output_Close,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_6Output_Close)},</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;Abort&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_6Output_Abort,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_6Output_Abort)},</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;Write&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_6Output_Write,<sp/>METH_O,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_6Output_Write)},</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;WriteShort&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_6Output_WriteShort,<sp/>METH_VARARGS|METH_KEYWORDS,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_6Output_WriteShort)},</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;WriteSysEx&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_6Output_WriteSysEx,<sp/>METH_VARARGS|METH_KEYWORDS,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_6Output_WriteSysEx)},</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="3472"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"></highlight></codeline>
<codeline lineno="3474"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyNumberMethods<sp/>__pyx_tp_as_number_Output<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_add*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_subtract*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_multiply*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3478"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_remainder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_divmod*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_power*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_negative*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_positive*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_absolute*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_nonzero*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_invert*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_lshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_rshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_and*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_xor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_or*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3494"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_coerce*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3496"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_int*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*reserved*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_long*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3502"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_float*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_oct*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3506"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3507"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_hex*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3509"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_add*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_subtract*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_multiply*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3513"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_remainder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_power*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_lshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_rshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_and*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_xor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_or*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_floor_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_true_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_floor_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_true_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3527"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>(PY_MAJOR_VERSION<sp/>&gt;=<sp/>3)<sp/>||<sp/>(Py_TPFLAGS_DEFAULT<sp/>&amp;<sp/>Py_TPFLAGS_HAVE_INDEX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_index*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PySequenceMethods<sp/>__pyx_tp_as_sequence_Output<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_length*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_concat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_repeat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_item*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_slice*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_ass_item*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_ass_slice*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_contains*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_inplace_concat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_inplace_repeat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3543"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"></highlight></codeline>
<codeline lineno="3545"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMappingMethods<sp/>__pyx_tp_as_mapping_Output<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_length*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_subscript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_ass_subscript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3549"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyBufferProcs<sp/>__pyx_tp_as_buffer_Output<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getreadbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getwritebuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3557"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getsegcount*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3560"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3561"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getcharbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3564"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02060000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3567"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02060000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_releasebuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3570"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal">PyTypeObject<sp/>__pyx_type_11_pyportmidi_Output<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/>PyVarObject_HEAD_INIT(0,<sp/>0)</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/>__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Output&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="comment">/*tp_name*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Output),<sp/></highlight><highlight class="comment">/*tp_basicsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_itemsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/>__pyx_tp_dealloc_11_pyportmidi_Output,<sp/></highlight><highlight class="comment">/*tp_dealloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_print*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_compare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_repr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_number_Output,<sp/></highlight><highlight class="comment">/*tp_as_number*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_sequence_Output,<sp/></highlight><highlight class="comment">/*tp_as_sequence*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_mapping_Output,<sp/></highlight><highlight class="comment">/*tp_as_mapping*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_hash*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_call*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_str*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_buffer_Output,<sp/></highlight><highlight class="comment">/*tp_as_buffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/>Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER,<sp/></highlight><highlight class="comment">/*tp_flags*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/>__Pyx_DOCSTR(</highlight><highlight class="stringliteral">&quot;\nclass<sp/>Output:\n<sp/><sp/><sp/><sp/>define<sp/>an<sp/>output<sp/>MIDI<sp/>stream.<sp/>Takes<sp/>the<sp/>form:\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>pypm.Output(MidiOutputDevice,<sp/>latency)\n<sp/><sp/><sp/><sp/>latency<sp/>is<sp/>in<sp/>ms.\n<sp/><sp/><sp/><sp/>If<sp/>latency<sp/>=<sp/>0<sp/>then<sp/>timestamps<sp/>for<sp/>output<sp/>are<sp/>ignored.\n<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="comment">/*tp_doc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_traverse*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_clear*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_richcompare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklistoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_iter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_iternext*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/>__pyx_methods_11_pyportmidi_Output,<sp/></highlight><highlight class="comment">/*tp_methods*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_members*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_base*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dict*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_get*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_set*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dictoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/>__pyx_pf_11_pyportmidi_6Output___init__,<sp/></highlight><highlight class="comment">/*tp_init*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_alloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/>__pyx_tp_new_11_pyportmidi_Output,<sp/></highlight><highlight class="comment">/*tp_new*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_free*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_is_gc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_bases*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_mro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_cache*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_subclasses*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklist*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_del*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02060000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_version_tag*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3621"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3622"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__pyx_tp_new_11_pyportmidi_Input(PyTypeObject<sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/>PyObject<sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/>PyObject<sp/>*<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/>PyObject<sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref><sp/>=<sp/>(*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;tp_alloc)(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>;</highlight></codeline>
<codeline lineno="3628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"></highlight></codeline>
<codeline lineno="3630"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_tp_dealloc_11_pyportmidi_Input(PyObject<sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*etype,<sp/>*<ref refid="sndfile__load_8m_1a2e42535874848cdfc8a19e67b71befc9" kindref="member">eval</ref>,<sp/>*etb;</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Fetch(&amp;etype,<sp/>&amp;eval,<sp/>&amp;etb);</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/>++Py_REFCNT(o);</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_pf_11_pyportmidi_5Input___dealloc__(o);</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyErr_Occurred())<sp/>PyErr_WriteUnraisable(o);</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/>--Py_REFCNT(o);</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Restore(etype,<sp/>eval,<sp/>etb);</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/>(*Py_TYPE(o)-&gt;tp_free)(o);</highlight></codeline>
<codeline lineno="3641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PyMethodDef<sp/>__pyx_methods_11_pyportmidi_Input[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;_check_open&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_5Input__check_open,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_5Input__check_open)},</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;Close&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_5Input_Close,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_5Input_Close)},</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;SetFilter&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_5Input_SetFilter,<sp/>METH_O,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_5Input_SetFilter)},</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;SetChannelMask&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_5Input_SetChannelMask,<sp/>METH_O,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_5Input_SetChannelMask)},</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;Poll&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_5Input_Poll,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_5Input_Poll)},</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;Read&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_5Input_Read,<sp/>METH_O,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_5Input_Read)},</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="3651"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"></highlight></codeline>
<codeline lineno="3653"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyNumberMethods<sp/>__pyx_tp_as_number_Input<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_add*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_subtract*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_multiply*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3657"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_remainder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_divmod*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_power*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_negative*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_positive*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_absolute*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_nonzero*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_invert*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_lshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_rshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_and*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_xor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_or*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3673"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_coerce*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_int*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*reserved*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3679"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_long*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3681"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_float*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3683"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_oct*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3685"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3686"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_hex*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_add*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_subtract*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_multiply*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3692"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3694"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_remainder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_power*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_lshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_rshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_and*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_xor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_or*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_floor_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_true_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_floor_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_inplace_true_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3706"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>(PY_MAJOR_VERSION<sp/>&gt;=<sp/>3)<sp/>||<sp/>(Py_TPFLAGS_DEFAULT<sp/>&amp;<sp/>Py_TPFLAGS_HAVE_INDEX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*nb_index*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"></highlight></codeline>
<codeline lineno="3711"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PySequenceMethods<sp/>__pyx_tp_as_sequence_Input<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_length*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_concat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_repeat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_item*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_slice*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_ass_item*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_ass_slice*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_contains*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_inplace_concat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*sq_inplace_repeat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3722"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"></highlight></codeline>
<codeline lineno="3724"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMappingMethods<sp/>__pyx_tp_as_mapping_Input<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_length*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_subscript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*mp_ass_subscript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3728"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyBufferProcs<sp/>__pyx_tp_as_buffer_Input<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getreadbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getwritebuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getsegcount*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3739"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getcharbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3743"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02060000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_getbuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3745"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3746"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02060000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*bf_releasebuffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"></highlight></codeline>
<codeline lineno="3751"><highlight class="normal">PyTypeObject<sp/>__pyx_type_11_pyportmidi_Input<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/>PyVarObject_HEAD_INIT(0,<sp/>0)</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/>__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;_pyportmidi.Input&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="comment">/*tp_name*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__pyx_obj_11_pyportmidi_Input),<sp/></highlight><highlight class="comment">/*tp_basicsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_itemsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/>__pyx_tp_dealloc_11_pyportmidi_Input,<sp/></highlight><highlight class="comment">/*tp_dealloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_print*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_compare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_repr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_number_Input,<sp/></highlight><highlight class="comment">/*tp_as_number*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_sequence_Input,<sp/></highlight><highlight class="comment">/*tp_as_sequence*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_mapping_Input,<sp/></highlight><highlight class="comment">/*tp_as_mapping*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_hash*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_call*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_str*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_setattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/>&amp;__pyx_tp_as_buffer_Input,<sp/></highlight><highlight class="comment">/*tp_as_buffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/>Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER,<sp/></highlight><highlight class="comment">/*tp_flags*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/>__Pyx_DOCSTR(</highlight><highlight class="stringliteral">&quot;\nclass<sp/>Input:\n<sp/><sp/><sp/><sp/>define<sp/>an<sp/>input<sp/>MIDI<sp/>stream.<sp/>Takes<sp/>the<sp/>form:\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>pypm.Input(MidiInputDevice)\n<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="comment">/*tp_doc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_traverse*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_clear*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_richcompare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklistoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_iter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_iternext*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/>__pyx_methods_11_pyportmidi_Input,<sp/></highlight><highlight class="comment">/*tp_methods*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_members*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_getset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_base*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dict*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_get*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_descr_set*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_dictoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/>__pyx_pf_11_pyportmidi_5Input___init__,<sp/></highlight><highlight class="comment">/*tp_init*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_alloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/>__pyx_tp_new_11_pyportmidi_Input,<sp/></highlight><highlight class="comment">/*tp_new*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_free*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_is_gc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_bases*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_mro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_cache*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_subclasses*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_weaklist*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_del*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3798"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&gt;=<sp/>0x02060000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*tp_version_tag*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3800"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3801"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PyMethodDef<sp/>__pyx_methods[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;Initialize&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_Initialize,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_Initialize)},</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;Terminate&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_Terminate,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_Terminate)},</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;GetDefaultInputDeviceID&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_GetDefaultInputDeviceID,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;GetDefaultOutputDeviceID&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_GetDefaultOutputDeviceID,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;CountDevices&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_CountDevices,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(0)},</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;GetDeviceInfo&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_GetDeviceInfo,<sp/>METH_O,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_GetDeviceInfo)},</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;Time&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_Time,<sp/>METH_NOARGS,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_Time)},</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;GetErrorText&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_GetErrorText,<sp/>METH_O,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_GetErrorText)},</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/>{__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;Channel&quot;</highlight><highlight class="normal">),<sp/>(PyCFunction)__pyx_pf_11_pyportmidi_Channel,<sp/>METH_O,<sp/>__Pyx_DOCSTR(__pyx_doc_11_pyportmidi_Channel)},</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="3814"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"></highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_init_filenames(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"></highlight></codeline>
<codeline lineno="3818"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3819"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PyModuleDef<sp/>__pyx_moduledef<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/>PyModuleDef_HEAD_INIT,</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;_pyportmidi&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>m_doc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/>-1,<sp/></highlight><highlight class="comment">/*<sp/>m_size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/>__pyx_methods<sp/></highlight><highlight class="comment">/*<sp/>m_methods<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="comment">/*<sp/>m_reload<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="comment">/*<sp/>m_traverse<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="comment">/*<sp/>m_clear<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL<sp/></highlight><highlight class="comment">/*<sp/>m_free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3829"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3831"><highlight class="normal"></highlight></codeline>
<codeline lineno="3832"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__Pyx_StringTabEntry<sp/>__pyx_string_tab[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_1,<sp/>__pyx_k_1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_1),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_10,<sp/>__pyx_k_10,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_10),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_11,<sp/>__pyx_k_11,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_11),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_12,<sp/>__pyx_k_12,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_12),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_13,<sp/>__pyx_k_13,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_13),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_14,<sp/>__pyx_k_14,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_14),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_15,<sp/>__pyx_k_15,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_15),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_16,<sp/>__pyx_k_16,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_16),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_17,<sp/>__pyx_k_17,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_17),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_18,<sp/>__pyx_k_18,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_18),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s_19,<sp/>__pyx_k_19,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_19),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_2,<sp/>__pyx_k_2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_2),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_20,<sp/>__pyx_k_20,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_20),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_21,<sp/>__pyx_k_21,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_21),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_22,<sp/>__pyx_k_22,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_22),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_23,<sp/>__pyx_k_23,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_23),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_24,<sp/>__pyx_k_24,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_24),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_25,<sp/>__pyx_k_25,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_25),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_26,<sp/>__pyx_k_26,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_26),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_27,<sp/>__pyx_k_27,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_27),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_28,<sp/>__pyx_k_28,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_28),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_29,<sp/>__pyx_k_29,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_29),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_3,<sp/>__pyx_k_3,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_3),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_30,<sp/>__pyx_k_30,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_30),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_31,<sp/>__pyx_k_31,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_31),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_32,<sp/>__pyx_k_32,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_32),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_33,<sp/>__pyx_k_33,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_33),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_34,<sp/>__pyx_k_34,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_34),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_35,<sp/>__pyx_k_35,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_35),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_36,<sp/>__pyx_k_36,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_36),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_u_37,<sp/>__pyx_k_37,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_37),<sp/>0,<sp/>1,<sp/>0,<sp/>0},</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_4,<sp/>__pyx_k_4,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_4),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_5,<sp/>__pyx_k_5,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_5),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_6,<sp/>__pyx_k_6,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_6),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_7,<sp/>__pyx_k_7,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_7),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_8,<sp/>__pyx_k_8,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_8),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/>{&amp;__pyx_kp_s_9,<sp/>__pyx_k_9,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k_9),<sp/>0,<sp/>0,<sp/>1,<sp/>0},</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__Abort,<sp/>__pyx_k__Abort,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__Abort),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__B,<sp/>__pyx_k__B,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__B),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__Channel,<sp/>__pyx_k__Channel,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__Channel),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__Close,<sp/>__pyx_k__Close,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__Close),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__Exception,<sp/>__pyx_k__Exception,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__Exception),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FALSE,<sp/>__pyx_k__FALSE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FALSE),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_ACTIVE,<sp/>__pyx_k__FILT_ACTIVE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_ACTIVE),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_AFTERTOUCH,<sp/>__pyx_k__FILT_AFTERTOUCH,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_AFTERTOUCH),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_CLOCK,<sp/>__pyx_k__FILT_CLOCK,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_CLOCK),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_CONTROL,<sp/>__pyx_k__FILT_CONTROL,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_CONTROL),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_F9,<sp/>__pyx_k__FILT_F9,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_F9),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_FD,<sp/>__pyx_k__FILT_FD,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_FD),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_MTC,<sp/>__pyx_k__FILT_MTC,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_MTC),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_NOTE,<sp/>__pyx_k__FILT_NOTE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_NOTE),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_PITCHBEND,<sp/>__pyx_k__FILT_PITCHBEND,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_PITCHBEND),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_PLAY,<sp/>__pyx_k__FILT_PLAY,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_PLAY),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_PROGRAM,<sp/>__pyx_k__FILT_PROGRAM,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_PROGRAM),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_REALTIME,<sp/>__pyx_k__FILT_REALTIME,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_REALTIME),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_RESET,<sp/>__pyx_k__FILT_RESET,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_RESET),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_SONG_POSITION,<sp/>__pyx_k__FILT_SONG_POSITION,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_SONG_POSITION),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_SONG_SELECT,<sp/>__pyx_k__FILT_SONG_SELECT,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_SONG_SELECT),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_SYSEX,<sp/>__pyx_k__FILT_SYSEX,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_SYSEX),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_TICK,<sp/>__pyx_k__FILT_TICK,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_TICK),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_TUNE,<sp/>__pyx_k__FILT_TUNE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_TUNE),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__FILT_UNDEFINED,<sp/>__pyx_k__FILT_UNDEFINED,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__FILT_UNDEFINED),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__GetDeviceInfo,<sp/>__pyx_k__GetDeviceInfo,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__GetDeviceInfo),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__GetErrorText,<sp/>__pyx_k__GetErrorText,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__GetErrorText),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__IndexError,<sp/>__pyx_k__IndexError,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__IndexError),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__Initialize,<sp/>__pyx_k__Initialize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__Initialize),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__Input,<sp/>__pyx_k__Input,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__Input),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__InputDevice,<sp/>__pyx_k__InputDevice,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__InputDevice),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__Output,<sp/>__pyx_k__Output,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__Output),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__OutputDevice,<sp/>__pyx_k__OutputDevice,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__OutputDevice),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__Poll,<sp/>__pyx_k__Poll,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__Poll),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__Read,<sp/>__pyx_k__Read,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__Read),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__SetChannelMask,<sp/>__pyx_k__SetChannelMask,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__SetChannelMask),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__SetFilter,<sp/>__pyx_k__SetFilter,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__SetFilter),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__TRUE,<sp/>__pyx_k__TRUE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__TRUE),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__Terminate,<sp/>__pyx_k__Terminate,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__Terminate),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__Time,<sp/>__pyx_k__Time,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__Time),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__Write,<sp/>__pyx_k__Write,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__Write),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__WriteShort,<sp/>__pyx_k__WriteShort,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__WriteShort),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__WriteSysEx,<sp/>__pyx_k__WriteSysEx,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__WriteSysEx),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s____main__,<sp/>__pyx_k____main__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k____main__),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s____test__,<sp/>__pyx_k____test__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k____test__),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s____version__,<sp/>__pyx_k____version__,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k____version__),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s___aborted,<sp/>__pyx_k___aborted,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___aborted),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s___check_open,<sp/>__pyx_k___check_open,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k___check_open),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__array,<sp/>__pyx_k__array,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__array),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__buffersize,<sp/>__pyx_k__buffersize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__buffersize),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__data1,<sp/>__pyx_k__data1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__data1),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__data2,<sp/>__pyx_k__data2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__data2),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__debug,<sp/>__pyx_k__debug,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__debug),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__i,<sp/>__pyx_k__i,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__i),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__input,<sp/>__pyx_k__input,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__input),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__interf,<sp/>__pyx_k__interf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__interf),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__latency,<sp/>__pyx_k__latency,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__latency),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__message,<sp/>__pyx_k__message,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__message),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__midi,<sp/>__pyx_k__midi,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__midi),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__msg,<sp/>__pyx_k__msg,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__msg),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__name,<sp/>__pyx_k__name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__name),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__opened,<sp/>__pyx_k__opened,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__opened),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__output,<sp/>__pyx_k__output,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__output),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__range,<sp/>__pyx_k__range,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__range),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__status,<sp/>__pyx_k__status,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__status),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__timestamp,<sp/>__pyx_k__timestamp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__timestamp),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__tostring,<sp/>__pyx_k__tostring,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__tostring),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/>{&amp;__pyx_n_s__when,<sp/>__pyx_k__when,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(__pyx_k__when),<sp/>0,<sp/>0,<sp/>1,<sp/>1},</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="3939"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_InitCachedBuiltins(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/>__pyx_builtin_Exception<sp/>=<sp/>__Pyx_GetName(__pyx_b,<sp/>__pyx_n_s__Exception);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_builtin_Exception)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>236;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/>__pyx_builtin_IndexError<sp/>=<sp/>__Pyx_GetName(__pyx_b,<sp/>__pyx_n_s__IndexError);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_builtin_IndexError)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>318;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/>__pyx_builtin_range<sp/>=<sp/>__Pyx_GetName(__pyx_b,<sp/>__pyx_n_s__range);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_builtin_range)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>320;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="3947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"></highlight></codeline>
<codeline lineno="3949"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_InitGlobals(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_InitStrings(__pyx_string_tab)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/>__pyx_int_0<sp/>=<sp/>PyInt_FromLong(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/>__pyx_int_1<sp/>=<sp/>PyInt_FromLong(1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/>__pyx_int_8<sp/>=<sp/>PyInt_FromLong(8);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_8))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/>__pyx_int_16<sp/>=<sp/>PyInt_FromLong(16);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_16))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/>__pyx_int_0x1<sp/>=<sp/>PyInt_FromLong(0x1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/>__pyx_int_0x2<sp/>=<sp/>PyInt_FromLong(0x2);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/>__pyx_int_0x4<sp/>=<sp/>PyInt_FromLong(0x4);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x4))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/>__pyx_int_0x8<sp/>=<sp/>PyInt_FromLong(0x8);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x8))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/>__pyx_int_0x10<sp/>=<sp/>PyInt_FromLong(0x10);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x10))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/>__pyx_int_0x20<sp/>=<sp/>PyInt_FromLong(0x20);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x20))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/>__pyx_int_0x30<sp/>=<sp/>PyInt_FromLong(0x30);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x30))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/>__pyx_int_0x40<sp/>=<sp/>PyInt_FromLong(0x40);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x40))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/>__pyx_int_0x7F<sp/>=<sp/>PyInt_FromLong(0x7F);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x7F))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/>__pyx_int_0x80<sp/>=<sp/>PyInt_FromLong(0x80);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x80))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/>__pyx_int_0xFF<sp/>=<sp/>PyInt_FromLong(0xFF);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0xFF))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/>__pyx_int_1024<sp/>=<sp/>PyInt_FromLong(1024);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_1024))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/>__pyx_int_4096<sp/>=<sp/>PyInt_FromLong(4096);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_4096))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/>__pyx_int_0x100<sp/>=<sp/>PyInt_FromLong(0x100);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x100))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/>__pyx_int_0x200<sp/>=<sp/>PyInt_FromLong(0x200);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x200))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/>__pyx_int_0x300<sp/>=<sp/>PyInt_FromLong(0x300);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x300))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/>__pyx_int_0x400<sp/>=<sp/>PyInt_FromLong(0x400);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x400))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/>__pyx_int_0x800<sp/>=<sp/>PyInt_FromLong(0x800);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x800))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/>__pyx_int_0x1000<sp/>=<sp/>PyInt_FromLong(0x1000);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x1000))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/>__pyx_int_0x2000<sp/>=<sp/>PyInt_FromLong(0x2000);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x2000))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/>__pyx_int_0x4000<sp/>=<sp/>PyInt_FromLong(0x4000);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x4000))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/>__pyx_int_0x8000<sp/>=<sp/>PyInt_FromLong(0x8000);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x8000))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/>__pyx_int_0xFF00<sp/>=<sp/>PyInt_FromLong(0xFF00);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0xFF00))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/>__pyx_int_0x10000<sp/>=<sp/>PyInt_FromLong(0x10000);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0x10000))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/>__pyx_int_0xFF0000<sp/>=<sp/>PyInt_FromLong(0xFF0000);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_int_0xFF0000))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="3983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"></highlight></codeline>
<codeline lineno="3985"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal">PyMODINIT_FUNC<sp/>init_pyportmidi(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3987"><highlight class="normal">PyMODINIT_FUNC<sp/>init_pyportmidi(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3989"><highlight class="normal">PyMODINIT_FUNC<sp/>PyInit__pyportmidi(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*proto*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3990"><highlight class="normal">PyMODINIT_FUNC<sp/>PyInit__pyportmidi(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3992"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_2<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/>PyObject<sp/>*__pyx_t_3<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>CYTHON_REFNANNY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>__pyx_refnanny<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/>__Pyx_RefNanny<sp/>=<sp/>__Pyx_RefNannyImportAPI(</highlight><highlight class="stringliteral">&quot;refnanny&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__Pyx_RefNanny)<sp/>{</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__Pyx_RefNanny<sp/>=<sp/>__Pyx_RefNannyImportAPI(</highlight><highlight class="stringliteral">&quot;Cython.Runtime.refnanny&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__Pyx_RefNanny)</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_FatalError(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>import<sp/>&apos;refnanny&apos;<sp/>module&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/>__pyx_refnanny<sp/>=<sp/>__Pyx_RefNanny-&gt;SetupContext(</highlight><highlight class="stringliteral">&quot;PyMODINIT_FUNC<sp/>PyInit__pyportmidi(void)&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>__FILE__);</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/>__pyx_init_filenames();</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/>__pyx_empty_tuple<sp/>=<sp/>PyTuple_New(0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_empty_tuple))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/>__pyx_empty_bytes<sp/>=<sp/>PyString_FromStringAndSize(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_empty_bytes))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/>__pyx_empty_bytes<sp/>=<sp/>PyBytes_FromStringAndSize(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_empty_bytes))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Library<sp/>function<sp/>declarations<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Threads<sp/>initialization<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4016"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(__PYX_FORCE_INIT_THREADS)<sp/>&amp;&amp;<sp/>__PYX_FORCE_INIT_THREADS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>WITH_THREAD<sp/></highlight><highlight class="comment">/*<sp/>Python<sp/>build<sp/>with<sp/>threading<sp/>support?<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/>PyEval_InitThreads();</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4020"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Module<sp/>creation<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4022"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/>__pyx_m<sp/>=<sp/>Py_InitModule4(__Pyx_NAMESTR(</highlight><highlight class="stringliteral">&quot;_pyportmidi&quot;</highlight><highlight class="normal">),<sp/>__pyx_methods,<sp/>0,<sp/>0,<sp/>PYTHON_API_VERSION);</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/>__pyx_m<sp/>=<sp/>PyModule_Create(&amp;__pyx_moduledef);</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_m)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/>Py_INCREF(__pyx_m);</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/>__pyx_b<sp/>=<sp/>PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME));</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_b)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetAttrString(__pyx_m,<sp/></highlight><highlight class="stringliteral">&quot;__builtins__&quot;</highlight><highlight class="normal">,<sp/>__pyx_b)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Initialize<sp/>various<sp/>global<sp/>constants<sp/>etc.<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_InitGlobals()<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_module_is_main__pyportmidi)<sp/>{</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetAttrString(__pyx_m,<sp/></highlight><highlight class="stringliteral">&quot;__name__&quot;</highlight><highlight class="normal">,<sp/>__pyx_n_s____main__)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;};</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Builtin<sp/>init<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(__Pyx_InitCachedBuiltins()<sp/>&lt;<sp/>0))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Global<sp/>init<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Function<sp/>export<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Type<sp/>init<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyType_Ready(&amp;__pyx_type_11_pyportmidi_Output)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>201;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetAttrString(__pyx_m,<sp/></highlight><highlight class="stringliteral">&quot;Output&quot;</highlight><highlight class="normal">,<sp/>(PyObject<sp/>*)&amp;__pyx_type_11_pyportmidi_Output)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>201;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/>__pyx_ptype_11_pyportmidi_Output<sp/>=<sp/>&amp;__pyx_type_11_pyportmidi_Output;</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyType_Ready(&amp;__pyx_type_11_pyportmidi_Input)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>394;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__Pyx_SetAttrString(__pyx_m,<sp/></highlight><highlight class="stringliteral">&quot;Input&quot;</highlight><highlight class="normal">,<sp/>(PyObject<sp/>*)&amp;__pyx_type_11_pyportmidi_Input)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>394;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/>__pyx_ptype_11_pyportmidi_Input<sp/>=<sp/>&amp;__pyx_type_11_pyportmidi_Input;</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Type<sp/>import<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Function<sp/>import<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*---<sp/>Execution<sp/>code<sp/>---*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4053"><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:7</highlight></codeline>
<codeline lineno="4055"><highlight class="comment"><sp/>*<sp/>#<sp/>harrison@media.mit.edu</highlight></codeline>
<codeline lineno="4056"><highlight class="comment"><sp/>*<sp/>#<sp/>written<sp/>in<sp/>Pyrex</highlight></codeline>
<codeline lineno="4057"><highlight class="comment"><sp/>*<sp/>__version__=&quot;0.07&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4058"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4059"><highlight class="comment"><sp/>*<sp/>import<sp/>array</highlight></codeline>
<codeline lineno="4060"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s____version__,<sp/>((PyObject<sp/>*)__pyx_kp_s_17))<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>7;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"></highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:9</highlight></codeline>
<codeline lineno="4064"><highlight class="comment"><sp/>*<sp/>__version__=&quot;0.07&quot;</highlight></codeline>
<codeline lineno="4065"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4066"><highlight class="comment"><sp/>*<sp/>import<sp/>array<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4067"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4068"><highlight class="comment"><sp/>*<sp/>#<sp/>CHANGES:</highlight></codeline>
<codeline lineno="4069"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>__Pyx_Import(((PyObject<sp/>*)__pyx_n_s__array),<sp/>0);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>9;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__array,<sp/>__pyx_t_1)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>9;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_1);<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"></highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:108</highlight></codeline>
<codeline lineno="4076"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>PtTimestamp<sp/>Pt_Time()</highlight></codeline>
<codeline lineno="4077"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4078"><highlight class="comment"><sp/>*<sp/>FILT_ACTIVE=0x1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4079"><highlight class="comment"><sp/>*<sp/>FILT_SYSEX=0x2</highlight></codeline>
<codeline lineno="4080"><highlight class="comment"><sp/>*<sp/>FILT_CLOCK=0x4</highlight></codeline>
<codeline lineno="4081"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_ACTIVE,<sp/>__pyx_int_0x1)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>108;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"></highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:109</highlight></codeline>
<codeline lineno="4085"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4086"><highlight class="comment"><sp/>*<sp/>FILT_ACTIVE=0x1</highlight></codeline>
<codeline lineno="4087"><highlight class="comment"><sp/>*<sp/>FILT_SYSEX=0x2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4088"><highlight class="comment"><sp/>*<sp/>FILT_CLOCK=0x4</highlight></codeline>
<codeline lineno="4089"><highlight class="comment"><sp/>*<sp/>FILT_PLAY=0x8</highlight></codeline>
<codeline lineno="4090"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_SYSEX,<sp/>__pyx_int_0x2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>109;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"></highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:110</highlight></codeline>
<codeline lineno="4094"><highlight class="comment"><sp/>*<sp/>FILT_ACTIVE=0x1</highlight></codeline>
<codeline lineno="4095"><highlight class="comment"><sp/>*<sp/>FILT_SYSEX=0x2</highlight></codeline>
<codeline lineno="4096"><highlight class="comment"><sp/>*<sp/>FILT_CLOCK=0x4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4097"><highlight class="comment"><sp/>*<sp/>FILT_PLAY=0x8</highlight></codeline>
<codeline lineno="4098"><highlight class="comment"><sp/>*<sp/>FILT_F9=0x10</highlight></codeline>
<codeline lineno="4099"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_CLOCK,<sp/>__pyx_int_0x4)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>110;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"></highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:111</highlight></codeline>
<codeline lineno="4103"><highlight class="comment"><sp/>*<sp/>FILT_SYSEX=0x2</highlight></codeline>
<codeline lineno="4104"><highlight class="comment"><sp/>*<sp/>FILT_CLOCK=0x4</highlight></codeline>
<codeline lineno="4105"><highlight class="comment"><sp/>*<sp/>FILT_PLAY=0x8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4106"><highlight class="comment"><sp/>*<sp/>FILT_F9=0x10</highlight></codeline>
<codeline lineno="4107"><highlight class="comment"><sp/>*<sp/>FILT_TICK=0x10</highlight></codeline>
<codeline lineno="4108"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_PLAY,<sp/>__pyx_int_0x8)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>111;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"></highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:112</highlight></codeline>
<codeline lineno="4112"><highlight class="comment"><sp/>*<sp/>FILT_CLOCK=0x4</highlight></codeline>
<codeline lineno="4113"><highlight class="comment"><sp/>*<sp/>FILT_PLAY=0x8</highlight></codeline>
<codeline lineno="4114"><highlight class="comment"><sp/>*<sp/>FILT_F9=0x10<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4115"><highlight class="comment"><sp/>*<sp/>FILT_TICK=0x10</highlight></codeline>
<codeline lineno="4116"><highlight class="comment"><sp/>*<sp/>FILT_FD=0x20</highlight></codeline>
<codeline lineno="4117"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_F9,<sp/>__pyx_int_0x10)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>112;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"></highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:113</highlight></codeline>
<codeline lineno="4121"><highlight class="comment"><sp/>*<sp/>FILT_PLAY=0x8</highlight></codeline>
<codeline lineno="4122"><highlight class="comment"><sp/>*<sp/>FILT_F9=0x10</highlight></codeline>
<codeline lineno="4123"><highlight class="comment"><sp/>*<sp/>FILT_TICK=0x10<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4124"><highlight class="comment"><sp/>*<sp/>FILT_FD=0x20</highlight></codeline>
<codeline lineno="4125"><highlight class="comment"><sp/>*<sp/>FILT_UNDEFINED=0x30</highlight></codeline>
<codeline lineno="4126"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_TICK,<sp/>__pyx_int_0x10)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>113;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"></highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:114</highlight></codeline>
<codeline lineno="4130"><highlight class="comment"><sp/>*<sp/>FILT_F9=0x10</highlight></codeline>
<codeline lineno="4131"><highlight class="comment"><sp/>*<sp/>FILT_TICK=0x10</highlight></codeline>
<codeline lineno="4132"><highlight class="comment"><sp/>*<sp/>FILT_FD=0x20<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4133"><highlight class="comment"><sp/>*<sp/>FILT_UNDEFINED=0x30</highlight></codeline>
<codeline lineno="4134"><highlight class="comment"><sp/>*<sp/>FILT_RESET=0x40</highlight></codeline>
<codeline lineno="4135"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_FD,<sp/>__pyx_int_0x20)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>114;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"></highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:115</highlight></codeline>
<codeline lineno="4139"><highlight class="comment"><sp/>*<sp/>FILT_TICK=0x10</highlight></codeline>
<codeline lineno="4140"><highlight class="comment"><sp/>*<sp/>FILT_FD=0x20</highlight></codeline>
<codeline lineno="4141"><highlight class="comment"><sp/>*<sp/>FILT_UNDEFINED=0x30<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4142"><highlight class="comment"><sp/>*<sp/>FILT_RESET=0x40</highlight></codeline>
<codeline lineno="4143"><highlight class="comment"><sp/>*<sp/>FILT_REALTIME=0x7F</highlight></codeline>
<codeline lineno="4144"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_UNDEFINED,<sp/>__pyx_int_0x30)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>115;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"></highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:116</highlight></codeline>
<codeline lineno="4148"><highlight class="comment"><sp/>*<sp/>FILT_FD=0x20</highlight></codeline>
<codeline lineno="4149"><highlight class="comment"><sp/>*<sp/>FILT_UNDEFINED=0x30</highlight></codeline>
<codeline lineno="4150"><highlight class="comment"><sp/>*<sp/>FILT_RESET=0x40<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4151"><highlight class="comment"><sp/>*<sp/>FILT_REALTIME=0x7F</highlight></codeline>
<codeline lineno="4152"><highlight class="comment"><sp/>*<sp/>FILT_NOTE=0x80</highlight></codeline>
<codeline lineno="4153"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_RESET,<sp/>__pyx_int_0x40)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>116;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"></highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:117</highlight></codeline>
<codeline lineno="4157"><highlight class="comment"><sp/>*<sp/>FILT_UNDEFINED=0x30</highlight></codeline>
<codeline lineno="4158"><highlight class="comment"><sp/>*<sp/>FILT_RESET=0x40</highlight></codeline>
<codeline lineno="4159"><highlight class="comment"><sp/>*<sp/>FILT_REALTIME=0x7F<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4160"><highlight class="comment"><sp/>*<sp/>FILT_NOTE=0x80</highlight></codeline>
<codeline lineno="4161"><highlight class="comment"><sp/>*<sp/>FILT_CHANNEL_AFTERTOUCH=0x100</highlight></codeline>
<codeline lineno="4162"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_REALTIME,<sp/>__pyx_int_0x7F)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>117;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"></highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:118</highlight></codeline>
<codeline lineno="4166"><highlight class="comment"><sp/>*<sp/>FILT_RESET=0x40</highlight></codeline>
<codeline lineno="4167"><highlight class="comment"><sp/>*<sp/>FILT_REALTIME=0x7F</highlight></codeline>
<codeline lineno="4168"><highlight class="comment"><sp/>*<sp/>FILT_NOTE=0x80<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4169"><highlight class="comment"><sp/>*<sp/>FILT_CHANNEL_AFTERTOUCH=0x100</highlight></codeline>
<codeline lineno="4170"><highlight class="comment"><sp/>*<sp/>FILT_POLY_AFTERTOUCH=0x200</highlight></codeline>
<codeline lineno="4171"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_NOTE,<sp/>__pyx_int_0x80)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>118;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"></highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:119</highlight></codeline>
<codeline lineno="4175"><highlight class="comment"><sp/>*<sp/>FILT_REALTIME=0x7F</highlight></codeline>
<codeline lineno="4176"><highlight class="comment"><sp/>*<sp/>FILT_NOTE=0x80</highlight></codeline>
<codeline lineno="4177"><highlight class="comment"><sp/>*<sp/>FILT_CHANNEL_AFTERTOUCH=0x100<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4178"><highlight class="comment"><sp/>*<sp/>FILT_POLY_AFTERTOUCH=0x200</highlight></codeline>
<codeline lineno="4179"><highlight class="comment"><sp/>*<sp/>FILT_AFTERTOUCH=0x300</highlight></codeline>
<codeline lineno="4180"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s_18,<sp/>__pyx_int_0x100)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>119;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"></highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:120</highlight></codeline>
<codeline lineno="4184"><highlight class="comment"><sp/>*<sp/>FILT_NOTE=0x80</highlight></codeline>
<codeline lineno="4185"><highlight class="comment"><sp/>*<sp/>FILT_CHANNEL_AFTERTOUCH=0x100</highlight></codeline>
<codeline lineno="4186"><highlight class="comment"><sp/>*<sp/>FILT_POLY_AFTERTOUCH=0x200<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4187"><highlight class="comment"><sp/>*<sp/>FILT_AFTERTOUCH=0x300</highlight></codeline>
<codeline lineno="4188"><highlight class="comment"><sp/>*<sp/>FILT_PROGRAM=0x400</highlight></codeline>
<codeline lineno="4189"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s_19,<sp/>__pyx_int_0x200)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>120;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"></highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:121</highlight></codeline>
<codeline lineno="4193"><highlight class="comment"><sp/>*<sp/>FILT_CHANNEL_AFTERTOUCH=0x100</highlight></codeline>
<codeline lineno="4194"><highlight class="comment"><sp/>*<sp/>FILT_POLY_AFTERTOUCH=0x200</highlight></codeline>
<codeline lineno="4195"><highlight class="comment"><sp/>*<sp/>FILT_AFTERTOUCH=0x300<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4196"><highlight class="comment"><sp/>*<sp/>FILT_PROGRAM=0x400</highlight></codeline>
<codeline lineno="4197"><highlight class="comment"><sp/>*<sp/>FILT_CONTROL=0x800</highlight></codeline>
<codeline lineno="4198"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_AFTERTOUCH,<sp/>__pyx_int_0x300)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>121;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"></highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:122</highlight></codeline>
<codeline lineno="4202"><highlight class="comment"><sp/>*<sp/>FILT_POLY_AFTERTOUCH=0x200</highlight></codeline>
<codeline lineno="4203"><highlight class="comment"><sp/>*<sp/>FILT_AFTERTOUCH=0x300</highlight></codeline>
<codeline lineno="4204"><highlight class="comment"><sp/>*<sp/>FILT_PROGRAM=0x400<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4205"><highlight class="comment"><sp/>*<sp/>FILT_CONTROL=0x800</highlight></codeline>
<codeline lineno="4206"><highlight class="comment"><sp/>*<sp/>FILT_PITCHBEND=0x1000</highlight></codeline>
<codeline lineno="4207"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_PROGRAM,<sp/>__pyx_int_0x400)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>122;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"></highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:123</highlight></codeline>
<codeline lineno="4211"><highlight class="comment"><sp/>*<sp/>FILT_AFTERTOUCH=0x300</highlight></codeline>
<codeline lineno="4212"><highlight class="comment"><sp/>*<sp/>FILT_PROGRAM=0x400</highlight></codeline>
<codeline lineno="4213"><highlight class="comment"><sp/>*<sp/>FILT_CONTROL=0x800<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4214"><highlight class="comment"><sp/>*<sp/>FILT_PITCHBEND=0x1000</highlight></codeline>
<codeline lineno="4215"><highlight class="comment"><sp/>*<sp/>FILT_MTC=0x2000</highlight></codeline>
<codeline lineno="4216"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_CONTROL,<sp/>__pyx_int_0x800)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>123;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"></highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:124</highlight></codeline>
<codeline lineno="4220"><highlight class="comment"><sp/>*<sp/>FILT_PROGRAM=0x400</highlight></codeline>
<codeline lineno="4221"><highlight class="comment"><sp/>*<sp/>FILT_CONTROL=0x800</highlight></codeline>
<codeline lineno="4222"><highlight class="comment"><sp/>*<sp/>FILT_PITCHBEND=0x1000<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4223"><highlight class="comment"><sp/>*<sp/>FILT_MTC=0x2000</highlight></codeline>
<codeline lineno="4224"><highlight class="comment"><sp/>*<sp/>FILT_SONG_POSITION=0x4000</highlight></codeline>
<codeline lineno="4225"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_PITCHBEND,<sp/>__pyx_int_0x1000)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>124;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"></highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:125</highlight></codeline>
<codeline lineno="4229"><highlight class="comment"><sp/>*<sp/>FILT_CONTROL=0x800</highlight></codeline>
<codeline lineno="4230"><highlight class="comment"><sp/>*<sp/>FILT_PITCHBEND=0x1000</highlight></codeline>
<codeline lineno="4231"><highlight class="comment"><sp/>*<sp/>FILT_MTC=0x2000<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4232"><highlight class="comment"><sp/>*<sp/>FILT_SONG_POSITION=0x4000</highlight></codeline>
<codeline lineno="4233"><highlight class="comment"><sp/>*<sp/>FILT_SONG_SELECT=0x8000</highlight></codeline>
<codeline lineno="4234"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_MTC,<sp/>__pyx_int_0x2000)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>125;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"></highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:126</highlight></codeline>
<codeline lineno="4238"><highlight class="comment"><sp/>*<sp/>FILT_PITCHBEND=0x1000</highlight></codeline>
<codeline lineno="4239"><highlight class="comment"><sp/>*<sp/>FILT_MTC=0x2000</highlight></codeline>
<codeline lineno="4240"><highlight class="comment"><sp/>*<sp/>FILT_SONG_POSITION=0x4000<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4241"><highlight class="comment"><sp/>*<sp/>FILT_SONG_SELECT=0x8000</highlight></codeline>
<codeline lineno="4242"><highlight class="comment"><sp/>*<sp/>FILT_TUNE=0x10000</highlight></codeline>
<codeline lineno="4243"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_SONG_POSITION,<sp/>__pyx_int_0x4000)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>126;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:127</highlight></codeline>
<codeline lineno="4247"><highlight class="comment"><sp/>*<sp/>FILT_MTC=0x2000</highlight></codeline>
<codeline lineno="4248"><highlight class="comment"><sp/>*<sp/>FILT_SONG_POSITION=0x4000</highlight></codeline>
<codeline lineno="4249"><highlight class="comment"><sp/>*<sp/>FILT_SONG_SELECT=0x8000<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4250"><highlight class="comment"><sp/>*<sp/>FILT_TUNE=0x10000</highlight></codeline>
<codeline lineno="4251"><highlight class="comment"><sp/>*<sp/>FALSE=0</highlight></codeline>
<codeline lineno="4252"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_SONG_SELECT,<sp/>__pyx_int_0x8000)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>127;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:128</highlight></codeline>
<codeline lineno="4256"><highlight class="comment"><sp/>*<sp/>FILT_SONG_POSITION=0x4000</highlight></codeline>
<codeline lineno="4257"><highlight class="comment"><sp/>*<sp/>FILT_SONG_SELECT=0x8000</highlight></codeline>
<codeline lineno="4258"><highlight class="comment"><sp/>*<sp/>FILT_TUNE=0x10000<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4259"><highlight class="comment"><sp/>*<sp/>FALSE=0</highlight></codeline>
<codeline lineno="4260"><highlight class="comment"><sp/>*<sp/>TRUE=1</highlight></codeline>
<codeline lineno="4261"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FILT_TUNE,<sp/>__pyx_int_0x10000)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>128;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:129</highlight></codeline>
<codeline lineno="4265"><highlight class="comment"><sp/>*<sp/>FILT_SONG_SELECT=0x8000</highlight></codeline>
<codeline lineno="4266"><highlight class="comment"><sp/>*<sp/>FILT_TUNE=0x10000</highlight></codeline>
<codeline lineno="4267"><highlight class="comment"><sp/>*<sp/>FALSE=0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4268"><highlight class="comment"><sp/>*<sp/>TRUE=1</highlight></codeline>
<codeline lineno="4269"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4270"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__FALSE,<sp/>__pyx_int_0)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>129;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:130</highlight></codeline>
<codeline lineno="4274"><highlight class="comment"><sp/>*<sp/>FILT_TUNE=0x10000</highlight></codeline>
<codeline lineno="4275"><highlight class="comment"><sp/>*<sp/>FALSE=0</highlight></codeline>
<codeline lineno="4276"><highlight class="comment"><sp/>*<sp/>TRUE=1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4277"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4278"><highlight class="comment"><sp/>*<sp/>def<sp/>Initialize():</highlight></codeline>
<codeline lineno="4279"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s__TRUE,<sp/>__pyx_int_1)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>130;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"></highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;/Users/rene/dev/portmedia/portmedia/portmidi/trunk/pm_python/pyportmidi/_pyportmidi.pyx&quot;:1</highlight></codeline>
<codeline lineno="4283"><highlight class="comment"><sp/>*<sp/>#<sp/>pyPortMidi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</highlight></codeline>
<codeline lineno="4284"><highlight class="comment"><sp/>*<sp/>#<sp/>Python<sp/>bindings<sp/>for<sp/>PortMidi</highlight></codeline>
<codeline lineno="4285"><highlight class="comment"><sp/>*<sp/>#<sp/>John<sp/>Harrison</highlight></codeline>
<codeline lineno="4286"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/>__pyx_t_1<sp/>=<sp/>PyDict_New();<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_1))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(((PyObject<sp/>*)__pyx_t_1));</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Initialize);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_2,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_20),<sp/>__pyx_t_3)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Terminate);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_21),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__GetDeviceInfo);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_2,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_22),<sp/>__pyx_t_3)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Time);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_23),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__GetErrorText);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_2,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_24),<sp/>__pyx_t_3)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Channel);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_25),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Output);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_t_2,<sp/>__pyx_n_s___check_open);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_26),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Output);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_t_2,<sp/>__pyx_n_s__Close);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_27),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Output);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_t_2,<sp/>__pyx_n_s__Abort);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_28),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Output);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_t_2,<sp/>__pyx_n_s__Write);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_29),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Output);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_t_2,<sp/>__pyx_n_s__WriteShort);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_30),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Output);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_t_2,<sp/>__pyx_n_s__WriteSysEx);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_31),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Input);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_t_2,<sp/>__pyx_n_s___check_open);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_32),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Input);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_t_2,<sp/>__pyx_n_s__Close);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_33),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Input);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_t_2,<sp/>__pyx_n_s__SetFilter);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_34),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Input);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_t_2,<sp/>__pyx_n_s__SetChannelMask);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_35),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Input);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_t_2,<sp/>__pyx_n_s__Poll);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_36),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>PyObject_GetAttr(__pyx_m,<sp/>__pyx_n_s__Input);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_2))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/>__pyx_t_3<sp/>=<sp/>PyObject_GetAttr(__pyx_t_2,<sp/>__pyx_n_s__Read);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!__pyx_t_3))<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/>__pyx_t_2<sp/>=<sp/>__Pyx_GetAttrString(__pyx_t_3,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/>__Pyx_GOTREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_3);<sp/>__pyx_t_3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItem(__pyx_t_1,<sp/>((PyObject<sp/>*)__pyx_kp_u_37),<sp/>__pyx_t_2)<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(__pyx_t_2);<sp/>__pyx_t_2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttr(__pyx_m,<sp/>__pyx_n_s____test__,<sp/>((PyObject<sp/>*)__pyx_t_1))<sp/>&lt;<sp/>0)<sp/>{__pyx_filename<sp/>=<sp/>__pyx_f[0];<sp/>__pyx_lineno<sp/>=<sp/>1;<sp/>__pyx_clineno<sp/>=<sp/>__LINE__;<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L1_error;}</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/>__Pyx_DECREF(((PyObject<sp/>*)__pyx_t_1));<sp/>__pyx_t_1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>__pyx_L0;</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/>__pyx_L1_error:;</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_1);</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_2);</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/>__Pyx_XDECREF(__pyx_t_3);</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_m)<sp/>{</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_AddTraceback(</highlight><highlight class="stringliteral">&quot;init<sp/>_pyportmidi&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(__pyx_m);<sp/>__pyx_m<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyErr_Occurred())<sp/>{</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_ImportError,<sp/></highlight><highlight class="stringliteral">&quot;init<sp/>_pyportmidi&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/>__pyx_L0:;</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/>__Pyx_RefNannyFinishContext();</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__pyx_m;</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"></highlight></codeline>
<codeline lineno="4473"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__pyx_filenames[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;_pyportmidi.pyx&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4475"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"></highlight></codeline>
<codeline lineno="4477"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Runtime<sp/>support<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4478"><highlight class="normal"></highlight></codeline>
<codeline lineno="4479"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__pyx_init_filenames(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/>__pyx_f<sp/>=<sp/>__pyx_filenames;</highlight></codeline>
<codeline lineno="4481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"></highlight></codeline>
<codeline lineno="4483"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseDoubleKeywordsError(</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func_name,</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>kw_name)</highlight></codeline>
<codeline lineno="4486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>got<sp/>multiple<sp/>values<sp/>for<sp/>keyword<sp/>argument<sp/>&apos;%U&apos;&quot;</highlight><highlight class="normal">,<sp/>func_name,<sp/>kw_name);</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>got<sp/>multiple<sp/>values<sp/>for<sp/>keyword<sp/>argument<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>func_name,</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_AS_STRING(kw_name));</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"></highlight></codeline>
<codeline lineno="4496"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_RaiseArgtupleInvalid(</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func_name,</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exact,</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_min,</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_max,</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_found)</highlight></codeline>
<codeline lineno="4502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_expected;</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*number,<sp/>*more_or_less;</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"></highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_found<sp/>&lt;<sp/>num_min)<sp/>{</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_expected<sp/>=<sp/>num_min;</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>more_or_less<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;at<sp/>least&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_expected<sp/>=<sp/>num_max;</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>more_or_less<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;at<sp/>most&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exact)<sp/>{</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>more_or_less<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;exactly&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/>number<sp/>=<sp/>(num_expected<sp/>==<sp/>1)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>takes<sp/>%s<sp/>%d<sp/>positional<sp/>argument%s<sp/>(%d<sp/>given)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>takes<sp/>%s<sp/>%zd<sp/>positional<sp/>argument%s<sp/>(%zd<sp/>given)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_name,<sp/>more_or_less,<sp/>num_expected,<sp/>number,<sp/>num_found);</highlight></codeline>
<codeline lineno="4524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"></highlight></codeline>
<codeline lineno="4526"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_ParseOptionalKeywords(</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*kwds,</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>**argnames[],</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*kwds2,</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*values[],</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>num_pos_args,</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>function_name)</highlight></codeline>
<codeline lineno="4533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<ref refid="structdict__struct_1a906ac1c2d1ef832872d21a370fd889b2" kindref="member">key</ref><sp/>=<sp/>0,<sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject***<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject***<sp/>first_kw_arg<sp/>=<sp/>argnames<sp/>+<sp/>num_pos_args;</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"></highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(PyDict_Next(kwds,<sp/>&amp;pos,<sp/>&amp;key,<sp/>&amp;<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>first_kw_arg;</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*name<sp/>&amp;&amp;<sp/>(**name<sp/>!=<sp/>key))<sp/>name++;</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*name)<sp/>{</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[name-argnames]<sp/>=<sp/><ref refid="structdict__struct_1a8f0a429176b1c1a0eabb9e1e73d228a1" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!PyString_CheckExact(key))<sp/>&amp;&amp;<sp/>unlikely(!PyString_Check(key)))<sp/>{</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!PyUnicode_CheckExact(key))<sp/>&amp;&amp;<sp/>unlikely(!PyUnicode_Check(key)))<sp/>{</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid_keyword_type;</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(name<sp/>=<sp/>first_kw_arg;<sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;<sp/>name++)<sp/>{</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyUnicode_GET_SIZE(**name)<sp/>==<sp/>PyUnicode_GET_SIZE(key)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_Compare(**name,<sp/>key)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyString_GET_SIZE(**name)<sp/>==<sp/>PyString_GET_SIZE(key)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_PyString_Eq(**name,<sp/>key))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*name)<sp/>{</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[name-argnames]<sp/>=<sp/><ref refid="structdict__struct_1a8f0a429176b1c1a0eabb9e1e73d228a1" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unexpected<sp/>keyword<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(name=argnames;<sp/>name<sp/>!=<sp/>first_kw_arg;<sp/>name++)<sp/>{</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(**name<sp/>==<sp/>key)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>arg_passed_twice;</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyUnicode_GET_SIZE(**name)<sp/>==<sp/>PyUnicode_GET_SIZE(key)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyUnicode_Compare(**name,<sp/>key)<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>arg_passed_twice;</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyString_GET_SIZE(**name)<sp/>==<sp/>PyString_GET_SIZE(key)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_PyString_Eq(**name,<sp/>key))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>arg_passed_twice;</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwds2)<sp/>{</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(PyDict_SetItem(kwds2,<sp/>key,<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid_keyword;</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4585"><highlight class="normal">arg_passed_twice:</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_RaiseDoubleKeywordsError(function_name,<sp/>**name);</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="4588"><highlight class="normal">invalid_keyword_type:</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>keywords<sp/>must<sp/>be<sp/>strings&quot;</highlight><highlight class="normal">,<sp/>function_name);</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="4592"><highlight class="normal">invalid_keyword:</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>got<sp/>an<sp/>unexpected<sp/>keyword<sp/>argument<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function_name,<sp/>PyString_AsString(key));</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>got<sp/>an<sp/>unexpected<sp/>keyword<sp/>argument<sp/>&apos;%U&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function_name,<sp/><ref refid="structdict__struct_1a906ac1c2d1ef832872d21a370fd889b2" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>:</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"></highlight></codeline>
<codeline lineno="4605"><highlight class="normal"></highlight></codeline>
<codeline lineno="4606"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_Import(PyObject<sp/>*name,<sp/>PyObject<sp/>*from_list)<sp/>{</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*__import__<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*empty_list<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*module<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*global_dict<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*empty_dict<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*list;</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/>__import__<sp/>=<sp/>__Pyx_GetAttrString(__pyx_b,<sp/></highlight><highlight class="stringliteral">&quot;__import__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__import__)</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from_list)</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/>from_list;</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_list<sp/>=<sp/>PyList_New(0);</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!empty_list)</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/>empty_list;</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/>global_dict<sp/>=<sp/>PyModule_GetDict(__pyx_m);</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!global_dict)</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/>empty_dict<sp/>=<sp/>PyDict_New();</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!empty_dict)</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/>module<sp/>=<sp/>PyObject_CallFunctionObjArgs(__import__,</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/>global_dict,<sp/>empty_dict,<sp/>list,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>:</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(empty_list);</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(__import__);</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(empty_dict);</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>module;</highlight></codeline>
<codeline lineno="4637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"></highlight></codeline>
<codeline lineno="4639"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_PyInt_to_py_PmDeviceID(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref><sp/>neg_one<sp/>=<sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)<sp/>&lt;<sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val);</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromUnsignedLong((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val);</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val);</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>(sizeof(PmDeviceID)<sp/>&gt;<sp/>sizeof(long))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromUnsignedLongLong((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)val);</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromLongLong((PY_LONG_LONG)val);</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"></highlight></codeline>
<codeline lineno="4657"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref><sp/>__Pyx_PyInt_from_py_PmDeviceID(PyObject*<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref><sp/>neg_one<sp/>=<sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char))<sp/>{</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)__Pyx_PyInt_AsUnsignedChar(x);</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)__Pyx_PyInt_AsSignedChar(x);</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)__Pyx_PyInt_AsUnsignedShort(x);</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)__Pyx_PyInt_AsSignedShort(x);</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)__Pyx_PyInt_AsUnsignedInt(x);</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)__Pyx_PyInt_AsSignedInt(x);</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)__Pyx_PyInt_AsUnsignedLong(x);</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)__Pyx_PyInt_AsSignedLong(x);</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PY_LONG_LONG))<sp/>{</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)__Pyx_PyInt_AsUnsignedLongLong(x);</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)__Pyx_PyInt_AsSignedLongLong(x);</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)<sp/>&gt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/><sp/>__int32<sp/>ILP64<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)__Pyx_PyInt_AsUnsignedInt(x);</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)__Pyx_PyInt_AsSignedInt(x);</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;PmDeviceID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref>)-1;</highlight></codeline>
<codeline lineno="4696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"></highlight></codeline>
<codeline lineno="4698"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_PyInt_to_py_PtTimestamp(<ref refid="porttime_8h_1afae5a66584458fb7e0e9ace7f200a7a3" kindref="member">PtTimestamp</ref><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="porttime_8h_1afae5a66584458fb7e0e9ace7f200a7a3" kindref="member">PtTimestamp</ref><sp/>neg_one<sp/>=<sp/>(<ref refid="porttime_8h_1afae5a66584458fb7e0e9ace7f200a7a3" kindref="member">PtTimestamp</ref>)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="porttime_8h_1afae5a66584458fb7e0e9ace7f200a7a3" kindref="member">PtTimestamp</ref>)<sp/>&lt;<sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val);</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="porttime_8h_1afae5a66584458fb7e0e9ace7f200a7a3" kindref="member">PtTimestamp</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromUnsignedLong((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val);</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val);</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>(sizeof(PtTimestamp)<sp/>&gt;<sp/>sizeof(long))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromUnsignedLongLong((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)val);</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromLongLong((PY_LONG_LONG)val);</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"></highlight></codeline>
<codeline lineno="4716"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4717"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_GetStdout(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>=<sp/>PySys_GetObject((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;stdout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/>{</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_RuntimeError,<sp/></highlight><highlight class="stringliteral">&quot;lost<sp/>sys.stdout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="4723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"></highlight></codeline>
<codeline lineno="4725"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_Print(PyObject<sp/>*arg_tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newline)<sp/>{</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>v;</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"></highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(f<sp/>=<sp/>__Pyx_GetStdout()))</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>PyTuple_GET_SIZE(arg_tuple);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_SoftSpace(f,<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_WriteString(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>f)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>PyTuple_GET_ITEM(arg_tuple,<sp/>i);</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_WriteObject(v,<sp/>f,<sp/>Py_PRINT_RAW)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyString_Check(v))<sp/>{</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>PyString_AsString(v);</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>PyString_Size(v);</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isspace(Py_CHARMASK(s[len-1]))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[len-1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyFile_SoftSpace(f,<sp/>0);</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newline)<sp/>{</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_WriteString(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>f)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyFile_SoftSpace(f,<sp/>0);</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"></highlight></codeline>
<codeline lineno="4757"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>Python<sp/>3<sp/>has<sp/>a<sp/>print<sp/>function<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4758"><highlight class="normal"></highlight></codeline>
<codeline lineno="4759"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_Print(PyObject<sp/>*arg_tuple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newline)<sp/>{</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>kwargs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>end_string;</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_print)<sp/>{</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_print<sp/>=<sp/>__Pyx_GetAttrString(__pyx_b,<sp/></highlight><highlight class="stringliteral">&quot;print&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_print)</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newline)<sp/>{</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_print_kwargs)<sp/>{</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_print_kwargs<sp/>=<sp/>PyDict_New();</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__pyx_print_kwargs)</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_string<sp/>=<sp/>PyUnicode_FromStringAndSize(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!end_string)</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyDict_SetItemString(__pyx_print_kwargs,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">,<sp/>end_string)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(end_string);</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(end_string);</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs<sp/>=<sp/>__pyx_print_kwargs;</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyObject_Call(__pyx_print,<sp/>arg_tuple,<sp/>kwargs);</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(result);</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"></highlight></codeline>
<codeline lineno="4791"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4792"><highlight class="normal"></highlight></codeline>
<codeline lineno="4793"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4794"><highlight class="normal"></highlight></codeline>
<codeline lineno="4795"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PrintOne(PyObject<sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(f<sp/>=<sp/>__Pyx_GetStdout()))</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_SoftSpace(f,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_WriteString(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>f)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_WriteObject(o,<sp/>f,<sp/>Py_PRINT_RAW)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyFile_WriteString(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>f)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>line<sp/>below<sp/>is<sp/>just<sp/>to<sp/>avoid<sp/>compiler</highlight></codeline>
<codeline lineno="4809"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>compiler<sp/>warnings<sp/>about<sp/>unused<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__Pyx_Print(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="4811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"></highlight></codeline>
<codeline lineno="4813"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>Python<sp/>3<sp/>has<sp/>a<sp/>print<sp/>function<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4814"><highlight class="normal"></highlight></codeline>
<codeline lineno="4815"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PrintOne(PyObject<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>arg_tuple<sp/>=<sp/>PyTuple_New(1);</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(!arg_tuple))</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(o);</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(arg_tuple,<sp/>0,<sp/>o);</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>__Pyx_Print(arg_tuple,<sp/>1);</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(arg_tuple);</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="4825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"></highlight></codeline>
<codeline lineno="4827"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4828"><highlight class="normal"></highlight></codeline>
<codeline lineno="4829"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*__Pyx_GetName(PyObject<sp/>*dict,<sp/>PyObject<sp/>*name)<sp/>{</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*result;</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyObject_GetAttr(dict,<sp/>name);</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetObject(PyExc_NameError,<sp/>name);</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"></highlight></codeline>
<codeline lineno="4837"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_ErrRestore(PyObject<sp/>*<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,<sp/>PyObject<sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>,<sp/>PyObject<sp/>*tb)<sp/>{</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp_type,<sp/>*tmp_value,<sp/>*tmp_tb;</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/>PyThreadState<sp/>*tstate<sp/>=<sp/>PyThreadState_GET();</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"></highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_type<sp/>=<sp/>tstate-&gt;curexc_type;</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_value<sp/>=<sp/>tstate-&gt;curexc_value;</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_tb<sp/>=<sp/>tstate-&gt;curexc_traceback;</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_type<sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_value<sp/>=<sp/><ref refid="structdict__struct_1a8f0a429176b1c1a0eabb9e1e73d228a1" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_traceback<sp/>=<sp/>tb;</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_type);</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_value);</highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_tb);</highlight></codeline>
<codeline lineno="4850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"></highlight></codeline>
<codeline lineno="4852"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_ErrFetch(PyObject<sp/>**type,<sp/>PyObject<sp/>**value,<sp/>PyObject<sp/>**tb)<sp/>{</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/><sp/><sp/>PyThreadState<sp/>*tstate<sp/>=<sp/>PyThreadState_GET();</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/><sp/>*type<sp/>=<sp/>tstate-&gt;curexc_type;</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>tstate-&gt;curexc_value;</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/><sp/><sp/>*tb<sp/>=<sp/>tstate-&gt;curexc_traceback;</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"></highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><sp/><sp/>tstate-&gt;curexc_traceback<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"></highlight></codeline>
<codeline lineno="4863"><highlight class="normal"></highlight></codeline>
<codeline lineno="4864"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4865"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_Raise(PyObject<sp/>*type,<sp/>PyObject<sp/>*value,<sp/>PyObject<sp/>*tb)<sp/>{</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(type);</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(value);</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(tb);</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First,<sp/>check<sp/>the<sp/>traceback<sp/>argument,<sp/>replacing<sp/>None<sp/>with<sp/>NULL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tb<sp/>==<sp/>Py_None)<sp/>{</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tb);</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tb<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!PyTraceBack_Check(tb))<sp/>{</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raise:<sp/>arg<sp/>3<sp/>must<sp/>be<sp/>a<sp/>traceback<sp/>or<sp/>None&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_error;</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Next,<sp/>replace<sp/>a<sp/>missing<sp/>value<sp/>with<sp/>None<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>Py_None;</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(value);</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyClass_Check(type))</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyType_Check(type))</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Raising<sp/>an<sp/>instance.<sp/><sp/>The<sp/>value<sp/>should<sp/>be<sp/>a<sp/>dummy.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>!=<sp/>Py_None)<sp/>{</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;instance<sp/>exception<sp/>may<sp/>not<sp/>have<sp/>a<sp/>separate<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_error;</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Normalize<sp/>to<sp/>raise<sp/>&lt;class&gt;,<sp/>&lt;instance&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(value);</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyInstance_Check(type))<sp/>{</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>(PyObject*)<sp/>((PyInstanceObject*)<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>)-&gt;in_class;</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(type);</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raise:<sp/>exception<sp/>must<sp/>be<sp/>an<sp/>old-style<sp/>class<sp/>or<sp/>instance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_error;</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>(PyObject*)<sp/>Py_TYPE(type);</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(type);</highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyType_IsSubtype((PyTypeObject<sp/>*)type,<sp/>(PyTypeObject<sp/>*)PyExc_BaseException))<sp/>{</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raise:<sp/>exception<sp/>class<sp/>must<sp/>be<sp/>a<sp/>subclass<sp/>of<sp/>BaseException&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>raise_error;</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"></highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/><sp/><sp/>__Pyx_ErrRestore(type,<sp/>value,<sp/>tb);</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4923"><highlight class="normal">raise_error:</highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(value);</highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(type);</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(tb);</highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"></highlight></codeline>
<codeline lineno="4930"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>Python<sp/>3+<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4931"><highlight class="normal"></highlight></codeline>
<codeline lineno="4932"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_Raise(PyObject<sp/>*type,<sp/>PyObject<sp/>*value,<sp/>PyObject<sp/>*tb)<sp/>{</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tb<sp/>==<sp/>Py_None)<sp/>{</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tb<sp/>&amp;&amp;<sp/>!PyTraceBack_Check(tb))<sp/>{</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raise:<sp/>arg<sp/>3<sp/>must<sp/>be<sp/>a<sp/>traceback<sp/>or<sp/>None&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>Py_None)</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"></highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyExceptionInstance_Check(type))<sp/>{</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;instance<sp/>exception<sp/>may<sp/>not<sp/>have<sp/>a<sp/>separate<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>(PyObject*)<sp/>Py_TYPE(value);</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyExceptionClass_Check(type))<sp/>{</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raise:<sp/>exception<sp/>class<sp/>must<sp/>be<sp/>a<sp/>subclass<sp/>of<sp/>BaseException&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"></highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetObject(type,<sp/>value);</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"></highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tb)<sp/>{</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyThreadState<sp/>*tstate<sp/>=<sp/>PyThreadState_GET();</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>tmp_tb<sp/>=<sp/>tstate-&gt;curexc_traceback;</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tb<sp/>!=<sp/>tmp_tb)<sp/>{</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(tb);</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstate-&gt;curexc_traceback<sp/>=<sp/>tb;</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(tmp_tb);</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"></highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>:</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4973"><highlight class="normal"></highlight></codeline>
<codeline lineno="4974"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_PyInt_to_py_PmMessage(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref><sp/>neg_one<sp/>=<sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)<sp/>&lt;<sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val);</highlight></codeline>
<codeline lineno="4979"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromUnsignedLong((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val);</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val);</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>(sizeof(PmMessage)<sp/>&gt;<sp/>sizeof(long))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromUnsignedLongLong((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)val);</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromLongLong((PY_LONG_LONG)val);</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"></highlight></codeline>
<codeline lineno="4992"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/><ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref><sp/>__Pyx_PyInt_from_py_PmMessage(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref><sp/>neg_one<sp/>=<sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char))<sp/>{</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)__Pyx_PyInt_AsUnsignedChar(x);</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)__Pyx_PyInt_AsSignedChar(x);</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)__Pyx_PyInt_AsUnsignedShort(x);</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)__Pyx_PyInt_AsSignedShort(x);</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)__Pyx_PyInt_AsUnsignedInt(x);</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)__Pyx_PyInt_AsSignedInt(x);</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)__Pyx_PyInt_AsUnsignedLong(x);</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)__Pyx_PyInt_AsSignedLong(x);</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PY_LONG_LONG))<sp/>{</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)__Pyx_PyInt_AsUnsignedLongLong(x);</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)__Pyx_PyInt_AsSignedLongLong(x);</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)<sp/>&gt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/><sp/>__int32<sp/>ILP64<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)__Pyx_PyInt_AsUnsignedInt(x);</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)__Pyx_PyInt_AsSignedInt(x);</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;PmMessage&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)-1;</highlight></codeline>
<codeline lineno="5031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"></highlight></codeline>
<codeline lineno="5033"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>__Pyx_PyInt_from_py_PmTimestamp(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>neg_one<sp/>=<sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char))<sp/>{</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)__Pyx_PyInt_AsUnsignedChar(x);</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)__Pyx_PyInt_AsSignedChar(x);</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)__Pyx_PyInt_AsUnsignedShort(x);</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)__Pyx_PyInt_AsSignedShort(x);</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)__Pyx_PyInt_AsUnsignedInt(x);</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)__Pyx_PyInt_AsSignedInt(x);</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)__Pyx_PyInt_AsUnsignedLong(x);</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)__Pyx_PyInt_AsSignedLong(x);</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PY_LONG_LONG))<sp/>{</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)__Pyx_PyInt_AsUnsignedLongLong(x);</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)__Pyx_PyInt_AsSignedLongLong(x);</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)<sp/>&gt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/><sp/>__int32<sp/>ILP64<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)__Pyx_PyInt_AsUnsignedInt(x);</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)__Pyx_PyInt_AsSignedInt(x);</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;PmTimestamp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)-1;</highlight></codeline>
<codeline lineno="5072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"></highlight></codeline>
<codeline lineno="5074"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*__Pyx_PyInt_to_py_PmTimestamp(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>neg_one<sp/>=<sp/>(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)<sp/>&lt;<sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val);</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromUnsignedLong((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val);</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val);</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>(sizeof(PmTimestamp)<sp/>&gt;<sp/>sizeof(long))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromUnsignedLongLong((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)val);</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_FromLongLong((PY_LONG_LONG)val);</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5090"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"></highlight></codeline>
<codeline lineno="5092"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedChar(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>?</highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>unsigned<sp/>char&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>unsigned<sp/>char&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)__Pyx_PyInt_AsUnsignedLong(x);</highlight></codeline>
<codeline lineno="5109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"></highlight></codeline>
<codeline lineno="5111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedShort(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>?</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>unsigned<sp/>short&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>unsigned<sp/>short&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)__Pyx_PyInt_AsUnsignedLong(x);</highlight></codeline>
<codeline lineno="5128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"></highlight></codeline>
<codeline lineno="5130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedInt(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="5137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>?</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>unsigned<sp/>int&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>unsigned<sp/>int&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)__Pyx_PyInt_AsUnsignedLong(x);</highlight></codeline>
<codeline lineno="5147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"></highlight></codeline>
<codeline lineno="5149"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsChar(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(char)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>?</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>char&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>char&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="5166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"></highlight></codeline>
<codeline lineno="5168"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsShort(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(short)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>?</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>short&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>short&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="5185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"></highlight></codeline>
<codeline lineno="5187"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsInt(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>?</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>int&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>int&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="5204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"></highlight></codeline>
<codeline lineno="5206"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedChar(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>char)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>?</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>signed<sp/>char&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>signed<sp/>char&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)__Pyx_PyInt_AsSignedLong(x);</highlight></codeline>
<codeline lineno="5223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"></highlight></codeline>
<codeline lineno="5225"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedShort(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>short)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>?</highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>signed<sp/>short&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>signed<sp/>short&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)__Pyx_PyInt_AsSignedLong(x);</highlight></codeline>
<codeline lineno="5242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"></highlight></codeline>
<codeline lineno="5244"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedInt(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>{</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(x);</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unlikely(val<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>?</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>signed<sp/>int&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>signed<sp/>int&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)__Pyx_PyInt_AsSignedLong(x);</highlight></codeline>
<codeline lineno="5261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"></highlight></codeline>
<codeline lineno="5263"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsUnsignedLong(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>PyInt_AS_LONG(x);</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>unsigned<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)<sp/>{</highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(Py_SIZE(x)<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>unsigned<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsUnsignedLong(x);</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsLong(x);</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>__Pyx_PyNumber_Int(x);</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsUnsignedLong(tmp);</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"></highlight></codeline>
<codeline lineno="5298"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>__Pyx_PyInt_AsUnsignedLongLong(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>neg_one<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>PyInt_AS_LONG(x);</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>unsigned<sp/>PY_LONG_LONG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)-1;</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)val;</highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5311"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)<sp/>{</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(Py_SIZE(x)<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>unsigned<sp/>PY_LONG_LONG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)-1;</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsUnsignedLongLong(x);</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsLongLong(x);</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>val;</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>__Pyx_PyNumber_Int(x);</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)-1;</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsUnsignedLongLong(tmp);</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"></highlight></codeline>
<codeline lineno="5333"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsLong(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(long)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>PyInt_AS_LONG(x);</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5346"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)<sp/>{</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(Py_SIZE(x)<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsUnsignedLong(x);</highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsLong(x);</highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>__Pyx_PyNumber_Int(x);</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLong(tmp);</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"></highlight></codeline>
<codeline lineno="5368"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PY_LONG_LONG<sp/>__Pyx_PyInt_AsLongLong(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>neg_one<sp/>=<sp/>(PY_LONG_LONG)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>PyInt_AS_LONG(x);</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>PY_LONG_LONG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(PY_LONG_LONG)-1;</highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(PY_LONG_LONG)val;</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)<sp/>{</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(Py_SIZE(x)<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>PY_LONG_LONG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(PY_LONG_LONG)-1;</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsUnsignedLongLong(x);</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsLongLong(x);</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PY_LONG_LONG<sp/>val;</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>__Pyx_PyNumber_Int(x);</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(PY_LONG_LONG)-1;</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsLongLong(tmp);</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5402"><highlight class="normal"></highlight></codeline>
<codeline lineno="5403"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSignedLong(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>neg_one<sp/>=<sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>long)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5406"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>PyInt_AS_LONG(x);</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>signed<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5416"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="5418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)<sp/>{</highlight></codeline>
<codeline lineno="5419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(Py_SIZE(x)<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>signed<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsUnsignedLong(x);</highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsLong(x);</highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>__Pyx_PyNumber_Int(x);</highlight></codeline>
<codeline lineno="5431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsSignedLong(tmp);</highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5437"><highlight class="normal"></highlight></codeline>
<codeline lineno="5438"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>__Pyx_PyInt_AsSignedLongLong(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>neg_one<sp/>=<sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>PY_LONG_LONG)-1,<sp/>const_zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_unsigned<sp/>=<sp/>neg_one<sp/>&gt;<sp/>const_zero;</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyInt_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>PyInt_AS_LONG(x);</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned<sp/>&amp;&amp;<sp/>unlikely(val<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>signed<sp/>PY_LONG_LONG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>PY_LONG_LONG)-1;</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>PY_LONG_LONG)val;</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5451"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(PyLong_Check(x)))<sp/>{</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_unsigned)<sp/>{</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(Py_SIZE(x)<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>convert<sp/>negative<sp/>value<sp/>to<sp/>signed<sp/>PY_LONG_LONG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>PY_LONG_LONG)-1;</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsUnsignedLongLong(x);</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyLong_AsLongLong(x);</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>val;</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*tmp<sp/>=<sp/>__Pyx_PyNumber_Int(x);</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/>PY_LONG_LONG)-1;</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>__Pyx_PyInt_AsSignedLongLong(tmp);</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(tmp);</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"></highlight></codeline>
<codeline lineno="5473"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5474"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;frameobject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5475"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;traceback.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5476"><highlight class="normal"></highlight></codeline>
<codeline lineno="5477"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__Pyx_AddTraceback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*funcname)<sp/>{</highlight></codeline>
<codeline lineno="5478"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*py_srcfile<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*py_funcname<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*py_globals<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5481"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCodeObject<sp/>*py_code<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/><sp/><sp/>PyFrameObject<sp/>*py_frame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5483"><highlight class="normal"></highlight></codeline>
<codeline lineno="5484"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/><sp/><sp/>py_srcfile<sp/>=<sp/>PyString_FromString(__pyx_filename);</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5487"><highlight class="normal"><sp/><sp/><sp/><sp/>py_srcfile<sp/>=<sp/>PyUnicode_FromString(__pyx_filename);</highlight></codeline>
<codeline lineno="5488"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_srcfile)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__pyx_clineno)<sp/>{</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname<sp/>=<sp/>PyString_FromFormat(<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>(%s:%d)&quot;</highlight><highlight class="normal">,<sp/>funcname,<sp/>__pyx_cfilenm,<sp/>__pyx_clineno);</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname<sp/>=<sp/>PyUnicode_FromFormat(<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>(%s:%d)&quot;</highlight><highlight class="normal">,<sp/>funcname,<sp/>__pyx_cfilenm,<sp/>__pyx_clineno);</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5498"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname<sp/>=<sp/>PyString_FromString(funcname);</highlight></codeline>
<codeline lineno="5500"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname<sp/>=<sp/>PyUnicode_FromString(funcname);</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_funcname)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/><sp/><sp/>py_globals<sp/>=<sp/>PyModule_GetDict(__pyx_m);</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_globals)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/><sp/><sp/>py_code<sp/>=<sp/>PyCode_New(</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*int<sp/>argcount,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*int<sp/>kwonlyargcount,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*int<sp/>nlocals,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*int<sp/>stacksize,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*int<sp/>flags,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_bytes,<sp/></highlight><highlight class="comment">/*PyObject<sp/>*code,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*consts,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*names,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*varnames,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*freevars,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_tuple,<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*cellvars,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_srcfile,<sp/><sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*filename,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_funcname,<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*name,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_lineno,<sp/><sp/><sp/></highlight><highlight class="comment">/*int<sp/>firstlineno,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pyx_empty_bytes<sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*lnotab*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_code)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/>py_frame<sp/>=<sp/>PyFrame_New(</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyThreadState_GET(),<sp/></highlight><highlight class="comment">/*PyThreadState<sp/>*tstate,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_code,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*PyCodeObject<sp/>*code,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_globals,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*globals,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*PyObject<sp/>*locals*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_frame)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/><sp/><sp/>py_frame-&gt;f_lineno<sp/>=<sp/>__pyx_lineno;</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTraceBack_Here(py_frame);</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>:</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(py_srcfile);</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(py_funcname);</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(py_code);</highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(py_frame);</highlight></codeline>
<codeline lineno="5541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"></highlight></codeline>
<codeline lineno="5543"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_InitStrings(__Pyx_StringTabEntry<sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t-&gt;p)<sp/>{</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;is_unicode)<sp/>{</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyUnicode_DecodeUTF8(t-&gt;s,<sp/>t-&gt;n<sp/>-<sp/>1,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;intern)<sp/>{</highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyString_InternFromString(t-&gt;s);</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyString_FromStringAndSize(t-&gt;s,<sp/>t-&gt;n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else<sp/><sp/></highlight><highlight class="comment">/*<sp/>Python<sp/>3+<sp/>has<sp/>unicode<sp/>identifiers<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;is_unicode<sp/>|<sp/>t-&gt;is_str)<sp/>{</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;intern)<sp/>{</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyUnicode_InternFromString(t-&gt;s);</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;encoding)<sp/>{</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyUnicode_Decode(t-&gt;s,<sp/>t-&gt;n<sp/>-<sp/>1,<sp/>t-&gt;encoding,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyUnicode_FromStringAndSize(t-&gt;s,<sp/>t-&gt;n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*t-&gt;p<sp/>=<sp/>PyBytes_FromStringAndSize(t-&gt;s,<sp/>t-&gt;n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*t-&gt;p)</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5572"><highlight class="normal"></highlight></codeline>
<codeline lineno="5573"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Type<sp/>Conversion<sp/>Functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5574"><highlight class="normal"></highlight></codeline>
<codeline lineno="5575"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__Pyx_PyObject_IsTrue(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>Py_True)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((x<sp/>==<sp/>Py_False)<sp/>|<sp/>(x<sp/>==<sp/>Py_None))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_IsTrue(x);</highlight></codeline>
<codeline lineno="5579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"></highlight></codeline>
<codeline lineno="5581"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject*<sp/>__Pyx_PyNumber_Int(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/>PyNumberMethods<sp/>*<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/>PyObject<sp/>*res<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyInt_Check(x)<sp/>||<sp/>PyLong_Check(x))</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyLong_Check(x))</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Py_INCREF(x),<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"><sp/><sp/>m<sp/>=<sp/>Py_TYPE(x)-&gt;tp_as_number;</highlight></codeline>
<codeline lineno="5592"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&amp;&amp;<sp/>m-&gt;nb_int)<sp/>{</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>PyNumber_Int(x);</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&amp;&amp;<sp/>m-&gt;nb_long)<sp/>{</highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;long&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>PyNumber_Long(x);</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5601"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&amp;&amp;<sp/>m-&gt;nb_int)<sp/>{</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>PyNumber_Long(x);</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)<sp/>{</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyInt_Check(res)<sp/>&amp;&amp;<sp/>!PyLong_Check(res))<sp/>{</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyLong_Check(res))<sp/>{</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(PyExc_TypeError,</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;__%s__<sp/>returned<sp/>non-%s<sp/>(type<sp/>%.200s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/>name,<sp/>Py_TYPE(res)-&gt;tp_name);</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(res);</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyErr_Occurred())<sp/>{</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;an<sp/>integer<sp/>is<sp/>required&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="5625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"></highlight></codeline>
<codeline lineno="5627"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>Py_ssize_t<sp/>__Pyx_PyIndex_AsSsize_t(PyObject*<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/>Py_ssize_t<sp/>ival;</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/>PyObject*<sp/>x<sp/>=<sp/>PyNumber_Index(b);</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!x)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/>ival<sp/>=<sp/>PyInt_AsSsize_t(x);</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/>Py_DECREF(x);</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ival;</highlight></codeline>
<codeline lineno="5634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"></highlight></codeline>
<codeline lineno="5636"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/>PyObject<sp/>*<sp/>__Pyx_PyInt_FromSize_t(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ival)<sp/>{</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x02050000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ival<sp/>&lt;=<sp/>LONG_MAX)</highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)ival);</highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytes<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;ival;</highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>little<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)*(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;one;</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_PyLong_FromByteArray(bytes,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">),<sp/>little,<sp/>0);</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromSize_t(ival);</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"></highlight></codeline>
<codeline lineno="5650"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CYTHON_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>__Pyx_PyInt_AsSize_t(PyObject*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG<sp/>val<sp/>=<sp/>__Pyx_PyInt_AsUnsignedLongLong(x);</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)-1<sp/>&amp;&amp;<sp/>PyErr_Occurred()))<sp/>{</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(val<sp/>!=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>PY_LONG_LONG)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)val))<sp/>{</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_OverflowError,</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value<sp/>too<sp/>large<sp/>to<sp/>convert<sp/>to<sp/>size_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)-1;</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)val;</highlight></codeline>
<codeline lineno="5660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"></highlight></codeline>
<codeline lineno="5662"><highlight class="normal"></highlight></codeline>
<codeline lineno="5663"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Py_PYTHON_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/_pyportmidi.c"/>
  </compounddef>
</doxygen>
