<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="subband_8c" kind="file" language="C++">
    <compoundname>subband.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="twolame_8h" local="yes">twolame.h</includes>
    <includes refid="twolame_2libtwolame_2common_8h" local="yes">common.h</includes>
    <includes refid="twolame_2libtwolame_2mem_8h" local="yes">mem.h</includes>
    <includes refid="bitbuffer_8h" local="yes">bitbuffer.h</includes>
    <includes refid="enwindow_8h" local="yes">enwindow.h</includes>
    <includes refid="twolame_2libtwolame_2subband_8h" local="yes">subband.h</includes>
    <incdepgraph>
      <node id="32627">
        <label>enwindow.h</label>
        <link refid="enwindow_8h"/>
      </node>
      <node id="32622">
        <label>twolame.h</label>
        <link refid="twolame_8h"/>
      </node>
      <node id="32618">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/subband.c</label>
        <link refid="subband.c"/>
        <childnode refid="32619" relation="include">
        </childnode>
        <childnode refid="32620" relation="include">
        </childnode>
        <childnode refid="32621" relation="include">
        </childnode>
        <childnode refid="32622" relation="include">
        </childnode>
        <childnode refid="32623" relation="include">
        </childnode>
        <childnode refid="32625" relation="include">
        </childnode>
        <childnode refid="32626" relation="include">
        </childnode>
        <childnode refid="32627" relation="include">
        </childnode>
        <childnode refid="32628" relation="include">
        </childnode>
      </node>
      <node id="32628">
        <label>subband.h</label>
        <link refid="twolame_2libtwolame_2subband_8h"/>
      </node>
      <node id="32620">
        <label>string.h</label>
      </node>
      <node id="32621">
        <label>math.h</label>
      </node>
      <node id="32626">
        <label>bitbuffer.h</label>
        <link refid="bitbuffer_8h"/>
        <childnode refid="32623" relation="include">
        </childnode>
      </node>
      <node id="32624">
        <label>config.h</label>
      </node>
      <node id="32619">
        <label>stdio.h</label>
      </node>
      <node id="32623">
        <label>common.h</label>
        <link refid="twolame_2libtwolame_2common_8h"/>
        <childnode refid="32624" relation="include">
        </childnode>
        <childnode refid="32622" relation="include">
        </childnode>
      </node>
      <node id="32625">
        <label>mem.h</label>
        <link refid="twolame_2libtwolame_2mem_8h"/>
        <childnode refid="32623" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="subband_8c_1a9b824e12e4ca784324b7e7110426886e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void create_dct_matrix</definition>
        <argsstring>(FLOAT filter[16][32])</argsstring>
        <name>create_dct_matrix</name>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>filter</declname>
          <array>[16][32]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/subband.c" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/subband.c" bodystart="38" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="subband_8c_1a5974cc2dc7a98d8c5792af192f64b625" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int init_subband</definition>
        <argsstring>(subband_mem *smem)</argsstring>
        <name>init_subband</name>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ac99684183e3f1354e87dea82c4b6cc7f" kindref="member">subband_mem</ref> *</type>
          <declname>smem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/subband.c" line="52" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/subband.c" bodystart="52" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="subband_8c_1a6c7b27818759c23c7cfed2295778ca9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void window_filter_subband</definition>
        <argsstring>(subband_mem *smem, short *pBuffer, int ch, FLOAT s[SBLIMIT])</argsstring>
        <name>window_filter_subband</name>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ac99684183e3f1354e87dea82c4b6cc7f" kindref="member">subband_mem</ref> *</type>
          <declname>smem</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>pBuffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>s</declname>
          <array>[SBLIMIT]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/subband.c" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/subband.c" bodystart="68" bodyend="160"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>TwoLAME:<sp/>an<sp/>optimized<sp/>MPEG<sp/>Audio<sp/>Layer<sp/>Two<sp/>encoder</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2001-2004<sp/>Michael<sp/>Cheng</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004-2006<sp/>The<sp/>TwoLAME<sp/>Project</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>$Id$</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_8h" kindref="compound">twolame.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2mem_8h" kindref="compound">mem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bitbuffer_8h" kindref="compound">bitbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="enwindow_8h" kindref="compound">enwindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2subband_8h" kindref="compound">subband.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_dct_matrix(<ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/><ref refid="mm_8c_1a2719b8cbe8dc1a5064a418269c72e528" kindref="member">filter</ref>[16][32])</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>32;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((filter[i][k]<sp/>=<sp/>1e9<sp/>*<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>((<ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref>)<sp/>((2<sp/>*<sp/>i<sp/>+<sp/>1)<sp/>*<sp/>k<sp/>*<sp/><ref refid="twolame_2libtwolame_2common_8h_1aea0d51d1f5018040fd8c6fa2abd1e291" kindref="member">PI64</ref>)))<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modf(filter[i][k]<sp/>+<sp/>0.5,<sp/>&amp;filter[i][k]);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modf(filter[i][k]<sp/>-<sp/>0.5,<sp/>&amp;filter[i][k]);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>*=<sp/>1<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-9;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="twolame_2libtwolame_2subband_8h_1a5974cc2dc7a98d8c5792af192f64b625" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="subband_8c_1a5974cc2dc7a98d8c5792af192f64b625" kindref="member">init_subband</ref>(<ref refid="structsubband__mem__struct" kindref="compound">subband_mem</ref><sp/>*<sp/>smem)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>smem-&gt;<ref refid="structsubband__mem__struct_1af474759ad43b96ba7af66a985de4e7c9" kindref="member">off</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>smem-&gt;<ref refid="structsubband__mem__struct_1af474759ad43b96ba7af66a985de4e7c9" kindref="member">off</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>smem-&gt;<ref refid="structsubband__mem__struct_1a10972335a4744f4175a5e549ce02de61" kindref="member">half</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>smem-&gt;<ref refid="structsubband__mem__struct_1a10972335a4744f4175a5e549ce02de61" kindref="member">half</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>512;<sp/>j++)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smem-&gt;<ref refid="structsubband__mem__struct_1ac17a1e96743f74198a3163771a8e8994" kindref="member">x</ref>[i][j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>create_dct_matrix(smem-&gt;<ref refid="structsubband__mem__struct_1a7fcc6bbca3e1e6f301c5b790e2ad60bb" kindref="member">m</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="twolame_2libtwolame_2subband_8h_1a6c7b27818759c23c7cfed2295778ca9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="subband_8c_1a6c7b27818759c23c7cfed2295778ca9b" kindref="member">window_filter_subband</ref>(<ref refid="structsubband__mem__struct" kindref="compound">subband_mem</ref><sp/>*<sp/>smem,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*pBuffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch,<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>[<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>])</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pa,<sp/>pb,<sp/>pc,<sp/>pd,<sp/>pe,<sp/>pf,<sp/>pg,<sp/>ph;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>*dp,<sp/>*dp2;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>*pEnw;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>y[64];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>yprime[32];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>dp<sp/>=<sp/>smem-&gt;<ref refid="structsubband__mem__struct_1ac17a1e96743f74198a3163771a8e8994" kindref="member">x</ref>[ch]<sp/>+<sp/>smem-&gt;<ref refid="structsubband__mem__struct_1af474759ad43b96ba7af66a985de4e7c9" kindref="member">off</ref>[ch]<sp/>+<sp/>smem-&gt;<ref refid="structsubband__mem__struct_1a10972335a4744f4175a5e549ce02de61" kindref="member">half</ref>[ch]<sp/>*<sp/>256;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>replace<sp/>32<sp/>oldest<sp/>samples<sp/>with<sp/>32<sp/>new<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dp[(31<sp/>-<sp/>i)<sp/>*<sp/>8]<sp/>=<sp/>(<ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref>)<sp/>pBuffer[i]<sp/>/<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1adb514fa86cb175ed5119e352a79ccea3" kindref="member">SCALE</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looks<sp/>like<sp/>&quot;school<sp/>example&quot;<sp/>but<sp/>does<sp/>faster<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>dp<sp/>=<sp/>(smem-&gt;<ref refid="structsubband__mem__struct_1ac17a1e96743f74198a3163771a8e8994" kindref="member">x</ref>[ch]<sp/>+<sp/>smem-&gt;<ref refid="structsubband__mem__struct_1a10972335a4744f4175a5e549ce02de61" kindref="member">half</ref>[ch]<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>pa<sp/>=<sp/>smem-&gt;<ref refid="structsubband__mem__struct_1af474759ad43b96ba7af66a985de4e7c9" kindref="member">off</ref>[ch];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>pb<sp/>=<sp/>(pa<sp/>+<sp/>1)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>pc<sp/>=<sp/>(pa<sp/>+<sp/>2)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>pd<sp/>=<sp/>(pa<sp/>+<sp/>3)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>pe<sp/>=<sp/>(pa<sp/>+<sp/>4)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>pf<sp/>=<sp/>(pa<sp/>+<sp/>5)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>pg<sp/>=<sp/>(pa<sp/>+<sp/>6)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>ph<sp/>=<sp/>(pa<sp/>+<sp/>7)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dp2<sp/>=<sp/>dp<sp/>+<sp/>i<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnw<sp/>=<sp/>enwindow<sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>dp2[pa]<sp/>*<sp/>pEnw[0];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dp2[pb]<sp/>*<sp/>pEnw[64];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dp2[pc]<sp/>*<sp/>pEnw[128];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dp2[pd]<sp/>*<sp/>pEnw[192];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dp2[pe]<sp/>*<sp/>pEnw[256];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dp2[pf]<sp/>*<sp/>pEnw[320];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dp2[pg]<sp/>*<sp/>pEnw[384];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dp2[ph]<sp/>*<sp/>pEnw[448];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>yprime[0]<sp/>=<sp/>y[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Michael<sp/>Chen&apos;s<sp/>dct<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>dp<sp/>=<sp/>smem-&gt;<ref refid="structsubband__mem__struct_1a10972335a4744f4175a5e549ce02de61" kindref="member">half</ref>[ch]<sp/>?<sp/>smem-&gt;<ref refid="structsubband__mem__struct_1ac17a1e96743f74198a3163771a8e8994" kindref="member">x</ref>[ch]<sp/>:<sp/>(smem-&gt;<ref refid="structsubband__mem__struct_1ac17a1e96743f74198a3163771a8e8994" kindref="member">x</ref>[ch]<sp/>+<sp/>256);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>pa<sp/>=<sp/>smem-&gt;<ref refid="structsubband__mem__struct_1a10972335a4744f4175a5e549ce02de61" kindref="member">half</ref>[ch]<sp/>?<sp/>(smem-&gt;<ref refid="structsubband__mem__struct_1af474759ad43b96ba7af66a985de4e7c9" kindref="member">off</ref>[ch]<sp/>+<sp/>1)<sp/>&amp;<sp/>7<sp/>:<sp/>smem-&gt;<ref refid="structsubband__mem__struct_1af474759ad43b96ba7af66a985de4e7c9" kindref="member">off</ref>[ch];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>pb<sp/>=<sp/>(pa<sp/>+<sp/>1)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>pc<sp/>=<sp/>(pa<sp/>+<sp/>2)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>pd<sp/>=<sp/>(pa<sp/>+<sp/>3)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>pe<sp/>=<sp/>(pa<sp/>+<sp/>4)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>pf<sp/>=<sp/>(pa<sp/>+<sp/>5)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>pg<sp/>=<sp/>(pa<sp/>+<sp/>6)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>ph<sp/>=<sp/>(pa<sp/>+<sp/>7)<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dp2<sp/>=<sp/>dp<sp/>+<sp/>i<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEnw<sp/>=<sp/>enwindow<sp/>+<sp/>i<sp/>+<sp/>32;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>dp2[pa]<sp/>*<sp/>pEnw[0];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dp2[pb]<sp/>*<sp/>pEnw[64];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dp2[pc]<sp/>*<sp/>pEnw[128];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dp2[pd]<sp/>*<sp/>pEnw[192];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dp2[pe]<sp/>*<sp/>pEnw[256];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dp2[pf]<sp/>*<sp/>pEnw[320];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dp2[pg]<sp/>*<sp/>pEnw[384];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>dp2[ph]<sp/>*<sp/>pEnw[448];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[i<sp/>+<sp/>32]<sp/>=<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1st<sp/>pass<sp/>on<sp/>Michael<sp/>Chen&apos;s<sp/>dct<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>17)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yprime[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>y[i<sp/>+<sp/>16]<sp/>+<sp/>y[16<sp/>-<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2nd<sp/>pass<sp/>on<sp/>Michael<sp/>Chen&apos;s<sp/>dct<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>17;<sp/>i<sp/>&lt;<sp/>32;<sp/>i++)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yprime[i]<sp/>=<sp/>y[i<sp/>+<sp/>16]<sp/>-<sp/>y[80<sp/>-<sp/>i];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>15;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>s0<sp/>=<sp/>0.0,<sp/>s1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>*mp<sp/>=<sp/>smem-&gt;<ref refid="structsubband__mem__struct_1a7fcc6bbca3e1e6f301c5b790e2ad60bb" kindref="member">m</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>*xinp<sp/>=<sp/>yprime;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>8;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s0<sp/>+=<sp/>*mp++<sp/>*<sp/>*xinp++;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>+=<sp/>*mp++<sp/>*<sp/>*xinp++;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s0<sp/>+=<sp/>*mp++<sp/>*<sp/>*xinp++;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>+=<sp/>*mp++<sp/>*<sp/>*xinp++;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>s0<sp/>+<sp/>s1;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>[31<sp/>-<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>s0<sp/>-<sp/>s1;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>smem-&gt;<ref refid="structsubband__mem__struct_1a10972335a4744f4175a5e549ce02de61" kindref="member">half</ref>[ch]<sp/>=<sp/>(smem-&gt;<ref refid="structsubband__mem__struct_1a10972335a4744f4175a5e549ce02de61" kindref="member">half</ref>[ch]<sp/>+<sp/>1)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(smem-&gt;<ref refid="structsubband__mem__struct_1a10972335a4744f4175a5e549ce02de61" kindref="member">half</ref>[ch]<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smem-&gt;<ref refid="structsubband__mem__struct_1af474759ad43b96ba7af66a985de4e7c9" kindref="member">off</ref>[ch]<sp/>=<sp/>(smem-&gt;<ref refid="structsubband__mem__struct_1af474759ad43b96ba7af66a985de4e7c9" kindref="member">off</ref>[ch]<sp/>+<sp/>7)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vim:ts=4:sw=4:nowrap:<sp/></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/subband.c"/>
  </compounddef>
</doxygen>
