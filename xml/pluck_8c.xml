<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pluck_8c" kind="file" language="C++">
    <compoundname>pluck.c</compoundname>
    <includes local="yes">stdio.h</includes>
    <includes local="yes">stdlib.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <includes refid="falloc_8h" local="yes">falloc.h</includes>
    <includes refid="cext_8h" local="yes">cext.h</includes>
    <includes refid="pluck_8h" local="yes">pluck.h</includes>
    <incdepgraph>
      <node id="17544">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c</label>
        <link refid="pluck.c"/>
        <childnode refid="17545" relation="include">
        </childnode>
        <childnode refid="17546" relation="include">
        </childnode>
        <childnode refid="17547" relation="include">
        </childnode>
        <childnode refid="17551" relation="include">
        </childnode>
        <childnode refid="17559" relation="include">
        </childnode>
        <childnode refid="17554" relation="include">
        </childnode>
        <childnode refid="17562" relation="include">
        </childnode>
      </node>
      <node id="17562">
        <label>pluck.h</label>
        <link refid="pluck_8h"/>
      </node>
      <node id="17546">
        <label>stdlib.h</label>
      </node>
      <node id="17549">
        <label>setjmp.h</label>
      </node>
      <node id="17559">
        <label>falloc.h</label>
        <link refid="falloc_8h"/>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17561" relation="include">
        </childnode>
      </node>
      <node id="17547">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="17546" relation="include">
        </childnode>
        <childnode refid="17545" relation="include">
        </childnode>
        <childnode refid="17548" relation="include">
        </childnode>
        <childnode refid="17549" relation="include">
        </childnode>
        <childnode refid="17550" relation="include">
        </childnode>
      </node>
      <node id="17558">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="17557">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="17556">
        <label>string.h</label>
      </node>
      <node id="17560">
        <label>cque.h</label>
        <link refid="cque_8h"/>
      </node>
      <node id="17551">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="17552" relation="include">
        </childnode>
        <childnode refid="17553" relation="include">
        </childnode>
      </node>
      <node id="17552">
        <label>math.h</label>
      </node>
      <node id="17555">
        <label>switches.h</label>
      </node>
      <node id="17553">
        <label>stdefs.h</label>
        <link refid="stdefs_8h"/>
        <childnode refid="17554" relation="include">
        </childnode>
      </node>
      <node id="17550">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="17548">
        <label>ctype.h</label>
      </node>
      <node id="17561">
        <label>debug.h</label>
        <link refid="libnyquist_2nyquist_2nyqsrc_2debug_8h"/>
      </node>
      <node id="17545">
        <label>stdio.h</label>
      </node>
      <node id="17554">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="17555" relation="include">
        </childnode>
        <childnode refid="17545" relation="include">
        </childnode>
        <childnode refid="17556" relation="include">
        </childnode>
        <childnode refid="17552" relation="include">
        </childnode>
        <childnode refid="17557" relation="include">
        </childnode>
        <childnode refid="17558" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structpluck__susp__struct" prot="public">pluck_susp_struct</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pluck_8c_1a1dbd686f69551b83691025eaae058539" prot="public" static="no">
        <name>MAXLENGTH</name>
        <initializer>20000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" line="34" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pluck_8c_1aeec735e942f81d5f1d4fb49662d134e7" prot="public" static="no">
        <type>struct <ref refid="structpluck__susp__struct" kindref="compound">pluck_susp_struct</ref></type>
        <definition>typedef struct pluck_susp_struct  pluck_susp_node</definition>
        <argsstring></argsstring>
        <name>pluck_susp_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" line="31" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pluck_8c_1a442389478825301c4bde20ddfeab973a" prot="public" static="no">
        <type>struct <ref refid="structpluck__susp__struct" kindref="compound">pluck_susp_struct</ref> *</type>
        <definition>typedef struct pluck_susp_struct * pluck_susp_type</definition>
        <argsstring></argsstring>
        <name>pluck_susp_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" line="31" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pluck_8c_1aa5785833187406901b3fea47635e00c1" prot="public" static="yes" mutable="no">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int rnext</definition>
        <argsstring></argsstring>
        <name>rnext</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" line="88" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pluck_8c_1a8db8c5044d205bd7c28bb59a8772f59f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void pluck_free</definition>
        <argsstring>(snd_susp_type a_susp)</argsstring>
        <name>pluck_free</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" line="12" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" bodystart="203" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="pluck_8c_1a38f4369a04dba312d0321e4369750fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long pluck_parameters</definition>
        <argsstring>(double hz, double sr, double final, double dur, double *stretch, double *cons, double *rho)</argsstring>
        <name>pluck_parameters</name>
        <param>
          <type>double</type>
          <declname>hz</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>final</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dur</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>stretch</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cons</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rho</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" line="36" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" bodystart="36" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="pluck_8c_1a220870728490c44718ae5b08a04eaadc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int krand</definition>
        <argsstring>()</argsstring>
        <name>krand</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="pluck_8c_1a5739fa66f79ada28e1ce961089eed35a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void pluck_initialize</definition>
        <argsstring>(sample_type *shiftreg, sample_type *array, long len, double cons)</argsstring>
        <name>pluck_initialize</name>
        <param>
          <type><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref> *</type>
          <declname>shiftreg</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" line="95" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" bodystart="95" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="pluck_8c_1aeac0d373ce79c07d9b073389b79d27f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void pluck__fetch</definition>
        <argsstring>(snd_susp_type a_susp, snd_list_type snd_list)</argsstring>
        <name>pluck__fetch</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" line="118" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" bodystart="118" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="pluck_8c_1a88bfea4e0f050917672c18a3368556f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void pluck_print_tree</definition>
        <argsstring>(snd_susp_type a_susp, int n)</argsstring>
        <name>pluck_print_tree</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" line="211" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="pluck_8c_1aadc6edc398e759d4577afbb265b64bf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type snd_make_pluck</definition>
        <argsstring>(rate_type sr, double hz, time_type t0, time_type d, double final_amp)</argsstring>
        <name>snd_make_pluck</name>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hz</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type>double</type>
          <declname>final_amp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" line="216" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" bodystart="216" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="pluck_8c_1a47cc30bb8f1d9a7547d3c51ef048c409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type snd_pluck</definition>
        <argsstring>(rate_type sr, double hz, time_type t0, time_type d, double final_amp)</argsstring>
        <name>snd_pluck</name>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hz</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type>double</type>
          <declname>final_amp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" line="255" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c" bodystart="255" bodyend="258"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>mips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sound_8h" kindref="compound">sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="falloc_8h" kindref="compound">falloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cext_8h" kindref="compound">cext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pluck_8h" kindref="compound">pluck.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pluck_8c_1a8db8c5044d205bd7c28bb59a8772f59f" kindref="member">pluck_free</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="structpluck__susp__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpluck__susp__struct" kindref="compound">pluck_susp_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="16" refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsnd__susp__struct" kindref="compound">snd_susp_node</ref><sp/><ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref>;</highlight></codeline>
<codeline lineno="17" refid="structpluck__susp__struct_1a6bbc830c3e3ab1482f5598c29593953b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structpluck__susp__struct_1a6bbc830c3e3ab1482f5598c29593953b" kindref="member">terminate_cnt</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structpluck__susp__struct_1aa168cd3a305b26ad68c8b214c9f0a11f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structpluck__susp__struct_1aa168cd3a305b26ad68c8b214c9f0a11f" kindref="member">stretch</ref>;</highlight></codeline>
<codeline lineno="20" refid="structpluck__susp__struct_1aa8bc9f8b2bd88c556f47661fe5073a5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structpluck__susp__struct_1aa8bc9f8b2bd88c556f47661fe5073a5d" kindref="member">cons</ref>;</highlight></codeline>
<codeline lineno="21" refid="structpluck__susp__struct_1a684f13eeaed04cd7428a8bcd6f1b9fa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structpluck__susp__struct_1a684f13eeaed04cd7428a8bcd6f1b9fa8" kindref="member">loss</ref>;</highlight></codeline>
<codeline lineno="22" refid="structpluck__susp__struct_1a83043371b4d760e9d17704949d5fe89d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structpluck__susp__struct_1a83043371b4d760e9d17704949d5fe89d" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="23" refid="structpluck__susp__struct_1ada8da23b1a57c20975b6a4ab486ccbfa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structpluck__susp__struct_1ada8da23b1a57c20975b6a4ab486ccbfa" kindref="member">x2</ref>;</highlight></codeline>
<codeline lineno="24" refid="structpluck__susp__struct_1a6c2f8a8b2cae4777e0c39d5f737f8412" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structpluck__susp__struct_1a6c2f8a8b2cae4777e0c39d5f737f8412" kindref="member">x3</ref>;</highlight></codeline>
<codeline lineno="25" refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<ref refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" kindref="member">shiftreg</ref>;</highlight></codeline>
<codeline lineno="26" refid="structpluck__susp__struct_1ac69bf68ba023bd9c52566e426945143c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<ref refid="structpluck__susp__struct_1ac69bf68ba023bd9c52566e426945143c" kindref="member">i1</ref>;</highlight></codeline>
<codeline lineno="27" refid="structpluck__susp__struct_1ace9701b6a6c10deee0bbf860b1ebd646" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<ref refid="structpluck__susp__struct_1ace9701b6a6c10deee0bbf860b1ebd646" kindref="member">i2</ref>;</highlight></codeline>
<codeline lineno="28" refid="structpluck__susp__struct_1aeff941aeb6f0a4191b5569e129ad50f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<ref refid="structpluck__susp__struct_1aeff941aeb6f0a4191b5569e129ad50f0" kindref="member">i3</ref>;</highlight></codeline>
<codeline lineno="29" refid="structpluck__susp__struct_1a8616f1ce208fcfdc23cc0153173bc940" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<ref refid="structpluck__susp__struct_1a8616f1ce208fcfdc23cc0153173bc940" kindref="member">i4</ref>;</highlight></codeline>
<codeline lineno="30" refid="structpluck__susp__struct_1afcee2cca761957cf0aa2a86c52b9bcf6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<ref refid="structpluck__susp__struct_1afcee2cca761957cf0aa2a86c52b9bcf6" kindref="member">endptr</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}<sp/><ref refid="pluck_8c_1aeec735e942f81d5f1d4fb49662d134e7" kindref="member">pluck_susp_node</ref>,<sp/>*<ref refid="pluck_8c_1a442389478825301c4bde20ddfeab973a" kindref="member">pluck_susp_type</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="pluck_8c_1a1dbd686f69551b83691025eaae058539" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAXLENGTH<sp/>20000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="pluck_8c_1a38f4369a04dba312d0321e4369750fcb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pluck_8c_1a38f4369a04dba312d0321e4369750fcb" kindref="member">pluck_parameters</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hz,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1a3c79b5a9ee81c3835b8de9b0d900d2de" kindref="member">dur</ref>,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="structpluck__susp__struct_1aa168cd3a305b26ad68c8b214c9f0a11f" kindref="member">stretch</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="structpluck__susp__struct_1aa8bc9f8b2bd88c556f47661fe5073a5d" kindref="member">cons</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rho)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/><ref refid="fftr4_8c_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref><sp/>*<sp/>(hz<sp/>/<sp/>sr);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>fabs(<ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(t));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>original<sp/>m4c<sp/>code<sp/>used<sp/>ratio<sp/>of<sp/>initial<sp/>amp<sp/>to<sp/>final<sp/>amp<sp/>in<sp/>dB</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>then<sp/>converted<sp/>to<sp/>a<sp/>ratio,<sp/>e.g.<sp/>you<sp/>specify<sp/>60<sp/>and<sp/>the<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameter<sp/>Final<sp/>is<sp/>1000.0.<sp/>This<sp/>is<sp/>counterintuitive<sp/>to<sp/>me<sp/>(RBD)</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>because<sp/>I<sp/>would<sp/>expect<sp/>the<sp/>value<sp/>to<sp/>be<sp/>-60dB<sp/>or<sp/>0.001.<sp/>That<sp/>is</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>what<sp/>I<sp/>implemented,<sp/>so<sp/>to<sp/>get<sp/>this<sp/>back<sp/>into<sp/>correspondence</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>m4c<sp/>algorithm,<sp/>I<sp/>take<sp/>the<sp/>NEGATIVE<sp/>log<sp/>to<sp/>get<sp/>lf,<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whereas<sp/>m4c<sp/>takes<sp/>the<sp/>positive<sp/>log:</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lf<sp/>=<sp/>-log(</highlight><highlight class="keyword">final</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tdecay<sp/>=<sp/>-lf<sp/>/<sp/>(hz<sp/>*<sp/>log(y));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structpluck__susp__struct_1a83043371b4d760e9d17704949d5fe89d" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hz<sp/>&lt;=<sp/>sr<sp/>/<sp/><ref refid="pluck_8c_1a1dbd686f69551b83691025eaae058539" kindref="member">MAXLENGTH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;pluck<sp/>hz<sp/>is<sp/>too<sp/>low&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hz<sp/>&gt;=<sp/>sr<sp/>/<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;pluck<sp/>hz<sp/>is<sp/>too<sp/>high&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>desired<sp/>decay<sp/>time<sp/>is<sp/>shorter<sp/>than<sp/>the<sp/>natural<sp/>decay<sp/>time,</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>then<sp/>introduce<sp/>a<sp/>loss<sp/>factor.<sp/><sp/>Otherwise,<sp/>stretch<sp/>note<sp/>out.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>st<sp/>=<sp/>hz<sp/>*<sp/><ref refid="seqread_8c_1a3c79b5a9ee81c3835b8de9b0d900d2de" kindref="member">dur</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dur<sp/>&lt;<sp/>tdecay)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*rho<sp/>=<sp/>exp(-lf<sp/>/<sp/>st)<sp/>/<sp/>y;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stretch<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*rho<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stretch<sp/>=<sp/>0.5<sp/>+<sp/>sqrt(0.25<sp/>-<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>-<sp/>exp(2<sp/>*<sp/>lf<sp/>*<sp/>(hz<sp/>-<sp/>sr)<sp/>/<sp/>(st<sp/>*<sp/>sr)))<sp/>/</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2<sp/>-<sp/>2<sp/>*<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(2<sp/>*<sp/>t)));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delay<sp/>line<sp/>length<sp/>is<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>((sr<sp/>/<sp/>hz)<sp/>-<sp/>*stretch<sp/>-<sp/>0.001);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tuning<sp/>constant<sp/>is<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(sr<sp/>/<sp/>hz)<sp/>-<sp/>len<sp/>-<sp/>*stretch;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>*cons<sp/>=<sp/>(1.0<sp/>-<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)<sp/>/<sp/>(1.0<sp/>+<sp/>x);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;internal<sp/>error:<sp/>pluck<sp/>delay<sp/>line<sp/>length<sp/>too<sp/>short&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structpluck__susp__struct_1a83043371b4d760e9d17704949d5fe89d" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rnext<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="89" refid="pluck_8c_1a220870728490c44718ae5b08a04eaadc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pluck_8c_1a220870728490c44718ae5b08a04eaadc" kindref="member">krand</ref>()</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>rnext<sp/>=<sp/>rnext<sp/>*<sp/>1103515245<sp/>+<sp/>12345;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rnext<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x7fff;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="pluck_8c_1a5739fa66f79ada28e1ce961089eed35a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pluck_8c_1a5739fa66f79ada28e1ce961089eed35a" kindref="member">pluck_initialize</ref>(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<ref refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" kindref="member">shiftreg</ref>,<sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*array,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structpluck__susp__struct_1aa8bc9f8b2bd88c556f47661fe5073a5d" kindref="member">cons</ref>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>suma<sp/>=<sp/>0.0F;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>avea;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>array[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>len;<sp/>k<sp/>&gt;<sp/>0;<sp/>k--,<sp/>array--)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>the<sp/>m4c<sp/>code<sp/>has<sp/>a<sp/>bug.<sp/>It<sp/>claims<sp/>to<sp/>filter</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>initial<sp/>values,<sp/>but<sp/>it<sp/>really<sp/>just<sp/>sets<sp/>the</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>to<sp/>+1<sp/>or<sp/>-1.<sp/>The<sp/>following<sp/>does<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thing<sp/>with<sp/>much<sp/>less<sp/>code:</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*array<sp/>=<sp/>(<ref refid="pluck_8c_1a220870728490c44718ae5b08a04eaadc" kindref="member">krand</ref>()<sp/>&amp;<sp/>2)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suma<sp/>+=<sp/>*array;<sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>sum<sp/>for<sp/>the<sp/>average<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>avea<sp/>=<sp/>suma<sp/>/<sp/><ref refid="structpluck__susp__struct_1a83043371b4d760e9d17704949d5fe89d" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>the<sp/>average<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>len<sp/>+<sp/>1;<sp/>k++)<sp/>shiftreg[k]<sp/>-=<sp/>avea;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>shiftreg[<ref refid="structpluck__susp__struct_1a83043371b4d760e9d17704949d5fe89d" kindref="member">len</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>shiftreg[len<sp/>+<sp/>1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="pluck_8c_1aeac0d373ce79c07d9b073389b79d27f5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pluck_8c_1aeac0d373ce79c07d9b073389b79d27f5" kindref="member">pluck__fetch</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>pluck_susp_type<sp/><ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="pluck_8c_1a442389478825301c4bde20ddfeab973a" kindref="member">pluck_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>samples<sp/>computed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>togo;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr_reg;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stretch_reg;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cons_reg;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>loss_reg;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2_reg;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x3_reg;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<sp/>i1_reg;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<sp/>i2_reg;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<sp/>i3_reg;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<sp/>i4_reg;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<sp/>endptr_reg;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aed8e636a68eb95ea3c7dc90189e78b43" kindref="member">falloc_sample_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;pluck__fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>=<sp/>out-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cnt<sp/>&lt;<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>compute<sp/>how<sp/>many<sp/>samples<sp/>to<sp/>generate<sp/>in<sp/>inner<sp/>loop:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>overflow<sp/>the<sp/>output<sp/>sample<sp/>block:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>togo<sp/>=<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref><sp/>-<sp/>cnt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>terminate<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structpluck__susp__struct_1a6bbc830c3e3ab1482f5598c29593953b" kindref="member">terminate_cnt</ref><sp/>!=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a6bbc830c3e3ab1482f5598c29593953b" kindref="member">terminate_cnt</ref><sp/>&lt;=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt<sp/>+<sp/>togo)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a6bbc830c3e3ab1482f5598c29593953b" kindref="member">terminate_cnt</ref><sp/>-<sp/>(susp-&gt;<ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>&lt;<sp/>0)<sp/>togo<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>avoids<sp/>rounding<sp/>errros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>togo;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>stretch_reg<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1aa168cd3a305b26ad68c8b214c9f0a11f" kindref="member">stretch</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>cons_reg<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1aa8bc9f8b2bd88c556f47661fe5073a5d" kindref="member">cons</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>loss_reg<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a684f13eeaed04cd7428a8bcd6f1b9fa8" kindref="member">loss</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>x2_reg<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1ada8da23b1a57c20975b6a4ab486ccbfa" kindref="member">x2</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>x3_reg<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a6c2f8a8b2cae4777e0c39d5f737f8412" kindref="member">x3</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>i1_reg<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1ac69bf68ba023bd9c52566e426945143c" kindref="member">i1</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>i2_reg<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1ace9701b6a6c10deee0bbf860b1ebd646" kindref="member">i2</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>i3_reg<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1aeff941aeb6f0a4191b5569e129ad50f0" kindref="member">i3</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>i4_reg<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a8616f1ce208fcfdc23cc0153173bc940" kindref="member">i4</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>endptr_reg<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1afcee2cca761957cf0aa2a86c52b9bcf6" kindref="member">endptr</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr_reg<sp/>=<sp/>out_ptr;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>inner<sp/>sample<sp/>computation<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>sum<sp/>=<sp/>(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((*i1_reg++<sp/>*<sp/>x2_reg)<sp/>+<sp/>(*i2_reg++<sp/>*<sp/>x3_reg)<sp/>+<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*i3_reg++<sp/>*<sp/>stretch_reg)<sp/>-<sp/>(*i4_reg++<sp/>*<sp/>cons_reg));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wrap<sp/>pointers<sp/>around<sp/>shift<sp/>register<sp/>if<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i1_reg<sp/>==<sp/>endptr_reg)<sp/>i1_reg<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" kindref="member">shiftreg</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i2_reg<sp/>==<sp/>endptr_reg)<sp/>i2_reg<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" kindref="member">shiftreg</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i3_reg<sp/>==<sp/>endptr_reg)<sp/>i3_reg<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" kindref="member">shiftreg</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i4_reg<sp/>==<sp/>endptr_reg)<sp/>i4_reg<sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" kindref="member">shiftreg</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>new<sp/>value<sp/>in<sp/>shift<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*i4_reg<sp/>=<sp/>(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref>)<sp/>(sum<sp/>*<sp/>loss_reg);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>deliver<sp/>sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ptr_reg++<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--n);<sp/></highlight><highlight class="comment">/*<sp/>inner<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1ac69bf68ba023bd9c52566e426945143c" kindref="member">i1</ref><sp/>=<sp/>i1_reg;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1ace9701b6a6c10deee0bbf860b1ebd646" kindref="member">i2</ref><sp/>=<sp/>i2_reg;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1aeff941aeb6f0a4191b5569e129ad50f0" kindref="member">i3</ref><sp/>=<sp/>i3_reg;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a8616f1ce208fcfdc23cc0153173bc940" kindref="member">i4</ref><sp/>=<sp/>i4_reg;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>termination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>cnt<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a64f075d27a7672293c0c8d657aa51647" kindref="member">snd_list_terminate</ref>(snd_list);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/>cnt;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+=<sp/>cnt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>pluck__fetch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="pluck_8c_1a8db8c5044d205bd7c28bb59a8772f59f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pluck_8c_1a8db8c5044d205bd7c28bb59a8772f59f" kindref="member">pluck_free</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>pluck_susp_type<sp/><ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="pluck_8c_1a442389478825301c4bde20ddfeab973a" kindref="member">pluck_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>free(susp-&gt;<ref refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" kindref="member">shiftreg</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a90be646acd537771c5401524877e0844" kindref="member">ffree_generic</ref>(susp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structpluck__susp__struct" kindref="compound">pluck_susp_node</ref>),<sp/></highlight><highlight class="stringliteral">&quot;pluck_free&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="pluck_8c_1a88bfea4e0f050917672c18a3368556f5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pluck_8c_1a88bfea4e0f050917672c18a3368556f5" kindref="member">pluck_print_tree</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="pluck_8h_1aadc6edc398e759d4577afbb265b64bf5" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="pluck_8c_1aadc6edc398e759d4577afbb265b64bf5" kindref="member">snd_make_pluck</ref>(<ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hz,<sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0,<sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>final_amp)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>pluck_susp_type<sp/><ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sr<sp/>specified<sp/>as<sp/>input<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>t0<sp/>specified<sp/>as<sp/>input<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>scale_factor<sp/>=<sp/>1.0F;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a187500f957dfc9510ad0c87c0c92e39e" kindref="member">falloc_generic</ref>(susp,<sp/><ref refid="structpluck__susp__struct" kindref="compound">pluck_susp_node</ref>,<sp/></highlight><highlight class="stringliteral">&quot;snd_make_pluck&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1aa168cd3a305b26ad68c8b214c9f0a11f" kindref="member">stretch</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1aa8bc9f8b2bd88c556f47661fe5073a5d" kindref="member">cons</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a684f13eeaed04cd7428a8bcd6f1b9fa8" kindref="member">loss</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a83043371b4d760e9d17704949d5fe89d" kindref="member">len</ref><sp/>=<sp/><ref refid="pluck_8c_1a38f4369a04dba312d0321e4369750fcb" kindref="member">pluck_parameters</ref>(hz,<sp/>sr,<sp/>final_amp,<sp/>d,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;susp-&gt;<ref refid="structpluck__susp__struct_1aa168cd3a305b26ad68c8b214c9f0a11f" kindref="member">stretch</ref>,<sp/>&amp;susp-&gt;<ref refid="structpluck__susp__struct_1aa8bc9f8b2bd88c556f47661fe5073a5d" kindref="member">cons</ref>,<sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;susp-&gt;<ref refid="structpluck__susp__struct_1a684f13eeaed04cd7428a8bcd6f1b9fa8" kindref="member">loss</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1ada8da23b1a57c20975b6a4ab486ccbfa" kindref="member">x2</ref><sp/>=<sp/>-susp-&gt;<ref refid="structpluck__susp__struct_1aa8bc9f8b2bd88c556f47661fe5073a5d" kindref="member">cons</ref><sp/>*<sp/>(susp-&gt;<ref refid="structpluck__susp__struct_1aa168cd3a305b26ad68c8b214c9f0a11f" kindref="member">stretch</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a6c2f8a8b2cae4777e0c39d5f737f8412" kindref="member">x3</ref><sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1aa8bc9f8b2bd88c556f47661fe5073a5d" kindref="member">cons</ref><sp/>*<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1aa168cd3a305b26ad68c8b214c9f0a11f" kindref="member">stretch</ref><sp/>-<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1aa168cd3a305b26ad68c8b214c9f0a11f" kindref="member">stretch</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" kindref="member">shiftreg</ref><sp/>=<sp/>(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*)<sp/>calloc<sp/>(susp-&gt;<ref refid="structpluck__susp__struct_1a83043371b4d760e9d17704949d5fe89d" kindref="member">len</ref><sp/>+<sp/>4,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref>));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1ac69bf68ba023bd9c52566e426945143c" kindref="member">i1</ref><sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" kindref="member">shiftreg</ref><sp/>+<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a83043371b4d760e9d17704949d5fe89d" kindref="member">len</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1ace9701b6a6c10deee0bbf860b1ebd646" kindref="member">i2</ref><sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" kindref="member">shiftreg</ref><sp/>+<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a83043371b4d760e9d17704949d5fe89d" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1aeff941aeb6f0a4191b5569e129ad50f0" kindref="member">i3</ref><sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" kindref="member">shiftreg</ref><sp/>+<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a83043371b4d760e9d17704949d5fe89d" kindref="member">len</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a8616f1ce208fcfdc23cc0153173bc940" kindref="member">i4</ref><sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" kindref="member">shiftreg</ref><sp/>+<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a83043371b4d760e9d17704949d5fe89d" kindref="member">len</ref><sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1afcee2cca761957cf0aa2a86c52b9bcf6" kindref="member">endptr</ref><sp/>=<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" kindref="member">shiftreg</ref><sp/>+<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a83043371b4d760e9d17704949d5fe89d" kindref="member">len</ref><sp/>+<sp/>2;<sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pluck_8c_1a5739fa66f79ada28e1ce961089eed35a" kindref="member">pluck_initialize</ref>(susp-&gt;<ref refid="structpluck__susp__struct_1a963ca97fda5c61c72337cef49b6ff282" kindref="member">shiftreg</ref>,<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1aeff941aeb6f0a4191b5569e129ad50f0" kindref="member">i3</ref>,<sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a83043371b4d760e9d17704949d5fe89d" kindref="member">len</ref>,<sp/>susp-&gt;<ref refid="structpluck__susp__struct_1aa8bc9f8b2bd88c556f47661fe5073a5d" kindref="member">cons</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref><sp/>=<sp/><ref refid="pluck_8c_1aeac0d373ce79c07d9b073389b79d27f5" kindref="member">pluck__fetch</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a6bbc830c3e3ab1482f5598c29593953b" kindref="member">terminate_cnt</ref><sp/>=<sp/><ref refid="sound_8c_1a5a66100a15d73003c5140f23d3587064" kindref="member">check_terminate_cnt</ref>(round((d)<sp/>*<sp/>sr));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>susp<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a39cc18ad890efb4f088c9d7636e3b5c0" kindref="member">free</ref><sp/>=<sp/><ref refid="pluck_8c_1a8db8c5044d205bd7c28bb59a8772f59f" kindref="member">pluck_free</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a89e4d9a7c1f50a9a0b4bca5ec1c253be" kindref="member">sr</ref><sp/>=<sp/>sr;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a5e783b62d30b458070fb80dc0e112594" kindref="member">t0</ref><sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a077478e200df3bc42489892597f15d47" kindref="member">mark</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a4403d10e525f61c551eaa74440ee6b7d" kindref="member">print_tree</ref><sp/>=<sp/><ref refid="pluck_8c_1a88bfea4e0f050917672c18a3368556f5" kindref="member">pluck_print_tree</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a4d5fa6ba6ea209e5159d06ea00320041" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pluck&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structpluck__susp__struct_1a0bf0187ba222ad63316166614b8370c5" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a11255fe781080fb7915f6ab9a5afc4ae" kindref="member">sound_create</ref>((<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)susp,<sp/>t0,<sp/>sr,<sp/>scale_factor);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="pluck_8h_1a47cc30bb8f1d9a7547d3c51ef048c409" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="pluck_8c_1a47cc30bb8f1d9a7547d3c51ef048c409" kindref="member">snd_pluck</ref>(<ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hz,<sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0,<sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>final_amp)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pluck_8c_1aadc6edc398e759d4577afbb265b64bf5" kindref="member">snd_make_pluck</ref>(sr,<sp/>hz,<sp/>t0,<sp/>d,<sp/>final_amp);</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/pluck.c"/>
  </compounddef>
</doxygen>
