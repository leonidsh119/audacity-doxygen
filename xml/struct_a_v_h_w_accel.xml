<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="struct_a_v_h_w_accel" kind="struct" language="C++" prot="public">
    <compoundname>AVHWAccel</compoundname>
    <includes refid="avcodec_8h" local="no">avcodec.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_a_v_h_w_accel_1a9cc735be128cb62ff4cb594d3e3bdb92" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* AVHWAccel::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Name of the hardware accelerated codec. The name is globally unique among encoders and among decoders (but an encoder and a decoder can share the same name). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3138" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_h_w_accel_1af962ad3e15697454ba312d1254e5a423" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__lavu__misc_1ga9a84bba4713dfced21a1a56163be1f48" kindref="member">AVMediaType</ref></type>
        <definition>enum AVMediaType AVHWAccel::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type of codec implemented by the hardware accelerator.</para><para>See AVMEDIA_TYPE_xxx </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3138" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_h_w_accel_1a3c93d40193e9178eb7408295c6c2b2f2" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__lavc__core_1gaadca229ad2c20e060a14fec08a5cc7ce" kindref="member">AVCodecID</ref></type>
        <definition>enum AVCodecID AVHWAccel::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Codec implemented by the hardware accelerator.</para><para>See AV_CODEC_ID_xxx </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3138" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_h_w_accel_1ac5692f044266af8c1c33b7ac549df338" prot="public" static="no" mutable="no">
        <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
        <definition>enum AVPixelFormat AVHWAccel::pix_fmt</definition>
        <argsstring></argsstring>
        <name>pix_fmt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Supported pixel format.</para><para>Only hardware accelerated formats are supported here. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3138" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_h_w_accel_1aa1da71a1cc27b60294023a893759e60a" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVHWAccel::capabilities</definition>
        <argsstring></argsstring>
        <name>capabilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hardware accelerated codec capabilities. see FF_HWACCEL_CODEC_CAP_* </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3165" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_h_w_accel_1aaca69ddfacfa72b642007b5ab4b89424" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_a_v_h_w_accel" kindref="compound">AVHWAccel</ref> *</type>
        <definition>struct AVHWAccel* AVHWAccel::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3167" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_h_w_accel_1a40b92f781dbaaecc9c82f636b790629b" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVHWAccel::start_frame) (AVCodecContext *avctx, const uint8_t *buf, uint32_t buf_size)</definition>
        <argsstring>)(AVCodecContext *avctx, const uint8_t *buf, uint32_t buf_size)</argsstring>
        <name>start_frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called at the beginning of each frame or field picture.</para><para>Meaningful frame information (codec specific) is guaranteed to be parsed at this point. This function is mandatory.</para><para>Note that buf can be NULL along with buf_size set to 0. Otherwise, this means the whole frame is available at this point.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>avctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the codec context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>the frame data buffer base </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the frame in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if successful, a negative value otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3183" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_h_w_accel_1ab1effeed94fc20e372a60fec7c4d741b" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVHWAccel::decode_slice) (AVCodecContext *avctx, const uint8_t *buf, uint32_t buf_size)</definition>
        <argsstring>)(AVCodecContext *avctx, const uint8_t *buf, uint32_t buf_size)</argsstring>
        <name>decode_slice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_callback" kindref="compound">Callback</ref> for each slice.</para><para>Meaningful slice information (codec specific) is guaranteed to be parsed at this point. This function is mandatory. The only exception is XvMC, that works on MB level.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>avctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the codec context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>the slice data buffer base </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the slice in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if successful, a negative value otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3197" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_h_w_accel_1ae7f4bdfa848f4c38bb6d9d059c11a297" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVHWAccel::end_frame) (AVCodecContext *avctx)</definition>
        <argsstring>)(AVCodecContext *avctx)</argsstring>
        <name>end_frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called at the end of each frame or field picture.</para><para>The whole picture is parsed at this point and can now be sent to the hardware accelerator. This function is mandatory.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>avctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the codec context </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if successful, a negative value otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3208" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_h_w_accel_1a0094df5ea13d644ebcba1237d45055be" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVHWAccel::priv_data_size</definition>
        <argsstring></argsstring>
        <name>priv_data_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of HW accelerator private data.</para><para>Private data is allocated with <ref refid="group__lavu__mem_1gaf143ecab33a3868b57345466c39de7c1" kindref="member">av_mallocz()</ref> before <ref refid="struct_a_v_codec_context_1abc3a806b73306162efa218510448d54f" kindref="member">AVCodecContext.get_buffer()</ref> and deallocated after <ref refid="struct_a_v_codec_context_1ac934a388c7779e800c13914ff00b6916" kindref="member">AVCodecContext.release_buffer()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3217" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_h_w_accel_1a78303ba4f7601306141d5f8bfe05d00e" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>void(* AVHWAccel::decode_mb) (struct MpegEncContext *s)</definition>
        <argsstring>)(struct MpegEncContext *s)</argsstring>
        <name>decode_mb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called for every Macroblock in a slice.</para><para>XvMC uses it to replace the ff_MPV_decode_mb(). Instead of decoding to raw picture, MB parameters are stored in an array provided by the video driver.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>the mpeg context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3228" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3228" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="struct_a_v_h_w_accel" kindref="compound">AVHWAccel</ref>. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="1260">
        <label>AVHWAccel</label>
        <link refid="struct_a_v_h_w_accel"/>
        <childnode refid="1260" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3132" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3132" bodyend="3229"/>
    <listofallmembers>
      <member refid="struct_a_v_h_w_accel_1aa1da71a1cc27b60294023a893759e60a" prot="public" virt="non-virtual"><scope>AVHWAccel</scope><name>capabilities</name></member>
      <member refid="struct_a_v_h_w_accel_1a78303ba4f7601306141d5f8bfe05d00e" prot="public" virt="non-virtual"><scope>AVHWAccel</scope><name>decode_mb</name></member>
      <member refid="struct_a_v_h_w_accel_1ab1effeed94fc20e372a60fec7c4d741b" prot="public" virt="non-virtual"><scope>AVHWAccel</scope><name>decode_slice</name></member>
      <member refid="struct_a_v_h_w_accel_1ae7f4bdfa848f4c38bb6d9d059c11a297" prot="public" virt="non-virtual"><scope>AVHWAccel</scope><name>end_frame</name></member>
      <member refid="struct_a_v_h_w_accel_1a3c93d40193e9178eb7408295c6c2b2f2" prot="public" virt="non-virtual"><scope>AVHWAccel</scope><name>id</name></member>
      <member refid="struct_a_v_h_w_accel_1a9cc735be128cb62ff4cb594d3e3bdb92" prot="public" virt="non-virtual"><scope>AVHWAccel</scope><name>name</name></member>
      <member refid="struct_a_v_h_w_accel_1aaca69ddfacfa72b642007b5ab4b89424" prot="public" virt="non-virtual"><scope>AVHWAccel</scope><name>next</name></member>
      <member refid="struct_a_v_h_w_accel_1ac5692f044266af8c1c33b7ac549df338" prot="public" virt="non-virtual"><scope>AVHWAccel</scope><name>pix_fmt</name></member>
      <member refid="struct_a_v_h_w_accel_1a0094df5ea13d644ebcba1237d45055be" prot="public" virt="non-virtual"><scope>AVHWAccel</scope><name>priv_data_size</name></member>
      <member refid="struct_a_v_h_w_accel_1a40b92f781dbaaecc9c82f636b790629b" prot="public" virt="non-virtual"><scope>AVHWAccel</scope><name>start_frame</name></member>
      <member refid="struct_a_v_h_w_accel_1af962ad3e15697454ba312d1254e5a423" prot="public" virt="non-virtual"><scope>AVHWAccel</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
