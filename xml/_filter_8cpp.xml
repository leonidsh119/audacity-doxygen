<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_filter_8cpp" kind="file" language="C++">
    <compoundname>Filter.cpp</compoundname>
    <includes local="yes">Filter.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="15079">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Filter.cpp</label>
        <link refid="Filter.cpp"/>
        <childnode refid="15080" relation="include">
        </childnode>
        <childnode refid="15081" relation="include">
        </childnode>
      </node>
      <node id="15080">
        <label>Filter.h</label>
      </node>
      <node id="15081">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************/</highlight></codeline>
<codeline lineno="28"><highlight class="comment">/***************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Filter.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_nyq" kindref="compound">Nyq</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_nyq_1_1_filter_1ab86c90163e27f662edd126f5ae0d0334" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_filter_1ab86c90163e27f662edd126f5ae0d0334" kindref="member">Filter :: Filter</ref>()</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>default<sp/>constructor<sp/>should<sp/>setup<sp/>for<sp/>pass-through.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1afc2d4c6c45ae1287c05a450ee376035b" kindref="member">gain_</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>.push_back(<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>.push_back(<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.push_back(<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>.push_back(<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_nyq_1_1_filter_1a0851424ed1d45701b45a75b8bde04190" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_filter_1ab86c90163e27f662edd126f5ae0d0334" kindref="member">Filter :: Filter</ref>(<sp/>std::vector&lt;StkFloat&gt;<sp/>&amp;bCoefficients,<sp/>std::vector&lt;StkFloat&gt;<sp/>&amp;aCoefficients<sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bCoefficients.size()<sp/>==<sp/>0<sp/>||<sp/>aCoefficients.size()<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Filter:<sp/>a<sp/>and<sp/>b<sp/>coefficient<sp/>vectors<sp/>must<sp/>both<sp/>have<sp/>size<sp/>&gt;<sp/>0!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a4339d7920a5723176c3d127f7e5aa96d" kindref="member">StkError::FUNCTION_ARGUMENT</ref><sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aCoefficients[0]<sp/>==<sp/>0.0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Filter:<sp/>a[0]<sp/>coefficient<sp/>cannot<sp/>==<sp/>0!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a4339d7920a5723176c3d127f7e5aa96d" kindref="member">StkError::FUNCTION_ARGUMENT</ref><sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1afc2d4c6c45ae1287c05a450ee376035b" kindref="member">gain_</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref><sp/>=<sp/>bCoefficients;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref><sp/>=<sp/>aCoefficients;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref><sp/>=<sp/>std::vector&lt;StkFloat&gt;<sp/>(<sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>.size()<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref><sp/>=<sp/>std::vector&lt;StkFloat&gt;<sp/>(<sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>.size()<sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_nyq_1_1_filter_1a0025ddcb760ab59042a1b7f1454d7f86" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_nyq_1_1_filter_1a5d7ba6a80d45796887ac4032b6dbb29a" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_filter_1a5d7ba6a80d45796887ac4032b6dbb29a" kindref="member">Filter :: ~Filter</ref>()</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_nyq_1_1_filter_1a0025ddcb760ab59042a1b7f1454d7f86" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_filter_1a0025ddcb760ab59042a1b7f1454d7f86" kindref="member">Filter :: clear</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_nyq_1_1_filter_1a8ce7b879f1902dbb72a5abba3e54d6a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_filter_1a8ce7b879f1902dbb72a5abba3e54d6a7" kindref="member">Filter :: setCoefficients</ref>(<sp/>std::vector&lt;StkFloat&gt;<sp/>&amp;bCoefficients,<sp/>std::vector&lt;StkFloat&gt;<sp/>&amp;aCoefficients,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clearState<sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bCoefficients.size()<sp/>==<sp/>0<sp/>||<sp/>aCoefficients.size()<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Filter::setCoefficients:<sp/>a<sp/>and<sp/>b<sp/>coefficient<sp/>vectors<sp/>must<sp/>both<sp/>have<sp/>size<sp/>&gt;<sp/>0!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a4339d7920a5723176c3d127f7e5aa96d" kindref="member">StkError::FUNCTION_ARGUMENT</ref><sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aCoefficients[0]<sp/>==<sp/>0.0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Filter::setCoefficients:<sp/>a[0]<sp/>coefficient<sp/>cannot<sp/>==<sp/>0!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a4339d7920a5723176c3d127f7e5aa96d" kindref="member">StkError::FUNCTION_ARGUMENT</ref><sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>.size()<sp/>!=<sp/>bCoefficients.size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref><sp/>=<sp/>bCoefficients;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.clear();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref><sp/>=<sp/>std::vector&lt;StkFloat&gt;<sp/>(<sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>.size()<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>.size();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)<sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>bCoefficients[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>.size()<sp/>!=<sp/>aCoefficients.size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref><sp/>=<sp/>aCoefficients;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>.clear();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref><sp/>=<sp/>std::vector&lt;StkFloat&gt;<sp/>(<sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>.size()<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>.size();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)<sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>aCoefficients[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>clearState<sp/>)<sp/>this-&gt;<ref refid="class_nyq_1_1_filter_1a0025ddcb760ab59042a1b7f1454d7f86" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>coefficients<sp/>by<sp/>a[0]<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>[0]<sp/>!=<sp/>1.0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i=0;<sp/>i&lt;<ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>.size();<sp/>i++<sp/>)<sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>[i]<sp/>/=<sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>[0];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i=1;<sp/>i&lt;<ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>.size();<sp/>i++<sp/>)<sp/><sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>[i]<sp/>/=<sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>[0];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_nyq_1_1_filter_1a2d77f0e8f27c8ca0206258e7523a7720" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_filter_1a2d77f0e8f27c8ca0206258e7523a7720" kindref="member">Filter :: setNumerator</ref>(<sp/>std::vector&lt;StkFloat&gt;<sp/>&amp;bCoefficients,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clearState<sp/>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>argument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bCoefficients.size()<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Filter::setNumerator:<sp/>coefficient<sp/>vector<sp/>must<sp/>have<sp/>size<sp/>&gt;<sp/>0!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a4339d7920a5723176c3d127f7e5aa96d" kindref="member">StkError::FUNCTION_ARGUMENT</ref><sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>.size()<sp/>!=<sp/>bCoefficients.size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref><sp/>=<sp/>bCoefficients;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.clear();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref><sp/>=<sp/>std::vector&lt;StkFloat&gt;<sp/>(<sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>.size()<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>.size();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)<sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>bCoefficients[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>clearState<sp/>)<sp/>this-&gt;<ref refid="class_nyq_1_1_filter_1a0025ddcb760ab59042a1b7f1454d7f86" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="class_nyq_1_1_filter_1a5409f79d7e685a95ca6926f4d854dbe4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_filter_1a5409f79d7e685a95ca6926f4d854dbe4" kindref="member">Filter :: setDenominator</ref>(<sp/>std::vector&lt;StkFloat&gt;<sp/>&amp;aCoefficients,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clearState<sp/>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>argument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aCoefficients.size()<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Filter::setDenominator:<sp/>coefficient<sp/>vector<sp/>must<sp/>have<sp/>size<sp/>&gt;<sp/>0!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a4339d7920a5723176c3d127f7e5aa96d" kindref="member">StkError::FUNCTION_ARGUMENT</ref><sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>aCoefficients[0]<sp/>==<sp/>0.0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Filter::setDenominator:<sp/>a[0]<sp/>coefficient<sp/>cannot<sp/>==<sp/>0!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a4339d7920a5723176c3d127f7e5aa96d" kindref="member">StkError::FUNCTION_ARGUMENT</ref><sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>.size()<sp/>!=<sp/>aCoefficients.size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref><sp/>=<sp/>aCoefficients;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>.clear();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref><sp/>=<sp/>std::vector&lt;StkFloat&gt;<sp/>(<sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>.size()<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>.size();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)<sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>aCoefficients[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>clearState<sp/>)<sp/>this-&gt;<ref refid="class_nyq_1_1_filter_1a0025ddcb760ab59042a1b7f1454d7f86" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>coefficients<sp/>by<sp/>a[0]<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>[0]<sp/>!=<sp/>1.0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i=0;<sp/>i&lt;<ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>.size();<sp/>i++<sp/>)<sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>[i]<sp/>/=<sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>[0];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i=1;<sp/>i&lt;<ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>.size();<sp/>i++<sp/>)<sp/><sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>[i]<sp/>/=<sp/><ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>[0];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="class_nyq_1_1_filter_1af8b8c7ecd8b59f32214f012ee565969d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_filter_1af8b8c7ecd8b59f32214f012ee565969d" kindref="member">Filter :: setGain</ref>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>gain)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1afc2d4c6c45ae1287c05a450ee376035b" kindref="member">gain_</ref><sp/>=<sp/>gain;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="class_nyq_1_1_filter_1a12e7708f197b10e2480d1c23ec7179fd" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="class_nyq_1_1_filter_1a12e7708f197b10e2480d1c23ec7179fd" kindref="member">Filter :: getGain</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="180"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_filter_1afc2d4c6c45ae1287c05a450ee376035b" kindref="member">gain_</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_nyq_1_1_filter_1a1e473e116f552da06086787a66a4460c" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="class_nyq_1_1_filter_1a1e473e116f552da06086787a66a4460c" kindref="member">Filter :: lastOut</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="185"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>[0];</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="class_nyq_1_1_filter_1af934064ea1573bc547a0bbdf76395036" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="class_nyq_1_1_filter_1af934064ea1573bc547a0bbdf76395036" kindref="member">Filter :: tick</ref>(<sp/><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>input<sp/>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>[0]<sp/>=<sp/><ref refid="class_nyq_1_1_filter_1afc2d4c6c45ae1287c05a450ee376035b" kindref="member">gain_</ref><sp/>*<sp/>input;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=<ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>.size()-1;<sp/>i&gt;0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>[0]<sp/>+=<sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>inputs_[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>inputs_[i-1];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>[0]<sp/>+=<sp/><ref refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" kindref="member">b_</ref>[0]<sp/>*<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>[0];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=<ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>.size()-1;<sp/>i&gt;0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>[0]<sp/>+=<sp/>-<ref refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" kindref="member">a_</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*<sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>outputs_[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>outputs_[i-1];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>[0];</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="class_nyq_1_1_filter_1ab4ae4f8ac8794885189d3970f6561485" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_stk_frames" kindref="compound">StkFrames</ref>&amp;<sp/><ref refid="class_nyq_1_1_filter_1af934064ea1573bc547a0bbdf76395036" kindref="member">Filter :: tick</ref>(<sp/><ref refid="class_nyq_1_1_stk_frames" kindref="compound">StkFrames</ref>&amp;<sp/>frames,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel<sp/>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>channel<sp/>&gt;=<sp/>frames.<ref refid="class_nyq_1_1_stk_frames_1acbc6c5da24845359aeb40fad5c831069" kindref="member">channels</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Filter::tick():<sp/>channel<sp/>and<sp/>StkFrames<sp/>arguments<sp/>are<sp/>incompatible!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a4339d7920a5723176c3d127f7e5aa96d" kindref="member">StkError::FUNCTION_ARGUMENT</ref><sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>frames.<ref refid="class_nyq_1_1_stk_frames_1acbc6c5da24845359aeb40fad5c831069" kindref="member">channels</ref>()<sp/>==<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;frames.<ref refid="class_nyq_1_1_stk_frames_1a4afa798ea440ac443b2be9b9a8cde8fc" kindref="member">frames</ref>();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frames[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="class_nyq_1_1_filter_1af934064ea1573bc547a0bbdf76395036" kindref="member">tick</ref>(<sp/>frames[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>frames.<ref refid="class_nyq_1_1_stk_frames_1ad741aa2fcd3ac59b07e3a497663dfae8" kindref="member">interleaved</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hop<sp/>=<sp/>frames.<ref refid="class_nyq_1_1_stk_frames_1acbc6c5da24845359aeb40fad5c831069" kindref="member">channels</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>channel;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;frames.<ref refid="class_nyq_1_1_stk_frames_1a4afa798ea440ac443b2be9b9a8cde8fc" kindref="member">frames</ref>();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frames[index]<sp/>=<sp/><ref refid="class_nyq_1_1_filter_1af934064ea1573bc547a0bbdf76395036" kindref="member">tick</ref>(<sp/>frames[index]<sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>hop;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iStart<sp/>=<sp/>channel<sp/>*<sp/>frames.<ref refid="class_nyq_1_1_stk_frames_1a4afa798ea440ac443b2be9b9a8cde8fc" kindref="member">frames</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;frames.<ref refid="class_nyq_1_1_stk_frames_1a4afa798ea440ac443b2be9b9a8cde8fc" kindref="member">frames</ref>();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++,<sp/>iStart++<sp/>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frames[iStart]<sp/>=<sp/><ref refid="class_nyq_1_1_filter_1af934064ea1573bc547a0bbdf76395036" kindref="member">tick</ref>(<sp/>frames[iStart]<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frames;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Filter.cpp"/>
  </compounddef>
</doxygen>
