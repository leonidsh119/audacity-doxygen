<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_sord_1_1_node" kind="class" language="C++" prot="public">
    <compoundname>Sord::Node</compoundname>
    <basecompoundref refid="class_sord_1_1_wrapper" prot="public" virt="non-virtual">Sord::Wrapper&lt; SordNode * &gt;</basecompoundref>
    <derivedcompoundref refid="class_sord_1_1_curie" prot="public" virt="non-virtual">Sord::Curie</derivedcompoundref>
    <derivedcompoundref refid="class_sord_1_1_literal" prot="public" virt="non-virtual">Sord::Literal</derivedcompoundref>
    <derivedcompoundref refid="class_sord_1_1_u_r_i" prot="public" virt="non-virtual">Sord::URI</derivedcompoundref>
    <includes refid="sordmm_8hpp" local="no">sordmm.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_sord_1_1_node_1a7e88bd1ee36843d0ec897a11b83bb3bb" prot="public" static="no">
        <name>Type</name>
        <enumvalue id="class_sord_1_1_node_1a7e88bd1ee36843d0ec897a11b83bb3bba37dccf090995b8f037e9a4355ccacfd0" prot="public">
          <name>UNKNOWN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_sord_1_1_node_1a7e88bd1ee36843d0ec897a11b83bb3bba676addcea4ed7b2423da53e1ba585fa0" prot="public">
          <name>URI</name>
          <initializer>= SORD_URI</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_sord_1_1_node_1a7e88bd1ee36843d0ec897a11b83bb3bbaaaf1cc036e45843597f24b37647a9751" prot="public">
          <name>BLANK</name>
          <initializer>= SORD_BLANK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_sord_1_1_node_1a7e88bd1ee36843d0ec897a11b83bb3bbad26ac4c73e5f677fba837f74cfb63afb" prot="public">
          <name>LITERAL</name>
          <initializer>= SORD_LITERAL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="141" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="141" bodyend="146"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_sord_1_1_node_1ad47efdc4d0d1810fa9cd4fbae55f00e5" prot="private" static="no" mutable="no">
        <type><ref refid="class_sord_1_1_world" kindref="compound">World</ref> *</type>
        <definition>World* Sord::Node::_world</definition>
        <argsstring></argsstring>
        <name>_world</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="217" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sord_1_1_node_1a71f069f1dd00a3977e598d766b6d7bb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Sord::Node::Node</definition>
        <argsstring>()</argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="148" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1aa23cd9d731134380906ce83d75481690" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Sord::Node::Node</definition>
        <argsstring>(World &amp;world, Type t, const std::string &amp;s)</argsstring>
        <name>Node</name>
        <param>
          <type><ref refid="class_sord_1_1_world" kindref="compound">World</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="class_sord_1_1_node_1a7e88bd1ee36843d0ec897a11b83bb3bb" kindref="member">Type</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="150" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="274" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a8f7407c472e67ca9b7a6365dabc583aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Sord::Node::Node</definition>
        <argsstring>(World &amp;world)</argsstring>
        <name>Node</name>
        <param>
          <type><ref refid="class_sord_1_1_world" kindref="compound">World</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="151" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="298" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a5d6d7bc2b77f31a95bb09476a83c751e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Sord::Node::Node</definition>
        <argsstring>(World &amp;world, const SordNode *node)</argsstring>
        <name>Node</name>
        <param>
          <type><ref refid="class_sord_1_1_world" kindref="compound">World</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="152" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="306" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a294fd72dbefbbe61d1464231c4ff552f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Sord::Node::Node</definition>
        <argsstring>(World &amp;world, SordNode *node, bool copy=false)</argsstring>
        <name>Node</name>
        <param>
          <type><ref refid="class_sord_1_1_world" kindref="compound">World</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>copy</declname>
          <defval><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="153" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="313" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a392d0369a38d6040d528860922e8c0db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Sord::Node::Node</definition>
        <argsstring>(const Node &amp;other)</argsstring>
        <name>Node</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="154" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="320" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1ac5ec38de2e4a24bb6c37e6c4f565de13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Sord::Node::~Node</definition>
        <argsstring>()</argsstring>
        <name>~Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="155" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="332" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1ada3dbc3aa8ffaf00ac156e08ada5643d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sord_1_1_node_1a7e88bd1ee36843d0ec897a11b83bb3bb" kindref="member">Type</ref></type>
        <definition>Type Sord::Node::type</definition>
        <argsstring>() const </argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="157" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1aaea07993c642f76bbe93523e09b96c11" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
        <definition>const SordNode* Sord::Node::get_node</definition>
        <argsstring>() const </argsstring>
        <name>get_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="161" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1add78138e5887a27980e790909e435d00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
        <definition>SordNode* Sord::Node::get_node</definition>
        <argsstring>()</argsstring>
        <name>get_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="162" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a4e8be38add3463501ac6e00335a55d35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
        <definition>const SerdNode* Sord::Node::to_serd_node</definition>
        <argsstring>()</argsstring>
        <name>to_serd_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="164" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a5c51337d9ba3c4be698cabbf8936e396" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Sord::Node::is_valid</definition>
        <argsstring>() const </argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="168" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1ae21f9446d06811c4d4ea6eca4f25b7a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Sord::Node::operator&lt;</definition>
        <argsstring>(const Node &amp;other) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="170" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="170" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1ae8aa3e5e517bbb3c212b8f1ebd8f32bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
        <definition>Node&amp; Sord::Node::operator=</definition>
        <argsstring>(const Node &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="178" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="178" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a5a531e79bf8456563812ca1bd85e301e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Sord::Node::operator==</definition>
        <argsstring>(const Node &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="189" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a1d16f26a1fccb0e40e864bad28ea75b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
        <definition>const uint8_t * Sord::Node::to_u_string</definition>
        <argsstring>() const </argsstring>
        <name>to_u_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="193" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="352" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1af9f1f7092467e61891233f04e8686c51" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char * Sord::Node::to_c_string</definition>
        <argsstring>() const </argsstring>
        <name>to_c_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="194" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="346" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1aed68bb4784015b3449eaabb894c4d89b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        <definition>std::string Sord::Node::to_string</definition>
        <argsstring>() const </argsstring>
        <name>to_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="195" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="340" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1ab2d083e71e05fa9445a739842836e323" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Sord::Node::is_literal_type</definition>
        <argsstring>(const char *type_uri) const </argsstring>
        <name>is_literal_type</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>type_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="197" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="358" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a5f4c5fd9b7615e43f01d159709f388b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Sord::Node::is_uri</definition>
        <argsstring>() const </argsstring>
        <name>is_uri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="199" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a46e29a45729f6ef7360b08db7e75b480" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Sord::Node::is_blank</definition>
        <argsstring>() const </argsstring>
        <name>is_blank</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="200" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="200" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a11a60e65b0b76b39ed0ee5b4c07c2885" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Sord::Node::is_int</definition>
        <argsstring>() const </argsstring>
        <name>is_int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="201" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="201" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a96c4b532de6f4fb5d237710aa4ec7227" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Sord::Node::is_float</definition>
        <argsstring>() const </argsstring>
        <name>is_float</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="202" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1aa9782b95fe5c1c4eb0d9d865ce795f9b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Sord::Node::is_bool</definition>
        <argsstring>() const </argsstring>
        <name>is_bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="203" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a4ce544aa01dc82f720b9ed68f5484615" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int Sord::Node::to_int</definition>
        <argsstring>() const </argsstring>
        <name>to_int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="205" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="370" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a95523d6a3f3aaad8d13999c7beef28ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Sord::Node::to_float</definition>
        <argsstring>() const </argsstring>
        <name>to_float</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="206" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="378" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_node_1a8062347ebd8e792142e34625ec64e586" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Sord::Node::to_bool</definition>
        <argsstring>() const </argsstring>
        <name>to_bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="207" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="386" bodyend="390"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_sord_1_1_node_1ab4fe216e72008bb5702a7b0241ab00bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sord_1_1_node" kindref="compound">Node</ref></type>
        <definition>static Node Sord::Node::blank_id</definition>
        <argsstring>(World &amp;world, const std::string base=&quot;b&quot;)</argsstring>
        <name>blank_id</name>
        <param>
          <type><ref refid="class_sord_1_1_world" kindref="compound">World</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
          <declname>base</declname>
          <defval>&quot;b&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="209" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="209" bodyend="214"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An RDF <ref refid="class_sord_1_1_node" kindref="compound">Node</ref> (resource, literal, etc) </para>    </detaileddescription>
    <inheritancegraph>
      <node id="7552">
        <label>Sord::URI</label>
        <link refid="class_sord_1_1_u_r_i"/>
        <childnode refid="7548" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7551">
        <label>Sord::Literal</label>
        <link refid="class_sord_1_1_literal"/>
        <childnode refid="7548" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7550">
        <label>Sord::Curie</label>
        <link refid="class_sord_1_1_curie"/>
        <childnode refid="7548" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7549">
        <label>Sord::Wrapper&lt; SordNode * &gt;</label>
        <link refid="class_sord_1_1_wrapper"/>
      </node>
      <node id="7548">
        <label>Sord::Node</label>
        <link refid="class_sord_1_1_node"/>
        <childnode refid="7549" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7558">
        <label>SordLiteralMetadata</label>
        <link refid="struct_sord_literal_metadata"/>
        <childnode refid="7555" relation="usage">
          <edgelabel>datatype</edgelabel>
        </childnode>
      </node>
      <node id="7555">
        <label>SordNodeImpl</label>
        <link refid="struct_sord_node_impl"/>
        <childnode refid="7556" relation="usage">
          <edgelabel>res</edgelabel>
        </childnode>
        <childnode refid="7557" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="7558" relation="usage">
          <edgelabel>lit</edgelabel>
        </childnode>
      </node>
      <node id="7557">
        <label>SerdNode</label>
        <link refid="struct_serd_node"/>
      </node>
      <node id="7556">
        <label>SordResourceMetadata</label>
        <link refid="struct_sord_resource_metadata"/>
      </node>
      <node id="7554">
        <label>Sord::Wrapper&lt; SordNode * &gt;</label>
        <link refid="class_sord_1_1_wrapper"/>
        <childnode refid="7555" relation="usage">
          <edgelabel>_c_obj</edgelabel>
        </childnode>
      </node>
      <node id="7553">
        <label>Sord::Node</label>
        <link refid="class_sord_1_1_node"/>
        <childnode refid="7554" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="139" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="139" bodyend="218"/>
    <listofallmembers>
      <member refid="class_sord_1_1_wrapper_1aee0f3ad4f5a45a66c139dacbe6284547" prot="protected" virt="non-virtual"><scope>Sord::Node</scope><name>_c_obj</name></member>
      <member refid="class_sord_1_1_node_1ad47efdc4d0d1810fa9cd4fbae55f00e5" prot="private" virt="non-virtual"><scope>Sord::Node</scope><name>_world</name></member>
      <member refid="class_sord_1_1_node_1a7e88bd1ee36843d0ec897a11b83bb3bbaaaf1cc036e45843597f24b37647a9751" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>BLANK</name></member>
      <member refid="class_sord_1_1_node_1ab4fe216e72008bb5702a7b0241ab00bb" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>blank_id</name></member>
      <member refid="class_sord_1_1_wrapper_1a71bdf7e679555f72e07c749ab87366c8" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>c_obj</name></member>
      <member refid="class_sord_1_1_wrapper_1a9f9639ab9373df9b34a283b8cb2c1932" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>c_obj</name></member>
      <member refid="class_sord_1_1_node_1aaea07993c642f76bbe93523e09b96c11" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>get_node</name></member>
      <member refid="class_sord_1_1_node_1add78138e5887a27980e790909e435d00" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>get_node</name></member>
      <member refid="class_sord_1_1_node_1a46e29a45729f6ef7360b08db7e75b480" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>is_blank</name></member>
      <member refid="class_sord_1_1_node_1aa9782b95fe5c1c4eb0d9d865ce795f9b" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>is_bool</name></member>
      <member refid="class_sord_1_1_node_1a96c4b532de6f4fb5d237710aa4ec7227" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>is_float</name></member>
      <member refid="class_sord_1_1_node_1a11a60e65b0b76b39ed0ee5b4c07c2885" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>is_int</name></member>
      <member refid="class_sord_1_1_node_1ab2d083e71e05fa9445a739842836e323" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>is_literal_type</name></member>
      <member refid="class_sord_1_1_node_1a5f4c5fd9b7615e43f01d159709f388b6" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>is_uri</name></member>
      <member refid="class_sord_1_1_node_1a5c51337d9ba3c4be698cabbf8936e396" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>is_valid</name></member>
      <member refid="class_sord_1_1_node_1a7e88bd1ee36843d0ec897a11b83bb3bbad26ac4c73e5f677fba837f74cfb63afb" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>LITERAL</name></member>
      <member refid="class_sord_1_1_node_1a71f069f1dd00a3977e598d766b6d7bb0" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>Node</name></member>
      <member refid="class_sord_1_1_node_1aa23cd9d731134380906ce83d75481690" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>Node</name></member>
      <member refid="class_sord_1_1_node_1a8f7407c472e67ca9b7a6365dabc583aa" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>Node</name></member>
      <member refid="class_sord_1_1_node_1a5d6d7bc2b77f31a95bb09476a83c751e" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>Node</name></member>
      <member refid="class_sord_1_1_node_1a294fd72dbefbbe61d1464231c4ff552f" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>Node</name></member>
      <member refid="class_sord_1_1_node_1a392d0369a38d6040d528860922e8c0db" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>Node</name></member>
      <member refid="class_sord_1_1_node_1ae21f9446d06811c4d4ea6eca4f25b7a7" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>operator&lt;</name></member>
      <member refid="class_sord_1_1_node_1ae8aa3e5e517bbb3c212b8f1ebd8f32bd" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>operator=</name></member>
      <member refid="class_sord_1_1_node_1a5a531e79bf8456563812ca1bd85e301e" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>operator==</name></member>
      <member refid="class_sord_1_1_node_1a8062347ebd8e792142e34625ec64e586" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>to_bool</name></member>
      <member refid="class_sord_1_1_node_1af9f1f7092467e61891233f04e8686c51" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>to_c_string</name></member>
      <member refid="class_sord_1_1_node_1a95523d6a3f3aaad8d13999c7beef28ca" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>to_float</name></member>
      <member refid="class_sord_1_1_node_1a4ce544aa01dc82f720b9ed68f5484615" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>to_int</name></member>
      <member refid="class_sord_1_1_node_1a4e8be38add3463501ac6e00335a55d35" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>to_serd_node</name></member>
      <member refid="class_sord_1_1_node_1aed68bb4784015b3449eaabb894c4d89b" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>to_string</name></member>
      <member refid="class_sord_1_1_node_1a1d16f26a1fccb0e40e864bad28ea75b6" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>to_u_string</name></member>
      <member refid="class_sord_1_1_node_1a7e88bd1ee36843d0ec897a11b83bb3bb" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>Type</name></member>
      <member refid="class_sord_1_1_node_1ada3dbc3aa8ffaf00ac156e08ada5643d" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>type</name></member>
      <member refid="class_sord_1_1_node_1a7e88bd1ee36843d0ec897a11b83bb3bba37dccf090995b8f037e9a4355ccacfd0" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>UNKNOWN</name></member>
      <member refid="class_sord_1_1_node_1a7e88bd1ee36843d0ec897a11b83bb3bba676addcea4ed7b2423da53e1ba585fa0" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>URI</name></member>
      <member refid="class_sord_1_1_wrapper_1ab539fff1455a9b4b43b21e01d795a1e9" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>Wrapper</name></member>
      <member refid="class_sord_1_1_node_1ac5ec38de2e4a24bb6c37e6c4f565de13" prot="public" virt="non-virtual"><scope>Sord::Node</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
