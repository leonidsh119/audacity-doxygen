<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="twolame_8c" kind="file" language="C++">
    <compoundname>twolame.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">limits.h</includes>
    <includes refid="twolame_8h" local="yes">twolame.h</includes>
    <includes refid="twolame_2libtwolame_2common_8h" local="yes">common.h</includes>
    <includes refid="bitbuffer_8h" local="yes">bitbuffer.h</includes>
    <includes refid="twolame_2libtwolame_2mem_8h" local="yes">mem.h</includes>
    <includes refid="twolame_2libtwolame_2crc_8h" local="yes">crc.h</includes>
    <includes refid="dab_8h" local="yes">dab.h</includes>
    <includes refid="psycho__n1_8h" local="yes">psycho_n1.h</includes>
    <includes refid="psycho__0_8h" local="yes">psycho_0.h</includes>
    <includes refid="psycho__1_8h" local="yes">psycho_1.h</includes>
    <includes refid="psycho__2_8h" local="yes">psycho_2.h</includes>
    <includes refid="psycho__3_8h" local="yes">psycho_3.h</includes>
    <includes refid="psycho__4_8h" local="yes">psycho_4.h</includes>
    <includes refid="availbits_8h" local="yes">availbits.h</includes>
    <includes refid="twolame_2libtwolame_2subband_8h" local="yes">subband.h</includes>
    <includes refid="twolame_2libtwolame_2encode_8h" local="yes">encode.h</includes>
    <includes refid="energy_8h" local="yes">energy.h</includes>
    <includes refid="twolame_2libtwolame_2util_8h" local="yes">util.h</includes>
    <includes refid="bitbuffer__inline_8h" local="yes">bitbuffer_inline.h</includes>
    <incdepgraph>
      <node id="32647">
        <label>psycho_2.h</label>
        <link refid="psycho__2_8h"/>
      </node>
      <node id="32632">
        <label>stdlib.h</label>
      </node>
      <node id="32630">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c</label>
        <link refid="twolame.c"/>
        <childnode refid="32631" relation="include">
        </childnode>
        <childnode refid="32632" relation="include">
        </childnode>
        <childnode refid="32633" relation="include">
        </childnode>
        <childnode refid="32634" relation="include">
        </childnode>
        <childnode refid="32635" relation="include">
        </childnode>
        <childnode refid="32636" relation="include">
        </childnode>
        <childnode refid="32637" relation="include">
        </childnode>
        <childnode refid="32638" relation="include">
        </childnode>
        <childnode refid="32640" relation="include">
        </childnode>
        <childnode refid="32641" relation="include">
        </childnode>
        <childnode refid="32642" relation="include">
        </childnode>
        <childnode refid="32643" relation="include">
        </childnode>
        <childnode refid="32644" relation="include">
        </childnode>
        <childnode refid="32645" relation="include">
        </childnode>
        <childnode refid="32646" relation="include">
        </childnode>
        <childnode refid="32647" relation="include">
        </childnode>
        <childnode refid="32648" relation="include">
        </childnode>
        <childnode refid="32649" relation="include">
        </childnode>
        <childnode refid="32650" relation="include">
        </childnode>
        <childnode refid="32651" relation="include">
        </childnode>
        <childnode refid="32652" relation="include">
        </childnode>
        <childnode refid="32653" relation="include">
        </childnode>
        <childnode refid="32654" relation="include">
        </childnode>
        <childnode refid="32655" relation="include">
        </childnode>
      </node>
      <node id="32637">
        <label>twolame.h</label>
        <link refid="twolame_8h"/>
      </node>
      <node id="32650">
        <label>availbits.h</label>
        <link refid="availbits_8h"/>
      </node>
      <node id="32643">
        <label>dab.h</label>
        <link refid="dab_8h"/>
      </node>
      <node id="32654">
        <label>util.h</label>
        <link refid="twolame_2libtwolame_2util_8h"/>
      </node>
      <node id="32635">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="32648">
        <label>psycho_3.h</label>
        <link refid="psycho__3_8h"/>
      </node>
      <node id="32636">
        <label>limits.h</label>
      </node>
      <node id="32652">
        <label>encode.h</label>
        <link refid="twolame_2libtwolame_2encode_8h"/>
      </node>
      <node id="32651">
        <label>subband.h</label>
        <link refid="twolame_2libtwolame_2subband_8h"/>
      </node>
      <node id="32633">
        <label>string.h</label>
      </node>
      <node id="32649">
        <label>psycho_4.h</label>
        <link refid="psycho__4_8h"/>
      </node>
      <node id="32645">
        <label>psycho_0.h</label>
        <link refid="psycho__0_8h"/>
      </node>
      <node id="32634">
        <label>math.h</label>
      </node>
      <node id="32655">
        <label>bitbuffer_inline.h</label>
        <link refid="bitbuffer__inline_8h"/>
      </node>
      <node id="32644">
        <label>psycho_n1.h</label>
        <link refid="psycho__n1_8h"/>
      </node>
      <node id="32642">
        <label>crc.h</label>
        <link refid="twolame_2libtwolame_2crc_8h"/>
      </node>
      <node id="32640">
        <label>bitbuffer.h</label>
        <link refid="bitbuffer_8h"/>
        <childnode refid="32638" relation="include">
        </childnode>
      </node>
      <node id="32639">
        <label>config.h</label>
      </node>
      <node id="32646">
        <label>psycho_1.h</label>
        <link refid="psycho__1_8h"/>
      </node>
      <node id="32631">
        <label>stdio.h</label>
      </node>
      <node id="32638">
        <label>common.h</label>
        <link refid="twolame_2libtwolame_2common_8h"/>
        <childnode refid="32639" relation="include">
        </childnode>
        <childnode refid="32637" relation="include">
        </childnode>
      </node>
      <node id="32653">
        <label>energy.h</label>
        <link refid="energy_8h"/>
      </node>
      <node id="32641">
        <label>mem.h</label>
        <link refid="twolame_2libtwolame_2mem_8h"/>
        <childnode refid="32638" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="twolame_8c_1ac4cdab0d6542badab38bb4ddf96957fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
        <definition>twolame_options* twolame_init</definition>
        <argsstring>(void)</argsstring>
        <name>twolame_init</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialise the twolame encoder.</para><para>Sets defaults for all parameters. Will return NULL if malloc() failed, otherwise returns a pointer which you then need to pass to all future API calls.</para><para><simplesect kind="return"><para>a pointer to your new options data structure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="60" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8c_1ab4c8c88a8f3ccce882769291c4682a36" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int init_header_info</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>init_header_info</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" line="128" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="128" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8c_1a479229b288016a4b7b1dd696e4000257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_init_params</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_init_params</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function should actually <emphasis>check</emphasis> the parameters to see if they make sense. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" line="177" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="177" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8c_1a7fe5b2a058a350a682e6195b891c0648" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void scale_and_mix_samples</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>scale_and_mix_samples</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" line="373" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="373" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8c_1a1f60dbffb10c7e6b34d30c2ea9cde7a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int encode_frame</definition>
        <argsstring>(twolame_options *glopts, bit_stream *bs)</argsstring>
        <name>encode_frame</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="bitbuffer_8h_1a6fd1cd4b0f368eb5f7362a1c322aa3c5" kindref="member">bit_stream</ref> *</type>
          <declname>bs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" line="423" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="423" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8c_1a7656283020d9b131790bf5a99af055c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_encode_buffer</definition>
        <argsstring>(twolame_options *glopts, const short int leftpcm[], const short int rightpcm[], int num_samples, unsigned char *mp2buffer, int mp2buffer_size)</argsstring>
        <name>twolame_encode_buffer</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> short <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>leftpcm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> short <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>rightpcm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_samples</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>mp2buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mp2buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode some 16-bit PCM audio to MP2.</para><para>Takes 16-bit PCM audio samples from seperate left and right buffers and places encoded audio into mp2buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leftpcm</parametername>
</parameternamelist>
<parameterdescription>
<para>Left channel audio samples </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rightpcm</parametername>
</parameternamelist>
<parameterdescription>
<para>Right channel audio samples </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples per channel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to place encoded audio into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes put in output buffer or a negative value on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" line="618" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="618" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8c_1a578b70ad7abfcc2bbed09ecf661fd66e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_encode_buffer_interleaved</definition>
        <argsstring>(twolame_options *glopts, const short int pcm[], int num_samples, unsigned char *mp2buffer, int mp2buffer_size)</argsstring>
        <name>twolame_encode_buffer_interleaved</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> short <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>pcm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_samples</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>mp2buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mp2buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode some 16-bit PCM audio to MP2.</para><para>Takes interleaved 16-bit PCM audio samples from a single buffer and places encoded audio into mp2buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>Audio samples for left AND right channels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples per channel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to place encoded audio into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes put in output buffer or a negative value on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" line="676" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="676" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8c_1af4e0240b238f0fa27a80b0150992310e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void float32_to_short</definition>
        <argsstring>(const float in[], short out[], int num_samples, int stride)</argsstring>
        <name>float32_to_short</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
          <declname>in</declname>
          <array>[]</array>
        </param>
        <param>
          <type>short</type>
          <declname>out</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_samples</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" line="733" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="733" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8c_1a8e77eb0f22479f8ec1bd4f1b042f9cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_encode_buffer_float32</definition>
        <argsstring>(twolame_options *glopts, const float leftpcm[], const float rightpcm[], int num_samples, unsigned char *mp2buffer, int mp2buffer_size)</argsstring>
        <name>twolame_encode_buffer_float32</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
          <declname>leftpcm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
          <declname>rightpcm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_samples</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>mp2buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mp2buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode some 32-bit PCM audio to MP2.</para><para>Takes 32-bit floating point PCM audio samples from seperate left and right buffers and places encoded audio into mp2buffer.</para><para>Note: the 32-bit samples are currently scaled down to 16-bit samples internally.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leftpcm</parametername>
</parameternamelist>
<parameterdescription>
<para>Left channel audio samples </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rightpcm</parametername>
</parameternamelist>
<parameterdescription>
<para>Right channel audio samples </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples per channel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to place encoded audio into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes put in output buffer or a negative value on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" line="760" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="760" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8c_1aca716bf42f767e889c0505206c3f1160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_encode_buffer_float32_interleaved</definition>
        <argsstring>(twolame_options *glopts, const float pcm[], int num_samples, unsigned char *mp2buffer, int mp2buffer_size)</argsstring>
        <name>twolame_encode_buffer_float32_interleaved</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
          <declname>pcm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_samples</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>mp2buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mp2buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode some 32-bit PCM audio to MP2.</para><para>Takes 32-bit floating point PCM audio samples from a single buffer and places encoded audio into mp2buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>Audio samples for left AND right channels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples per channel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to place encoded audio into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes put in output buffer or a negative value on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" line="818" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="818" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8c_1a3903ae20e7e99b7774c527e3e9ed3ab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_encode_flush</definition>
        <argsstring>(twolame_options *glopts, unsigned char *mp2buffer, int mp2buffer_size)</argsstring>
        <name>twolame_encode_flush</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>mp2buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mp2buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode any remains buffered PCM audio to MP2.</para><para>Encodes any remaining audio samples in the libtwolame internal sample buffer. This function will return at most a single frame of MPEG Audio, and at least 0 frames.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to place encoded audio into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes put in output buffer or a negative value on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" line="877" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="877" bodyend="903"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8c_1a5a9adda3b79826aa841471dda5e87e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void twolame_close</definition>
        <argsstring>(twolame_options **glopts)</argsstring>
        <name>twolame_close</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> **</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shut down the twolame encoder.</para><para>Shuts down the twolame encoder and frees all memory that it previously allocated. You should call this once you have finished all your encoding. This function will set your glopts pointer to NULL for you.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" line="908" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="908" bodyend="932"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>TwoLAME:<sp/>an<sp/>optimized<sp/>MPEG<sp/>Audio<sp/>Layer<sp/>Two<sp/>encoder</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2001-2004<sp/>Michael<sp/>Cheng</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004-2006<sp/>The<sp/>TwoLAME<sp/>Project</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>$Id$</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_8h" kindref="compound">twolame.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bitbuffer_8h" kindref="compound">bitbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2mem_8h" kindref="compound">mem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2crc_8h" kindref="compound">crc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dab_8h" kindref="compound">dab.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="psycho__n1_8h" kindref="compound">psycho_n1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="psycho__0_8h" kindref="compound">psycho_0.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="psycho__1_8h" kindref="compound">psycho_1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="psycho__2_8h" kindref="compound">psycho_2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="psycho__3_8h" kindref="compound">psycho_3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="psycho__4_8h" kindref="compound">psycho_4.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="availbits_8h" kindref="compound">availbits.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2subband_8h" kindref="compound">subband.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2encode_8h" kindref="compound">encode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="energy_8h" kindref="compound">energy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bitbuffer__inline_8h" kindref="compound">bitbuffer_inline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/>twolame_init</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/>Create<sp/>a<sp/>set<sp/>of<sp/>encoding<sp/>options<sp/>and<sp/>return<sp/>a<sp/>pointer<sp/>to<sp/>this<sp/>structure</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/>Returns<sp/>NULL<sp/>if<sp/>unsuccessful<sp/>(can&apos;t<sp/>allocate<sp/>memory)</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/>Otherwise<sp/>returns<sp/>pointer<sp/>to<sp/>memory<sp/>block</highlight></codeline>
<codeline lineno="59"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="twolame_8h_1af8fdf11803260a0c16c0cffe946d14fa" refkind="member"><highlight class="normal"><ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<ref refid="twolame_8c_1ac4cdab0d6542badab38bb4ddf96957fb" kindref="member">twolame_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*newoptions<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions<sp/>=<sp/>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*)<sp/><ref refid="twolame_2libtwolame_2mem_8h_1a5c998cfb7ed77f0c7967b685235f8ba5" kindref="member">TWOLAME_MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref>));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newoptions<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a8bfca52309d5777333b4646461ab9a16" kindref="member">version</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a5388d86ab861953b968b2ec81bda950f" kindref="member">num_channels_out</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a82eea31e571027820c8fc63c159f97be" kindref="member">samplerate_in</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a6c0025d3edc48ae42a8f72fab21ce1a6" kindref="member">samplerate_out</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a9a485b580a62dd91ca9d2b6c51cbddb5" kindref="member">mode</ref><sp/>=<sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fab0b25df193c4be6b5c7bda71166df264" kindref="member">TWOLAME_AUTO_MODE</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>a<sp/>proper<sp/>mode<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a3b4099e20d7d3727015bf580a12806cc" kindref="member">psymodel</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>-1;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>bitrate<sp/>is<sp/>set<sp/>in<sp/>init_params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1ac5e4a3519d895e56ff0daebaf255128b" kindref="member">vbr</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a09d6b0d1f00cfc6bc928984ae15b3b4c" kindref="member">vbrlevel</ref><sp/>=<sp/>5.0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a05b515c7abc705511f7bde9e7838dfac" kindref="member">athlevel</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1aefd142ad35e687a25dc01dd2238c8e5b" kindref="member">quickmode</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a39883ae20b9d53fdf154845a0ecd5920" kindref="member">quickcount</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1aaef1bd9b6ed9084ad137b450b1744dc3" kindref="member">emphasis</ref><sp/>=<sp/><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1ba73eced6173758db8e4186d07ee510dd1" kindref="member">TWOLAME_EMPHASIS_N</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1ad783ce3ba698d20dca87fd42550c38ef" kindref="member">private_bit</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1af717c3e1c0f73752f0e5f81ab8338286" kindref="member">copyright</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a7c3f1c30812961d5799392f2e2fe76a9" kindref="member">original</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1afdb13bca150737358592a608804b2ad3" kindref="member">error_protection</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1aed52eccbde57b496f02e1f19e2ff9eb3" kindref="member">padding</ref><sp/>=<sp/><ref refid="twolame_8h_1af83f4f73e4c57db45269667b4421730eab2dd0f81e433f7f708622c96466dbff3" kindref="member">TWOLAME_PAD_NO</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1ab1ccaeda99cf029d6e6ab4477efde9a8" kindref="member">do_dab</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1ac1cd33eef92847da1ee8dd621d6653b7" kindref="member">dab_crc_len</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a147c3606710121464bc693a21b43abba" kindref="member">dab_xpad_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a85004829f276bc6adf993ff2cb3f3fd2" kindref="member">verbosity</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1af500639a98da65332c4eb0feed0a101a" kindref="member">vbr_upper_index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a84946abd65a959f997ba582eed5da511" kindref="member">scale</ref><sp/>=<sp/>1.0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scaling<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1acd09bfe6ca734e4d883b02abc804f180" kindref="member">scale_left</ref><sp/>=<sp/>1.0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scaling<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1ae7aa58afe9d069bfe345675db235e30e" kindref="member">scale_right</ref><sp/>=<sp/>1.0;<sp/><sp/></highlight><highlight class="comment">//<sp/>scaling<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a404e8d457ac5ba63be0144540ce035a9" kindref="member">do_energy_levels</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1ae5124ecbd090fd5ff6aae6900a7b6ed4" kindref="member">num_ancillary_bits</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1ab9e79c1f1ef2b4cedca215aaeb77a4b2" kindref="member">vbr_frame_count</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>used<sp/>for<sp/>debugging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a619758b697006462f7c89fc0a7330cc8" kindref="member">tablenum</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a205bb93e39b37ed46fddf5bbca9fdfc4" kindref="member">twolame_init</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1adeb3816d15591347af6d058d2ccdda8c" kindref="member">subband</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1ac22600520036c32486e6d026310a5f08" kindref="member">j_sample</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a93b6e50f1d2c624f0d448fd49733841f" kindref="member">sb_sample</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a7effec5229bce5662be57b47b6b212f8" kindref="member">psycount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a9fe5236160c33af2022352bfd6a85d34" kindref="member">p0mem</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a32f0ce469b0159b92f4409d592a89c61" kindref="member">p1mem</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1ad9d3c600a874f43c1e7be23570ca4e88" kindref="member">p2mem</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1a27b52180e8edfd8e2e448a488a05a3de" kindref="member">p3mem</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>newoptions-&gt;<ref refid="structtwolame__options__struct_1ae24effdce105e10aa58a549ae9f5f047" kindref="member">p4mem</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(newoptions-&gt;<ref refid="structtwolame__options__struct_1a814a435587623bfa5430c511c80ce753" kindref="member">vbrstats</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(newoptions-&gt;<ref refid="structtwolame__options__struct_1a814a435587623bfa5430c511c80ce753" kindref="member">vbrstats</ref>));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(newoptions);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>0<sp/>if<sp/>successful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>-1<sp/>if<sp/>unsuccessful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>init_header_info(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structframe__header" kindref="compound">frame_header</ref><sp/>*header<sp/>=<sp/>&amp;glopts-&gt;<ref refid="structtwolame__options__struct_1a50fa0b33674f61d8e3386b3e8d54b78c" kindref="member">header</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>the<sp/>options<sp/>to<sp/>create<sp/>header<sp/>info<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structframe__header_1a719d105e9a5983f057946a8dc351f90b" kindref="member">lay</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structframe__header_1ac8672e3ecb3c44f8763931e225652d0b" kindref="member">error_protection</ref><sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1afdb13bca150737358592a608804b2ad3" kindref="member">error_protection</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structframe__header_1a7c92a7131bf19d4340ffeecc3f893d09" kindref="member">version</ref><sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a8bfca52309d5777333b4646461ab9a16" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>sampling<sp/>frequency<sp/>to<sp/>the<sp/>required<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structframe__header_1aeaaf556b174d5d6c8d719f34d4f9154e" kindref="member">samplerate_idx</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2util_8c_1ac462c70ed46b322e32343f2382024b52" kindref="member">twolame_get_samplerate_index</ref>(glopts-&gt;<ref refid="structtwolame__options__struct_1a6c0025d3edc48ae42a8f72fab21ce1a6" kindref="member">samplerate_out</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structframe__header_1aeaaf556b174d5d6c8d719f34d4f9154e" kindref="member">samplerate_idx</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>valid<sp/>samplerate:<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a6c0025d3edc48ae42a8f72fab21ce1a6" kindref="member">samplerate_out</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>bitrate<sp/>to<sp/>the<sp/>an<sp/>index<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structframe__header_1ad219005f5e70c73d083bfcc7f88dadaa" kindref="member">bitrate_index</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2util_8c_1a7136bfe10d672225a306cc322816d014" kindref="member">twolame_get_bitrate_index</ref>(glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref>,<sp/>header-&gt;<ref refid="structframe__header_1a7c92a7131bf19d4340ffeecc3f893d09" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structframe__header_1ad219005f5e70c73d083bfcc7f88dadaa" kindref="member">bitrate_index</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>valid<sp/>bitrate<sp/>(%i)<sp/>for<sp/>MPEG<sp/>version<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref>,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2util_8c_1ac98e0de526f6e36d752df6a0c57e773a" kindref="member">twolame_mpeg_version_name</ref>(glopts-&gt;<ref refid="structtwolame__options__struct_1a8bfca52309d5777333b4646461ab9a16" kindref="member">version</ref>));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>max<sp/>VBR<sp/>bitrate<sp/>to<sp/>the<sp/>an<sp/>index<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1af500639a98da65332c4eb0feed0a101a" kindref="member">vbr_upper_index</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2util_8c_1a7136bfe10d672225a306cc322816d014" kindref="member">twolame_get_bitrate_index</ref>(glopts-&gt;<ref refid="structtwolame__options__struct_1a21dd29160df5d99bfcc6909f424679e6" kindref="member">vbr_max_bitrate</ref>,<sp/>header-&gt;<ref refid="structframe__header_1a7c92a7131bf19d4340ffeecc3f893d09" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1af500639a98da65332c4eb0feed0a101a" kindref="member">vbr_upper_index</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>valid<sp/>max<sp/>VBR<sp/>bitrate<sp/>for<sp/>this<sp/>version:<sp/>%i\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a21dd29160df5d99bfcc6909f424679e6" kindref="member">vbr_max_bitrate</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>accross<sp/>the<sp/>other<sp/>settings<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structframe__header_1a7619c413891eee701508eade187f659d" kindref="member">padding</ref><sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aed52eccbde57b496f02e1f19e2ff9eb3" kindref="member">padding</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structframe__header_1a1f602c0aa4f7a28ba1bc48e321037baa" kindref="member">private_bit</ref><sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ad783ce3ba698d20dca87fd42550c38ef" kindref="member">private_bit</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structframe__header_1a8317914fab0cb6b5357731baf40f38d9" kindref="member">mode</ref><sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9a485b580a62dd91ca9d2b6c51cbddb5" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structframe__header_1a776cfc6aeca369b948f54fa9e3d99b59" kindref="member">mode_ext</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structframe__header_1a096ededb94b3b7984c75b15c8f9cfe9f" kindref="member">copyright</ref><sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1af717c3e1c0f73752f0e5f81ab8338286" kindref="member">copyright</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structframe__header_1abfbb3dfe82609ea7ac3231a6f8ae7ea6" kindref="member">original</ref><sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a7c3f1c30812961d5799392f2e2fe76a9" kindref="member">original</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structframe__header_1ab703f3bb552285c732464b3c0d7a1c52" kindref="member">emphasis</ref><sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aaef1bd9b6ed9084ad137b450b1744dc3" kindref="member">emphasis</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="twolame_8h_1a15ec415498c18916ea263a06c2741c9d" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8c_1a479229b288016a4b7b1dd696e4000257" kindref="member">twolame_init_params</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a205bb93e39b37ed46fddf5bbca9fdfc4" kindref="member">twolame_init</ref>)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Already<sp/>called<sp/>twolame_init_params()<sp/>once.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>number<sp/>of<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref><sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref><sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;twolame_init_params():<sp/>must<sp/>specify<sp/>number<sp/>of<sp/>input<sp/>channels<sp/>using<sp/>twolame_set_num_channels().\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>output<sp/>samplerate<sp/>has<sp/>been<sp/>set,<sp/>then<sp/>set<sp/>it<sp/>to<sp/>the<sp/>input<sp/>sample<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a6c0025d3edc48ae42a8f72fab21ce1a6" kindref="member">samplerate_out</ref><sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a6c0025d3edc48ae42a8f72fab21ce1a6" kindref="member">samplerate_out</ref><sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a82eea31e571027820c8fc63c159f97be" kindref="member">samplerate_in</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>MPEG<sp/>version<sp/>has<sp/>not<sp/>been<sp/>set,<sp/>then<sp/>choose<sp/>automatically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a8bfca52309d5777333b4646461ab9a16" kindref="member">version</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>MPEG<sp/>version<sp/>for<sp/>the<sp/>chosen<sp/>samplerate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a8bfca52309d5777333b4646461ab9a16" kindref="member">version</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2util_8c_1a69cad6ec8f79e2910048639c2619a87a" kindref="member">twolame_get_version_for_samplerate</ref>(glopts-&gt;<ref refid="structtwolame__options__struct_1a6c0025d3edc48ae42a8f72fab21ce1a6" kindref="member">samplerate_out</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a8bfca52309d5777333b4646461ab9a16" kindref="member">version</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;twolame_init_params():<sp/>invalid<sp/>samplerate:<sp/>%i\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a6c0025d3edc48ae42a8f72fab21ce1a6" kindref="member">samplerate_out</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a85004829f276bc6adf993ff2cb3f3fd2" kindref="member">verbosity</ref><sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Chosen<sp/>version<sp/>&apos;%s&apos;<sp/>for<sp/>samplerate<sp/>of<sp/>%d<sp/>Hz.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2util_8c_1ac98e0de526f6e36d752df6a0c57e773a" kindref="member">twolame_mpeg_version_name</ref>(glopts-&gt;<ref refid="structtwolame__options__struct_1a8bfca52309d5777333b4646461ab9a16" kindref="member">version</ref>),<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a6c0025d3edc48ae42a8f72fab21ce1a6" kindref="member">samplerate_out</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>mode<sp/>(if<sp/>none<sp/>chosen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a9a485b580a62dd91ca9d2b6c51cbddb5" kindref="member">mode</ref><sp/>==<sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fab0b25df193c4be6b5c7bda71166df264" kindref="member">TWOLAME_AUTO_MODE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9a485b580a62dd91ca9d2b6c51cbddb5" kindref="member">mode</ref><sp/>=<sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa785df1b22ebb296610b938793906f66d" kindref="member">TWOLAME_STEREO</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9a485b580a62dd91ca9d2b6c51cbddb5" kindref="member">mode</ref><sp/>=<sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa482d714be97e4cb21c223850ece06456" kindref="member">TWOLAME_MONO</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a85004829f276bc6adf993ff2cb3f3fd2" kindref="member">verbosity</ref><sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Chosen<sp/>mode<sp/>to<sp/>be<sp/>&apos;%s&apos;<sp/>because<sp/>of<sp/>%d<sp/>input<sp/>channels.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="get__set_8c_1a4b8302f67ce0c691cd0fbd7c08c79729" kindref="member">twolame_get_mode_name</ref>(glopts),<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>the<sp/>bitrate<sp/>(if<sp/>none<sp/>chosen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a9a485b580a62dd91ca9d2b6c51cbddb5" kindref="member">mode</ref><sp/>==<sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa482d714be97e4cb21c223850ece06456" kindref="member">TWOLAME_MONO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a6c0025d3edc48ae42a8f72fab21ce1a6" kindref="member">samplerate_out</ref>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>48000:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>96;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(LAME=64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>44100:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>96;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(LAME=64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>32000:</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>80;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(LAME=48)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>24000:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>48;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(LAME=32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>22050:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>48;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(LAME=32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16000:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(LAME=24)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a6c0025d3edc48ae42a8f72fab21ce1a6" kindref="member">samplerate_out</ref>)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>48000:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>192;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(LAME=128)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>44100:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>192;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(LAME=128)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>32000:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>160;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(LAME=96)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>24000:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>96;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(LAME=64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>22050:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>96;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(LAME=64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16000:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(LAME=48)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a85004829f276bc6adf993ff2cb3f3fd2" kindref="member">verbosity</ref><sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Chosen<sp/>bitrate<sp/>of<sp/>%dkbps<sp/>for<sp/>samplerate<sp/>of<sp/>%d<sp/>Hz.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a6c0025d3edc48ae42a8f72fab21ce1a6" kindref="member">samplerate_out</ref>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Can&apos;t<sp/>do<sp/>DAB<sp/>and<sp/>energylevel<sp/>extensions<sp/>at<sp/>the<sp/>same<sp/>time<sp/>Because<sp/>both<sp/>of<sp/>them<sp/>think<sp/>they&apos;re</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>only<sp/>ones<sp/>inserting<sp/>information<sp/>into<sp/>the<sp/>ancillary<sp/>section<sp/>of<sp/>the<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ab1ccaeda99cf029d6e6ab4477efde9a8" kindref="member">do_dab</ref><sp/>&amp;&amp;<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a404e8d457ac5ba63be0144540ce035a9" kindref="member">do_energy_levels</ref>)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Can&apos;t<sp/>do<sp/>DAB<sp/>and<sp/>Energy<sp/>Levels<sp/>at<sp/>the<sp/>same<sp/>time\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>number<sp/>of<sp/>ancillary<sp/>bits<sp/>automatically,<sp/>if<sp/>none<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ae5124ecbd090fd5ff6aae6900a7b6ed4" kindref="member">num_ancillary_bits</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a404e8d457ac5ba63be0144540ce035a9" kindref="member">do_energy_levels</ref>)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ae5124ecbd090fd5ff6aae6900a7b6ed4" kindref="member">num_ancillary_bits</ref><sp/>=<sp/><ref refid="energy_8c_1abe0c71599775ddc5af55f5d3c3e889f2" kindref="member">get_required_energy_bits</ref>(glopts);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ae5124ecbd090fd5ff6aae6900a7b6ed4" kindref="member">num_ancillary_bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>if<sp/>we&apos;re<sp/>doing<sp/>energy<sp/>levels,<sp/>that<sp/>there&apos;s<sp/>enough<sp/>space<sp/>to<sp/>put<sp/>the<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a404e8d457ac5ba63be0144540ce035a9" kindref="member">do_energy_levels</ref>)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>required<sp/>=<sp/><ref refid="energy_8c_1abe0c71599775ddc5af55f5d3c3e889f2" kindref="member">get_required_energy_bits</ref>(glopts);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ae5124ecbd090fd5ff6aae6900a7b6ed4" kindref="member">num_ancillary_bits</ref><sp/>&lt;<sp/>required)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Warning:<sp/>Too<sp/>few<sp/>ancillary<sp/>bits<sp/>to<sp/>store<sp/>energy<sp/>levels:<sp/>%i&lt;%i\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ae5124ecbd090fd5ff6aae6900a7b6ed4" kindref="member">num_ancillary_bits</ref>,<sp/>required);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>MFC<sp/>Feb<sp/>2003:<sp/>in<sp/>VBR<sp/>mode,<sp/>joint</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>stereo<sp/>doesn&apos;t<sp/>make<sp/>any<sp/>sense<sp/>at</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>moment,<sp/>as<sp/>there<sp/>are<sp/>no<sp/>noisy</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>subbands<sp/>according<sp/>to</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>bits_for_nonoise<sp/>in<sp/>vbr<sp/>mode</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ac5e4a3519d895e56ff0daebaf255128b" kindref="member">vbr</ref><sp/>&amp;&amp;<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9a485b580a62dd91ca9d2b6c51cbddb5" kindref="member">mode</ref><sp/>==<sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa944018843ef67ac47d3e680c749b2967" kindref="member">TWOLAME_JOINT_STEREO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Warning:<sp/>Can&apos;t<sp/>do<sp/>Joint<sp/>Stereo<sp/>with<sp/>VBR,<sp/>switching<sp/>to<sp/>normal<sp/>stereo.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>stereo<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="get__set_8c_1aef8212f0d9c29618826274b9685cddf9" kindref="member">twolame_set_mode</ref>(glopts,<sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa785df1b22ebb296610b938793906f66d" kindref="member">TWOLAME_STEREO</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Can&apos;t<sp/>do<sp/>padding<sp/>and<sp/>VBR<sp/>at<sp/>same<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ac5e4a3519d895e56ff0daebaf255128b" kindref="member">vbr</ref><sp/>&amp;&amp;<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aed52eccbde57b496f02e1f19e2ff9eb3" kindref="member">padding</ref><sp/>==<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Can&apos;t<sp/>do<sp/>padding<sp/>and<sp/>VBR<sp/>at<sp/>same<sp/>time\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>Number<sp/>of<sp/>output<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a5388d86ab861953b968b2ec81bda950f" kindref="member">num_channels_out</ref><sp/>=<sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a9a485b580a62dd91ca9d2b6c51cbddb5" kindref="member">mode</ref><sp/>==<sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa482d714be97e4cb21c223850ece06456" kindref="member">TWOLAME_MONO</ref>)<sp/>?<sp/>1<sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>mpeg<sp/>header<sp/>from<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(init_header_info(glopts)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>table<sp/>number<sp/>and<sp/>sblimit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="twolame_2libtwolame_2encode_8c_1a806698a4987e0d9114cb04ec2d34fc37" kindref="member">encode_init</ref>(glopts)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialise<sp/>bitrate<sp/>allocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="twolame_2libtwolame_2encode_8c_1a8312466819ccf33a3daa7221a3600d3c" kindref="member">init_bit_allocation</ref>(glopts)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>input<sp/>samplerate<sp/>is<sp/>same<sp/>as<sp/>output<sp/>samplerate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a6c0025d3edc48ae42a8f72fab21ce1a6" kindref="member">samplerate_out</ref><sp/>!=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a82eea31e571027820c8fc63c159f97be" kindref="member">samplerate_in</ref>)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;twolame_init_params():<sp/>sorry,<sp/>twolame<sp/>doesn&apos;t<sp/>support<sp/>resampling<sp/>(yet).\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>interal<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a7effec5229bce5662be57b47b6b212f8" kindref="member">psycount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory<sp/>to<sp/>larger<sp/>buffers<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1adeb3816d15591347af6d058d2ccdda8c" kindref="member">subband</ref><sp/>=<sp/>(<ref refid="twolame_2libtwolame_2common_8h_1a831f2fc4da9fc5511fcde6ada2a902ec" kindref="member">subband_t</ref><sp/>*)<sp/><ref refid="twolame_2libtwolame_2mem_8h_1a5c998cfb7ed77f0c7967b685235f8ba5" kindref="member">TWOLAME_MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="twolame_2libtwolame_2common_8h_1a831f2fc4da9fc5511fcde6ada2a902ec" kindref="member">subband_t</ref>));</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac22600520036c32486e6d026310a5f08" kindref="member">j_sample</ref><sp/>=<sp/>(<ref refid="twolame_2libtwolame_2common_8h_1ace46c5d0a3ef9fc9a02dd51989c21dc7" kindref="member">jsb_sample_t</ref><sp/>*)<sp/><ref refid="twolame_2libtwolame_2mem_8h_1a5c998cfb7ed77f0c7967b685235f8ba5" kindref="member">TWOLAME_MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="twolame_2libtwolame_2common_8h_1ace46c5d0a3ef9fc9a02dd51989c21dc7" kindref="member">jsb_sample_t</ref>));</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a93b6e50f1d2c624f0d448fd49733841f" kindref="member">sb_sample</ref><sp/>=<sp/>(<ref refid="twolame_2libtwolame_2common_8h_1a3ce8ef67884aaf16b8e151c6770a7720" kindref="member">sb_sample_t</ref><sp/>*)<sp/><ref refid="twolame_2libtwolame_2mem_8h_1a5c998cfb7ed77f0c7967b685235f8ba5" kindref="member">TWOLAME_MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="twolame_2libtwolame_2common_8h_1a3ce8ef67884aaf16b8e151c6770a7720" kindref="member">sb_sample_t</ref>));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a8eaa31d1aa907911c5ebf55a4e654ba8" kindref="member">bit_alloc</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(glopts-&gt;<ref refid="structtwolame__options__struct_1a8eaa31d1aa907911c5ebf55a4e654ba8" kindref="member">bit_alloc</ref>));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a6ea70e1aff6609b6451dfe9c98cbaa51" kindref="member">scfsi</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(glopts-&gt;<ref refid="structtwolame__options__struct_1a6ea70e1aff6609b6451dfe9c98cbaa51" kindref="member">scfsi</ref>));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a0e8c6e8c13d9e78799d794674514d0b4" kindref="member">scalar</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(glopts-&gt;<ref refid="structtwolame__options__struct_1a0e8c6e8c13d9e78799d794674514d0b4" kindref="member">scalar</ref>));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aba04b12dc6567e0f23cdbd5993adfd43" kindref="member">j_scale</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(glopts-&gt;<ref refid="structtwolame__options__struct_1aba04b12dc6567e0f23cdbd5993adfd43" kindref="member">j_scale</ref>));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a28a0dd57c1aa50795d3b6cc6f18b39bc" kindref="member">smrdef</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(glopts-&gt;<ref refid="structtwolame__options__struct_1a28a0dd57c1aa50795d3b6cc6f18b39bc" kindref="member">smrdef</ref>));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9c67a9784ca70f5f6e783253db9a8a3f" kindref="member">smr</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(glopts-&gt;<ref refid="structtwolame__options__struct_1a9c67a9784ca70f5f6e783253db9a8a3f" kindref="member">smr</ref>));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac903ebf73ade75184ba1cdaa9e088edc" kindref="member">max_sc</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(glopts-&gt;<ref refid="structtwolame__options__struct_1ac903ebf73ade75184ba1cdaa9e088edc" kindref="member">max_sc</ref>));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>subband<sp/>windowfilter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="subband_8c_1a5974cc2dc7a98d8c5792af192f64b625" kindref="member">init_subband</ref>(&amp;glopts-&gt;<ref refid="structtwolame__options__struct_1ab497609172fe5f75806d2eb2518b206f" kindref="member">smem</ref>)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>initalised<sp/>now<sp/>:)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a205bb93e39b37ed46fddf5bbca9fdfc4" kindref="member">twolame_init</ref>++;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Scale<sp/>the<sp/>samples<sp/>in<sp/>the<sp/>frame<sp/>sample<sp/>buffer</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/>using<sp/>the<sp/>user<sp/>specified<sp/>values</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/>and<sp/>downmix/upmix<sp/>according<sp/>to<sp/>the<sp/>number<sp/>of<sp/>input/output<sp/>channels<sp/></highlight></codeline>
<codeline lineno="372"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scale_and_mix_samples(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples<sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>scaling<sp/>to<sp/>both<sp/>channels<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a84946abd65a959f997ba582eed5da511" kindref="member">scale</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a84946abd65a959f997ba582eed5da511" kindref="member">scale</ref><sp/>!=<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_samples;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[0][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a84946abd65a959f997ba582eed5da511" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[1][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a84946abd65a959f997ba582eed5da511" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>scaling<sp/>to<sp/>channel<sp/>0<sp/>(left)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1acd09bfe6ca734e4d883b02abc804f180" kindref="member">scale_left</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1acd09bfe6ca734e4d883b02abc804f180" kindref="member">scale_left</ref><sp/>!=<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_samples;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[0][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1acd09bfe6ca734e4d883b02abc804f180" kindref="member">scale_left</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>scaling<sp/>to<sp/>channel<sp/>1<sp/>(right)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ae7aa58afe9d069bfe345675db235e30e" kindref="member">scale_right</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ae7aa58afe9d069bfe345675db235e30e" kindref="member">scale_right</ref><sp/>!=<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_samples;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[1][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ae7aa58afe9d069bfe345675db235e30e" kindref="member">scale_right</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Downmix<sp/>to<sp/>Mono<sp/>if<sp/>2<sp/>channels<sp/>in<sp/>and<sp/>1<sp/>channel<sp/>out<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref><sp/>==<sp/>2<sp/>&amp;&amp;<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a5388d86ab861953b968b2ec81bda950f" kindref="member">num_channels_out</ref><sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_samples;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[0][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>((long)<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[0][i]<sp/>+<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[1][i])<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[1][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upmix<sp/>to<sp/>Stereo<sp/>if<sp/>2<sp/>channels<sp/>out<sp/>and<sp/>1<sp/>channel<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref><sp/>==<sp/>1<sp/>&amp;&amp;<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a5388d86ab861953b968b2ec81bda950f" kindref="member">num_channels_out</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_samples;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[1][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[0][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/><sp/><sp/>Encode<sp/>a<sp/>single<sp/>frame<sp/>of<sp/>audio<sp/>from<sp/>1152<sp/>samples</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/><sp/>Audio<sp/>samples<sp/>are<sp/>taken<sp/>from<sp/>glopts-&gt;buffer</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/><sp/>Encoded<sp/>bit<sp/>stream<sp/>is<sp/>placed<sp/>in<sp/>to<sp/>parameter<sp/>bs</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/><sp/>(not<sp/>intended<sp/>for<sp/>use<sp/>outside<sp/>the<sp/>library)</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>size<sp/>of<sp/>the<sp/>frame</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/><sp/>or<sp/>-1<sp/>if<sp/>there<sp/>is<sp/>an<sp/>error</highlight></codeline>
<codeline lineno="422"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encode_frame(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/><ref refid="structbit__stream__struc" kindref="compound">bit_stream</ref><sp/>*<sp/>bs)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nch<sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a5388d86ab861953b968b2ec81bda950f" kindref="member">num_channels_out</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sb,<sp/>ch,<sp/>adb,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameBits,<sp/>initial_bits;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>sam[2][1056];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!glopts-&gt;<ref refid="structtwolame__options__struct_1a205bb93e39b37ed46fddf5bbca9fdfc4" kindref="member">twolame_init</ref>)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>call<sp/>twolame_init_params()<sp/>before<sp/>starting<sp/>encoding.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>and<sp/>mix<sp/>the<sp/>input<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>scale_and_mix_samples(glopts);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>saved<sp/>audio<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>sam,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sam));</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>bits<sp/>to<sp/>calculate<sp/>CRC<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a6efe63477b890f1ab423e82cd6c65bf0" kindref="member">num_crc_bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>number<sp/>of<sp/>bits<sp/>initially<sp/>in<sp/>the<sp/>bit<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_bits<sp/>=<sp/><ref refid="bitbuffer_8h_1ae3418d14b5c7e7cf0e8c545364489348" kindref="member">buffer_sstell</ref>(bs);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>adb<sp/>=<sp/><ref refid="availbits_8c_1a23c7bcc3799f87a38a8245bcb18fb000" kindref="member">available_bits</ref>(glopts);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allow<sp/>the<sp/>user<sp/>to<sp/>reserve<sp/>some<sp/>space<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>frame<sp/>This<sp/>will<sp/>however<sp/>leave<sp/>fewer</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>for<sp/>the<sp/>audio.<sp/>Need<sp/>to<sp/>do<sp/>a<sp/>sanity<sp/>check<sp/>here<sp/>to<sp/>see<sp/>that<sp/>there<sp/>are<sp/>*some*<sp/>bits<sp/>left.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ae5124ecbd090fd5ff6aae6900a7b6ed4" kindref="member">num_ancillary_bits</ref><sp/>&gt;<sp/>0.6<sp/>*<sp/>adb)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trying<sp/>to<sp/>reserve<sp/>more<sp/>than<sp/>60%<sp/>of<sp/>the<sp/>frame.<sp/>0.6<sp/>is<sp/>arbitrary.<sp/>but<sp/>since<sp/>most</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>applications<sp/>probably<sp/>only<sp/>want<sp/>to<sp/>reserve<sp/>a<sp/>few<sp/>bytes,<sp/>this<sp/>seems<sp/>fine.<sp/>Typical<sp/>frame</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>is<sp/>about<sp/>800bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;You&apos;re<sp/>trying<sp/>to<sp/>reserve<sp/>more<sp/>than<sp/>60%%<sp/>of<sp/>the<sp/>mpeg<sp/>frame<sp/>for<sp/>ancillary<sp/>data\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>probably<sp/>an<sp/>error.<sp/>But<sp/>I&apos;ll<sp/>keep<sp/>going<sp/>anyway...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>adb<sp/>-=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ae5124ecbd090fd5ff6aae6900a7b6ed4" kindref="member">num_ancillary_bits</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MFC<sp/>26<sp/>July<sp/>2003<sp/>Doing<sp/>DAB<sp/>became<sp/>a<sp/>bit<sp/>harder<sp/>in<sp/>the<sp/>reorganisation<sp/>of<sp/>the<sp/>code.<sp/>Now<sp/>there</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>no<sp/>guarantee<sp/>that<sp/>there<sp/>is<sp/>more<sp/>than<sp/>one<sp/>frame<sp/>in<sp/>the<sp/>bitbuffer.<sp/>But<sp/>DAB<sp/>requires<sp/>that</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>CRC<sp/>for<sp/>the<sp/>*current*<sp/>frame<sp/>be<sp/>written<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>*previous*<sp/>frame.<sp/>Workaround:</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Users<sp/>(Nicholas?)<sp/>wanting<sp/>to<sp/>implement<sp/>DAB<sp/>will<sp/>have<sp/>to<sp/>do<sp/>some<sp/>work<sp/>in<sp/>the<sp/>frontend.<sp/>First:<sp/></highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reserve<sp/>some<sp/>bits<sp/>for<sp/>yourself<sp/>(options-&gt;num_ancillary_bits)<sp/>Second:<sp/>Put<sp/>the<sp/>encoder<sp/>into</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;single<sp/>frame<sp/>mode&quot;<sp/>i.e.<sp/>only<sp/>read<sp/>1152<sp/>samples<sp/>per<sp/>channel.</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(frontendoptions-&gt;singleFrameMode)<sp/>Third:<sp/>When<sp/>you<sp/>receive<sp/>each<sp/>mp2<sp/>frame<sp/>back<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>library,<sp/>you&apos;ll<sp/>have<sp/>to<sp/>insert<sp/>the<sp/>options-&gt;dabCrc[i]<sp/>values<sp/>into<sp/>the<sp/>end<sp/>of<sp/>the<sp/>frame</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yourself.<sp/>(DAB<sp/>crc<sp/>calc<sp/>is<sp/>done<sp/>below)<sp/>The<sp/>frontend<sp/>will<sp/>have<sp/>to<sp/>keep<sp/>the<sp/>previous<sp/>frame<sp/>in</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory.<sp/>As<sp/>of<sp/>26July<sp/>all<sp/>that<sp/>needs<sp/>to<sp/>be<sp/>done<sp/>is<sp/>for<sp/>the<sp/>frontend<sp/>to<sp/>buffer<sp/>one<sp/>frame<sp/>in</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory,<sp/>such<sp/>that<sp/>the<sp/>CRC<sp/>for<sp/>the<sp/>next<sp/>frame<sp/>can<sp/>be<sp/>written<sp/>in<sp/>at<sp/>the<sp/>end<sp/>of<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gr,<sp/>bl,<sp/>ch;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>New<sp/>polyphase<sp/>filter<sp/>Combines<sp/>windowing<sp/>and<sp/>filtering.<sp/>Ricardo<sp/>Feb&apos;03<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gr<sp/>=<sp/>0;<sp/>gr<sp/>&lt;<sp/>3;<sp/>gr++)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bl<sp/>=<sp/>0;<sp/>bl<sp/>&lt;<sp/>12;<sp/>bl++)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>nch;<sp/>ch++)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="subband_8c_1a6c7b27818759c23c7cfed2295778ca9b" kindref="member">window_filter_subband</ref>(&amp;glopts-&gt;<ref refid="structtwolame__options__struct_1ab497609172fe5f75806d2eb2518b206f" kindref="member">smem</ref>,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[ch][gr<sp/>*<sp/>12<sp/>*<sp/>32<sp/>+<sp/>32<sp/>*<sp/>bl],<sp/>ch,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*glopts-&gt;<ref refid="structtwolame__options__struct_1a93b6e50f1d2c624f0d448fd49733841f" kindref="member">sb_sample</ref>)[ch][gr][bl][0]);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2encode_8c_1a9847da226c932f963b7cee29df0f22c5" kindref="member">scalefactor_calc</ref>(*glopts-&gt;<ref refid="structtwolame__options__struct_1a93b6e50f1d2c624f0d448fd49733841f" kindref="member">sb_sample</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a0e8c6e8c13d9e78799d794674514d0b4" kindref="member">scalar</ref>,<sp/>nch,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ace0e0a1e04ffe3ec27bf782edac6973b" kindref="member">sblimit</ref>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2encode_8c_1a531ff0930c646e9d440164293dfdc415" kindref="member">find_sf_max</ref>(glopts,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a0e8c6e8c13d9e78799d794674514d0b4" kindref="member">scalar</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac903ebf73ade75184ba1cdaa9e088edc" kindref="member">max_sc</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a9a485b580a62dd91ca9d2b6c51cbddb5" kindref="member">mode</ref><sp/>==<sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa944018843ef67ac47d3e680c749b2967" kindref="member">TWOLAME_JOINT_STEREO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>way<sp/>we<sp/>calculate<sp/>more<sp/>mono<sp/>than<sp/>we<sp/>need<sp/>but<sp/>it<sp/>is<sp/>cheap<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2encode_8c_1acc5df7ac320b7535796ef2ff71572396" kindref="member">combine_lr</ref>(*glopts-&gt;<ref refid="structtwolame__options__struct_1a93b6e50f1d2c624f0d448fd49733841f" kindref="member">sb_sample</ref>,<sp/>*glopts-&gt;<ref refid="structtwolame__options__struct_1ac22600520036c32486e6d026310a5f08" kindref="member">j_sample</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ace0e0a1e04ffe3ec27bf782edac6973b" kindref="member">sblimit</ref>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2encode_8c_1a9847da226c932f963b7cee29df0f22c5" kindref="member">scalefactor_calc</ref>(glopts-&gt;<ref refid="structtwolame__options__struct_1ac22600520036c32486e6d026310a5f08" kindref="member">j_sample</ref>,<sp/>&amp;glopts-&gt;<ref refid="structtwolame__options__struct_1aba04b12dc6567e0f23cdbd5993adfd43" kindref="member">j_scale</ref>,<sp/>1,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ace0e0a1e04ffe3ec27bf782edac6973b" kindref="member">sblimit</ref>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((glopts-&gt;<ref refid="structtwolame__options__struct_1aefd142ad35e687a25dc01dd2238c8e5b" kindref="member">quickmode</ref><sp/>==<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/>&amp;&amp;<sp/>(++glopts-&gt;<ref refid="structtwolame__options__struct_1a7effec5229bce5662be57b47b6b212f8" kindref="member">psycount</ref><sp/>%<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a39883ae20b9d53fdf154845a0ecd5920" kindref="member">quickcount</ref><sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>using<sp/>quick<sp/>mode,<sp/>so<sp/>we&apos;re<sp/>only<sp/>calculating<sp/>the<sp/>model<sp/>every<sp/>&apos;quickcount&apos;<sp/>frames.</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Otherwise,<sp/>just<sp/>copy<sp/>the<sp/>old<sp/>ones<sp/>across<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>nch;<sp/>ch++)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sb<sp/>=<sp/>0;<sp/>sb<sp/>&lt;<sp/><ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>;<sp/>sb++)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9c67a9784ca70f5f6e783253db9a8a3f" kindref="member">smr</ref>[ch][sb]<sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a28a0dd57c1aa50795d3b6cc6f18b39bc" kindref="member">smrdef</ref>[ch][sb];</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>psymodel<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a3b4099e20d7d3727015bf580a12806cc" kindref="member">psymodel</ref>)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="psycho__n1_8c_1a69971a162aefa2d6b72bbde8ec47aed8" kindref="member">psycho_n1</ref>(glopts,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9c67a9784ca70f5f6e783253db9a8a3f" kindref="member">smr</ref>,<sp/>nch);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Psy<sp/>Model<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="psycho__0_8c_1a79dc37ab60c72501142aaeb7430f0a8c" kindref="member">psycho_0</ref>(glopts,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9c67a9784ca70f5f6e783253db9a8a3f" kindref="member">smr</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a0e8c6e8c13d9e78799d794674514d0b4" kindref="member">scalar</ref>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="psycho__1_8c_1ad0277cd7e30c0f449b67ac1d9e82efcc" kindref="member">psycho_1</ref>(glopts,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac903ebf73ade75184ba1cdaa9e088edc" kindref="member">max_sc</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9c67a9784ca70f5f6e783253db9a8a3f" kindref="member">smr</ref>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="psycho__2_8c_1a6241857323b191e666923b4f816f7e0d" kindref="member">psycho_2</ref>(glopts,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>,<sp/>sam,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9c67a9784ca70f5f6e783253db9a8a3f" kindref="member">smr</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Modified<sp/>psy<sp/>model<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="psycho__3_8c_1a4baf0eceb84178e5bea2bac1f6354864" kindref="member">psycho_3</ref>(glopts,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac903ebf73ade75184ba1cdaa9e088edc" kindref="member">max_sc</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9c67a9784ca70f5f6e783253db9a8a3f" kindref="member">smr</ref>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Modified<sp/>psy<sp/>model<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="psycho__4_8c_1a052e4621e8b7c3dafd61426dce2782c6" kindref="member">psycho_4</ref>(glopts,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>,<sp/>sam,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9c67a9784ca70f5f6e783253db9a8a3f" kindref="member">smr</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>psy<sp/>model<sp/>specification:<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a3b4099e20d7d3727015bf580a12806cc" kindref="member">psymodel</ref>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aefd142ad35e687a25dc01dd2238c8e5b" kindref="member">quickmode</ref><sp/>==<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>smr<sp/>values<sp/>and<sp/>reuse<sp/>them<sp/>later<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>nch;<sp/>ch++)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sb<sp/>=<sp/>0;<sp/>sb<sp/>&lt;<sp/><ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>;<sp/>sb++)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a28a0dd57c1aa50795d3b6cc6f18b39bc" kindref="member">smrdef</ref>[ch][sb]<sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9c67a9784ca70f5f6e783253db9a8a3f" kindref="member">smr</ref>[ch][sb];</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2encode_8c_1a98c576c81a74d7ec73f3b5b505cc7f11" kindref="member">sf_transmission_pattern</ref>(glopts,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a0e8c6e8c13d9e78799d794674514d0b4" kindref="member">scalar</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a6ea70e1aff6609b6451dfe9c98cbaa51" kindref="member">scfsi</ref>);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2encode_8c_1aa6f6a0b5c40635d5c4a2340dd5afd4bd" kindref="member">main_bit_allocation</ref>(glopts,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9c67a9784ca70f5f6e783253db9a8a3f" kindref="member">smr</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a6ea70e1aff6609b6451dfe9c98cbaa51" kindref="member">scfsi</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a8eaa31d1aa907911c5ebf55a4e654ba8" kindref="member">bit_alloc</ref>,<sp/>&amp;adb);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2encode_8c_1a2a016df598c6f65e39016018c5bc7a4f" kindref="member">write_header</ref>(glopts,<sp/>bs);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Leave<sp/>space<sp/>for<sp/>2<sp/>bytes<sp/>of<sp/>CRC<sp/>to<sp/>be<sp/>filled<sp/>in<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1afdb13bca150737358592a608804b2ad3" kindref="member">error_protection</ref>)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_putbits(bs,<sp/>0,<sp/>16);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2encode_8c_1abe4db11c513918189b0461119d1ecf0e" kindref="member">write_bit_alloc</ref>(glopts,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a8eaa31d1aa907911c5ebf55a4e654ba8" kindref="member">bit_alloc</ref>,<sp/>bs);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2encode_8c_1a113a05382be70492c82703c1014105cc" kindref="member">write_scalefactors</ref>(glopts,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a8eaa31d1aa907911c5ebf55a4e654ba8" kindref="member">bit_alloc</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a6ea70e1aff6609b6451dfe9c98cbaa51" kindref="member">scfsi</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a0e8c6e8c13d9e78799d794674514d0b4" kindref="member">scalar</ref>,<sp/>bs);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2encode_8c_1a5b7b739e10c387ea8e7c777a29a7ad28" kindref="member">subband_quantization</ref>(glopts,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a0e8c6e8c13d9e78799d794674514d0b4" kindref="member">scalar</ref>,<sp/>*glopts-&gt;<ref refid="structtwolame__options__struct_1a93b6e50f1d2c624f0d448fd49733841f" kindref="member">sb_sample</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aba04b12dc6567e0f23cdbd5993adfd43" kindref="member">j_scale</ref>,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*glopts-&gt;<ref refid="structtwolame__options__struct_1ac22600520036c32486e6d026310a5f08" kindref="member">j_sample</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a8eaa31d1aa907911c5ebf55a4e654ba8" kindref="member">bit_alloc</ref>,<sp/>*glopts-&gt;<ref refid="structtwolame__options__struct_1adeb3816d15591347af6d058d2ccdda8c" kindref="member">subband</ref>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2encode_8c_1a27e01b1296b8ae425b52a1c4a22f2581" kindref="member">write_samples</ref>(glopts,<sp/>*glopts-&gt;<ref refid="structtwolame__options__struct_1adeb3816d15591347af6d058d2ccdda8c" kindref="member">subband</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a8eaa31d1aa907911c5ebf55a4e654ba8" kindref="member">bit_alloc</ref>,<sp/>bs);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>all<sp/>the<sp/>bits<sp/>were<sp/>used,<sp/>write<sp/>out<sp/>a<sp/>stack<sp/>of<sp/>zeros<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>adb;<sp/>i++)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_put1bit(bs,<sp/>0);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MFC<sp/>July<sp/>03<sp/>FIXME<sp/>Write<sp/>an<sp/>extra<sp/>byte<sp/>for<sp/>16/24/32/48<sp/>input<sp/>when<sp/>padding<sp/>is<sp/>on.<sp/>Something</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>must<sp/>be<sp/>going<sp/>astray<sp/>with<sp/>the<sp/>frame<sp/>size<sp/>calcs.<sp/>This<sp/>fudge<sp/>works<sp/>fine<sp/>for<sp/>the<sp/>moment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((glopts-&gt;<ref refid="structtwolame__options__struct_1a50fa0b33674f61d8e3386b3e8d54b78c" kindref="member">header</ref>.<ref refid="structframe__header_1aeaaf556b174d5d6c8d719f34d4f9154e" kindref="member">samplerate_idx</ref><sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aed52eccbde57b496f02e1f19e2ff9eb3" kindref="member">padding</ref>))<sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.<sp/>not<sp/>a<sp/>44.1<sp/>or<sp/>22kHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_putbits(bs,<sp/>0,<sp/>8);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ab1ccaeda99cf029d6e6ab4477efde9a8" kindref="member">do_dab</ref>)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>CRC<sp/>calc<sp/>for<sp/>DAB<sp/>stuff<sp/>if<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>will<sp/>be<sp/>up<sp/>to<sp/>the<sp/>frontend<sp/>to<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>end<sp/>of<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>previous<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac1cd33eef92847da1ee8dd621d6653b7" kindref="member">dab_crc_len</ref><sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dab_8c_1a1ded80042bb30b2e3755e74ae1ad3b4c" kindref="member">dab_crc_calc</ref>(glopts,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a8eaa31d1aa907911c5ebf55a4e654ba8" kindref="member">bit_alloc</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a6ea70e1aff6609b6451dfe9c98cbaa51" kindref="member">scfsi</ref>,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a0e8c6e8c13d9e78799d794674514d0b4" kindref="member">scalar</ref>,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;glopts-&gt;<ref refid="structtwolame__options__struct_1a81a3c1f7282199a782cbddabaaac544e" kindref="member">dab_crc</ref>[i],<sp/>i);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>space<sp/>for<sp/>the<sp/>reserved<sp/>ancillary<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ae5124ecbd090fd5ff6aae6900a7b6ed4" kindref="member">num_ancillary_bits</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_put1bit(bs,<sp/>0);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calulate<sp/>the<sp/>number<sp/>of<sp/>bits<sp/>in<sp/>this<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>frameBits<sp/>=<sp/><ref refid="bitbuffer_8h_1ae3418d14b5c7e7cf0e8c545364489348" kindref="member">buffer_sstell</ref>(bs)<sp/>-<sp/>initial_bits;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frameBits<sp/>%<sp/>8)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>program<sp/>failure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Sent<sp/>%ld<sp/>bits<sp/>=<sp/>%ld<sp/>slots<sp/>plus<sp/>%ld\n&quot;</highlight><highlight class="normal">,<sp/>frameBits,<sp/>frameBits<sp/>/<sp/>8,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameBits<sp/>%<sp/>8);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;If<sp/>you<sp/>are<sp/>reading<sp/>this,<sp/>the<sp/>program<sp/>is<sp/>broken\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;email<sp/>%s<sp/>with<sp/>the<sp/>command<sp/>line<sp/>arguments<sp/>and<sp/>other<sp/>info\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2libid3tag_2msvc_09_09_2config_8h_1a1d1d2d7f8d2f95b376954d649ab03233" kindref="member">PACKAGE_BUGREPORT</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>energy<sp/>levels<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a404e8d457ac5ba63be0144540ce035a9" kindref="member">do_energy_levels</ref>)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="energy_8c_1a79618006ff7b34f6de67bfc0795c2c08" kindref="member">do_energy_levels</ref>(glopts,<sp/>bs);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MEANX:<sp/>Recompute<sp/>checksum<sp/>from<sp/>bitstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1afdb13bca150737358592a608804b2ad3" kindref="member">error_protection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*frame_ptr<sp/>=<sp/>bs-&gt;<ref refid="structbit__stream__struc_1aa9bc37a08d818a5edf70a98a3dc055e1" kindref="member">buf</ref><sp/>+<sp/>(initial_bits<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2crc_8c_1a7fde8360db18289f53d285fb09f842ed" kindref="member">crc_writeheader</ref>(frame_ptr,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a6efe63477b890f1ab423e82cd6c65bf0" kindref="member">num_crc_bits</ref>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fprintf(stderr,&quot;Frame<sp/>size:<sp/>%li\n\n&quot;,frameBits/8);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frameBits<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/><sp/>glopts</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/><sp/>leftpcm<sp/>-<sp/>holds<sp/>left<sp/>channel<sp/>(or<sp/>mono<sp/>channel)</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/><sp/>rightpcm<sp/>-<sp/>d&apos;uh</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/><sp/>num_samples<sp/>-<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>in<sp/>each<sp/>channel</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/><sp/>mp2buffer<sp/>-<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>place<sp/>where<sp/>we<sp/>want<sp/>the<sp/>mpeg<sp/>data<sp/>to<sp/>be<sp/>written</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/><sp/>mp2buffer_size<sp/>-<sp/>how<sp/>much<sp/>space<sp/>the<sp/>user<sp/>allocated<sp/>for<sp/>this<sp/>buffer</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/><sp/>mp2fill_size<sp/>-<sp/>how<sp/>much<sp/>mpeg<sp/>data<sp/>the<sp/>library<sp/>has<sp/>put<sp/>into<sp/>the<sp/>mp2buffer<sp/></highlight></codeline>
<codeline lineno="616"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618" refid="twolame_8h_1aaa714b5fbd2e6fd5a95e7af7e5d640e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8c_1a7656283020d9b131790bf5a99af055c4" kindref="member">twolame_encode_buffer</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftpcm[],</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rightpcm[],</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mp2buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2buffer_size)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbit__stream__struc" kindref="compound">bit_stream</ref><sp/>*mybs;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_samples<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>would<sp/>be<sp/>a<sp/>great<sp/>time<sp/>to<sp/>validate<sp/>the<sp/>size<sp/>of<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>samples/1152<sp/>*<sp/>sizeof(frame)<sp/>&lt;<sp/>mp2buffer_size<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>mybs<sp/>=<sp/><ref refid="bitbuffer_8c_1a566a93805d5a0fa1ab65d483bf13d33b" kindref="member">buffer_init</ref>(mp2buffer,<sp/>mp2buffer_size);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>up<sp/>all<sp/>the<sp/>samples<sp/>in<sp/>in_buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_samples)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>up<sp/>glopts-&gt;buffer<sp/>with<sp/>as<sp/>much<sp/>as<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samples_to_copy<sp/>=<sp/><ref refid="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" kindref="member">TWOLAME_SAMPLES_PER_FRAME</ref><sp/>-<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_samples<sp/>&lt;<sp/>samples_to_copy)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_to_copy<sp/>=<sp/>num_samples;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>across<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>samples_to_copy;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[0][glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>*leftpcm++;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[1][glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>*rightpcm++;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>sample<sp/>counts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>+=<sp/>samples_to_copy;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_samples<sp/>-=<sp/>samples_to_copy;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>there<sp/>enough<sp/>to<sp/>encode<sp/>a<sp/>whole<sp/>frame<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>&gt;=<sp/><ref refid="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" kindref="member">TWOLAME_SAMPLES_PER_FRAME</ref>)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>encode_frame(glopts,<sp/>mybs);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitbuffer_8c_1af77da01a62568276e380a0fc250afa25" kindref="member">buffer_deinit</ref>(&amp;mybs);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp2_size<sp/>+=<sp/>bytes;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>-=<sp/><ref refid="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" kindref="member">TWOLAME_SAMPLES_PER_FRAME</ref>;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>up<sp/>the<sp/>bit<sp/>stream<sp/>buffer<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitbuffer_8c_1af77da01a62568276e380a0fc250afa25" kindref="member">buffer_deinit</ref>(&amp;mybs);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mp2_size);</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="twolame_8h_1a99abbe26ce5b5b21766017d92ff7581d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8c_1a578b70ad7abfcc2bbed09ecf661fd66e" kindref="member">twolame_encode_buffer_interleaved</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pcm[],</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mp2buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2buffer_size)</highlight></codeline>
<codeline lineno="679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbit__stream__struc" kindref="compound">bit_stream</ref><sp/>*mybs;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_samples<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>would<sp/>be<sp/>a<sp/>great<sp/>time<sp/>to<sp/>validate<sp/>the<sp/>size<sp/>of<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>samples/1152<sp/>*<sp/>sizeof(frame)<sp/>&lt;<sp/>mp2buffer_size<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>mybs<sp/>=<sp/><ref refid="bitbuffer_8c_1a566a93805d5a0fa1ab65d483bf13d33b" kindref="member">buffer_init</ref>(mp2buffer,<sp/>mp2buffer_size);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>up<sp/>all<sp/>the<sp/>samples<sp/>in<sp/>in_buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_samples)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>up<sp/>glopts-&gt;buffer<sp/>with<sp/>as<sp/>much<sp/>as<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samples_to_copy<sp/>=<sp/><ref refid="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" kindref="member">TWOLAME_SAMPLES_PER_FRAME</ref><sp/>-<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref>;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_samples<sp/>&lt;<sp/>samples_to_copy)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_to_copy<sp/>=<sp/>num_samples;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>across<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>samples_to_copy;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[0][glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>*pcm++;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[1][glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>*pcm++;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>sample<sp/>counts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>+=<sp/>samples_to_copy;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_samples<sp/>-=<sp/>samples_to_copy;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>there<sp/>enough<sp/>to<sp/>encode<sp/>a<sp/>whole<sp/>frame<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>&gt;=<sp/><ref refid="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" kindref="member">TWOLAME_SAMPLES_PER_FRAME</ref>)<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>encode_frame(glopts,<sp/>mybs);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitbuffer_8c_1af77da01a62568276e380a0fc250afa25" kindref="member">buffer_deinit</ref>(&amp;mybs);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp2_size<sp/>+=<sp/>bytes;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>-=<sp/><ref refid="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" kindref="member">TWOLAME_SAMPLES_PER_FRAME</ref>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>up<sp/>the<sp/>bit<sp/>stream<sp/>buffer<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitbuffer_8c_1af77da01a62568276e380a0fc250afa25" kindref="member">buffer_deinit</ref>(&amp;mybs);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mp2_size);</highlight></codeline>
<codeline lineno="730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>float32_to_short(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[],<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride)</highlight></codeline>
<codeline lineno="734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>num_samples;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/><ref refid="real_8h_1a483e8f95ebd254c9279e0ada03a9a6e8" kindref="member">lrintf</ref>(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[n<sp/>*<sp/>stride]<sp/>*<sp/>32768.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>&gt;<sp/>SHRT_MAX)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>[n]<sp/>=<sp/>SHRT_MAX;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>&lt;<sp/>SHRT_MIN)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>[n]<sp/>=<sp/>SHRT_MIN;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>[n]<sp/>=<sp/>(short)<sp/>tmp;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/><sp/>glopts</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/>leftpcm<sp/>-<sp/>holds<sp/>left<sp/>channel<sp/>(or<sp/>mono<sp/>channel)</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/><sp/>rightpcm<sp/>-<sp/>d&apos;uh</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/>num_samples<sp/>-<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>in<sp/>each<sp/>channel</highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/><sp/>mp2buffer<sp/>-<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>place<sp/>where<sp/>we<sp/>want<sp/>the<sp/>mpeg<sp/>data<sp/>to<sp/>be<sp/>written</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/><sp/>mp2buffer_size<sp/>-<sp/>how<sp/>much<sp/>space<sp/>the<sp/>user<sp/>allocated<sp/>for<sp/>this<sp/>buffer</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/><sp/>mp2fill_size<sp/>-<sp/>how<sp/>much<sp/>mpeg<sp/>data<sp/>the<sp/>library<sp/>has<sp/>put<sp/>into<sp/>the<sp/>mp2buffer<sp/></highlight></codeline>
<codeline lineno="758"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760" refid="twolame_8h_1a1e851bfce6674e56c649ddd9c990cc31" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8c_1a8e77eb0f22479f8ec1bd4f1b042f9cd9" kindref="member">twolame_encode_buffer_float32</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>leftpcm[],</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rightpcm[],</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mp2buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2buffer_size)</highlight></codeline>
<codeline lineno="764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbit__stream__struc" kindref="compound">bit_stream</ref><sp/>*mybs;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_samples<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>would<sp/>be<sp/>a<sp/>great<sp/>time<sp/>to<sp/>validate<sp/>the<sp/>size<sp/>of<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>samples/1152<sp/>*<sp/>sizeof(frame)<sp/>&lt;<sp/>mp2buffer_size<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>mybs<sp/>=<sp/><ref refid="bitbuffer_8c_1a566a93805d5a0fa1ab65d483bf13d33b" kindref="member">buffer_init</ref>(mp2buffer,<sp/>mp2buffer_size);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>up<sp/>all<sp/>the<sp/>samples<sp/>in<sp/>in_buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_samples)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>up<sp/>glopts-&gt;buffer<sp/>with<sp/>as<sp/>much<sp/>as<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samples_to_copy<sp/>=<sp/><ref refid="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" kindref="member">TWOLAME_SAMPLES_PER_FRAME</ref><sp/>-<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref>;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_samples<sp/>&lt;<sp/>samples_to_copy)</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_to_copy<sp/>=<sp/>num_samples;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>across<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32_to_short(leftpcm,<sp/>&amp;glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[0][glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref>],<sp/>samples_to_copy,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32_to_short(rightpcm,<sp/>&amp;glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[1][glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref>],</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_to_copy,<sp/>1);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftpcm<sp/>+=<sp/>samples_to_copy;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightpcm<sp/>+=<sp/>samples_to_copy;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>sample<sp/>counts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>+=<sp/>samples_to_copy;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_samples<sp/>-=<sp/>samples_to_copy;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>there<sp/>enough<sp/>to<sp/>encode<sp/>a<sp/>whole<sp/>frame<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>&gt;=<sp/><ref refid="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" kindref="member">TWOLAME_SAMPLES_PER_FRAME</ref>)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>encode_frame(glopts,<sp/>mybs);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitbuffer_8c_1af77da01a62568276e380a0fc250afa25" kindref="member">buffer_deinit</ref>(&amp;mybs);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp2_size<sp/>+=<sp/>bytes;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>-=<sp/><ref refid="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" kindref="member">TWOLAME_SAMPLES_PER_FRAME</ref>;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>up<sp/>the<sp/>bit<sp/>stream<sp/>buffer<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitbuffer_8c_1af77da01a62568276e380a0fc250afa25" kindref="member">buffer_deinit</ref>(&amp;mybs);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mp2_size);</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818" refid="twolame_8h_1aca716bf42f767e889c0505206c3f1160" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8c_1aca716bf42f767e889c0505206c3f1160" kindref="member">twolame_encode_buffer_float32_interleaved</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pcm[],</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mp2buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2buffer_size)</highlight></codeline>
<codeline lineno="822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbit__stream__struc" kindref="compound">bit_stream</ref><sp/>*mybs;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_samples<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>would<sp/>be<sp/>a<sp/>great<sp/>time<sp/>to<sp/>validate<sp/>the<sp/>size<sp/>of<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>samples/1152<sp/>*<sp/>sizeof(frame)<sp/>&lt;<sp/>mp2buffer_size<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>mybs<sp/>=<sp/><ref refid="bitbuffer_8c_1a566a93805d5a0fa1ab65d483bf13d33b" kindref="member">buffer_init</ref>(mp2buffer,<sp/>mp2buffer_size);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>up<sp/>all<sp/>the<sp/>samples<sp/>in<sp/>in_buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_samples)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>up<sp/>glopts-&gt;buffer<sp/>with<sp/>as<sp/>much<sp/>as<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samples_to_copy<sp/>=<sp/><ref refid="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" kindref="member">TWOLAME_SAMPLES_PER_FRAME</ref><sp/>-<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref>;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_samples<sp/>&lt;<sp/>samples_to_copy)</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_to_copy<sp/>=<sp/>num_samples;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>across<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32_to_short(pcm,<sp/>&amp;glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[0][glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref>],<sp/>samples_to_copy,</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref>);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32_to_short(pcm<sp/>+<sp/>1,<sp/>&amp;glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[1][glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref>],</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_to_copy,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref>);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcm<sp/>+=<sp/>(samples_to_copy<sp/>*<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref>);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>sample<sp/>counts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>+=<sp/>samples_to_copy;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_samples<sp/>-=<sp/>samples_to_copy;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>there<sp/>enough<sp/>to<sp/>encode<sp/>a<sp/>whole<sp/>frame<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>&gt;=<sp/><ref refid="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" kindref="member">TWOLAME_SAMPLES_PER_FRAME</ref>)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>encode_frame(glopts,<sp/>mybs);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitbuffer_8c_1af77da01a62568276e380a0fc250afa25" kindref="member">buffer_deinit</ref>(&amp;mybs);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp2_size<sp/>+=<sp/>bytes;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>-=<sp/><ref refid="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" kindref="member">TWOLAME_SAMPLES_PER_FRAME</ref>;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>up<sp/>the<sp/>bit<sp/>stream<sp/>buffer<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitbuffer_8c_1af77da01a62568276e380a0fc250afa25" kindref="member">buffer_deinit</ref>(&amp;mybs);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mp2_size);</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877" refid="twolame_8h_1aa9f0c1b5bafbc471d1549825e6d21257" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8c_1a3903ae20e7e99b7774c527e3e9ed3ab3" kindref="member">twolame_encode_flush</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mp2buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2buffer_size)</highlight></codeline>
<codeline lineno="878"><highlight class="normal">{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbit__stream__struc" kindref="compound">bit_stream</ref><sp/>*mybs<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>samples<sp/>left<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bit<sp/>stream<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>mybs<sp/>=<sp/><ref refid="bitbuffer_8c_1a566a93805d5a0fa1ab65d483bf13d33b" kindref="member">buffer_init</ref>(mp2buffer,<sp/>mp2buffer_size);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>out<sp/>the<sp/>PCM<sp/>buffers<sp/>with<sp/>0<sp/>and<sp/>encode<sp/>the<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref>;<sp/>i<sp/>&lt;<sp/><ref refid="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" kindref="member">TWOLAME_SAMPLES_PER_FRAME</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[0][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a032502082a28f2c52a3d7eaafff3bb7b" kindref="member">buffer</ref>[1][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>the<sp/>frame<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>mp2_size<sp/>=<sp/>encode_frame(glopts,<sp/>mybs);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac913af8a949f16c73ddab30d6b79492c" kindref="member">samples_in_buffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>up<sp/>the<sp/>bit<sp/>stream<sp/>buffer<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitbuffer_8c_1af77da01a62568276e380a0fc250afa25" kindref="member">buffer_deinit</ref>(&amp;mybs);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mp2_size;</highlight></codeline>
<codeline lineno="903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908" refid="twolame_8h_1a355c6061b15d6ee076c242aadea8e2c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="twolame_8c_1a5a9adda3b79826aa841471dda5e87e34" kindref="member">twolame_close</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>**<sp/>glopts)</highlight></codeline>
<codeline lineno="909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<ref refid="namespacelv2specgen_1a3418d48f73144afbd9db69c0c1aaf6b8" kindref="member">opts</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>input<sp/>pointers<sp/>aren&apos;t<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glopts<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>opts<sp/>=<sp/>*glopts;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opts<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>mem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="psycho__4_8c_1a76ec4a9b9cf0df39527f6da9b15e1a82" kindref="member">psycho_4_deinit</ref>(&amp;opts-&gt;<ref refid="structtwolame__options__struct_1ae24effdce105e10aa58a549ae9f5f047" kindref="member">p4mem</ref>);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="psycho__3_8c_1a33d8ffb5454a4a8b4121d52647d318d2" kindref="member">psycho_3_deinit</ref>(&amp;opts-&gt;<ref refid="structtwolame__options__struct_1a27b52180e8edfd8e2e448a488a05a3de" kindref="member">p3mem</ref>);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="psycho__2_8c_1aaf15beb8097dae70ee0252401cc4167f" kindref="member">psycho_2_deinit</ref>(&amp;opts-&gt;<ref refid="structtwolame__options__struct_1ad9d3c600a874f43c1e7be23570ca4e88" kindref="member">p2mem</ref>);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="psycho__1_8c_1ac63f2aef19e37ae3b1396dcfda161eee" kindref="member">psycho_1_deinit</ref>(&amp;opts-&gt;<ref refid="structtwolame__options__struct_1a32f0ce469b0159b92f4409d592a89c61" kindref="member">p1mem</ref>);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="psycho__0_8c_1a7ea4224faff51153ff77cea8e2b62423" kindref="member">psycho_0_deinit</ref>(&amp;opts-&gt;<ref refid="structtwolame__options__struct_1a9fe5236160c33af2022352bfd6a85d34" kindref="member">p0mem</ref>);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2mem_8h_1a134e8e7ea99b1bb57e889e61705f1283" kindref="member">TWOLAME_FREE</ref>(opts-&gt;<ref refid="structtwolame__options__struct_1adeb3816d15591347af6d058d2ccdda8c" kindref="member">subband</ref>);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2mem_8h_1a134e8e7ea99b1bb57e889e61705f1283" kindref="member">TWOLAME_FREE</ref>(opts-&gt;<ref refid="structtwolame__options__struct_1ac22600520036c32486e6d026310a5f08" kindref="member">j_sample</ref>);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2mem_8h_1a134e8e7ea99b1bb57e889e61705f1283" kindref="member">TWOLAME_FREE</ref>(opts-&gt;<ref refid="structtwolame__options__struct_1a93b6e50f1d2c624f0d448fd49733841f" kindref="member">sb_sample</ref>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>memory<sp/>and<sp/>zero<sp/>the<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2mem_8h_1a134e8e7ea99b1bb57e889e61705f1283" kindref="member">TWOLAME_FREE</ref>(opts);</highlight></codeline>
<codeline lineno="932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vim:ts=4:sw=4:nowrap:<sp/></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c"/>
  </compounddef>
</doxygen>
