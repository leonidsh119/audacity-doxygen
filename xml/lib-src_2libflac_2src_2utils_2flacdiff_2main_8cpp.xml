<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lib-src_2libflac_2src_2utils_2flacdiff_2main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="libflac_2include_2_f_l_a_c_09_09_2decoder_8h" local="yes">FLAC++/decoder.h</includes>
    <includes refid="libflac_2include_2share_2compat_8h" local="yes">share/compat.h</includes>
    <incdepgraph>
      <node id="5896">
        <label>format.h</label>
        <link refid="include_2_f_l_a_c_2format_8h"/>
        <childnode refid="5895" relation="include">
        </childnode>
        <childnode refid="5897" relation="include">
        </childnode>
      </node>
      <node id="5892">
        <label>export.h</label>
        <link refid="lib-src_2libflac_2include_2_f_l_a_c_09_09_2export_8h"/>
      </node>
      <node id="5901">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="5902" relation="include">
        </childnode>
        <childnode refid="5903" relation="include">
        </childnode>
        <childnode refid="5890" relation="include">
        </childnode>
      </node>
      <node id="5905">
        <label>stdarg.h</label>
      </node>
      <node id="5897">
        <label>ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="5898" relation="include">
        </childnode>
      </node>
      <node id="5894">
        <label>FLAC/stream_decoder.h</label>
        <link refid="include_2_f_l_a_c_2stream__decoder_8h"/>
        <childnode refid="5889" relation="include">
        </childnode>
        <childnode refid="5895" relation="include">
        </childnode>
        <childnode refid="5896" relation="include">
        </childnode>
      </node>
      <node id="5898">
        <label>stdint.h</label>
      </node>
      <node id="5893">
        <label>string</label>
      </node>
      <node id="5903">
        <label>alloca.h</label>
      </node>
      <node id="5891">
        <label>FLAC++/decoder.h</label>
        <link refid="libflac_2include_2_f_l_a_c_09_09_2decoder_8h"/>
        <childnode refid="5892" relation="include">
        </childnode>
        <childnode refid="5893" relation="include">
        </childnode>
        <childnode refid="5894" relation="include">
        </childnode>
      </node>
      <node id="5902">
        <label>MacTypes.h</label>
      </node>
      <node id="5890">
        <label>string.h</label>
      </node>
      <node id="5904">
        <label>utime.h</label>
      </node>
      <node id="5888">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/utils/flacdiff/main.cpp</label>
        <link refid="lib-src/libflac/src/utils/flacdiff/main.cpp"/>
        <childnode refid="5889" relation="include">
        </childnode>
        <childnode refid="5890" relation="include">
        </childnode>
        <childnode refid="5891" relation="include">
        </childnode>
        <childnode refid="5899" relation="include">
        </childnode>
      </node>
      <node id="5895">
        <label>export.h</label>
        <link refid="lib-src_2libflac_2include_2_f_l_a_c_2export_8h"/>
      </node>
      <node id="5900">
        <label>unistd.h</label>
      </node>
      <node id="5899">
        <label>share/compat.h</label>
        <link refid="libflac_2include_2share_2compat_8h"/>
        <childnode refid="5900" relation="include">
        </childnode>
        <childnode refid="5901" relation="include">
        </childnode>
        <childnode refid="5904" relation="include">
        </childnode>
        <childnode refid="5905" relation="include">
        </childnode>
      </node>
      <node id="5889">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_auto_f_i_l_e" prot="public">AutoFILE</innerclass>
    <innerclass refid="class_decoder" prot="public">Decoder</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="lib-src_2libflac_2src_2utils_2flacdiff_2main_8cpp_1a3b4590367347cbb56c761bbb471f8bc8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool show_diff</definition>
        <argsstring>(AutoFILE &amp;f1, AutoFILE &amp;f2, FLAC__off_t off)</argsstring>
        <name>show_diff</name>
        <param>
          <type><ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref> &amp;</type>
          <declname>f1</declname>
        </param>
        <param>
          <type><ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref> &amp;</type>
          <declname>f2</declname>
        </param>
        <param>
          <type><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref></type>
          <declname>off</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/utils/flacdiff/main.cpp" line="109" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/utils/flacdiff/main.cpp" bodystart="109" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libflac_2src_2utils_2flacdiff_2main_8cpp_1ae906bfa548d6ff159fe846b8ab9b9f16" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref></type>
        <definition>static FLAC__off_t get_diff_offset</definition>
        <argsstring>(AutoFILE &amp;f1, AutoFILE &amp;f2)</argsstring>
        <name>get_diff_offset</name>
        <param>
          <type><ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref> &amp;</type>
          <declname>f1</declname>
        </param>
        <param>
          <type><ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref> &amp;</type>
          <declname>f2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/utils/flacdiff/main.cpp" line="165" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/utils/flacdiff/main.cpp" bodystart="165" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libflac_2src_2utils_2flacdiff_2main_8cpp_1abd170f62a7ad03ad89d6f18751d81a3e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool run</definition>
        <argsstring>(const char *fn1, const char *fn2)</argsstring>
        <name>run</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fn1</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fn2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/utils/flacdiff/main.cpp" line="187" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/utils/flacdiff/main.cpp" bodystart="187" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libflac_2src_2utils_2flacdiff_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/utils/flacdiff/main.cpp" line="209" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/utils/flacdiff/main.cpp" bodystart="209" bodyend="230"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>flacdiff<sp/>-<sp/>Displays<sp/>where<sp/>two<sp/>FLAC<sp/>streams<sp/>differ</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2007-2009<sp/><sp/>Josh<sp/>Coalson</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2011-2014<sp/><sp/>Xiph.Org<sp/>Foundation</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libflac_2include_2_f_l_a_c_09_09_2decoder_8h" kindref="compound">FLAC++/decoder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libflac_2include_2share_2compat_8h" kindref="compound">share/compat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>warning<sp/>C4800:<sp/>&apos;int&apos;<sp/>:<sp/>forcing<sp/>to<sp/>bool<sp/>&apos;true&apos;<sp/>or<sp/>&apos;false&apos;<sp/>(performance<sp/>warning)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(<sp/>disable<sp/>:<sp/>4800<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_auto_f_i_l_e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36" refid="class_auto_f_i_l_e_1a089e18f78455f53196b1827b89ed6501" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>::FILE<sp/>*<ref refid="class_auto_f_i_l_e_1a089e18f78455f53196b1827b89ed6501" kindref="member">f_</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38" refid="class_auto_f_i_l_e_1af883b09b714d2bcd3152d4b211b1b791" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_auto_f_i_l_e_1af883b09b714d2bcd3152d4b211b1b791" kindref="member">AutoFILE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode):<sp/>f_(::fopen(path,<sp/>mode))<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="39" refid="class_auto_f_i_l_e_1ac975d31d840d450a1dc9aeb2e9460922" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_auto_f_i_l_e_1ac975d31d840d450a1dc9aeb2e9460922" kindref="member">~AutoFILE</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f_)<sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)::<ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(f_);<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_auto_f_i_l_e_1af159d729616ed0a6a028108219d0dc5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libsoxr_2msvc_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>!=<sp/><ref refid="class_auto_f_i_l_e_1a089e18f78455f53196b1827b89ed6501" kindref="member">f_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="42" refid="class_auto_f_i_l_e_1a72288274ba6e53a80f39eae560e80be3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>const<sp/>::FILE<sp/>*()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_auto_f_i_l_e_1a089e18f78455f53196b1827b89ed6501" kindref="member">f_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="43" refid="class_auto_f_i_l_e_1a899bc7763ab8fad948da00f51b26a86e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>operator<sp/>::FILE<sp/>*()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_auto_f_i_l_e_1a089e18f78455f53196b1827b89ed6501" kindref="member">f_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_decoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_decoder" kindref="compound">Decoder</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_f_l_a_c_1_1_decoder_1_1_stream" kindref="compound">FLAC::Decoder::Stream</ref><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52" refid="class_decoder_1a707a7989e925691f36dfeba2b73b5311" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_decoder_1a707a7989e925691f36dfeba2b73b5311" kindref="member">Decoder</ref>(<ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref><sp/>&amp;<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref><sp/>tgt):<sp/>tgtpos_((<ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref>)tgt),<sp/>curpos_(0),<sp/>go_(<ref refid="ordinals_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref>),<sp/>err_(<ref refid="ordinals_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>),<sp/>frame_(),<sp/><ref refid="class_auto_f_i_l_e_1a089e18f78455f53196b1827b89ed6501" kindref="member">f_</ref>(f)<sp/>{<sp/>memset(&amp;frame_,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(::<ref refid="struct_f_l_a_c_____frame" kindref="compound">FLAC__Frame</ref>));<sp/>}</highlight></codeline>
<codeline lineno="53" refid="class_decoder_1ae38b1d7af7b7d4183e08f6d6261e613c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/><ref refid="class_decoder_1ae38b1d7af7b7d4183e08f6d6261e613c" kindref="member">tgtpos_</ref>,<sp/>curpos_;</highlight></codeline>
<codeline lineno="54" refid="class_decoder_1ade7cfa226613d187dd8dee95266038e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_decoder_1ade7cfa226613d187dd8dee95266038e5" kindref="member">go_</ref>,<sp/>err_;</highlight></codeline>
<codeline lineno="55" refid="class_decoder_1a67321d1abcae24336f64d6d620d12cad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_l_a_c_____frame" kindref="compound">::FLAC__Frame</ref><sp/><ref refid="class_decoder_1a67321d1abcae24336f64d6d620d12cad" kindref="member">frame_</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57" refid="class_decoder_1af37db338bb18f556600335d9f82c8fb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref><sp/>&amp;<ref refid="class_decoder_1af37db338bb18f556600335d9f82c8fb2" kindref="member">f_</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>FLAC::Decoder::Stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_decoder_1a9d1ee0838f1cb840247c8472b9dc9102" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1gad793ead451206c64a91dc0b851027b93" kindref="member">virtual ::FLAC__StreamDecoderReadStatus</ref><sp/><ref refid="class_decoder_1a9d1ee0838f1cb840247c8472b9dc9102" kindref="member">read_callback</ref>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*bytes)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bytes<sp/>=<sp/>fread(buffer,<sp/>1,<sp/>*bytes,<sp/>f_);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ferror((FILE*)f_))</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1ggad793ead451206c64a91dc0b851027b93a923123aebb349e35662e35a7621b7535" kindref="member">return ::FLAC__STREAM_DECODER_READ_STATUS_ABORT</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*bytes<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>feof((FILE*)f_))</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1ggad793ead451206c64a91dc0b851027b93a0a0687d25dc9f7163e6e5e294672170f" kindref="member">return ::FLAC__STREAM_DECODER_READ_STATUS_END_OF_STREAM</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1ggad793ead451206c64a91dc0b851027b93a9a5be0fcf0279b98b2fd462bc4871d06" kindref="member">return ::FLAC__STREAM_DECODER_READ_STATUS_CONTINUE</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_decoder_1ac32239a60a784874d29ccd0645707efe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1ga83708207969383bd7b5c1e9148528845" kindref="member">virtual ::FLAC__StreamDecoderTellStatus</ref><sp/><ref refid="class_decoder_1ac32239a60a784874d29ccd0645707efe" kindref="member">tell_callback</ref>(<ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/>*absolute_byte_offset)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref><sp/>off<sp/>=<sp/>ftello(f_);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(off<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1gga83708207969383bd7b5c1e9148528845aceefd3feb853d5e68a149f2bdd1a9db1" kindref="member">return ::FLAC__STREAM_DECODER_TELL_STATUS_ERROR</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*absolute_byte_offset<sp/>=<sp/>off;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1gga83708207969383bd7b5c1e9148528845a516a202ebf4bb61d4a1fb5b029a104dd" kindref="member">return ::FLAC__STREAM_DECODER_TELL_STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_decoder_1ab5d92959536e8ecce07727c2eacd802e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_decoder_1ab5d92959536e8ecce07727c2eacd802e" kindref="member">eof_callback</ref>()</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)feof((FILE*)f_);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_decoder_1a0943975f90639e983f434400bd864283" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1ga73f67eb9e0ab57945afe038751bc62c8" kindref="member">virtual ::FLAC__StreamDecoderWriteStatus</ref><sp/><ref refid="class_decoder_1a0943975f90639e983f434400bd864283" kindref="member">write_callback</ref>(const<sp/>::FLAC__Frame<sp/>*frame,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*buffer*/</highlight><highlight class="normal">[])</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/>pos;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!get_decode_position(&amp;pos))<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>go_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1gga73f67eb9e0ab57945afe038751bc62c8a23bd6bfec34af704e0d5ea273f14d95d" kindref="member">return ::FLAC__STREAM_DECODER_WRITE_STATUS_ABORT</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos<sp/>&gt;<sp/>tgtpos_)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>go_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_<sp/>=<sp/>*frame;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curpos_<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1gga73f67eb9e0ab57945afe038751bc62c8acea48326e0ab8370d2814f4126fcb84e" kindref="member">return ::FLAC__STREAM_DECODER_WRITE_STATUS_CONTINUE</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_decoder_1a57a975064736c6d90c9318723bc518fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_decoder_1a57a975064736c6d90c9318723bc518fe" kindref="member">error_callback</ref>(::<ref refid="group__flac__stream__decoder_1ga130e70bd9a73d3c2416247a3e5132ecf" kindref="member">FLAC__StreamDecoderErrorStatus</ref><sp/><ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;got<sp/>error<sp/>%d:%s\n&quot;</highlight><highlight class="normal">,<sp/>status,<sp/>::<ref refid="group__flac__stream__decoder_1gadc56befa033b67dd3befcd2f5f909ec1" kindref="member">FLAC__StreamDecoderErrorStatusString</ref>[status]);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>go_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show_diff(<ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref><sp/>&amp;f1,<sp/><ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref><sp/>&amp;f2,<sp/><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref><sp/>off)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_decoder" kindref="compound">Decoder</ref><sp/>d1(f1,<sp/>off),<sp/>d2(f2,<sp/>off);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!d1)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>setting<sp/>up<sp/>decoder1,<sp/>state=%s\n&quot;</highlight><highlight class="normal">,<sp/>d1.get_state().resolved_as_cstring(d1));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!d2)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>setting<sp/>up<sp/>decoder2,<sp/>state=%s\n&quot;</highlight><highlight class="normal">,<sp/>d2.<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1a3b1b297dbdfcdf95003419f5f4da68fc" kindref="member">get_state</ref>().<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1_1_state_1ab56d202157b96b144fd35bb7e7ff9e0a" kindref="member">resolved_as_cstring</ref>(d2));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1gaaed54a24ac6310d29c5cafba79759c44" kindref="member">::FLAC__StreamDecoderInitStatus</ref><sp/>is;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((is<sp/>=<sp/>d1.init())<sp/>!=<sp/><ref refid="group__flac__stream__decoder_1ggaaed54a24ac6310d29c5cafba79759c44ac94c7e9396f30642f34805e5d626e011" kindref="member">FLAC__STREAM_DECODER_INIT_STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>initializing<sp/>decoder1,<sp/>status=%s<sp/>state=%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__flac__stream__decoder_1ga34953a802ba44d861dcc8e9f2bb9d659" kindref="member">FLAC__StreamDecoderInitStatusString</ref>[is],<sp/>d1.get_state().resolved_as_cstring(d1));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((is<sp/>=<sp/>d2.<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1a5267433117fbed17e11498856d881335" kindref="member">init</ref>())<sp/>!=<sp/><ref refid="group__flac__stream__decoder_1ggaaed54a24ac6310d29c5cafba79759c44ac94c7e9396f30642f34805e5d626e011" kindref="member">FLAC__STREAM_DECODER_INIT_STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>initializing<sp/>decoder2,<sp/>status=%s<sp/>state=%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__flac__stream__decoder_1ga34953a802ba44d861dcc8e9f2bb9d659" kindref="member">FLAC__StreamDecoderInitStatusString</ref>[is],<sp/>d2.<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1a3b1b297dbdfcdf95003419f5f4da68fc" kindref="member">get_state</ref>().<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1_1_state_1ab56d202157b96b144fd35bb7e7ff9e0a" kindref="member">resolved_as_cstring</ref>(d2));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!d1.process_until_end_of_metadata())<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>skipping<sp/>metadata<sp/>in<sp/>decoder1,<sp/>state=%s\n&quot;</highlight><highlight class="normal">,<sp/>d1.get_state().resolved_as_cstring(d1));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!d2.<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1a5238e5dfa3f41c2494cc396e22337136" kindref="member">process_until_end_of_metadata</ref>())<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>skipping<sp/>metadata<sp/>in<sp/>decoder2,<sp/>state=%s\n&quot;</highlight><highlight class="normal">,<sp/>d2.<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1a3b1b297dbdfcdf95003419f5f4da68fc" kindref="member">get_state</ref>().<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1_1_state_1ab56d202157b96b144fd35bb7e7ff9e0a" kindref="member">resolved_as_cstring</ref>(d2));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(d1.go_<sp/>&amp;&amp;<sp/>d2.<ref refid="class_decoder_1ade7cfa226613d187dd8dee95266038e5" kindref="member">go_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!d1.process_single())<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>decoding<sp/>frame<sp/>in<sp/>decoder1,<sp/>state=%s\n&quot;</highlight><highlight class="normal">,<sp/>d1.get_state().resolved_as_cstring(d1));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!d2.<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1a6d0d804bca44c0432f3cadfe12e64321" kindref="member">process_single</ref>())<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>decoding<sp/>frame<sp/>in<sp/>decoder2,<sp/>state=%s\n&quot;</highlight><highlight class="normal">,<sp/>d2.<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1a3b1b297dbdfcdf95003419f5f4da68fc" kindref="member">get_state</ref>().<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1_1_state_1ab56d202157b96b144fd35bb7e7ff9e0a" kindref="member">resolved_as_cstring</ref>(d2));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d1.err_)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>got<sp/>err_<sp/>in<sp/>decoder1,<sp/>state=%s\n&quot;</highlight><highlight class="normal">,<sp/>d1.get_state().resolved_as_cstring(d1));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d2.<ref refid="class_decoder_1acc4aa5d5e582ec5ed9a3ad3316017925" kindref="member">err_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>got<sp/>err_<sp/>in<sp/>decoder2,<sp/>state=%s\n&quot;</highlight><highlight class="normal">,<sp/>d2.<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1a3b1b297dbdfcdf95003419f5f4da68fc" kindref="member">get_state</ref>().<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1_1_state_1ab56d202157b96b144fd35bb7e7ff9e0a" kindref="member">resolved_as_cstring</ref>(d2));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d1.go_<sp/>!=<sp/>d2.<ref refid="class_decoder_1ade7cfa226613d187dd8dee95266038e5" kindref="member">go_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>d1.go_(%s)<sp/>!=<sp/>d2.go_(%s)\n&quot;</highlight><highlight class="normal">,<sp/>d1.go_?</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">,<sp/>d2.<ref refid="class_decoder_1ade7cfa226613d187dd8dee95266038e5" kindref="member">go_</ref>?</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>,<sp/></highlight><highlight class="stringliteral">&quot;pos1<sp/>=<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ac582131d7a7c8ee57e73180d1714f9d5" kindref="member">PRIu64</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>blocksize=%u<sp/>sample#%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ac582131d7a7c8ee57e73180d1714f9d5" kindref="member">PRIu64</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>frame#%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ac582131d7a7c8ee57e73180d1714f9d5" kindref="member">PRIu64</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>d1.curpos_,<sp/>d1.frame_.header.blocksize,<sp/>d1.frame_.header.number.sample_number,<sp/>d1.frame_.header.number.sample_number<sp/>/<sp/>d1.frame_.header.blocksize);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>,<sp/></highlight><highlight class="stringliteral">&quot;pos2<sp/>=<sp/>%&quot;</highlight><highlight class="normal"><sp/>PRIu64<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>blocksize=%u<sp/>sample#%&quot;</highlight><highlight class="normal"><sp/>PRIu64<sp/></highlight><highlight class="stringliteral">&quot;<sp/>frame#%&quot;</highlight><highlight class="normal"><sp/>PRIu64<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>d2.<ref refid="class_decoder_1a4075565f84fd5d60dc4dd806f8d70049" kindref="member">curpos_</ref>,<sp/>d2.<ref refid="class_decoder_1a67321d1abcae24336f64d6d620d12cad" kindref="member">frame_</ref>.<ref refid="struct_f_l_a_c_____frame_1ae39796592bb27512110976fe7b80ce06" kindref="member">header</ref>.<ref refid="struct_f_l_a_c_____frame_header_1ace760def6dcbbde3d9d140e5bfda34b3" kindref="member">blocksize</ref>,<sp/>d2.<ref refid="class_decoder_1a67321d1abcae24336f64d6d620d12cad" kindref="member">frame_</ref>.<ref refid="struct_f_l_a_c_____frame_1ae39796592bb27512110976fe7b80ce06" kindref="member">header</ref>.<ref refid="struct_f_l_a_c_____frame_header_1abdb6ca9267e5536f2c6e0f3e3c7adbf2" kindref="member">number</ref>.<ref refid="struct_f_l_a_c_____frame_header_1a4bbe555be68bd9fa48a22624233ee9f0" kindref="member">sample_number</ref>,<sp/>d2.<ref refid="class_decoder_1a67321d1abcae24336f64d6d620d12cad" kindref="member">frame_</ref>.<ref refid="struct_f_l_a_c_____frame_1ae39796592bb27512110976fe7b80ce06" kindref="member">header</ref>.<ref refid="struct_f_l_a_c_____frame_header_1abdb6ca9267e5536f2c6e0f3e3c7adbf2" kindref="member">number</ref>.<ref refid="struct_f_l_a_c_____frame_header_1a4bbe555be68bd9fa48a22624233ee9f0" kindref="member">sample_number</ref><sp/>/<sp/>d2.<ref refid="class_decoder_1a67321d1abcae24336f64d6d620d12cad" kindref="member">frame_</ref>.<ref refid="struct_f_l_a_c_____frame_1ae39796592bb27512110976fe7b80ce06" kindref="member">header</ref>.<ref refid="struct_f_l_a_c_____frame_header_1ace760def6dcbbde3d9d140e5bfda34b3" kindref="member">blocksize</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref><sp/>get_diff_offset(<ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref><sp/>&amp;f1,<sp/><ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref><sp/>&amp;f2)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref><sp/>off<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(feof((FILE*)f1)<sp/>&amp;&amp;<sp/>feof((FILE*)f1))<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>files<sp/>are<sp/>identical\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(feof((FILE*)f1))<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>file1<sp/>EOF\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(feof((FILE*)f2))<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>file2<sp/>EOF\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fgetc(f1)<sp/>!=<sp/>fgetc(f2))</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>off;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>off++;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>run(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn2)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref><sp/>off;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_auto_f_i_l_e" kindref="compound">AutoFILE</ref><sp/>f1(fn1,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">),<sp/>f2(fn2,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!f1)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>opening<sp/>%s<sp/>for<sp/>reading\n&quot;</highlight><highlight class="normal">,<sp/>fn1);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!f2)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>opening<sp/>%s<sp/>for<sp/>reading\n&quot;</highlight><highlight class="normal">,<sp/>fn2);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((off<sp/>=<sp/>get_diff_offset(f1,<sp/>f2))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>,<sp/></highlight><highlight class="stringliteral">&quot;got<sp/>diff<sp/>offset<sp/>=<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ae372e90b62c1e8b51dc5d95bf7f5ba48" kindref="member">PRId64</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>off);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>show_diff(f1,<sp/>f2,<sp/>off);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="lib-src_2libflac_2src_2utils_2flacdiff_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libflac_2examples_2cpp_2decode_2file_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[])</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="vamp-simple-host_8cpp_1a7cac13da282785878351e0a820104851" kindref="member">usage</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;usage:<sp/>flacdiff<sp/>flacfile1<sp/>flacfile2\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FLAC__STRINGS_IN_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="win__utf8__io_8c_1ae320c4369430816f4b8a64a037cb0370" kindref="member">get_utf8_argv</ref>(&amp;argc,<sp/>&amp;argv)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%ERROR:<sp/>failed<sp/>to<sp/>convert<sp/>command<sp/>line<sp/>parameters<sp/>to<sp/>UTF-8\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(argc<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>0<sp/>==<sp/>strcmp(argv[1],<sp/></highlight><highlight class="stringliteral">&quot;-h&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(usage);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(argc<sp/>!=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/>usage);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>255;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>run(argv[1],<sp/>argv[2])?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/utils/flacdiff/main.cpp"/>
  </compounddef>
</doxygen>
