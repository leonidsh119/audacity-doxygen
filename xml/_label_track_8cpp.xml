<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_label_track_8cpp" kind="file" language="C++">
    <compoundname>LabelTrack.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">Audacity.h</includes>
    <includes refid="_label_track_8h" local="yes">LabelTrack.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">wx/bitmap.h</includes>
    <includes local="no">wx/brush.h</includes>
    <includes local="no">wx/clipbrd.h</includes>
    <includes local="no">wx/dataobj.h</includes>
    <includes local="no">wx/dc.h</includes>
    <includes local="no">wx/dcclient.h</includes>
    <includes local="no">wx/event.h</includes>
    <includes local="no">wx/intl.h</includes>
    <includes local="no">wx/log.h</includes>
    <includes local="no">wx/msgdlg.h</includes>
    <includes local="no">wx/pen.h</includes>
    <includes local="no">wx/string.h</includes>
    <includes local="no">wx/textfile.h</includes>
    <includes local="no">wx/utils.h</includes>
    <includes refid="_audio_i_o_8h" local="yes">AudioIO.h</includes>
    <includes refid="_dir_manager_8h" local="yes">DirManager.h</includes>
    <includes refid="_internat_8h" local="yes">Internat.h</includes>
    <includes refid="_prefs_8h" local="yes">Prefs.h</includes>
    <includes refid="_theme_8h" local="yes">Theme.h</includes>
    <includes refid="_all_theme_resources_8h" local="yes">AllThemeResources.h</includes>
    <includes refid="_a_color_8h" local="yes">AColor.h</includes>
    <includes refid="_project_8h" local="yes">Project.h</includes>
    <includes refid="_track_artist_8h" local="yes">TrackArtist.h</includes>
    <includes refid="_track_panel_8h" local="yes">TrackPanel.h</includes>
    <includes refid="_undo_manager_8h" local="yes">UndoManager.h</includes>
    <includes refid="_command_manager_8h" local="yes">commands/CommandManager.h</includes>
    <includes refid="_time_warper_8h" local="yes">effects/TimeWarper.h</includes>
    <incdepgraph>
      <node id="47781">
        <label>wx/dir.h</label>
      </node>
      <node id="47787">
        <label>wx/choice.h</label>
      </node>
      <node id="47828">
        <label>effects/TimeWarper.h</label>
        <link refid="_time_warper_8h"/>
      </node>
      <node id="47761">
        <label>wx/hashmap.h</label>
      </node>
      <node id="47813">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="47753">
        <label>wx/textfile.h</label>
      </node>
      <node id="47811">
        <label>wx/gauge.h</label>
      </node>
      <node id="47741">
        <label>wx/ffile.h</label>
      </node>
      <node id="47731">
        <label>wx/event.h</label>
      </node>
      <node id="47743">
        <label>wx/font.h</label>
      </node>
      <node id="47802">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="47736" relation="include">
        </childnode>
        <childnode refid="47795" relation="include">
        </childnode>
        <childnode refid="47803" relation="include">
        </childnode>
      </node>
      <node id="47749">
        <label>wx/dcclient.h</label>
      </node>
      <node id="47780">
        <label>wx/cmdline.h</label>
      </node>
      <node id="47720">
        <label>LabelTrack.h</label>
        <link refid="_label_track_8h"/>
        <childnode refid="47721" relation="include">
        </childnode>
        <childnode refid="47726" relation="include">
        </childnode>
        <childnode refid="47742" relation="include">
        </childnode>
        <childnode refid="47731" relation="include">
        </childnode>
        <childnode refid="47743" relation="include">
        </childnode>
        <childnode refid="47744" relation="include">
        </childnode>
        <childnode refid="47730" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47745" relation="include">
        </childnode>
      </node>
      <node id="47755">
        <label>AudioIO.h</label>
        <link refid="_audio_i_o_8h"/>
        <childnode refid="47756" relation="include">
        </childnode>
        <childnode refid="47719" relation="include">
        </childnode>
        <childnode refid="47722" relation="include">
        </childnode>
        <childnode refid="47731" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47757" relation="include">
        </childnode>
        <childnode refid="47735" relation="include">
        </childnode>
      </node>
      <node id="47794">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="47736" relation="include">
        </childnode>
        <childnode refid="47795" relation="include">
        </childnode>
        <childnode refid="47796" relation="include">
        </childnode>
        <childnode refid="47797" relation="include">
        </childnode>
        <childnode refid="47792" relation="include">
        </childnode>
      </node>
      <node id="47762">
        <label>Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="47737" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47733" relation="include">
        </childnode>
      </node>
      <node id="47820">
        <label>TrackPanel.h</label>
        <link refid="_track_panel_8h"/>
        <childnode refid="47727" relation="include">
        </childnode>
        <childnode refid="47729" relation="include">
        </childnode>
        <childnode refid="47821" relation="include">
        </childnode>
        <childnode refid="47822" relation="include">
        </childnode>
        <childnode refid="47785" relation="include">
        </childnode>
        <childnode refid="47789" relation="include">
        </childnode>
        <childnode refid="47722" relation="include">
        </childnode>
        <childnode refid="47736" relation="include">
        </childnode>
        <childnode refid="47823" relation="include">
        </childnode>
        <childnode refid="47721" relation="include">
        </childnode>
        <childnode refid="47825" relation="include">
        </childnode>
        <childnode refid="47826" relation="include">
        </childnode>
        <childnode refid="47726" relation="include">
        </childnode>
      </node>
      <node id="47738">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="47719" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47739" relation="include">
        </childnode>
        <childnode refid="47740" relation="include">
        </childnode>
      </node>
      <node id="47774">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="47724">
        <label>wx/wxchar.h</label>
      </node>
      <node id="47768">
        <label>wx/image.h</label>
      </node>
      <node id="47744">
        <label>wx/pen.h</label>
      </node>
      <node id="47817">
        <label>wx/frame.h</label>
      </node>
      <node id="47790">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="47757" relation="include">
        </childnode>
        <childnode refid="47719" relation="include">
        </childnode>
      </node>
      <node id="47796">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="47736" relation="include">
        </childnode>
      </node>
      <node id="47754">
        <label>wx/utils.h</label>
      </node>
      <node id="47810">
        <label>wx/evtloop.h</label>
      </node>
      <node id="47722">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="47723" relation="include">
        </childnode>
      </node>
      <node id="47785">
        <label>wx/timer.h</label>
      </node>
      <node id="47732">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="47773">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="47729" relation="include">
        </childnode>
        <childnode refid="47721" relation="include">
        </childnode>
      </node>
      <node id="47808">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="47765">
        <label>wx/fileconf.h</label>
      </node>
      <node id="47800">
        <label>map</label>
      </node>
      <node id="47770">
        <label>MacroMagic.h</label>
        <link refid="_macro_magic_8h"/>
        <childnode refid="47766" relation="include">
        </childnode>
      </node>
      <node id="47825">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="47803">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="47736" relation="include">
        </childnode>
        <childnode refid="47796" relation="include">
        </childnode>
        <childnode refid="47794" relation="include">
        </childnode>
        <childnode refid="47795" relation="include">
        </childnode>
        <childnode refid="47801" relation="include">
        </childnode>
        <childnode refid="47802" relation="include">
        </childnode>
      </node>
      <node id="47748">
        <label>wx/dc.h</label>
      </node>
      <node id="47814">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="47719" relation="include">
        </childnode>
      </node>
      <node id="47812">
        <label>wx/stattext.h</label>
      </node>
      <node id="47784">
        <label>wx/socket.h</label>
      </node>
      <node id="47816">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="47769">
        <label>AllThemeResources.h</label>
        <link refid="_all_theme_resources_8h"/>
        <childnode refid="47722" relation="include">
        </childnode>
        <childnode refid="47770" relation="include">
        </childnode>
      </node>
      <node id="47795">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="47736" relation="include">
        </childnode>
      </node>
      <node id="47759">
        <label>wx/list.h</label>
      </node>
      <node id="47777">
        <label>wx/menu.h</label>
      </node>
      <node id="47723">
        <label>wx/defs.h</label>
      </node>
      <node id="47789">
        <label>wx/window.h</label>
      </node>
      <node id="47750">
        <label>wx/intl.h</label>
      </node>
      <node id="47809">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="47719" relation="include">
        </childnode>
        <childnode refid="47723" relation="include">
        </childnode>
        <childnode refid="47792" relation="include">
        </childnode>
        <childnode refid="47810" relation="include">
        </childnode>
        <childnode refid="47811" relation="include">
        </childnode>
        <childnode refid="47812" relation="include">
        </childnode>
        <childnode refid="47754" relation="include">
        </childnode>
      </node>
      <node id="47806">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="47736">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47737" relation="include">
        </childnode>
      </node>
      <node id="47799">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="47723" relation="include">
        </childnode>
        <childnode refid="47730" relation="include">
        </childnode>
        <childnode refid="47765" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47800" relation="include">
        </childnode>
        <childnode refid="47794" relation="include">
        </childnode>
        <childnode refid="47801" relation="include">
        </childnode>
        <childnode refid="47802" relation="include">
        </childnode>
        <childnode refid="47803" relation="include">
        </childnode>
      </node>
      <node id="47792">
        <label>wx/dialog.h</label>
      </node>
      <node id="47718">
        <label>C:/_dev/OpenU/Audacity/audacity/src/LabelTrack.cpp</label>
        <link refid="LabelTrack.cpp"/>
        <childnode refid="47719" relation="include">
        </childnode>
        <childnode refid="47720" relation="include">
        </childnode>
        <childnode refid="47739" relation="include">
        </childnode>
        <childnode refid="47746" relation="include">
        </childnode>
        <childnode refid="47742" relation="include">
        </childnode>
        <childnode refid="47745" relation="include">
        </childnode>
        <childnode refid="47747" relation="include">
        </childnode>
        <childnode refid="47748" relation="include">
        </childnode>
        <childnode refid="47749" relation="include">
        </childnode>
        <childnode refid="47731" relation="include">
        </childnode>
        <childnode refid="47750" relation="include">
        </childnode>
        <childnode refid="47751" relation="include">
        </childnode>
        <childnode refid="47752" relation="include">
        </childnode>
        <childnode refid="47744" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47753" relation="include">
        </childnode>
        <childnode refid="47754" relation="include">
        </childnode>
        <childnode refid="47755" relation="include">
        </childnode>
        <childnode refid="47758" relation="include">
        </childnode>
        <childnode refid="47762" relation="include">
        </childnode>
        <childnode refid="47763" relation="include">
        </childnode>
        <childnode refid="47766" relation="include">
        </childnode>
        <childnode refid="47769" relation="include">
        </childnode>
        <childnode refid="47771" relation="include">
        </childnode>
        <childnode refid="47772" relation="include">
        </childnode>
        <childnode refid="47819" relation="include">
        </childnode>
        <childnode refid="47820" relation="include">
        </childnode>
        <childnode refid="47827" relation="include">
        </childnode>
        <childnode refid="47776" relation="include">
        </childnode>
        <childnode refid="47828" relation="include">
        </childnode>
      </node>
      <node id="47760">
        <label>wx/filename.h</label>
      </node>
      <node id="47791">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="47722" relation="include">
        </childnode>
        <childnode refid="47787" relation="include">
        </childnode>
        <childnode refid="47792" relation="include">
        </childnode>
        <childnode refid="47731" relation="include">
        </childnode>
        <childnode refid="47793" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47794" relation="include">
        </childnode>
        <childnode refid="47799" relation="include">
        </childnode>
        <childnode refid="47804" relation="include">
        </childnode>
      </node>
      <node id="47826">
        <label>Snap.h</label>
        <link refid="_snap_8h"/>
        <childnode refid="47729" relation="include">
        </childnode>
        <childnode refid="47723" relation="include">
        </childnode>
        <childnode refid="47730" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47823" relation="include">
        </childnode>
      </node>
      <node id="47767">
        <label>wx/colour.h</label>
      </node>
      <node id="47823">
        <label>widgets/NumericTextCtrl.h</label>
        <link refid="_numeric_text_ctrl_8h"/>
        <childnode refid="47723" relation="include">
        </childnode>
        <childnode refid="47730" relation="include">
        </childnode>
        <childnode refid="47731" relation="include">
        </childnode>
        <childnode refid="47822" relation="include">
        </childnode>
        <childnode refid="47812" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47824" relation="include">
        </childnode>
        <childnode refid="47719" relation="include">
        </childnode>
      </node>
      <node id="47797">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="47798" relation="include">
        </childnode>
        <childnode refid="47780" relation="include">
        </childnode>
        <childnode refid="47765" relation="include">
        </childnode>
        <childnode refid="47750" relation="include">
        </childnode>
      </node>
      <node id="47763">
        <label>Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="47719" relation="include">
        </childnode>
        <childnode refid="47764" relation="include">
        </childnode>
        <childnode refid="47765" relation="include">
        </childnode>
      </node>
      <node id="47742">
        <label>wx/brush.h</label>
      </node>
      <node id="47776">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="47722" relation="include">
        </childnode>
        <childnode refid="47727" relation="include">
        </childnode>
        <childnode refid="47729" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47730" relation="include">
        </childnode>
        <childnode refid="47777" relation="include">
        </childnode>
        <childnode refid="47761" relation="include">
        </childnode>
        <childnode refid="47778" relation="include">
        </childnode>
        <childnode refid="47738" relation="include">
        </childnode>
        <childnode refid="47736" relation="include">
        </childnode>
      </node>
      <node id="47719">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="47788">
        <label>wx/grid.h</label>
      </node>
      <node id="47729">
        <label>vector</label>
      </node>
      <node id="47804">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="47719" relation="include">
        </childnode>
        <childnode refid="47727" relation="include">
        </childnode>
        <childnode refid="47805" relation="include">
        </childnode>
        <childnode refid="47806" relation="include">
        </childnode>
        <childnode refid="47730" relation="include">
        </childnode>
        <childnode refid="47750" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47807" relation="include">
        </childnode>
        <childnode refid="47796" relation="include">
        </childnode>
        <childnode refid="47794" relation="include">
        </childnode>
        <childnode refid="47722" relation="include">
        </childnode>
        <childnode refid="47721" relation="include">
        </childnode>
        <childnode refid="47808" relation="include">
        </childnode>
        <childnode refid="47762" relation="include">
        </childnode>
        <childnode refid="47809" relation="include">
        </childnode>
      </node>
      <node id="47730">
        <label>wx/dynarray.h</label>
      </node>
      <node id="47772">
        <label>Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="47719" relation="include">
        </childnode>
        <childnode refid="47722" relation="include">
        </childnode>
        <childnode refid="47758" relation="include">
        </childnode>
        <childnode refid="47773" relation="include">
        </childnode>
        <childnode refid="47774" relation="include">
        </childnode>
        <childnode refid="47775" relation="include">
        </childnode>
        <childnode refid="47776" relation="include">
        </childnode>
        <childnode refid="47791" relation="include">
        </childnode>
        <childnode refid="47738" relation="include">
        </childnode>
        <childnode refid="47813" relation="include">
        </childnode>
        <childnode refid="47814" relation="include">
        </childnode>
        <childnode refid="47723" relation="include">
        </childnode>
        <childnode refid="47731" relation="include">
        </childnode>
        <childnode refid="47751" relation="include">
        </childnode>
        <childnode refid="47815" relation="include">
        </childnode>
        <childnode refid="47816" relation="include">
        </childnode>
        <childnode refid="47817" relation="include">
        </childnode>
        <childnode refid="47750" relation="include">
        </childnode>
        <childnode refid="47749" relation="include">
        </childnode>
        <childnode refid="47818" relation="include">
        </childnode>
      </node>
      <node id="47801">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="47736" relation="include">
        </childnode>
        <childnode refid="47796" relation="include">
        </childnode>
        <childnode refid="47795" relation="include">
        </childnode>
      </node>
      <node id="47771">
        <label>AColor.h</label>
        <link refid="_a_color_8h"/>
        <childnode refid="47742" relation="include">
        </childnode>
        <childnode refid="47744" relation="include">
        </childnode>
      </node>
      <node id="47766">
        <label>Theme.h</label>
        <link refid="_theme_8h"/>
        <childnode refid="47719" relation="include">
        </childnode>
        <childnode refid="47746" relation="include">
        </childnode>
        <childnode refid="47767" relation="include">
        </childnode>
        <childnode refid="47723" relation="include">
        </childnode>
        <childnode refid="47730" relation="include">
        </childnode>
        <childnode refid="47743" relation="include">
        </childnode>
        <childnode refid="47768" relation="include">
        </childnode>
      </node>
      <node id="47734">
        <label>wx/string.h</label>
      </node>
      <node id="47747">
        <label>wx/dataobj.h</label>
      </node>
      <node id="47778">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="47719" relation="include">
        </childnode>
        <childnode refid="47779" relation="include">
        </childnode>
        <childnode refid="47780" relation="include">
        </childnode>
        <childnode refid="47781" relation="include">
        </childnode>
        <childnode refid="47731" relation="include">
        </childnode>
        <childnode refid="47782" relation="include">
        </childnode>
        <childnode refid="47750" relation="include">
        </childnode>
        <childnode refid="47783" relation="include">
        </childnode>
        <childnode refid="47751" relation="include">
        </childnode>
        <childnode refid="47784" relation="include">
        </childnode>
        <childnode refid="47785" relation="include">
        </childnode>
        <childnode refid="47786" relation="include">
        </childnode>
        <childnode refid="47790" relation="include">
        </childnode>
        <childnode refid="47722" relation="include">
        </childnode>
      </node>
      <node id="47793">
        <label>wx/listbox.h</label>
      </node>
      <node id="47752">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="47756">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="47751">
        <label>wx/log.h</label>
      </node>
      <node id="47725">
        <label>math.h</label>
      </node>
      <node id="47758">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="47759" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47760" relation="include">
        </childnode>
        <childnode refid="47761" relation="include">
        </childnode>
        <childnode refid="47754" relation="include">
        </childnode>
        <childnode refid="47736" relation="include">
        </childnode>
        <childnode refid="47738" relation="include">
        </childnode>
      </node>
      <node id="47721">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="47719" relation="include">
        </childnode>
        <childnode refid="47722" relation="include">
        </childnode>
        <childnode refid="47723" relation="include">
        </childnode>
        <childnode refid="47724" relation="include">
        </childnode>
        <childnode refid="47725" relation="include">
        </childnode>
      </node>
      <node id="47737">
        <label>wx/arrstr.h</label>
      </node>
      <node id="47764">
        <label>wx/config.h</label>
      </node>
      <node id="47783">
        <label>wx/snglinst.h</label>
      </node>
      <node id="47726">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="47719" relation="include">
        </childnode>
        <childnode refid="47727" relation="include">
        </childnode>
        <childnode refid="47729" relation="include">
        </childnode>
        <childnode refid="47730" relation="include">
        </childnode>
        <childnode refid="47731" relation="include">
        </childnode>
        <childnode refid="47732" relation="include">
        </childnode>
        <childnode refid="47733" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47722" relation="include">
        </childnode>
        <childnode refid="47735" relation="include">
        </childnode>
        <childnode refid="47738" relation="include">
        </childnode>
      </node>
      <node id="47757">
        <label>wx/thread.h</label>
      </node>
      <node id="47815">
        <label>wx/dragimag.h</label>
      </node>
      <node id="47807">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="47745">
        <label>wx/clipbrd.h</label>
      </node>
      <node id="47819">
        <label>TrackArtist.h</label>
        <link refid="_track_artist_8h"/>
        <childnode refid="47742" relation="include">
        </childnode>
        <childnode refid="47744" relation="include">
        </childnode>
        <childnode refid="47722" relation="include">
        </childnode>
        <childnode refid="47736" relation="include">
        </childnode>
      </node>
      <node id="47727">
        <label>MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="47728" relation="include">
        </childnode>
      </node>
      <node id="47786">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="47723" relation="include">
        </childnode>
        <childnode refid="47787" relation="include">
        </childnode>
        <childnode refid="47730" relation="include">
        </childnode>
        <childnode refid="47731" relation="include">
        </childnode>
        <childnode refid="47788" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47789" relation="include">
        </childnode>
      </node>
      <node id="47805">
        <label>set</label>
      </node>
      <node id="47818">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="47722" relation="include">
        </childnode>
      </node>
      <node id="47779">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="47733">
        <label>wx/longlong.h</label>
      </node>
      <node id="47822">
        <label>wx/panel.h</label>
      </node>
      <node id="47746">
        <label>wx/bitmap.h</label>
      </node>
      <node id="47827">
        <label>UndoManager.h</label>
        <link refid="_undo_manager_8h"/>
        <childnode refid="47727" relation="include">
        </childnode>
        <childnode refid="47729" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47790" relation="include">
        </childnode>
        <childnode refid="47721" relation="include">
        </childnode>
      </node>
      <node id="47739">
        <label>stdio.h</label>
      </node>
      <node id="47824">
        <label>wx/textctrl.h</label>
      </node>
      <node id="47735">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="47719" relation="include">
        </childnode>
        <childnode refid="47723" relation="include">
        </childnode>
        <childnode refid="47736" relation="include">
        </childnode>
      </node>
      <node id="47798">
        <label>locale.h</label>
      </node>
      <node id="47782">
        <label>wx/docview.h</label>
      </node>
      <node id="47821">
        <label>wx/dcmemory.h</label>
      </node>
      <node id="47728">
        <label>memory</label>
      </node>
      <node id="47740">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="47737" relation="include">
        </childnode>
        <childnode refid="47730" relation="include">
        </childnode>
        <childnode refid="47741" relation="include">
        </childnode>
      </node>
      <node id="47775">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="47734" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696df" prot="public" static="no">
        <name>@309</name>
        <enumvalue id="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfacbe123243c6ea936f5303b818f43d4d1" prot="public">
          <name>OnCutSelectedTextID</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfaa53581a54c4851eaae3a71a800fcc69c" prot="public">
          <name>OnCopySelectedTextID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfa9417a78dd67c9c077897ee45fa4630de" prot="public">
          <name>OnPasteSelectedTextID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfa76fc7aaefe375e3002072c891dab1e0f" prot="public">
          <name>OnDeleteSelectedLabelID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/LabelTrack.cpp" line="67" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/LabelTrack.cpp" bodystart="66" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_label_track_8cpp_1ae72f60feb13b1b7acd074eb395edd3f1" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref></type>
        <definition>const char* const GlyphXpmRegionSpec[]</definition>
        <argsstring>[]</argsstring>
        <name>GlyphXpmRegionSpec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/LabelTrack.cpp" line="2721" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/LabelTrack.cpp" bodystart="2721" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_label_track_8cpp_1a17cb37e8e02a5b5986b8ab1892efeea0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int Constrain</definition>
        <argsstring>(int value, int min, int max)</argsstring>
        <name>Constrain</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/LabelTrack.cpp" line="1378" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/LabelTrack.cpp" bodystart="1378" bodyend="1387"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>LabelTrack.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>James<sp/>Crook</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Jun<sp/>Wan</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_8h" kindref="compound">Audacity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_label_track_8h" kindref="compound">LabelTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/bitmap.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/brush.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/clipbrd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dataobj.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcclient.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/event.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/msgdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/pen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/textfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/utils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audio_i_o_8h" kindref="compound">AudioIO.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_dir_manager_8h" kindref="compound">DirManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_internat_8h" kindref="compound">Internat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_prefs_8h" kindref="compound">Prefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_theme_8h" kindref="compound">Theme.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_all_theme_resources_8h" kindref="compound">AllThemeResources.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_color_8h" kindref="compound">AColor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_project_8h" kindref="compound">Project.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_track_artist_8h" kindref="compound">TrackArtist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_track_panel_8h" kindref="compound">TrackPanel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_undo_manager_8h" kindref="compound">UndoManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_manager_8h" kindref="compound">commands/CommandManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_time_warper_8h" kindref="compound">effects/TimeWarper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68" refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfacbe123243c6ea936f5303b818f43d4d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfacbe123243c6ea936f5303b818f43d4d1" kindref="member">OnCutSelectedTextID</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OSX<sp/>doesn&apos;t<sp/>like<sp/>a<sp/>0<sp/>menu<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfaa53581a54c4851eaae3a71a800fcc69c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfaa53581a54c4851eaae3a71a800fcc69c" kindref="member">OnCopySelectedTextID</ref>,</highlight></codeline>
<codeline lineno="70" refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfa9417a78dd67c9c077897ee45fa4630de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfa9417a78dd67c9c077897ee45fa4630de" kindref="member">OnPasteSelectedTextID</ref>,</highlight></codeline>
<codeline lineno="71" refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfa76fc7aaefe375e3002072c891dab1e0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfa76fc7aaefe375e3002072c891dab1e0f" kindref="member">OnDeleteSelectedLabelID</ref>,</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">wxFont<sp/>LabelTrack::msFont;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static<sp/>member<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LabelTrack::mbGlyphsReady=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">wxBitmap<sp/>LabelTrack::mBoundaryGlyphs[<sp/><ref refid="_label_track_8h_1af7e528a28f0ee89d46e0a725835ca5cf" kindref="member">NUM_GLYPH_CONFIGS</ref><sp/>*<sp/><ref refid="_label_track_8h_1af41aeb811fc4ae44c596821bef0f00b8" kindref="member">NUM_GLYPH_HIGHLIGHTS</ref><sp/>];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LabelTrack::mIconHeight;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LabelTrack::mIconWidth;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LabelTrack::mTextHeight;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LabelTrack::mFontHeight=-1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_track_factory_1ad263a1879b5ab441a739945a57704f2b" refkind="member"><highlight class="normal"><ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*<ref refid="class_track_factory_1ad263a1879b5ab441a739945a57704f2b" kindref="member">TrackFactory::NewLabelTrack</ref>()</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref>(mDirManager);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_label_track_1a0d34a7c02790a858a53892c5c8ab196a" refkind="member"><highlight class="normal"><ref refid="class_label_track_1a0d34a7c02790a858a53892c5c8ab196a" kindref="member">LabelTrack::LabelTrack</ref>(<ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*<sp/>projDirManager):</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>(projDirManager),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>mbHitCenter(<ref refid="ordinals_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>mOldEdge(-1),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>mSelIndex(-1),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>mMouseOverLabelLeft(-1),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>mMouseOverLabelRight(-1),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>mRestoreFocus(-1),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>mClipLen(0.0),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/>mIsAdjustingLabel(<ref refid="ordinals_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aaa95f9df004e8bc2155ba530d00a6778" kindref="member">SetDefaultName</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Label<sp/>Track&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1af91d1579e3d15a0d5fffa3348adae753" kindref="member">SetName</ref>(<ref refid="class_track_1ae9c9b6f2e53b0e55b214ae192b30ec60" kindref="member">GetDefaultName</ref>());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Label<sp/>tracks<sp/>are<sp/>narrow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>is<sp/>to<sp/>allow<sp/>two<sp/>rows<sp/>so<sp/>that<sp/>NEW<sp/>users<sp/>get<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>idea<sp/>that<sp/>labels<sp/>can<sp/>&apos;stack&apos;<sp/>when<sp/>they<sp/>would<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a6c03f9842f6f294e69773ab33d794d6e" kindref="member">SetHeight</ref>(73);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_track_1a59ec120849f853dce17587dff2f71b84" kindref="member">ResetFont</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_track_1ac2477fc2203f388831307ed740bfd60f" kindref="member">CreateCustomGlyphs</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_track_1a213ed39ac4c53a70b3bd8c851c6bed77" kindref="member">ResetFlags</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_label_track_1a0ab264e29f52e40ab65cc79a78261065" refkind="member"><highlight class="normal"><ref refid="class_label_track_1a0d34a7c02790a858a53892c5c8ab196a" kindref="member">LabelTrack::LabelTrack</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>&amp;orig)<sp/>:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>(orig),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_track_1acd6d833a85610bf24cb008932585839f" kindref="member">mbHitCenter</ref>(<ref refid="ordinals_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_track_1a8e2ceac066c4986b80213070c8950016" kindref="member">mOldEdge</ref>(-1),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>mSelIndex(-1),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>mMouseOverLabelLeft(-1),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>mMouseOverLabelRight(-1),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>mClipLen(0.0),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>mIsAdjustingLabel(<ref refid="ordinals_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>orig.mLabels.Count();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref>&amp;<sp/>original<sp/>=<sp/>*orig.mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a385c3071b8a0c30580fd8b8e984a1fc0" kindref="member">LabelStruct</ref>(original.<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>,<sp/>original.<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels.Add(l);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>mSelIndex<sp/>=<sp/>orig.mSelIndex;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_track_1a213ed39ac4c53a70b3bd8c851c6bed77" kindref="member">ResetFlags</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_label_track_1a09d4e95b0057ea507f0879c7c6e1e350" refkind="member"><highlight class="normal"><ref refid="class_label_track_1a09d4e95b0057ea507f0879c7c6e1e350" kindref="member">LabelTrack::~LabelTrack</ref>()</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>mLabels.Count();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_label_track_1ac535bbd9a134eae2fa5c75ba7efe16a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1ac535bbd9a134eae2fa5c75ba7efe16a6" kindref="member">LabelTrack::SetOffset</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dOffset)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>mLabels.Count();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.move(dOffset);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_label_track_1adde95fb86cb356fcf0569560f84732da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1adde95fb86cb356fcf0569560f84732da" kindref="member">LabelTrack::Clear</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;mLabels.GetCount();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++){</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8" kindref="member">LabelStruct::TimeRelations</ref><sp/>relation<sp/>=</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;RegionRelation(b,<sp/>e,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8aacd7a2485255437d0be6a8ad50d1a0cf" kindref="member">LabelStruct::BEFORE_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.move(-<sp/>(e-b));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a7d2eb849dac366b9e3f59933e643b3fe" kindref="member">LabelStruct::SURROUNDS_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_track_1a6d48364c4bdf7bc2333842546617e601" kindref="member">DeleteLabel</ref>(<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>--;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a955b9201235ae459ac0e0c2613dd396d" kindref="member">LabelStruct::ENDS_IN_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.setTimes(</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;getT1()<sp/>-<sp/>(e<sp/>-<sp/>b));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a5546f41def946d8ff28f8cedbcd17945" kindref="member">LabelStruct::BEGINS_IN_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.setT1(b);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a3cfb7877ad14a3006551b7a0c503e242" kindref="member">LabelStruct::WITHIN_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.moveT1(<sp/>-<sp/>(e-b));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//used<sp/>when<sp/>we<sp/>want<sp/>to<sp/>use<sp/>clear<sp/>only<sp/>on<sp/>the<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LabelTrack::SplitDelete(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;mLabels.GetCount();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8" kindref="member">LabelStruct::TimeRelations</ref><sp/>relation<sp/>=</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;RegionRelation(<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<sp/>e,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a7d2eb849dac366b9e3f59933e643b3fe" kindref="member">LabelStruct::SURROUNDS_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_track_1a6d48364c4bdf7bc2333842546617e601" kindref="member">DeleteLabel</ref>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>--;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a3cfb7877ad14a3006551b7a0c503e242" kindref="member">LabelStruct::WITHIN_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.moveT1(<sp/>-<sp/>(e-<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a955b9201235ae459ac0e0c2613dd396d" kindref="member">LabelStruct::ENDS_IN_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.setT0(e);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a5546f41def946d8ff28f8cedbcd17945" kindref="member">LabelStruct::BEGINS_IN_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.setT1(<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="class_label_track_1a20a236aab23c1aaa42ff0b22060ae54b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a20a236aab23c1aaa42ff0b22060ae54b" kindref="member">LabelTrack::ShiftLabelsOnInsert</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pt)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;mLabels.GetCount();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8" kindref="member">LabelStruct::TimeRelations</ref><sp/>relation<sp/>=</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;RegionRelation(pt,<sp/>pt,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8aacd7a2485255437d0be6a8ad50d1a0cf" kindref="member">LabelStruct::BEFORE_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.move(length);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a3cfb7877ad14a3006551b7a0c503e242" kindref="member">LabelStruct::WITHIN_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.moveT1(length);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="class_label_track_1a83fee228841de7ec29baea93e0569fc7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a83fee228841de7ec29baea93e0569fc7" kindref="member">LabelTrack::ChangeLabelsOnReverse</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;mLabels.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;RegionRelation(b,<sp/>e,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>==</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a7d2eb849dac366b9e3f59933e643b3fe" kindref="member">LabelStruct::SURROUNDS_LABEL</ref>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aux<sp/><sp/><sp/><sp/><sp/>=<sp/>b<sp/>+<sp/>(e<sp/>-<sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;getT1());</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.setTimes(</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>-<sp/>(mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;getT0()<sp/>-<sp/>b));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_track_1aee692c966d7e2fbd8fe7f4f56148b62e" kindref="member">SortLabels</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="class_label_track_1a2233242eac66eeae56ab0d53b21f35a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a2233242eac66eeae56ab0d53b21f35a0" kindref="member">LabelTrack::ScaleLabels</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>change)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;mLabels.GetCount();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++){</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.setTimes(</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_track_1ad67823ce2b3f76985b3ab2abfe0aca03" kindref="member">AdjustTimeStampOnScale</ref>(mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;getT0(),<sp/>b,<sp/>e,<sp/>change),</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_track_1ad67823ce2b3f76985b3ab2abfe0aca03" kindref="member">AdjustTimeStampOnScale</ref>(mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;getT1(),<sp/>b,<sp/>e,<sp/>change));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="class_label_track_1ad67823ce2b3f76985b3ab2abfe0aca03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1ad67823ce2b3f76985b3ab2abfe0aca03" kindref="member">LabelTrack::AdjustTimeStampOnScale</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>change)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//t<sp/>is<sp/>the<sp/>time<sp/>stamp<sp/>we&apos;ll<sp/>be<sp/>changing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//b<sp/>and<sp/>e<sp/>are<sp/>the<sp/>selection<sp/>start<sp/>and<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>b){</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&gt;<sp/>e){</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>shift<sp/>=<sp/>(e-<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)*change<sp/>-<sp/>(e-b);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>+<sp/>shift;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>shift<sp/>=<sp/>(t-<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)*change<sp/>-<sp/>(t-b);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>+<sp/>shift;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>labels<sp/>in<sp/>the<sp/>track<sp/>according<sp/>to<sp/>the<sp/>given<sp/>TimeWarper.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(If<sp/>necessary<sp/>this<sp/>could<sp/>be<sp/>optimised<sp/>by<sp/>ignoring<sp/>labels<sp/>that<sp/>occur<sp/>before<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specified<sp/>time,<sp/>as<sp/>in<sp/>most<sp/>cases<sp/>they<sp/>don&apos;t<sp/>need<sp/>to<sp/>move.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="class_label_track_1a794da138390e0019bba1243c349a4d3e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a794da138390e0019bba1243c349a4d3e" kindref="member">LabelTrack::WarpLabels</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_time_warper" kindref="compound">TimeWarper</ref><sp/>&amp;warper)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)mLabels.GetCount();<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.setTimes(</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warper.<ref refid="class_time_warper_1a23723ae122b6feed38614cdcc328a394" kindref="member">Warp</ref>(mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;getT0()),</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warper.<ref refid="class_time_warper_1a23723ae122b6feed38614cdcc328a394" kindref="member">Warp</ref>(mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;getT1()));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="class_label_track_1a213ed39ac4c53a70b3bd8c851c6bed77" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a213ed39ac4c53a70b3bd8c851c6bed77" kindref="member">LabelTrack::ResetFlags</ref>()</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/>mMouseXPos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/>mXPos1<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/>mXPos2<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/>mDragXPos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/>mResetCursorPos<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/>mRightDragging<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/>mDrawCursor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="class_label_track_1a59ec120849f853dce17587dff2f71b84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a59ec120849f853dce17587dff2f71b84" kindref="member">LabelTrack::ResetFont</ref>()</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/>mFontHeight<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>facename<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/LabelFontFacename&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/LabelFontSize&quot;</highlight><highlight class="normal">),<sp/>12);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(facename<sp/>!=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msFont<sp/>=<sp/>wxFont(size,<sp/>wxFONTFAMILY_DEFAULT,<sp/>wxFONTSTYLE_NORMAL,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFONTWEIGHT_NORMAL,<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/>facename,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFONTENCODING_SYSTEM);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msFont<sp/>=<sp/>wxFont(size,<sp/>wxFONTFAMILY_DEFAULT,<sp/>wxFONTSTYLE_NORMAL,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFONTWEIGHT_NORMAL);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LabelTrack::ComputeTextPosition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="319"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xExtra<sp/>is<sp/>extra<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>between<sp/>the<sp/>text<sp/>and<sp/>the<sp/>endpoints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xExtra=mIconWidth;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>mLabels[index]-&gt;x;<sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>endpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1<sp/><sp/><sp/><sp/>=<sp/>mLabels[index]-&gt;x1;<sp/></highlight><highlight class="comment">//<sp/>right<sp/>endpoint.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>mLabels[index]-&gt;width;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xText;<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>where<sp/>the<sp/>text<sp/>will<sp/>end<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>the<sp/>text<sp/>all<sp/>fit<sp/>at<sp/>this<sp/>zoom?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bTooWideForScreen<sp/>=<sp/>width<sp/>&gt;<sp/>(r.width-2*xExtra);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bool<sp/>bSimpleCentering<sp/>=<sp/>!bTooWideForScreen;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSimpleCentering<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>(possibly):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>configurable<sp/>options<sp/>as<sp/>to<sp/>when<sp/>to<sp/>use<sp/>simple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>when<sp/>complex<sp/>centering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>centering<sp/>does<sp/>its<sp/>best<sp/>to<sp/>keep<sp/>the<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>centered<sp/>between<sp/>the<sp/>label<sp/>limits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Complex<sp/>centering<sp/>positions<sp/>the<sp/>text<sp/>proportionally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>how<sp/>far<sp/>we<sp/>are<sp/>through<sp/>the<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>add<sp/>preferences<sp/>for<sp/>this,<sp/>we<sp/>want<sp/>to<sp/>be<sp/>able<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>choose<sp/>separately<sp/>whether:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>a)<sp/>Wide<sp/>text<sp/>labels<sp/>centered<sp/>simple/complex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>b)<sp/>Other<sp/>text<sp/>labels<sp/>centered<sp/>simple/complex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bSimpleCentering<sp/>)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Center<sp/>text<sp/>between<sp/>the<sp/>two<sp/>end<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xText<sp/>=<sp/>(x+x1-width)/2;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>xText<sp/>position<sp/>to<sp/>make<sp/>text<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scroll<sp/>sideways<sp/>evenly<sp/>as<sp/>r<sp/>moves<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xText<sp/>is<sp/>a<sp/>linear<sp/>function<sp/>of<sp/>r.x.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>variables<sp/>are<sp/>used<sp/>to<sp/>compute<sp/>that<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rx0,rx1,xText0,xText1;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>we<sp/>will<sp/>be<sp/>using<sp/>a<sp/>linear<sp/>function,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>blend<sp/>smoothly<sp/>between<sp/>left<sp/>and<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>aligned<sp/>text<sp/>as<sp/>r,<sp/>the<sp/>&apos;viewport&apos;<sp/>moves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bTooWideForScreen<sp/>)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx0=<ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>viewport<sp/>at<sp/>label<sp/>start.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xText0=x+xExtra;<sp/></highlight><highlight class="comment">//<sp/>text<sp/>aligned<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx1=x1-r.width;<sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>viewport<sp/>end<sp/>at<sp/>label<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xText1=x1-(width+xExtra);<sp/></highlight><highlight class="comment">//<sp/>text<sp/>aligned<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>label<sp/>start<sp/>+<sp/>width<sp/>+<sp/>extra<sp/>spacing<sp/>at<sp/>viewport<sp/>end..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx0=x-r.width+width+2*xExtra;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>..text<sp/>aligned<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xText0=x+xExtra;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>viewport<sp/>start<sp/>+<sp/>width<sp/>+<sp/>extra<sp/>spacing<sp/>at<sp/>label<sp/>end..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx1=x1-(width+2*xExtra);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>..text<sp/>aligned<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xText1=x1-(width+xExtra);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rx1<sp/>&gt;<sp/>rx0<sp/>)<sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>divide<sp/>by<sp/>zero<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>blend<sp/>between<sp/>left<sp/>and<sp/>right<sp/>aligned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>use:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xText<sp/>=<sp/>xText0<sp/>+<sp/>((xText1-xText0)*(r.x-rx0))/(rx1-rx0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>problem<sp/>with<sp/>the<sp/>above<sp/>is<sp/>that<sp/>it<sp/>integer-oveflows<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>high<sp/>zoom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Instead<sp/>use:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xText<sp/>=<sp/>xText0<sp/>+<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)((xText1-xText0)*(((float)(r.x-rx0))/(rx1-rx0)));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>divide<sp/>by<sp/>zero<sp/>by<sp/>reverting<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simple<sp/>centering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>also<sp/>fall<sp/>into<sp/>this<sp/>case<sp/>if<sp/>x<sp/>and<sp/>x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>swapped,<sp/>in<sp/>which<sp/>case<sp/>we&apos;ll<sp/>end<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>aligned<sp/>anyway<sp/>because<sp/>code<sp/>later<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>catch<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xText<sp/>=<sp/>(x+x1-width)/2;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>the<sp/>text<sp/>now<sp/>appearing<sp/>partly<sp/>outside<sp/>r?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOffLeft<sp/>=<sp/>xText<sp/>&lt;<sp/>r.x+xExtra;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOffRight<sp/>=<sp/>xText<sp/>&gt;<sp/>r.x+r.width-width-xExtra;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IF<sp/>any<sp/>part<sp/>of<sp/>the<sp/>text<sp/>is<sp/>offscreen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>THEN<sp/>we<sp/>may<sp/>bring<sp/>it<sp/>back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bOffLeft<sp/>==<sp/>bOffRight<sp/>)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//IF<sp/>both<sp/>sides<sp/>on<sp/>screen,<sp/>THEN<sp/>nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//IF<sp/>both<sp/>sides<sp/>off<sp/>screen<sp/>THEN<sp/>don&apos;t<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//anything<sp/>about<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(because<sp/>if<sp/>we<sp/>did,<sp/>you&apos;d<sp/>never<sp/>get<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//all<sp/>the<sp/>text<sp/>by<sp/>scrolling).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bOffLeft<sp/>!=<sp/>bTooWideForScreen)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IF<sp/>we&apos;re<sp/>off<sp/>on<sp/>the<sp/>left,<sp/>OR<sp/>we&apos;re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>wide<sp/>for<sp/>the<sp/>screen<sp/>and<sp/>off<sp/>on<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(only)<sp/>THEN<sp/>align<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xText<sp/>=<sp/>r.x+xExtra;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>off<sp/>on<sp/>the<sp/>right,<sp/>OR<sp/>we&apos;re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>wide<sp/>and<sp/>off<sp/>on<sp/>the<sp/>left<sp/>(only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SO<sp/>align<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xText<sp/>=r.x+r.width-width-xExtra;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>if<sp/>we&apos;ve<sp/>taken<sp/>the<sp/>text<sp/>out<sp/>from<sp/>its<sp/>endpoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>must<sp/>move<sp/>it<sp/>back<sp/>so<sp/>that<sp/>it&apos;s<sp/>between<sp/>the<sp/>endpoints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>test<sp/>the<sp/>left<sp/>end<sp/>point<sp/>last<sp/>because<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>might<sp/>not<sp/>even<sp/>fit<sp/>between<sp/>the<sp/>endpoints<sp/>(at<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zoom<sp/>factor),<sp/>and<sp/>in<sp/>that<sp/>case<sp/>we&apos;d<sp/>like<sp/>to<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>text<sp/>at<sp/>the<sp/>left<sp/>end<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xText<sp/>&gt;<sp/>(x1-width-xExtra))</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xText=(x1-width-xExtra);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xText<sp/>&lt;<sp/>x+xExtra<sp/>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xText=x+xExtra;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/>mLabels[index]-&gt;xText<sp/>=<sp/>xText;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LabelTrack::ComputeLayout(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="461"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iRow;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rows<sp/>are<sp/>the<sp/>&apos;same&apos;<sp/>height<sp/>as<sp/>icons<sp/>or<sp/>as<sp/>the<sp/>text,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whichever<sp/>is<sp/>taller.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yRowHeight<sp/>=<sp/>wxMax(mTextHeight,mIconHeight)+3;</highlight><highlight class="comment">//<sp/>pixels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extra<sp/>space<sp/>at<sp/>end<sp/>of<sp/>rows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>allow<sp/>space<sp/>for<sp/>one<sp/>half<sp/>icon<sp/>at<sp/>the<sp/>start<sp/>and<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>half<sp/>icon<sp/>widths<sp/>for<sp/>extra<sp/>x<sp/>for<sp/>the<sp/>text<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[we<sp/>don&apos;t<sp/>allow<sp/>half<sp/>a<sp/>width<sp/>space<sp/>for<sp/>the<sp/>end<sp/>icon<sp/>since<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allowed<sp/>to<sp/>be<sp/>obscured<sp/>by<sp/>the<sp/>text].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xExtra=<sp/>(3<sp/>*<sp/>mIconWidth)/2;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRows<sp/>=<sp/>wxMin((r.height<sp/>/<sp/>yRowHeight)<sp/>+<sp/>1,<sp/><ref refid="_label_track_8h_1a333706056f1d9a1a09c2a53c70c7bb4d" kindref="member">MAX_NUM_ROWS</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initially<sp/>none<sp/>of<sp/>the<sp/>rows<sp/>have<sp/>been<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>set<sp/>a<sp/>value<sp/>that<sp/>is<sp/>less<sp/>than<sp/>any<sp/>valid<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xStart<sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1af5b3ea2d31e53b203a06d13d4afd7f90" kindref="member">TimeToPosition</ref>(0.0,<sp/>r.x)<sp/>-<sp/>100;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="_label_track_8h_1a333706056f1d9a1a09c2a53c70c7bb4d" kindref="member">MAX_NUM_ROWS</ref>;i++)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xUsed[i]=xStart;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRowsUsed=0;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)mLabels.Count();<sp/>i++)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1af5b3ea2d31e53b203a06d13d4afd7f90" kindref="member">TimeToPosition</ref>(mLabels[i]-&gt;getT0(),<sp/>r.x);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1af5b3ea2d31e53b203a06d13d4afd7f90" kindref="member">TimeToPosition</ref>(mLabels[i]-&gt;getT1(),<sp/>r.x);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>r.y;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;x=<ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;x1=x1;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;y=-1;</highlight><highlight class="comment">//<sp/>-ve<sp/>indicates<sp/>nothing<sp/>doing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iRow=0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Our<sp/>first<sp/>preference<sp/>is<sp/>a<sp/>row<sp/>that<sp/>ends<sp/>where<sp/>we<sp/>start.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(This<sp/>is<sp/>to<sp/>encourage<sp/>merging<sp/>of<sp/>adjacent<sp/>label<sp/>boundaries).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(iRow&lt;nRowsUsed)<sp/>&amp;&amp;<sp/>(xUsed[iRow]<sp/>!=<sp/>x<sp/>))</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iRow++;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IF<sp/>we<sp/>didn&apos;t<sp/>find<sp/>one<sp/>THEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>any<sp/>row<sp/>that<sp/>can<sp/>take<sp/>a<sp/>span<sp/>starting<sp/>at<sp/>x.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iRow<sp/>&gt;=<sp/>nRowsUsed<sp/>)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iRow=0;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(iRow&lt;nRows)<sp/>&amp;&amp;<sp/>(xUsed[iRow]<sp/>&gt;<sp/>x<sp/>))</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iRow++;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IF<sp/>we<sp/>found<sp/>such<sp/>a<sp/>row<sp/>THEN<sp/>record<sp/>a<sp/>valid<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iRow&lt;nRows<sp/>)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Possibly<sp/>update<sp/>the<sp/>number<sp/>of<sp/>rows<sp/>actually<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iRow<sp/>&gt;=<sp/>nRowsUsed<sp/>)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRowsUsed=iRow+1;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>the<sp/>position<sp/>for<sp/>this<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=<sp/>r.y<sp/>+<sp/>iRow<sp/>*<sp/>yRowHeight<sp/>+(yRowHeight/2)+1;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;y=y;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>this<sp/>row<sp/>we<sp/>have<sp/>used<sp/>up<sp/>to<sp/>max<sp/>of<sp/>end<sp/>marker<sp/>and<sp/>width.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plus<sp/>also<sp/>allow<sp/>space<sp/>to<sp/>show<sp/>the<sp/>start<sp/>icon<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>space<sp/>for<sp/>the<sp/>text<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xUsed[iRow]=x+mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;width+xExtra;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xUsed[iRow]<sp/>&lt;<sp/>x1<sp/>)<sp/>xUsed[iRow]=x1;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ComputeTextPosition(<sp/>r,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525" refid="class_label_struct_1a7a157224c1e8d98552e7d37bbd4c4175" refkind="member"><highlight class="normal">LabelStruct::LabelStruct(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;region,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString&amp;<sp/>aTitle)</highlight></codeline>
<codeline lineno="527"><highlight class="normal">:<sp/>selectedRegion(region)</highlight></codeline>
<codeline lineno="528"><highlight class="normal">,<sp/>title(aTitle)</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1a90f50bd9dc6af6bb11ef999c42b1b85d" kindref="member">changeInitialMouseXPos</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1a5aa066c2c41f9a807171804bb1ed5db8" kindref="member">highlighted</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1ae3885ef0e16798f57e24f7f996921338" kindref="member">updated</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1ae81abfcb1628d7c4931e06f56a319e9f" kindref="member">width</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1af7b2252912f4b3999465c8a37c58e30e" kindref="member">xText</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="class_label_struct_1a7b97a8462c84909e95cb7bbdbeae6e3a" refkind="member"><highlight class="normal">LabelStruct::LabelStruct(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;region,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString&amp;<sp/>aTitle)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">:<sp/><ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>(region)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">,<sp/><ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>(aTitle)</highlight></codeline>
<codeline lineno="545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overwrite<sp/>the<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1a21a6af7b052d9d6bd39cc1db088e8f5d" kindref="member">setTimes</ref>(t0,<sp/>t1);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1a90f50bd9dc6af6bb11ef999c42b1b85d" kindref="member">changeInitialMouseXPos</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1a5aa066c2c41f9a807171804bb1ed5db8" kindref="member">highlighted</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1ae3885ef0e16798f57e24f7f996921338" kindref="member">updated</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1ae81abfcb1628d7c4931e06f56a319e9f" kindref="member">width</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1af7b2252912f4b3999465c8a37c58e30e" kindref="member">xText</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="563" refid="class_label_struct_1a7fe75447943ca79178124d67f82b38c1" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a7fe75447943ca79178124d67f82b38c1" kindref="member">LabelStruct::DrawLines</ref>(wxDC<sp/>&amp;<sp/>dc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>far<sp/>out<sp/>from<sp/>the<sp/>centre<sp/>line<sp/>should<sp/>the<sp/>vertical<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start,<sp/>i.e.<sp/>what<sp/>is<sp/>the<sp/>y<sp/>position<sp/>of<sp/>the<sp/>icon?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>adjust<sp/>this<sp/>so<sp/>that<sp/>the<sp/>line<sp/>encroaches<sp/>on<sp/>the<sp/>icon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slightly<sp/>(there<sp/>is<sp/>white<sp/>space<sp/>in<sp/>the<sp/>design).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yIconStart<sp/>=<sp/><ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref><sp/>-<sp/>(LabelTrack::mIconHeight<sp/>/2)+1+(LabelTrack::mTextHeight+3)/2;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yIconEnd<sp/><sp/><sp/>=<sp/>yIconStart<sp/>+<sp/>LabelTrack::mIconHeight-2;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>y<sp/>is<sp/>positive<sp/>then<sp/>it<sp/>is<sp/>the<sp/>center<sp/>line<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref><sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref><sp/><sp/>&gt;=<sp/>r.x)<sp/>&amp;&amp;<sp/>(<ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref><sp/><sp/>&lt;=<sp/>(r.x+r.width)))</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>line<sp/>above<sp/>and<sp/>below<sp/>left<sp/>dragging<sp/>widget.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>,<sp/>r.y,<sp/><sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>,<sp/>yIconStart<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>,<sp/>yIconEnd,<sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>,<sp/>r.y<sp/>+<sp/>r.height);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref><sp/>&gt;=<sp/>r.x)<sp/>&amp;&amp;<sp/>(<ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref><sp/>&lt;=<sp/>(r.x+r.width)))</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>line<sp/>above<sp/>and<sp/>below<sp/>right<sp/>dragging<sp/>widget.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/><ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref>,<sp/>r.y,<sp/><sp/><ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref>,<sp/>yIconStart<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/><ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref>,<sp/>yIconEnd,<sp/><ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref>,<sp/>r.y<sp/>+<sp/>r.height);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>line,<sp/>even<sp/>though<sp/>the<sp/>widget<sp/>is<sp/>off<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>,<sp/>r.y,<sp/><sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>,<sp/>r.y<sp/>+<sp/>r.height);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/><ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref>,<sp/>r.y,<sp/><sp/><ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref>,<sp/>r.y<sp/>+<sp/>r.height);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="class_label_struct_1a24022614875489c38f110f503926abaa" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a24022614875489c38f110f503926abaa" kindref="member">LabelStruct::DrawGlyphs</ref>(wxDC<sp/>&amp;<sp/>dc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GlyphLeft,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GlyphRight)</highlight></codeline>
<codeline lineno="601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xHalfWidth=LabelTrack::mIconWidth/2;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yStart=<ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref>-LabelTrack::mIconHeight/2+(LabelTrack::mTextHeight+3)/2;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>y<sp/>==<sp/>-1,<sp/>nothing<sp/>to<sp/>draw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref><sp/>==<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref><sp/><sp/>&gt;=<sp/>r.x)<sp/>&amp;&amp;<sp/>(<ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref><sp/><sp/>&lt;=<sp/>(r.x+r.width)))</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawBitmap(<ref refid="class_label_track_1a693026a7f48f1fbb8fb6e98db6afee24" kindref="member">LabelTrack::GetGlyph</ref>(GlyphLeft),<sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>-xHalfWidth,yStart,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>extra<sp/>test<sp/>commented<sp/>out<sp/>here<sp/>would<sp/>suppress<sp/>right<sp/>hand<sp/>markers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>they<sp/>overlap<sp/>the<sp/>left<sp/>hand<sp/>marker<sp/>(e.g.<sp/>zoomed<sp/>out)<sp/>or<sp/>to<sp/>the<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref><sp/>&gt;=<sp/>r.x)<sp/>&amp;&amp;<sp/>(<ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref><sp/>&lt;=<sp/>(r.x+r.width))<sp/></highlight><highlight class="comment">/*&amp;&amp;<sp/>(x1&gt;x+LabelTrack::mIconWidth)*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawBitmap(<ref refid="class_label_track_1a693026a7f48f1fbb8fb6e98db6afee24" kindref="member">LabelTrack::GetGlyph</ref>(GlyphRight),<sp/><ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref>-xHalfWidth,yStart,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="623" refid="class_label_struct_1a8a3c06204a11f507939dc633a4ac0761" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a8a3c06204a11f507939dc633a4ac0761" kindref="member">LabelStruct::DrawText</ref>(wxDC<sp/>&amp;<sp/>dc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>y<sp/>is<sp/>positive<sp/>then<sp/>it<sp/>is<sp/>the<sp/>center<sp/>line<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//text<sp/>we<sp/>are<sp/>about<sp/>to<sp/>draw.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>it<sp/>isn&apos;t,<sp/>nothing<sp/>to<sp/>draw.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref><sp/>==<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>frame<sp/>for<sp/>the<sp/>text...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>draw<sp/>it<sp/>half<sp/>an<sp/>icon<sp/>width<sp/>left<sp/>of<sp/>the<sp/>text<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xStart=wxMax(r.x,<ref refid="class_label_struct_1af7b2252912f4b3999465c8a37c58e30e" kindref="member">xText</ref>-LabelTrack::mIconWidth/2);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xEnd=wxMin(r.x+r.width,<ref refid="class_label_struct_1af7b2252912f4b3999465c8a37c58e30e" kindref="member">xText</ref>+<ref refid="class_label_struct_1ae81abfcb1628d7c4931e06f56a319e9f" kindref="member">width</ref>+LabelTrack::mIconWidth/2);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xWidth<sp/>=<sp/>xEnd-xStart;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(xStart<sp/>&lt;<sp/>(r.x+r.width))<sp/>&amp;&amp;<sp/>(xEnd<sp/>&gt;<sp/>r.x)<sp/>&amp;&amp;<sp/>(xWidth&gt;0))</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>draw<sp/>the<sp/>text<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawText(<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>,<sp/><ref refid="class_label_struct_1af7b2252912f4b3999465c8a37c58e30e" kindref="member">xText</ref>,<sp/><ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref>-LabelTrack::mTextHeight/2);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648" refid="class_label_struct_1a489fb7bc0fccd5526041835a5b6bb38b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a489fb7bc0fccd5526041835a5b6bb38b" kindref="member">LabelStruct::DrawTextBox</ref>(wxDC<sp/>&amp;<sp/>dc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>y<sp/>is<sp/>positive<sp/>then<sp/>it<sp/>is<sp/>the<sp/>center<sp/>line<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//text<sp/>we<sp/>are<sp/>about<sp/>to<sp/>draw.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yBarHeight=3;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yFrameHeight<sp/>=<sp/>LabelTrack::mTextHeight+3;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xBarShorten<sp/><sp/>=<sp/>LabelTrack::mIconWidth+4;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref><sp/>==<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xStart=wxMax(r.x,<ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>+xBarShorten/2);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xEnd=wxMin(r.x+r.width,<ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref>-xBarShorten/2);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xWidth<sp/>=<sp/>xEnd-xStart;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(xStart<sp/>&lt;<sp/>(r.x+r.width))<sp/>&amp;&amp;<sp/>(xEnd<sp/>&gt;<sp/>r.x)<sp/>&amp;&amp;<sp/>(xWidth&gt;0))</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>bar(<sp/>xStart,<ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref>-yBarHeight/2+yFrameHeight/2,</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xWidth,yBarHeight);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref><sp/>&gt;<sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>+xBarShorten<sp/>)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(bar);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>drawing<sp/>the<sp/>bar<sp/>and<sp/>the<sp/>frame,<sp/>we<sp/>compute<sp/>the<sp/>clipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>viewport<sp/>ourselves.<sp/><sp/>Under<sp/>Win98<sp/>the<sp/>GDI<sp/>does<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculations<sp/>in<sp/>16<sp/>bit<sp/>arithmetic,<sp/>and<sp/>so<sp/>gets<sp/>it<sp/>completely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrong<sp/>at<sp/>higher<sp/>zooms<sp/>where<sp/>the<sp/>bar<sp/>can<sp/>easily<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>more<sp/>than<sp/>65536<sp/>pixels<sp/>wide.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>bar<sp/>for<sp/>label<sp/>extent...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>quite<sp/>draw<sp/>from<sp/>x<sp/>to<sp/>x1<sp/>because<sp/>we<sp/>allow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>half<sp/>an<sp/>icon<sp/>width<sp/>at<sp/>each<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xStart=wxMax(r.x,<ref refid="class_label_struct_1af7b2252912f4b3999465c8a37c58e30e" kindref="member">xText</ref>-LabelTrack::mIconWidth/2);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xEnd=wxMin(r.x+r.width,<ref refid="class_label_struct_1af7b2252912f4b3999465c8a37c58e30e" kindref="member">xText</ref>+<ref refid="class_label_struct_1ae81abfcb1628d7c4931e06f56a319e9f" kindref="member">width</ref>+LabelTrack::mIconWidth/2);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xWidth<sp/>=<sp/>xEnd-xStart;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(xStart<sp/>&lt;<sp/>(r.x+r.width))<sp/>&amp;&amp;<sp/>(xEnd<sp/>&gt;<sp/>r.x)<sp/>&amp;&amp;<sp/>(xWidth&gt;0))</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>frame(</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xStart,<ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref>-yFrameHeight/2,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xWidth,yFrameHeight<sp/>);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(frame);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="698" refid="class_label_struct_1a8aca124e1c205478aac86e1ac298ff11" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a8aca124e1c205478aac86e1ac298ff11" kindref="member">LabelStruct::DrawHighlight</ref>(<sp/>wxDC<sp/>&amp;<sp/>dc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xPos1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xPos2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charHeight)</highlight></codeline>
<codeline lineno="699"><highlight class="normal">{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1a5aa066c2c41f9a807171804bb1ed5db8" kindref="member">highlighted</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1a90f50bd9dc6af6bb11ef999c42b1b85d" kindref="member">changeInitialMouseXPos</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/>wxPen<sp/>curPen<sp/>=<sp/>dc.GetPen();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/>curPen.SetColour(wxString(wxT(</highlight><highlight class="stringliteral">&quot;BLUE&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/>wxBrush<sp/>curBrush<sp/>=<sp/>dc.GetBrush();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/>curBrush.SetColour(wxString(wxT(</highlight><highlight class="stringliteral">&quot;BLUE&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xPos1<sp/>&lt;<sp/>xPos2)</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(xPos1-1,<sp/><ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref>-charHeight/2,<sp/>xPos2-xPos1+1,<sp/>charHeight);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(xPos2-1,<sp/><ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref>-charHeight/2,<sp/>xPos1-xPos2+1,<sp/>charHeight);</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="class_label_struct_1ab3574594fda59c1bdd6512f83c440546" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1ab3574594fda59c1bdd6512f83c440546" kindref="member">LabelStruct::getXPos</ref>(<sp/>wxDC<sp/>&amp;<sp/>dc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>xPos1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_mac_command_win_8c_1ac7cbd20570eca17e4a8ce0c468f7506b" kindref="member">cursorPos</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="714"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/>*xPos1<sp/>=<sp/><ref refid="class_label_struct_1af7b2252912f4b3999465c8a37c58e30e" kindref="member">xText</ref>;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>cursorPos<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partWidth;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>width<sp/>of<sp/>the<sp/>substring<sp/>and<sp/>add<sp/>it<sp/>to<sp/>Xpos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.GetTextExtent(<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>.Left(cursorPos),<sp/>&amp;partWidth,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*xPos1<sp/>+=<sp/>partWidth;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725" refid="class_label_track_1a643d0bc707a55f315511694ea8bd2c7f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a643d0bc707a55f315511694ea8bd2c7f" kindref="member">LabelTrack::CalcCursorX</ref>(wxWindow<sp/>*<sp/>parent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="726"><highlight class="normal">{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxClientDC<sp/>dc(parent);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msFont.Ok())<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetFont(msFont);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;getXPos(dc,<sp/>x,<sp/>mCurrentCursorPos);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>+=<sp/>LabelTrack::mIconWidth<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="745" refid="class_label_track_1a8ea914e523a578a392a99373bc803797" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a8ea914e523a578a392a99373bc803797" kindref="member">LabelTrack::Draw</ref>(wxDC<sp/>&amp;<sp/>dc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>r,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="748"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(msFont.Ok())</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetFont(msFont);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mFontHeight<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>calculateFontHeight(dc);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_artist_1aa39e383c6894d3a72cd1783399288a19" kindref="member">TrackArtist::DrawBackgroundWithSelection</ref>(&amp;dc,<sp/>r,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a08240cbb4322e9f5725e865033c1f37a" kindref="member">AColor::labelSelectedBrush</ref>,<sp/><ref refid="class_a_color_1aaa92124859c6703dc9ff1ef31434be56" kindref="member">AColor::labelUnselectedBrush</ref>,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectedRegion,<sp/>zoomInfo);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/>wxCoord<sp/>textWidth,<sp/>textHeight;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>text<sp/>widths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Make<sp/>more<sp/>efficient<sp/>by<sp/>only<sp/>re-computing<sp/>when<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>label<sp/>title<sp/>changes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)mLabels.Count();<sp/>i++)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.GetTextExtent(mLabels[i]-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>,<sp/>&amp;textWidth,<sp/>&amp;textHeight);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;width<sp/>=<sp/>textWidth;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>And<sp/>this<sp/>only<sp/>needs<sp/>to<sp/>be<sp/>done<sp/>once,<sp/>but<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>need<sp/>the<sp/>dc<sp/>to<sp/>do<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>set<sp/>mTextHeight<sp/>to<sp/>something<sp/>sensible,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>guarding<sp/>against<sp/>the<sp/>case<sp/>where<sp/>there<sp/>are<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>labels<sp/>or<sp/>all<sp/>are<sp/>empty<sp/>strings,<sp/>which<sp/>for<sp/>example</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>happens<sp/>with<sp/>a<sp/>NEW<sp/>label<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/>dc.GetTextExtent(wxT(</highlight><highlight class="stringliteral">&quot;Demo<sp/>Text<sp/>x^y&quot;</highlight><highlight class="normal">),<sp/>&amp;textWidth,<sp/>&amp;textHeight);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/>mTextHeight<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)textHeight;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/>ComputeLayout(<sp/>r,<sp/>zoomInfo<sp/>);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/>dc.SetTextForeground(<ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(<sp/>clrLabelTrackText));</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/>dc.SetBackgroundMode(wxTRANSPARENT);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/>dc.SetBrush(<ref refid="class_a_color_1a740811e4659d575a0c59a9ec1567ec60" kindref="member">AColor::labelTextNormalBrush</ref>);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(<ref refid="class_a_color_1a51810ca58729b5c17e07f8aedca690fc" kindref="member">AColor::labelSurroundPen</ref>);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLabels<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)mLabels.Count();</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GlyphLeft;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GlyphRight;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>draw<sp/>the<sp/>various<sp/>items<sp/>in<sp/>this<sp/>order,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>the<sp/>correct<sp/>things<sp/>overpaint<sp/>each<sp/>other.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>vertical<sp/>lines<sp/>that<sp/>show<sp/>where<sp/>the<sp/>end<sp/>positions<sp/>are.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nLabels;<sp/>i++)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;DrawLines(<sp/>dc,<sp/>r<sp/>);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>end<sp/>glyphs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nLabels;<sp/>i++)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GlyphLeft=0;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GlyphRight=1;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i==mMouseOverLabelLeft<sp/>)</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GlyphLeft<sp/>=<sp/>mbHitCenter<sp/>?<sp/>6:9;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i==mMouseOverLabelRight<sp/>)</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GlyphRight<sp/>=<sp/>mbHitCenter<sp/>?<sp/>7:4;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;DrawGlyphs(<sp/>dc,<sp/>r,<sp/>GlyphLeft,<sp/>GlyphRight<sp/>);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>label<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nLabels;<sp/>i++)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mSelIndex==i)<sp/>dc.SetBrush(<ref refid="class_a_color_1a7a5e22309e972fa25480cfa378d95a40" kindref="member">AColor::labelTextEditBrush</ref>);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;DrawTextBox(<sp/>dc,<sp/>r<sp/>);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mSelIndex==i)<sp/>dc.SetBrush(<ref refid="class_a_color_1a740811e4659d575a0c59a9ec1567ec60" kindref="member">AColor::labelTextNormalBrush</ref>);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>highlights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mDragXPos<sp/>!=<sp/>-1)<sp/>&amp;&amp;<sp/>(mSelIndex<sp/>&gt;=<sp/>0<sp/>))</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>left<sp/>X<sp/>pos<sp/>of<sp/>highlighted<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;getXPos(dc,<sp/>&amp;mXPos1,<sp/>mInitialCursorPos);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>preventing<sp/>dragging<sp/>glygh<sp/>from<sp/>changing<sp/>current<sp/>cursor<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mResetCursorPos)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>end<sp/>dragging<sp/>position<sp/>to<sp/>current<sp/>cursor<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCurrentCursorPosition(dc,<sp/>mDragXPos);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mResetCursorPos<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>right<sp/>X<sp/>pos<sp/>of<sp/>highlighted<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;getXPos(dc,<sp/>&amp;mXPos2,<sp/>mCurrentCursorPos);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;DrawHighlight(dc,<sp/>mXPos1,<sp/>mXPos2,<sp/>mFontHeight);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>text<sp/>and<sp/>the<sp/>label<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nLabels;<sp/>i++)</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mSelIndex==i)<sp/>dc.SetBrush(<ref refid="class_a_color_1a7a5e22309e972fa25480cfa378d95a40" kindref="member">AColor::labelTextEditBrush</ref>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;DrawText(<sp/>dc,<sp/>r<sp/>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mSelIndex==i)<sp/>dc.SetBrush(<ref refid="class_a_color_1a740811e4659d575a0c59a9ec1567ec60" kindref="member">AColor::labelTextNormalBrush</ref>);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>cursor,<sp/>if<sp/>there<sp/>is<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mSelIndex<sp/>&gt;=0<sp/>)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>mSelIndex;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xPos<sp/>=<sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;xText;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>mouse<sp/>is<sp/>clicked<sp/>in<sp/>text<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMouseXPos<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>current<sp/>cursor<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCurrentCursorPosition(dc,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>mMouseXPos);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>preventing<sp/>from<sp/>resetting<sp/>by<sp/>shift+mouse<sp/>left<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>initialCursorPos<sp/>equal<sp/>to<sp/>currentCursorPos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1a90f50bd9dc6af6bb11ef999c42b1b85d" kindref="member">changeInitialMouseXPos</ref>)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDrawCursor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMouseXPos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mCurrentCursorPos<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>width<sp/>of<sp/>the<sp/>substring<sp/>and<sp/>add<sp/>it<sp/>to<sp/>Xpos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partWidth;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.GetTextExtent((mLabels[i]-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>).Left(mCurrentCursorPos),<sp/>&amp;partWidth,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xPos<sp/>+=<sp/>partWidth;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxPen<sp/>currentPen<sp/>=<sp/>dc.GetPen();</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CursorWidth=2;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDrawCursor)<sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentPen.SetWidth(CursorWidth);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xPos-1,<sp/>mLabels[i]-&gt;<ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref><sp/>-<sp/>mFontHeight/2<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xPos-1,<sp/>mLabels[i]-&gt;<ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref><sp/>+<sp/>mFontHeight/2<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentPen.SetWidth(1);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LabelTrack::SetCurrentCursorPosition(wxDC<sp/>&amp;<sp/>dc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xPos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="885"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>bool<sp/>indicator<sp/>to<sp/>see<sp/>if<sp/>set<sp/>the<sp/>cursor<sp/>position<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>finished<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partWidth;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oneWidth;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bound;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>subString;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!finished<sp/>&amp;&amp;<sp/>(charIndex<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>.length()<sp/>+<sp/>1))</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subString<sp/>=<sp/>(mLabels[mSelIndex]-&gt;title).Left(charIndex);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>width<sp/>of<sp/>substring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.GetTextExtent(subString,<sp/>&amp;partWidth,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(charIndex<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>width<sp/>of<sp/>the<sp/>last<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.GetTextExtent(subString.Right(1),<sp/>&amp;oneWidth,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bound<sp/>=<sp/>mLabels[mSelIndex]-&gt;xText<sp/>+<sp/>partWidth<sp/>-<sp/>oneWidth<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bound<sp/>=<sp/>mLabels[mSelIndex]-&gt;xText<sp/>+<sp/>partWidth<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xPos<sp/>&lt;=<sp/>bound)</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>charIndex<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charIndex++;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!finished)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cursor<sp/>should<sp/>be<sp/>in<sp/>the<sp/>last<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>mLabels[mSelIndex]-&gt;title.length();</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LabelTrack::calculateFontHeight(wxDC<sp/>&amp;<sp/>dc)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="929"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charDescent;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charLeading;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>width<sp/>of<sp/>the<sp/>substring<sp/>and<sp/>add<sp/>it<sp/>to<sp/>Xpos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/>dc.GetTextExtent(wxT(</highlight><highlight class="stringliteral">&quot;(Test<sp/>String)|[yp]&quot;</highlight><highlight class="normal">),<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;mFontHeight,<sp/>&amp;charDescent,<sp/>&amp;charLeading);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>cursor<sp/>will<sp/>have<sp/>height<sp/>charHeight.<sp/><sp/>We<sp/>don&apos;t<sp/>include<sp/>the<sp/>descender<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>part<sp/>of<sp/>the<sp/>height<sp/>because<sp/>for<sp/>phonetic<sp/>fonts<sp/>this<sp/>leads<sp/>to<sp/>cursors<sp/>which<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>tall.<sp/><sp/>We<sp/>don&apos;t<sp/>include<sp/>leading<sp/>either<sp/>-<sp/>it<sp/>is<sp/>usually<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>make<sp/>up<sp/>for<sp/>ignoring<sp/>the<sp/>descender<sp/>height,<sp/>we<sp/>add<sp/>one<sp/>pixel<sp/>above<sp/>and<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>CursorExtraHeight<sp/>so<sp/>that<sp/>the<sp/>cursor<sp/>is<sp/>just<sp/>a<sp/>little<sp/>taller<sp/>than<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>body<sp/>of<sp/>the<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CursorExtraHeight=2;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/>mFontHeight<sp/>+=<sp/>CursorExtraHeight<sp/>-<sp/>(charLeading+charDescent);</highlight></codeline>
<codeline lineno="944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946" refid="class_label_track_1a394fa271aa242ed202f2d4c647c94736" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a394fa271aa242ed202f2d4c647c94736" kindref="member">LabelTrack::IsTextSelected</ref>()</highlight></codeline>
<codeline lineno="947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1a5aa066c2c41f9a807171804bb1ed5db8" kindref="member">highlighted</ref>)</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentCursorPos<sp/>==<sp/>mInitialCursorPos)</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="959" refid="class_label_track_1a39e3310c03d398f80b7a1730a850fb6c" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a39e3310c03d398f80b7a1730a850fb6c" kindref="member">LabelTrack::CutSelectedText</ref>()</highlight></codeline>
<codeline lineno="960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsTextSelected())</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>left=wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>right=wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>text<sp/>=<sp/>mLabels[mSelIndex]-&gt;title;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swapping<sp/>to<sp/>make<sp/>sure<sp/>currentCursorPos<sp/>&gt;<sp/>initialCursorPos<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInitialCursorPos<sp/>&gt;<sp/>mCurrentCursorPos)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>mInitialCursorPos;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>for<sp/>cutting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>text.Mid(mInitialCursorPos,<sp/>mCurrentCursorPos-mInitialCursorPos);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>left-remaining<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInitialCursorPos<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>text.Mid(0,<sp/>mInitialCursorPos);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>right-remaining<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentCursorPos<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)text.Length())<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>text.Mid(mCurrentCursorPos,<sp/>text.Length()-mCurrentCursorPos);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>title<sp/>to<sp/>the<sp/>combination<sp/>of<sp/>the<sp/>two<sp/>remainders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;title<sp/>=<sp/>left<sp/>+<sp/>right;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>data<sp/>onto<sp/>clipboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wxTheClipboard-&gt;Open())<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxTheClipboard-&gt;SetData(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxTextDataObject(data));</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxTheClipboard-&gt;Close();</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>cursor<sp/>positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>left.Length();</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005" refid="class_label_track_1af2d5ecf365b944ef121fd5ea99c98fc3" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1af2d5ecf365b944ef121fd5ea99c98fc3" kindref="member">LabelTrack::CopySelectedText</ref>()</highlight></codeline>
<codeline lineno="1006"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1a5aa066c2c41f9a807171804bb1ed5db8" kindref="member">highlighted</ref>)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swapping<sp/>to<sp/>make<sp/>sure<sp/>currentCursorPos<sp/>&gt;<sp/>mInitialCursorPos<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1aa21af39fe271e7a7e1f388c5627e7fc1" kindref="member">init</ref><sp/>=<sp/>mInitialCursorPos;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cur<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(init<sp/>&gt;<sp/>cur)<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>mInitialCursorPos;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>init<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>for<sp/>copying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>mLabels[mSelIndex]-&gt;title.Mid(init,<sp/>cur-init);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>data<sp/>on<sp/>clipboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wxTheClipboard-&gt;Open())<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxTheClipboard-&gt;SetData(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxTextDataObject(data));</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxTheClipboard-&gt;Close();</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PRL:<sp/><sp/>should<sp/>this<sp/>set<sp/>other<sp/>fields<sp/>of<sp/>the<sp/>label<sp/>selection?</highlight></codeline>
<codeline lineno="1035" refid="class_label_track_1a8aa448b696df66afcc21bdd176716ea7" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a8aa448b696df66afcc21bdd176716ea7" kindref="member">LabelTrack::PasteSelectedText</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sel0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sel1)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AddLabel(<ref refid="class_selected_region" kindref="compound">SelectedRegion</ref>(sel0,<sp/>sel1),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>text;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>left=wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>right=wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>text<sp/>data<sp/>is<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsTextClipSupported())<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wxTheClipboard-&gt;Open())<sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTextDataObject<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTheClipboard-&gt;GetData(data);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTheClipboard-&gt;Close();</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>data.GetText();</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>control<sp/>characters<sp/>to<sp/>blanks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)text.Length();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wxIscntrl(text[i]))<sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>wxT(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>is<sp/>some<sp/>highlighted<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1a5aa066c2c41f9a807171804bb1ed5db8" kindref="member">highlighted</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swapping<sp/>to<sp/>make<sp/>sure<sp/>currentCursorPos<sp/>&gt;<sp/>mInitialCursorPos<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInitialCursorPos<sp/>&gt;<sp/>mCurrentCursorPos)<sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>mInitialCursorPos;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>cutting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInitialCursorPos<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>(mLabels[mSelIndex]-&gt;title).Mid(0,<sp/>mInitialCursorPos);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentCursorPos<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(mLabels[mSelIndex]-&gt;title).Length())<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>(mLabels[mSelIndex]-&gt;title).Mid(mCurrentCursorPos,<sp/>(mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>).Length()-mCurrentCursorPos);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;title<sp/>=<sp/>left<sp/>+<sp/>text<sp/>+<sp/>right;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>left.Length()<sp/>+<sp/>text.Length();</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>the<sp/>data<sp/>on<sp/>the<sp/>clipboard<sp/>from<sp/>the<sp/>cursor<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentCursorPos<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>).Length())<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>(mLabels[mSelIndex]-&gt;title).Mid(mCurrentCursorPos);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;title<sp/>=<sp/>(mLabels[mSelIndex]-&gt;title).Left(mCurrentCursorPos);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;title<sp/>+=<sp/>text;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;title<sp/>+=<sp/>right;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>+=<sp/>text.Length();</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>mInitialCursorPos<sp/>equal<sp/>to<sp/>currentCursorPos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100" refid="class_label_track_1ad7d762fccf39df6cc98f3159c1468b62" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1ad7d762fccf39df6cc98f3159c1468b62" kindref="member">LabelTrack::IsTextClipSupported</ref>()</highlight></codeline>
<codeline lineno="1101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxTheClipboard-&gt;IsSupported(wxDF_TEXT);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106" refid="class_label_track_1a644b9b92976e1a9130033d702442f343" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a644b9b92976e1a9130033d702442f343" kindref="member">LabelTrack::GetOffset</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1107"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mOffset;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111" refid="class_label_track_1ab74baa087935344c5e5886da06631bc6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1ab74baa087935344c5e5886da06631bc6" kindref="member">LabelTrack::GetStartTime</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1112"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>mLabels.Count();</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabels[0]-&gt;getT0();</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121" refid="class_label_track_1a00581204bb86be2ca7c980f3ced9a102" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a00581204bb86be2ca7c980f3ced9a102" kindref="member">LabelTrack::GetEndTime</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1122"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>need<sp/>to<sp/>scan<sp/>through<sp/>all<sp/>the<sp/>labels,<sp/>because<sp/>the<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//label<sp/>might<sp/>not<sp/>have<sp/>the<sp/>right-most<sp/>end<sp/>(if<sp/>there<sp/>is<sp/>overlap).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>mLabels.Count();</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;getT1();</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t1<sp/>&gt;<sp/>end)</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139" refid="class_label_track_1ae729b5cff3bdc433b0db9a4bfb8af288" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_label_track_1ae729b5cff3bdc433b0db9a4bfb8af288" kindref="member">LabelTrack::Duplicate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1140"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144" refid="class_label_track_1a76e4fd0bb85109b8e82a65e12e579cc2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a76e4fd0bb85109b8e82a65e12e579cc2" kindref="member">LabelTrack::SetSelected</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" kindref="member">Track::SetSelected</ref>(s);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Unselect();</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164" refid="class_label_track_1a81e427da36fb83c52c3edcf78ace5576" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a81e427da36fb83c52c3edcf78ace5576" kindref="member">LabelTrack::OverGlyph</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Determine<sp/>the<sp/>NEW<sp/>selection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<sp/>pLabel;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=0;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d1=10;<sp/></highlight><highlight class="comment">//distance<sp/>in<sp/>pixels,<sp/>used<sp/>for<sp/>have<sp/>we<sp/>hit<sp/>drag<sp/>handle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d2=5;<sp/><sp/></highlight><highlight class="comment">//distance<sp/>in<sp/>pixels,<sp/>used<sp/>for<sp/>have<sp/>we<sp/>hit<sp/>drag<sp/>handle<sp/>center.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>not<sp/>over<sp/>a<sp/>label,<sp/>reset<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/>mMouseOverLabelLeft<sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/>mMouseOverLabelRight<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/>mbHitCenter<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)mLabels.Count();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pLabel<sp/>=<sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//over<sp/>left<sp/>or<sp/>right<sp/>selection<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>right<sp/>bound<sp/>first,<sp/>since<sp/>it<sp/>is<sp/>drawn<sp/>after<sp/>left<sp/>bound,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//so<sp/>give<sp/>it<sp/>precedence<sp/>for<sp/>matching/highlighting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>abs(pLabel-&gt;<ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref><sp/>-<sp/>(y<sp/>-<sp/>(LabelTrack::mTextHeight+3)/2))<sp/>&lt;<sp/>d1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abs(pLabel-&gt;<ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref><sp/>-<sp/>d2<sp/>-x)<sp/>&lt;<sp/>d1)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMouseOverLabelRight<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(pLabel-&gt;<ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref><sp/>-<sp/>x)<sp/>&lt;<sp/>d2<sp/>)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mbHitCenter<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>left<sp/>and<sp/>right<sp/>co-incident<sp/>at<sp/>this<sp/>resolution,<sp/>then<sp/>we<sp/>drag<sp/>both.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>be<sp/>a<sp/>little<sp/>less<sp/>stringent<sp/>about<sp/>co-incidence<sp/>here<sp/>if<sp/>we<sp/>liked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>abs(pLabel-&gt;<ref refid="class_label_struct_1a1e7175fc196b30358b92d4bae7f5dad6" kindref="member">x1</ref>-pLabel-&gt;<ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>)<sp/>&lt;<sp/>1.0<sp/>)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=1;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMouseOverLabelLeft<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/>2;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInBox<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>disable<sp/>the<sp/>dragging<sp/>for<sp/>selecting<sp/>the<sp/>text<sp/>in<sp/>text<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>else-if<sp/>here<sp/>rather<sp/>than<sp/>else<sp/>to<sp/>avoid<sp/>detecting<sp/>left<sp/>and<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>same<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><sp/><sp/>abs(pLabel-&gt;<ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref><sp/>-<sp/>(y<sp/>-<sp/>(LabelTrack::mTextHeight+3)/2))<sp/>&lt;<sp/>d1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abs(pLabel-&gt;<ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref><sp/>+<sp/>d2<sp/>-<sp/>x)<sp/>&lt;<sp/>d1<sp/>)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMouseOverLabelLeft<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(pLabel-&gt;<ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref><sp/>-<sp/>x)<sp/>&lt;<sp/>d2<sp/>)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mbHitCenter<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/>1;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInBox<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>disable<sp/>the<sp/>dragging<sp/>for<sp/>selecting<sp/>the<sp/>text<sp/>in<sp/>text<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>text<sp/>box<sp/>better<sp/>priority<sp/>for<sp/>selecting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(OverTextBox(pLabel,<sp/>x,<sp/>y))</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223" refid="class_label_track_1a4d7f5cf5453dcffe61771b0861c1d127" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a4d7f5cf5453dcffe61771b0861c1d127" kindref="member">LabelTrack::OverATextBox</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1224"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nn<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mLabels.Count();<sp/>nn--;)<sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OverTextBox(mLabels[nn],<sp/>xx,<sp/>yy))</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nn;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>if<sp/>the<sp/>mouse<sp/>is<sp/>over<sp/>text<sp/>box,<sp/>false<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234" refid="class_label_track_1a7b1ba12c21a01b29413065375a60a790" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a7b1ba12c21a01b29413065375a60a790" kindref="member">LabelTrack::OverTextBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*pLabel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1235"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(pLabel-&gt;<ref refid="class_label_struct_1af7b2252912f4b3999465c8a37c58e30e" kindref="member">xText</ref>-(mIconWidth/2)<sp/>&lt;<sp/>x)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x&lt;pLabel-&gt;<ref refid="class_label_struct_1af7b2252912f4b3999465c8a37c58e30e" kindref="member">xText</ref>+pLabel-&gt;<ref refid="class_label_struct_1ae81abfcb1628d7c4931e06f56a319e9f" kindref="member">width</ref>+(mIconWidth/2))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(abs(pLabel-&gt;<ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref>-y)&lt;mIconHeight/2))</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adjust<sp/>label&apos;s<sp/>left<sp/>or<sp/>right<sp/>boundary,<sp/>depending<sp/>which<sp/>is<sp/>requested.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>iff<sp/>the<sp/>label<sp/>flipped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247" refid="class_label_struct_1ad88079eee444025012070a1f831fbf23" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1ad88079eee444025012070a1f831fbf23" kindref="member">LabelStruct::AdjustEdge</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iEdge,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fNewTime)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1ae3885ef0e16798f57e24f7f996921338" kindref="member">updated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iEdge<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1ad1c6a578cb52f4a2d91952656a17b574" kindref="member">setT0</ref>(fNewTime);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1ae32e3f4d254e58372548619e069da39c" kindref="member">setT1</ref>(fNewTime);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>moving<sp/>the<sp/>label.<sp/><sp/>Adjust<sp/>both<sp/>left<sp/>and<sp/>right<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257" refid="class_label_struct_1a1405e19e8ecc7dbb9b36e279481c3a15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a1405e19e8ecc7dbb9b36e279481c3a15" kindref="member">LabelStruct::MoveLabel</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iEdge,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fNewTime)</highlight></codeline>
<codeline lineno="1258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fTimeSpan<sp/>=<sp/><ref refid="class_label_struct_1a5cc62c5ebc5575b5684e5ca9cab852c9" kindref="member">getDuration</ref>();</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iEdge<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1a21a6af7b052d9d6bd39cc1db088e8f5d" kindref="member">setTimes</ref>(fNewTime,<sp/>fNewTime+fTimeSpan);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1a21a6af7b052d9d6bd39cc1db088e8f5d" kindref="member">setTimes</ref>(fNewTime-fTimeSpan,<sp/>fNewTime);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct_1ae3885ef0e16798f57e24f7f996921338" kindref="member">updated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272" refid="class_label_struct_1a5e751529e48aabccb0d46492217099f4" refkind="member"><highlight class="normal"><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8" kindref="member">LabelStruct::TimeRelations</ref><sp/><ref refid="class_label_struct_1a5e751529e48aabccb0d46492217099f4" kindref="member">LabelStruct::RegionRelation</ref>(</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>reg_t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>reg_t1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*<sp/>WXUNUSED(parent))</highlight></codeline>
<codeline lineno="1274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retainLabels<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(reg_t0<sp/>&lt;=<sp/>reg_t1);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/RetainLabels&quot;</highlight><highlight class="normal">),<sp/>&amp;retainLabels);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(retainLabels)<sp/>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Desired<sp/>behavior<sp/>for<sp/>edge<sp/>cases:<sp/>The<sp/>length<sp/>of<sp/>the<sp/>selection<sp/>is<sp/>smaller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>the<sp/>length<sp/>of<sp/>the<sp/>label<sp/>if<sp/>the<sp/>selection<sp/>is<sp/>within<sp/>the<sp/>label<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>matching<sp/>exactly<sp/>a<sp/>(region)<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg_t0<sp/>&lt;<sp/><ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>&amp;&amp;<sp/>reg_t1<sp/>&gt;<sp/><ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>())</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a7d2eb849dac366b9e3f59933e643b3fe" kindref="member">SURROUNDS_LABEL</ref>;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg_t1<sp/>&lt;<sp/><ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>())</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8aacd7a2485255437d0be6a8ad50d1a0cf" kindref="member">BEFORE_LABEL</ref>;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg_t0<sp/>&gt;<sp/><ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>())</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8ac8591413369ee4df74d0e2472952254e" kindref="member">AFTER_LABEL</ref>;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg_t0<sp/>&gt;=<sp/><ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>&amp;&amp;<sp/>reg_t0<sp/>&lt;=<sp/><ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_t1<sp/>&gt;=<sp/><ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>&amp;&amp;<sp/>reg_t1<sp/>&lt;=<sp/><ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>())</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a3cfb7877ad14a3006551b7a0c503e242" kindref="member">WITHIN_LABEL</ref>;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg_t0<sp/>&gt;=<sp/><ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>&amp;&amp;<sp/>reg_t0<sp/>&lt;=<sp/><ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>())</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a5546f41def946d8ff28f8cedbcd17945" kindref="member">BEGINS_IN_LABEL</ref>;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a955b9201235ae459ac0e0c2613dd396d" kindref="member">ENDS_IN_LABEL</ref>;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AWD:<sp/>Desired<sp/>behavior<sp/>for<sp/>edge<sp/>cases:<sp/>point<sp/>labels<sp/>bordered<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>selection<sp/>are<sp/>included<sp/>within<sp/>it.<sp/>Region<sp/>labels<sp/>are<sp/>included<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>selection<sp/>to<sp/>the<sp/>extent<sp/>that<sp/>the<sp/>selection<sp/>covers<sp/>them;<sp/>specifically,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>they&apos;re<sp/>not<sp/>included<sp/>at<sp/>all<sp/>if<sp/>the<sp/>selection<sp/>borders<sp/>them,<sp/>and<sp/>they&apos;re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fully<sp/>included<sp/>if<sp/>the<sp/>selection<sp/>covers<sp/>them<sp/>fully,<sp/>even<sp/>if<sp/>it<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>borders<sp/>their<sp/>endpoints.<sp/>This<sp/>is<sp/>just<sp/>one<sp/>of<sp/>many<sp/>possible<sp/>schemes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>test<sp/>catches<sp/>bordered<sp/>point-labels<sp/>and<sp/>selected-through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>region-labels;<sp/>move<sp/>it<sp/>to<sp/>third<sp/>and<sp/>selection<sp/>edges<sp/>become<sp/>inclusive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WRT<sp/>point-labels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg_t0<sp/>&lt;=<sp/><ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>&amp;&amp;<sp/>reg_t1<sp/>&gt;=<sp/><ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>())</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a7d2eb849dac366b9e3f59933e643b3fe" kindref="member">SURROUNDS_LABEL</ref>;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg_t1<sp/>&lt;=<sp/><ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>())</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8aacd7a2485255437d0be6a8ad50d1a0cf" kindref="member">BEFORE_LABEL</ref>;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg_t0<sp/>&gt;=<sp/><ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>())</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8ac8591413369ee4df74d0e2472952254e" kindref="member">AFTER_LABEL</ref>;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>this<sp/>point,<sp/>all<sp/>point<sp/>labels<sp/>should<sp/>have<sp/>returned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg_t0<sp/>&gt;<sp/><ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>&amp;&amp;<sp/>reg_t0<sp/>&lt;<sp/><ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_t1<sp/>&gt;<sp/><ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>&amp;&amp;<sp/>reg_t1<sp/>&lt;<sp/><ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>())</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a3cfb7877ad14a3006551b7a0c503e242" kindref="member">WITHIN_LABEL</ref>;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Knowing<sp/>that<sp/>none<sp/>of<sp/>the<sp/>other<sp/>relations<sp/>match<sp/>simplifies<sp/>remaining</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg_t0<sp/>&gt;<sp/><ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>&amp;&amp;<sp/>reg_t0<sp/>&lt;<sp/><ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>())</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a5546f41def946d8ff28f8cedbcd17945" kindref="member">BEGINS_IN_LABEL</ref>;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a955b9201235ae459ac0e0c2613dd396d" kindref="member">ENDS_IN_LABEL</ref>;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342" refid="class_label_track_1a2c154fee523bc94a5ddd971009b5b20e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a2c154fee523bc94a5ddd971009b5b20e" kindref="member">LabelTrack::MayAdjustLabel</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLabel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iEdge,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllowSwapping,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fNewTime)</highlight></codeline>
<codeline lineno="1343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iLabel<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<sp/>pLabel<sp/>=<sp/>mLabels[<sp/>iLabel<sp/>];</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>the<sp/>requested<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipped<sp/>=<sp/>pLabel-&gt;<ref refid="class_label_struct_1ad88079eee444025012070a1f831fbf23" kindref="member">AdjustEdge</ref>(<sp/>iEdge,<sp/>fNewTime<sp/>);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>edges<sp/>did<sp/>not<sp/>swap,<sp/>then<sp/>we<sp/>are<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>flipped<sp/>)</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>swapping&apos;s<sp/>not<sp/>allowed<sp/>we<sp/>must<sp/>also<sp/>move<sp/>the<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>didn&apos;t<sp/>move.<sp/><sp/>Then<sp/>we&apos;re<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!bAllowSwapping<sp/>)</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pLabel-&gt;<ref refid="class_label_struct_1ad88079eee444025012070a1f831fbf23" kindref="member">AdjustEdge</ref>(<sp/>-iEdge,<sp/>fNewTime<sp/>);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>our<sp/>record<sp/>of<sp/>what<sp/>we<sp/>are<sp/>dragging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Temp<sp/>=<sp/>mMouseOverLabelLeft;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/>mMouseOverLabelLeft<sp/>=<sp/>mMouseOverLabelRight;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/>mMouseOverLabelRight<sp/>=<sp/>Temp;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>index<sp/>is<sp/>for<sp/>a<sp/>real<sp/>label,<sp/>adjust<sp/>its<sp/>left<sp/>and<sp/>right<sp/>boundary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369" refid="class_label_track_1aaf51c1e8db71f299d1ccc7b8f0dcbab2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1aaf51c1e8db71f299d1ccc7b8f0dcbab2" kindref="member">LabelTrack::MayMoveLabel</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLabel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iEdge,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fNewTime)</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iLabel<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/>mLabels[<sp/>iLabel<sp/>]-&gt;MoveLabel(<sp/>iEdge,<sp/>fNewTime<sp/>);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constrain<sp/>function,<sp/>as<sp/>in<sp/>processing/arduino.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returned<sp/>value<sp/>will<sp/>be<sp/>between<sp/>min<sp/>and<sp/>max<sp/>(inclusive).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Constrain(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>)</highlight></codeline>
<codeline lineno="1379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(<sp/>min<sp/>&lt;=<sp/>max<sp/>);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>min<sp/>)</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result=<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&gt;<sp/>max<sp/>)</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result=<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389" refid="class_label_track_1a22218fc0d00c27d0015a03eacd5a6b95" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a22218fc0d00c27d0015a03eacd5a6b95" kindref="member">LabelTrack::HandleGlyphDragRelease</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxMouseEvent<sp/>&amp;<sp/>evt,</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>&amp;<sp/>r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>*newSel)</highlight></codeline>
<codeline lineno="1392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(evt.LeftUp())</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lupd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>rupd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mMouseOverLabelLeft&gt;=0)<sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lupd<sp/>=<sp/>mLabels[mMouseOverLabelLeft]-&gt;updated;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mMouseOverLabelLeft]-&gt;updated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mMouseOverLabelRight&gt;=0)<sp/>{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rupd<sp/>=<sp/>mLabels[mMouseOverLabelRight]-&gt;updated;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mMouseOverLabelRight]-&gt;updated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIsAdjustingLabel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMouseOverLabelLeft<sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMouseOverLabelRight<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lupd<sp/>||<sp/>rupd;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(evt.Dragging())</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>are<sp/>currently<sp/>adjusting<sp/>a<sp/>label,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//just<sp/>reset<sp/>its<sp/>value<sp/>and<sp/>redraw.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LL:<sp/><sp/>Constrain<sp/>to<sp/>inside<sp/>track<sp/>rectangle<sp/>for<sp/>now.<sp/><sp/>Should<sp/>be<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>allow<sp/>scrolling<sp/>while<sp/>dragging<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref><sp/>=<sp/>Constrain(<sp/>evt.m_x<sp/>+<sp/>mxMouseDisplacement<sp/>-<sp/>r.x,<sp/>0,<sp/>r.width);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>exactly<sp/>one<sp/>edge<sp/>is<sp/>selected<sp/>we<sp/>allow<sp/>swapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllowSwapping<sp/>=<sp/>(mMouseOverLabelLeft<sp/>&gt;=0<sp/>)<sp/>^<sp/>(<sp/>mMouseOverLabelRight<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>on<sp/>the<sp/>&apos;dot&apos;<sp/>and<sp/>nowe&apos;re<sp/>moving,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Though<sp/>shift-down<sp/>inverts<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>if<sp/>both<sp/>edges<sp/>the<sp/>same,<sp/>then<sp/>we&apos;re<sp/>always<sp/>moving<sp/>the<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bLabelMoving<sp/>=<sp/>mbIsMoving;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bLabelMoving<sp/>^=<sp/>evt.ShiftDown();</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bLabelMoving<sp/>|=<sp/>mMouseOverLabelLeft==mMouseOverLabelRight;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fNewX<sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1aa7e0fefa3365826150c253c1ba6e4339" kindref="member">PositionToTime</ref>(x,<sp/>0);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bLabelMoving<sp/>)</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MayMoveLabel(<sp/>mMouseOverLabelLeft,<sp/><sp/>-1,<sp/>fNewX<sp/>);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MayMoveLabel(<sp/>mMouseOverLabelRight,<sp/>+1,<sp/>fNewX<sp/>);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MayAdjustLabel(<sp/>mMouseOverLabelLeft,<sp/><sp/>-1,<sp/>bAllowSwapping,<sp/>fNewX<sp/>);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MayAdjustLabel(<sp/>mMouseOverLabelRight,<sp/>+1,<sp/>bAllowSwapping,<sp/>fNewX<sp/>);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mSelIndex<sp/>&gt;=0<sp/>)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>selection<sp/>region<sp/>to<sp/>be<sp/>equal<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>NEW<sp/>size<sp/>of<sp/>the<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*newSel<sp/>=<sp/>mLabels[mSelIndex]-&gt;selectedRegion;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SortLabels();</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451" refid="class_label_track_1a4c18ea6bfa66ae613125d7e7a2d40f06" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a4c18ea6bfa66ae613125d7e7a2d40f06" kindref="member">LabelTrack::HandleTextDragRelease</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxMouseEvent<sp/>&amp;<sp/>evt)</highlight></codeline>
<codeline lineno="1452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(evt.LeftUp())</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AWD:<sp/>Due<sp/>to<sp/>wxWidgets<sp/>bug<sp/>#7491<sp/>(fix<sp/>not<sp/>ported<sp/>to<sp/>2.8<sp/>branch)<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>write<sp/>the<sp/>primary<sp/>selection.<sp/>We<sp/>can<sp/>enable<sp/>this<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>we<sp/>move<sp/>to<sp/>the<sp/>3.0<sp/>branch<sp/>(or<sp/>if<sp/>a<sp/>fixed<sp/>2.8<sp/>version<sp/>is<sp/>released</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>we<sp/>can<sp/>do<sp/>a<sp/>runtime<sp/>version<sp/>check)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__WXGTK__)<sp/>&amp;&amp;<sp/>defined<sp/>(HAVE_GTK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>GTK,<sp/>if<sp/>we<sp/>just<sp/>dragged<sp/>out<sp/>a<sp/>text<sp/>selection,<sp/>set<sp/>the<sp/>primary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInitialCursorPos<sp/>!=<sp/>mCurrentCursorPos)<sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTheClipboard-&gt;UsePrimarySelection(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CopySelectedText();</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTheClipboard-&gt;UsePrimarySelection(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(evt.Dragging())</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>dragging<sp/>happens<sp/>in<sp/>text<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>dragging<sp/>x<sp/>position<sp/>in<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>flag<sp/>to<sp/>update<sp/>current<sp/>cursor<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDragXPos<sp/>=<sp/>evt.m_x;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mResetCursorPos<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>an<sp/>invalid<sp/>dragging,<sp/>disable<sp/>displaying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRightDragging)<sp/>{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDragXPos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRightDragging<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.RightUp())<sp/>{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mSelIndex<sp/>!=<sp/>-1)<sp/>&amp;&amp;<sp/>OverTextBox(GetLabel(mSelIndex),<sp/>evt.m_x,<sp/>evt.m_y))<sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>popup<sp/>menu<sp/>for<sp/>editing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowContextMenu();</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501" refid="class_label_track_1adec77244151e4301e5f1ace314144028" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1adec77244151e4301e5f1ace314144028" kindref="member">LabelTrack::HandleClick</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxMouseEvent<sp/>&amp;<sp/>evt,</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>*newSel)</highlight></codeline>
<codeline lineno="1504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.ButtonDown())</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//OverGlyph<sp/>sets<sp/>mMouseOverLabel<sp/>to<sp/>be<sp/>the<sp/>chosen<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iGlyph<sp/>=<sp/>OverGlyph(evt.m_x,<sp/>evt.m_y);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIsAdjustingLabel<sp/>=<sp/>evt.Button(wxMOUSE_BTN_LEFT)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iGlyph<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>mouseXPos<sp/>if<sp/>the<sp/>mouse<sp/>is<sp/>pressed<sp/>in<sp/>the<sp/>text<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMouseXPos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mInBox<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>changeCursor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsAdjustingLabel)</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>move<sp/>if<sp/>we<sp/>hit<sp/>the<sp/>centre,<sp/>we<sp/>adjust<sp/>one<sp/>edge<sp/>if<sp/>we<sp/>hit<sp/>a<sp/>chevron.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>if<sp/>we<sp/>are<sp/>moving<sp/>just<sp/>one<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mbIsMoving<sp/>=<sp/>mbHitCenter;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>start<sp/>dragging<sp/>the<sp/>label(s)<sp/>we<sp/>don&apos;t<sp/>want<sp/>them<sp/>to<sp/>jump.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>calculate<sp/>the<sp/>displacement<sp/>of<sp/>the<sp/>mouse<sp/>from<sp/>the<sp/>drag<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>use<sp/>that<sp/>in<sp/>subsequent<sp/>dragging<sp/>calculations.<sp/><sp/>The<sp/>mouse<sp/>stays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>the<sp/>same<sp/>relative<sp/>displacement<sp/>throughout<sp/>dragging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>if<sp/>two<sp/>label&apos;s<sp/>edges<sp/>are<sp/>being<sp/>dragged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>the<sp/>displacement<sp/>is<sp/>relative<sp/>to<sp/>the<sp/>initial<sp/>average</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>of<sp/>them,<sp/>and<sp/>in<sp/>that<sp/>case<sp/>there<sp/>can<sp/>be<sp/>a<sp/>jump<sp/>of<sp/>at<sp/>most</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>few<sp/>pixels<sp/>to<sp/>bring<sp/>the<sp/>two<sp/>label<sp/>boundaries<sp/>to<sp/>exactly<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>when<sp/>we<sp/>start<sp/>dragging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dragging<sp/>of<sp/>three<sp/>label<sp/>edges<sp/>at<sp/>the<sp/>same<sp/>time<sp/>is<sp/>not<sp/>supported<sp/>(yet).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(mMouseOverLabelRight<sp/>&gt;=0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mMouseOverLabelLeft<sp/>&gt;=0)</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>(mLabels[mMouseOverLabelRight]-&gt;getT1()<sp/>+</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mMouseOverLabelLeft]-&gt;getT0())<sp/>/<sp/>2.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>moving<sp/>two<sp/>edges,<sp/>then<sp/>it&apos;s<sp/>a<sp/>move<sp/>(label<sp/>size<sp/>preserved)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>both<sp/>edges<sp/>are<sp/>the<sp/>same<sp/>label,<sp/>and<sp/>it&apos;s<sp/>an<sp/>adjust<sp/>(label<sp/>sizes<sp/>change)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;re<sp/>on<sp/>a<sp/>boundary<sp/>between<sp/>two<sp/>different<sp/>labels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mbIsMoving<sp/>=<sp/>(mMouseOverLabelLeft<sp/>==<sp/>mMouseOverLabelRight);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mMouseOverLabelRight<sp/>&gt;=0)</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>mLabels[mMouseOverLabelRight]-&gt;getT1();</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mMouseOverLabelLeft<sp/>&gt;=0)</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>mLabels[mMouseOverLabelLeft]-&gt;getT0();</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mxMouseDisplacement<sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1af5b3ea2d31e53b203a06d13d4afd7f90" kindref="member">TimeToPosition</ref>(t,<sp/>r.x)<sp/>-<sp/>evt.m_x;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>displaying<sp/>if<sp/>left<sp/>button<sp/>is<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.LeftDown())</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDragXPos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex<sp/>=<sp/>OverATextBox(evt.m_x,<sp/>evt.m_y);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*newSel<sp/>=<sp/>mLabels[mSelIndex]-&gt;selectedRegion;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>mouseXPos<sp/>to<sp/>set<sp/>current<sp/>cursor<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(changeCursor)</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMouseXPos<sp/>=<sp/>evt.m_x;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>mInBox<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInBox<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>highlight<sp/>indicator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>highlightedRect;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>rectangle<sp/>of<sp/>highlighted<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mXPos1<sp/>&lt;<sp/>mXPos2)</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highlightedRect<sp/>=<sp/>wxRect(mXPos1,<sp/>mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref><sp/>-<sp/>mFontHeight<sp/>/<sp/>2,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(mXPos2<sp/>-<sp/>mXPos1<sp/>+<sp/>0.5),<sp/>mFontHeight);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highlightedRect<sp/>=<sp/>wxRect(mXPos2,<sp/>mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref><sp/>-<sp/>mFontHeight<sp/>/<sp/>2,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(mXPos1<sp/>-<sp/>mXPos2<sp/>+<sp/>0.5),<sp/>mFontHeight);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>when<sp/>left<sp/>button<sp/>is<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.LeftDown())</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1a5aa066c2c41f9a807171804bb1ed5db8" kindref="member">highlighted</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>when<sp/>right<sp/>button<sp/>is<sp/>down<sp/>outside<sp/>text<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.RightDown())</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!highlightedRect.Contains(evt.m_x,<sp/>evt.m_y))</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;highlighted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>changeInitialMouseXPos<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;changeInitialMouseXPos<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>displaying<sp/>if<sp/>right<sp/>button<sp/>is<sp/>down<sp/>outside<sp/>text<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.RightDown())</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!highlightedRect.Contains(evt.m_x,<sp/>evt.m_y))</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDragXPos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>in<sp/>text<sp/>box,<sp/>don&apos;t<sp/>need<sp/>to<sp/>reset<sp/>the<sp/>current<sp/>cursor<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeCursor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Middle<sp/>click<sp/>on<sp/>GTK:<sp/>paste<sp/>from<sp/>primary<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXGTK__)<sp/>&amp;&amp;<sp/>(HAVE_GTK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.MiddleDown())<sp/>{</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>a<sp/>click<sp/>outside<sp/>of<sp/>the<sp/>selected<sp/>label&apos;s<sp/>text<sp/>box;<sp/>in<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>PasteSelectedText()<sp/>will<sp/>start<sp/>a<sp/>NEW<sp/>label<sp/>at<sp/>the<sp/>click</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!OverTextBox(mLabels[mSelIndex],<sp/>evt.m_x,<sp/>evt.m_y))</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>zoomInfo.<ref refid="class_zoom_info_1aa7e0fefa3365826150c253c1ba6e4339" kindref="member">PositionToTime</ref>(evt.m_x,<sp/>r.x);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*newSel<sp/>=<sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref>(t,<sp/>t);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTheClipboard-&gt;UsePrimarySelection(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PasteSelectedText(newSel-&gt;<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>(),<sp/>newSel-&gt;<ref refid="class_selected_region_1aec8e1688714de8fb218d0cf0188360d6" kindref="member">t1</ref>());</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTheClipboard-&gt;UsePrimarySelection(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>keys<sp/>that<sp/>we<sp/>will<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637" refid="class_label_track_1a4886d25633907317ee8b9805ebf55de7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a4886d25633907317ee8b9805ebf55de7" kindref="member">LabelTrack::CaptureKey</ref>(wxKeyEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="1638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>modifiers<sp/>and<sp/>only<sp/>allow<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mods<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.GetModifiers();</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods<sp/>!=<sp/>wxMOD_NONE<sp/>&amp;&amp;<sp/>mods<sp/>!=<sp/>wxMOD_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsGoodLabelEditKey(event))<sp/>{</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsGoodLabelFirstKey(event))<sp/>{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*<sp/>pProj<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>playing,<sp/>don&apos;t<sp/>capture<sp/>if<sp/>the<sp/>selection<sp/>is<sp/>the<sp/>same<sp/>as<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>playback<sp/>region<sp/>(this<sp/>helps<sp/>prevent<sp/>label<sp/>track<sp/>creation<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stealing<sp/>unmodified<sp/>kbd.<sp/>shortcuts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pProj-&gt;<ref refid="class_audacity_project_1a0c43e740f2b1e8f08d1d74bf38fd8abd" kindref="member">GetAudioIOToken</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a07490d6ae881910c5ea13cdf011835f3" kindref="member">IsStreamActive</ref>(pProj-&gt;<ref refid="class_audacity_project_1a0c43e740f2b1e8f08d1d74bf38fd8abd" kindref="member">GetAudioIOToken</ref>()))</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/>t1;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1a14f015b24a139589e118b23d3d1bb55d" kindref="member">GetPlayRegion</ref>(&amp;t0,<sp/>&amp;t1);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pProj-&gt;<ref refid="class_audacity_project_1aefe314298c89d89d301515e586d3c2fc" kindref="member">mViewInfo</ref>.<ref refid="class_view_info_1a07895f02c517d048cc1ca855b0efa54e" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>()<sp/>==<sp/>t0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1aefe314298c89d89d301515e586d3c2fc" kindref="member">mViewInfo</ref>.<ref refid="class_view_info_1a07895f02c517d048cc1ca855b0efa54e" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1aec8e1688714de8fb218d0cf0188360d6" kindref="member">t1</ref>()<sp/>==<sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there&apos;s<sp/>a<sp/>label<sp/>there<sp/>already<sp/>don&apos;t<sp/>capture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>GetLabelIndex(pProj-&gt;<ref refid="class_audacity_project_1aefe314298c89d89d301515e586d3c2fc" kindref="member">mViewInfo</ref>.<ref refid="class_view_info_1a07895f02c517d048cc1ca855b0efa54e" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>(),</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1aefe314298c89d89d301515e586d3c2fc" kindref="member">mViewInfo</ref>.<ref refid="class_view_info_1a07895f02c517d048cc1ca855b0efa54e" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1aec8e1688714de8fb218d0cf0188360d6" kindref="member">t1</ref>())<sp/>!=<sp/>wxNOT_FOUND<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682" refid="class_label_track_1a4ac8ecaf9bf0733a15c15669f20a791b" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a4ac8ecaf9bf0733a15c15669f20a791b" kindref="member">LabelTrack::OnKeyDown</ref>(<ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;newSel,<sp/>wxKeyEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="1683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>track<sp/>true<sp/>changes<sp/>to<sp/>the<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1ae3885ef0e16798f57e24f7f996921338" kindref="member">updated</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>the<sp/>keycode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyCode<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.GetKeyCode();</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mods<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.GetModifiers();</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>modifiers<sp/>and<sp/>only<sp/>allow<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods<sp/>!=<sp/>wxMOD_NONE<sp/>&amp;&amp;<sp/>mods<sp/>!=<sp/>wxMOD_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1ae3885ef0e16798f57e24f7f996921338" kindref="member">updated</ref>;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>editing<sp/>keys<sp/>are<sp/>only<sp/>active<sp/>if<sp/>we&apos;re<sp/>currently<sp/>editing<sp/>a<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(keyCode)<sp/>{</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_BACK:</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>mLabels[mSelIndex]-&gt;title.Length();</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//IF<sp/>the<sp/>label<sp/>is<sp/>not<sp/>blank<sp/>THEN<sp/>get<sp/>rid<sp/>of<sp/>a<sp/>letter<sp/>or<sp/>letters<sp/>according<sp/>to<sp/>cursor<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IF<sp/>there<sp/>are<sp/>some<sp/>highlighted<sp/>letters,<sp/>THEN<sp/>DELETE<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1a5aa066c2c41f9a807171804bb1ed5db8" kindref="member">highlighted</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveSelectedText();</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DELETE<sp/>one<sp/>letter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentCursorPos<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;title.Remove(mCurrentCursorPos-1,<sp/>1);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos--;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ELSE<sp/>no<sp/>text<sp/>in<sp/>text<sp/>box,<sp/>so<sp/>DELETE<sp/>whole<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeleteLabel(<sp/>mSelIndex<sp/>);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_DELETE:</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_NUMPAD_DELETE:</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>mLabels[mSelIndex]-&gt;title.Length();</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>label<sp/>is<sp/>not<sp/>blank<sp/>get<sp/>rid<sp/>of<sp/>a<sp/>letter<sp/>according<sp/>to<sp/>cursor<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>some<sp/>highlighted<sp/>letters,<sp/>DELETE<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1a5aa066c2c41f9a807171804bb1ed5db8" kindref="member">highlighted</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveSelectedText();</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DELETE<sp/>one<sp/>letter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentCursorPos<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;title.Remove(mCurrentCursorPos,<sp/>1);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DELETE<sp/>whole<sp/>label<sp/>if<sp/>no<sp/>text<sp/>in<sp/>text<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeleteLabel(<sp/>mSelIndex<sp/>);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_HOME:</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_NUMPAD_HOME:</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>cursor<sp/>to<sp/>beginning<sp/>of<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods<sp/>==<sp/>wxMOD_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDragXPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods<sp/>==<sp/>wxMOD_NONE)</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDragXPos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>handled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_END:</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_NUMPAD_END:</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>cursor<sp/>to<sp/>end<sp/>of<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods<sp/>==<sp/>wxMOD_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>.length();</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDragXPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods<sp/>==<sp/>wxMOD_NONE)</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>.length();</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDragXPos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>handled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_LEFT:</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_NUMPAD_LEFT:</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moving<sp/>cursor<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods<sp/>==<sp/>wxMOD_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentCursorPos<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos--;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDragXPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods<sp/>==<sp/>wxMOD_NONE)<sp/>{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentCursorPos<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos--;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDragXPos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>handled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_RIGHT:</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_NUMPAD_RIGHT:</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moving<sp/>cursor<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods<sp/>==<sp/>wxMOD_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentCursorPos<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>.length())<sp/>{</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos++;</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDragXPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods<sp/>==<sp/>wxMOD_NONE)</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentCursorPos<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mLabels[mSelIndex]-&gt;title.length())<sp/>{</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos++;</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDragXPos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>handled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_RETURN:</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_NUMPAD_ENTER:</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_ESCAPE:</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRestoreFocus<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(<ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>()-&gt;GetTracks());</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*track<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(track<sp/>&amp;&amp;<sp/>mRestoreFocus--)</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>track<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track)</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>()-&gt;<ref refid="class_audacity_project_1af3924d0c5db5ff265f359b9acdef1083" kindref="member">GetTrackPanel</ref>()-&gt;<ref refid="class_track_panel_1a7e86eba104624072dbfa257359bdf35e" kindref="member">SetFocusedTrack</ref>(track);</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRestoreFocus<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_TAB:</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_NUMPAD_TAB:</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.ShiftDown())<sp/>{</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex--;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex++;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>mSelIndex<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mLabels.Count())<sp/>{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>mLabels[mSelIndex]-&gt;title.Length();</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>selection<sp/>region<sp/>to<sp/>be<sp/>equal<sp/>to<sp/>the<sp/>selection<sp/>bounds<sp/>of<sp/>the<sp/>tabbed-to<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSel<sp/>=<sp/>mLabels[mSelIndex]-&gt;selectedRegion;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;\x10&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OSX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_MENU:</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_WINDOWS_MENU:</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowContextMenu();</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsGoodLabelEditKey(event))<sp/>{</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(keyCode)<sp/>{</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_TAB:</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_NUMPAD_TAB:</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mLabels.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>mLabels.Count();</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.ShiftDown())<sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex<sp/>=<sp/>len<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newSel.<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>()<sp/>&gt;<sp/>mLabels[0]-&gt;getT0())<sp/>{</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>&gt;=<sp/>newSel.<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex--;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newSel.<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>()<sp/>&lt;<sp/>mLabels[len<sp/>-<sp/>1]-&gt;getT0())<sp/>{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>&lt;<sp/>len<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>&lt;=<sp/>newSel.<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex++;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>mSelIndex<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>mLabels[mSelIndex]-&gt;title.Length();</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>selection<sp/>region<sp/>to<sp/>be<sp/>equal<sp/>to<sp/>the<sp/>selection<sp/>bounds<sp/>of<sp/>the<sp/>tabbed-to<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSel<sp/>=<sp/>mLabels[mSelIndex]-&gt;selectedRegion;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsGoodLabelFirstKey(event))<sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>caret<sp/>is<sp/>visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/>mDrawCursor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1ae3885ef0e16798f57e24f7f996921338" kindref="member">updated</ref>;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944" refid="class_label_track_1a65cfc76a57dd3394739f4ab020b3accf" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a65cfc76a57dd3394739f4ab020b3accf" kindref="member">LabelTrack::OnChar</ref>(<ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;WXUNUSED(newSel),<sp/>wxKeyEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="1945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>modifiers<sp/>and<sp/>only<sp/>allow<sp/>shift.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>still<sp/>need<sp/>to<sp/>check<sp/>this<sp/>or<sp/>we<sp/>will<sp/>eat<sp/>the<sp/>top<sp/>level<sp/>menu<sp/>accelerators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>Windows<sp/>if<sp/>our<sp/>capture<sp/>or<sp/>key<sp/>down<sp/>handlers<sp/>skipped<sp/>the<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mods<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.GetModifiers();</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mods<sp/>!=<sp/>wxMOD_NONE<sp/>&amp;&amp;<sp/>mods<sp/>!=<sp/>wxMOD_SHIFT)<sp/>{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>track<sp/>true<sp/>changes<sp/>to<sp/>the<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1ae3885ef0e16798f57e24f7f996921338" kindref="member">updated</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>the<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/>wxChar<sp/>charCode<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.GetUnicodeKey();</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>if<sp/>it&apos;s<sp/>not<sp/>a<sp/>valid<sp/>unicode<sp/>character<sp/>or<sp/>a<sp/>control<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(charCode<sp/>==<sp/>0<sp/>||<sp/>wxIscntrl(charCode))<sp/>{</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;ve<sp/>reached<sp/>this<sp/>point<sp/>and<sp/>aren&apos;t<sp/>currently<sp/>editing,<sp/>add<sp/>NEW<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>create<sp/>a<sp/>NEW<sp/>label<sp/>for<sp/>a<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wxIsspace(charCode))<sp/>{</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetSelected(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AddLabel(p-&gt;<ref refid="class_audacity_project_1aefe314298c89d89d301515e586d3c2fc" kindref="member">mViewInfo</ref>.<ref refid="class_view_info_1a07895f02c517d048cc1ca855b0efa54e" kindref="member">selectedRegion</ref>);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="class_audacity_project_1ae9457cac877fe88c8d3857f92692f101" kindref="member">PushState</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Added<sp/>label&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Label&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>are<sp/>definitely<sp/>in<sp/>a<sp/>label;<sp/>append<sp/>the<sp/>incoming<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>if<sp/>cursor<sp/>is<sp/>in<sp/>the<sp/>end<sp/>of<sp/>string<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1a5aa066c2c41f9a807171804bb1ed5db8" kindref="member">highlighted</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RemoveSelectedText();</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentCursorPos<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>.length())<sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>substring<sp/>on<sp/>the<sp/>righthand<sp/>side<sp/>of<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>rightPart<sp/>=<sp/>mLabels[mSelIndex]-&gt;title.Mid(mCurrentCursorPos);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>title<sp/>to<sp/>substring<sp/>on<sp/>the<sp/>lefthand<sp/>side<sp/>of<sp/>cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;title<sp/>=<sp/>mLabels[mSelIndex]-&gt;title.Left(mCurrentCursorPos);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//append<sp/>charcode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;title<sp/>+=<sp/>charCode;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//append<sp/>the<sp/>right<sp/>part<sp/>substring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;title<sp/>+=<sp/>rightPart;</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//append<sp/>charCode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;title<sp/>+=<sp/>charCode;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//moving<sp/>cursor<sp/>position<sp/>forward</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/>mCurrentCursorPos++;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/>updated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>caret<sp/>is<sp/>visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/>mDrawCursor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1ae3885ef0e16798f57e24f7f996921338" kindref="member">updated</ref>;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LabelTrack::ShowContextMenu()</highlight></codeline>
<codeline lineno="2017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/>wxWindow<sp/>*parent<sp/>=<sp/>wxWindow::FindFocus();</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMenu<sp/>menu;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>menu.Bind(wxEVT_MENU,<sp/>&amp;LabelTrack::OnContextMenu,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>menu.Append(<ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfacbe123243c6ea936f5303b818f43d4d1" kindref="member">OnCutSelectedTextID</ref>,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Cu&amp;t&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>menu.Append(<ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfaa53581a54c4851eaae3a71a800fcc69c" kindref="member">OnCopySelectedTextID</ref>,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Copy&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>menu.Append(<ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfa9417a78dd67c9c077897ee45fa4630de" kindref="member">OnPasteSelectedTextID</ref>,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Paste&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>menu.Append(<ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfa76fc7aaefe375e3002072c891dab1e0f" kindref="member">OnDeleteSelectedLabelID</ref>,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Delete<sp/>Label&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>menu.Enable(<ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfacbe123243c6ea936f5303b818f43d4d1" kindref="member">OnCutSelectedTextID</ref>,<sp/>IsTextSelected());</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>menu.Enable(<ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfaa53581a54c4851eaae3a71a800fcc69c" kindref="member">OnCopySelectedTextID</ref>,<sp/>IsTextSelected());</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>menu.Enable(<ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfa9417a78dd67c9c077897ee45fa4630de" kindref="member">OnPasteSelectedTextID</ref>,<sp/>IsTextClipSupported());</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>menu.Enable(<ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfa76fc7aaefe375e3002072c891dab1e0f" kindref="member">OnDeleteSelectedLabelID</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*ls<sp/>=<sp/>GetLabel(mSelIndex);</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxClientDC<sp/>dc(parent);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msFont.Ok())</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetFont(msFont);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMouseXPos<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>mMouseXPos;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.GetTextExtent(ls-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>.Left(mCurrentCursorPos),<sp/>&amp;<ref refid="class_label_struct_1a3cf92d0baf6b76efa1b16edce3665fb0" kindref="member">x</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>ls-&gt;<ref refid="class_label_struct_1af7b2252912f4b3999465c8a37c58e30e" kindref="member">xText</ref>;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;PopupMenu(&amp;menu,<sp/>x,<sp/>ls-&gt;<ref refid="class_label_struct_1afebbf0cbb153813c8bd73eb362647736" kindref="member">y</ref><sp/>+<sp/>(mIconHeight<sp/>/<sp/>2)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>an<sp/>invalid<sp/>dragging<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/>SetWrongDragging(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LabelTrack::OnContextMenu(wxCommandEvent<sp/>&amp;<sp/>evt)</highlight></codeline>
<codeline lineno="2062"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(evt.GetId())</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfacbe123243c6ea936f5303b818f43d4d1" kindref="member">OnCutSelectedTextID</ref>:</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CutSelectedText())</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="class_audacity_project_1ae9457cac877fe88c8d3857f92692f101" kindref="member">PushState</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Modified<sp/>Label&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Label<sp/>Edit&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114acfa76b1aba6d15dde4a0f1ee1057481f" kindref="member">UndoPush::CONSOLIDATE</ref>);</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfaa53581a54c4851eaae3a71a800fcc69c" kindref="member">OnCopySelectedTextID</ref>:</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CopySelectedText();</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfa9417a78dd67c9c077897ee45fa4630de" kindref="member">OnPasteSelectedTextID</ref>:</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PasteSelectedText(p-&gt;<ref refid="class_audacity_project_1a9f4b0e77b655711fb8f2eb09bcba31f7" kindref="member">GetSel0</ref>(),<sp/>p-&gt;<ref refid="class_audacity_project_1afa447a603395bbf27daa2ed4e0e6379f" kindref="member">GetSel1</ref>()))</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="class_audacity_project_1ae9457cac877fe88c8d3857f92692f101" kindref="member">PushState</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Modified<sp/>Label&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Label<sp/>Edit&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114acfa76b1aba6d15dde4a0f1ee1057481f" kindref="member">UndoPush::CONSOLIDATE</ref>);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_label_track_8cpp_1a4102b7202de3a76d40f5c3cd7a8696dfa76fc7aaefe375e3002072c891dab1e0f" kindref="member">OnDeleteSelectedLabelID</ref>:</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndx<sp/>=<sp/>GetLabelIndex(p-&gt;<ref refid="class_audacity_project_1a9f4b0e77b655711fb8f2eb09bcba31f7" kindref="member">GetSel0</ref>(),<sp/>p-&gt;<ref refid="class_audacity_project_1afa447a603395bbf27daa2ed4e0e6379f" kindref="member">GetSel1</ref>());</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ndx<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeleteLabel(ndx);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="class_audacity_project_1ae9457cac877fe88c8d3857f92692f101" kindref="member">PushState</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Deleted<sp/>Label&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Label<sp/>Edit&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114acfa76b1aba6d15dde4a0f1ee1057481f" kindref="member">UndoPush::CONSOLIDATE</ref>);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LabelTrack::RemoveSelectedText()</highlight></codeline>
<codeline lineno="2107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>left<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>right<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInitialCursorPos<sp/>&gt;<sp/>mCurrentCursorPos)<sp/>{</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>mInitialCursorPos;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInitialCursorPos<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>(mLabels[mSelIndex]-&gt;title).Mid(0,<sp/>mInitialCursorPos);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentCursorPos<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(mLabels[mSelIndex]-&gt;title).Length())<sp/>{</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>(mLabels[mSelIndex]-&gt;title).Mid(mCurrentCursorPos,<sp/>(mLabels[mSelIndex]-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>).Length()-mCurrentCursorPos);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;title<sp/>=<sp/>left<sp/>+<sp/>right;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>left.Length();</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/>mLabels[mSelIndex]-&gt;highlighted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/>mDragXPos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130" refid="class_label_track_1a884b6a830eb04ee448ea6e7724e003d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a884b6a830eb04ee448ea6e7724e003d6" kindref="member">LabelTrack::Unselect</ref>()</highlight></codeline>
<codeline lineno="2131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/>mSelIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight></codeline>
<codeline lineno="2135" refid="class_label_track_1ae0f6cf3a69df81645d388686f0460748" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1ae0f6cf3a69df81645d388686f0460748" kindref="member">LabelTrack::IsSelected</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2136"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mSelIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>mSelIndex<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mLabels.Count());</highlight></codeline>
<codeline lineno="2138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141" refid="class_label_track_1a24781f6fa468080c54445a38a3886ac5" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a24781f6fa468080c54445a38a3886ac5" kindref="member">LabelTrack::Export</ref>(wxTextFile<sp/>&amp;<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="2142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PRL:<sp/>to<sp/>do:<sp/>export<sp/>other<sp/>selection<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)mLabels.Count();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.AddLine(wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;%f\t%f\t%s&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>(),</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>(),</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>.c_str()));</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153" refid="class_label_track_1a4250c413d3f05c608a6b67b985f0d8e8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a4250c413d3f05c608a6b67b985f0d8e8" kindref="member">LabelTrack::Import</ref>(wxTextFile<sp/>&amp;<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>)</highlight></codeline>
<codeline lineno="2154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="_scripter_callback_8cpp_1a51c4f544dcbb66f7dac8447e1ffad08a" kindref="member">currentLine</ref>;</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>i2,<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>lines;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,s1;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,t1;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/>lines<sp/>=<sp/>in.GetLineCount();</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/>mLabels.Clear();</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/>mLabels.Alloc(lines);</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Currently,<sp/>we<sp/>expect<sp/>a<sp/>tag<sp/>file<sp/>to<sp/>have<sp/>two<sp/>values<sp/>and<sp/>a<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//on<sp/>each<sp/>line.<sp/>If<sp/>the<sp/>second<sp/>token<sp/>is<sp/>not<sp/>a<sp/>number,<sp/>we<sp/>treat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//it<sp/>as<sp/>a<sp/>single-value<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>lines;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentLine<sp/>=<sp/>in.GetLine(index);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>currentLine.Length();</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>timepoint<sp/>of<sp/>the<sp/>left<sp/>edge<sp/>of<sp/>the<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>len<sp/>&amp;&amp;<sp/>currentLine.GetChar(i)<sp/>!=<sp/>wxT(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>currentLine.GetChar(i)<sp/>!=<sp/>wxT(</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>currentLine.Left(i);</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(s,<sp/>&amp;t0))</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Increment<sp/>one<sp/>letter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Now,<sp/>go<sp/>until<sp/>we<sp/>find<sp/>the<sp/>start<sp/>of<sp/>the<sp/>get<sp/>the<sp/>next<sp/>token</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>len</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(currentLine.GetChar(i)<sp/>==<sp/>wxT(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>currentLine.GetChar(i)<sp/>==<sp/>wxT(</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Keep<sp/>track<sp/>of<sp/>the<sp/>start<sp/>of<sp/>the<sp/>second<sp/>token</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i2=<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Now,<sp/>go<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>second<sp/>token.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>len<sp/>&amp;&amp;<sp/>currentLine.GetChar(i)<sp/>!=<sp/>wxT(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>currentLine.GetChar(i)<sp/>!=<sp/>wxT(</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>are<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>second<sp/>token.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>currentLine.Mid(i2,i-i2+1).Strip(wxString::stripType(0x3));</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(s1,<sp/>&amp;t1))</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//s1<sp/>is<sp/>not<sp/>a<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>t0;<sp/><sp/></highlight><highlight class="comment">//This<sp/>is<sp/>a<sp/>one-sided<sp/>label;<sp/>t1<sp/>==<sp/>t0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Because<sp/>s1<sp/>is<sp/>not<sp/>a<sp/>number,<sp/>the<sp/>label<sp/>should<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>rest<sp/>of<sp/>the<sp/>line,<sp/>starting<sp/>at<sp/>i2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/>currentLine.Right(len<sp/>-<sp/>i2).Strip(wxString::stripType(0x3));<sp/><sp/></highlight><highlight class="comment">//0x3<sp/>indicates<sp/>both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//s1<sp/>is<sp/>a<sp/>number,<sp/>and<sp/>it<sp/>is<sp/>stored<sp/>correctly<sp/>in<sp/>t1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>title<sp/>should<sp/>be<sp/>the<sp/>remainder<sp/>of<sp/>the<sp/>line,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//After<sp/>we<sp/>eat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>rid<sp/>of<sp/>spaces<sp/>at<sp/>either<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/>currentLine.Right(len<sp/>-<sp/>i).Strip(wxString::stripType(0x3));<sp/></highlight><highlight class="comment">//0x3<sp/>indicates<sp/>both.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PRL:<sp/>to<sp/>do:<sp/>import<sp/>other<sp/>selection<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref>(<ref refid="class_selected_region" kindref="compound">SelectedRegion</ref>(t0,<sp/>t1),<sp/>title);</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels.Add(l);</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/>SortLabels();</highlight></codeline>
<codeline lineno="2235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
<codeline lineno="2237" refid="class_label_track_1a1747ad150def0002e512c71213ca3fb8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a1747ad150def0002e512c71213ca3fb8" kindref="member">LabelTrack::HandleXMLTag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="structtag" kindref="compound">tag</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>**attrs)</highlight></codeline>
<codeline lineno="2238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/><ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>through<sp/>attrs,<sp/>which<sp/>is<sp/>a<sp/>null-terminated<sp/>list<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute-value<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*attrs)<sp/>{</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*attr<sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*value<sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>strValue<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_x_m_l_value_checker_1adf2bcfece118875538ca2bdd528b8c23" kindref="member">XMLValueChecker::IsGoodString</ref>(strValue))</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectedRegion.<ref refid="class_selected_region_1a5f7c4ad178464ca648d50e8607e41226" kindref="member">HandleXMLAttribute</ref>(attr,<sp/>value,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;t1&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;title&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/>strValue;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>files<sp/>created<sp/>by<sp/>Audacity<sp/>1.1.<sp/><sp/><sp/>Labels<sp/>in<sp/>Audacity<sp/>1.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>did<sp/>not<sp/>have<sp/>separate<sp/>start-<sp/>and<sp/>end-times.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PRL:<sp/>this<sp/>superfluous<sp/>now,<sp/>given<sp/>class<sp/>SelectedRegion&apos;s<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>consistency<sp/>guarantees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(selectedRegion.t1()<sp/>&lt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>selectedRegion.collapseToT0();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref>(selectedRegion,<sp/>title);</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels.Add(l);</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;labeltrack&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nValue<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*attrs)<sp/>{</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*attr<sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*value<sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>strValue<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/><ref refid="class_x_m_l_value_checker_1adf2bcfece118875538ca2bdd528b8c23" kindref="member">XMLValueChecker::IsGoodString</ref>(strValue))</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mName<sp/>=<sp/>strValue;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;numlabels&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>&amp;&amp;<sp/>strValue.ToLong(&amp;nValue))</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nValue<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogWarning(wxT(</highlight><highlight class="stringliteral">&quot;Project<sp/>shows<sp/>negative<sp/>number<sp/>of<sp/>labels:<sp/>%d&quot;</highlight><highlight class="normal">),<sp/>nValue);</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels.Clear();</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels.Alloc(nValue);</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>&amp;&amp;<sp/>strValue.ToLong(&amp;nValue))</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetHeight(nValue);</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;minimized&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>&amp;&amp;<sp/>strValue.ToLong(&amp;nValue))</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetMinimized(nValue<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;isSelected&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>&amp;&amp;<sp/>strValue.ToLong(&amp;nValue))</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SetSelected(nValue<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"></highlight></codeline>
<codeline lineno="2318" refid="class_label_track_1a84b196e796f05d3ce8d8ad14c128b6ef" refkind="member"><highlight class="normal"><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref><sp/>*<ref refid="class_label_track_1a84b196e796f05d3ce8d8ad14c128b6ef" kindref="member">LabelTrack::HandleXMLChild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="structtag" kindref="compound">tag</ref>)</highlight></codeline>
<codeline lineno="2319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight></codeline>
<codeline lineno="2326" refid="class_label_track_1a1441e6b9cd7eb6c4209e5b47fb41542b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a1441e6b9cd7eb6c4209e5b47fb41542b" kindref="member">LabelTrack::WriteXML</ref>(<ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref><sp/>&amp;xmlFile)</highlight></codeline>
<codeline lineno="2327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>mLabels.Count();</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a38abb8ecc4a15db0272d43ff8bec1369" kindref="member">StartTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;labeltrack&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">),<sp/>mName);</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;numlabels&quot;</highlight><highlight class="normal">),<sp/>len);</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">),<sp/>this-&gt;GetActualHeight());</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;minimized&quot;</highlight><highlight class="normal">),<sp/>this-&gt;GetMinimized());</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;isSelected&quot;</highlight><highlight class="normal">),<sp/>this-&gt;GetSelected());</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a38abb8ecc4a15db0272d43ff8bec1369" kindref="member">StartTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;getSelectedRegion()</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.WriteXMLAttributes(xmlFile,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;t1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PRL:<sp/>to<sp/>do:<sp/>write<sp/>other<sp/>selection<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;title&quot;</highlight><highlight class="normal">),<sp/>mLabels[i]-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>);</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a5c4e63c2c9762b6a04ad4e48bb117678" kindref="member">EndTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a5c4e63c2c9762b6a04ad4e48bb117678" kindref="member">EndTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;labeltrack&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LEGACY_PROJECT_FILE_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LabelTrack::Load(wxTextFile<sp/>*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*<sp/>dirManager)</highlight></codeline>
<codeline lineno="2352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in-&gt;GetNextLine()<sp/>!=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;NumMLabels&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(in-&gt;GetNextLine().ToULong(&amp;len)))</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mLabels.Count();<sp/>i++)</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mLabels[i];</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/>mLabels.Clear();</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/>mLabels.Alloc(len);</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref>();</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(in-&gt;GetNextLine(),<sp/>&amp;t0))</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l-&gt;<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1ad1c6a578cb52f4a2d91952656a17b574" kindref="member">setT0</ref>(t0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Legacy<sp/>file<sp/>format<sp/>does<sp/>not<sp/>include<sp/>label<sp/>end-times.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l-&gt;<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1a45722f4448ffb44252e13f9e35d17cb9" kindref="member">collapseToT0</ref>();</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PRL:<sp/>nothing<sp/>NEW<sp/>to<sp/>do,<sp/>legacy<sp/>file<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref><sp/>=<sp/>in-&gt;GetNextLine();</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels.Add(l);</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in-&gt;GetNextLine()<sp/>!=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;MLabelsEnd&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/>SortLabels();</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LabelTrack::Save(wxTextFile<sp/>*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overwrite)</highlight></codeline>
<codeline lineno="2386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/>out-&gt;AddLine(wxT(</highlight><highlight class="stringliteral">&quot;NumMLabels&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>mLabels.Count();</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/>out-&gt;AddLine(wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">),<sp/>len));</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;AddLine(wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;%lf&quot;</highlight><highlight class="normal">),<sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>.mT0));</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;AddLine(mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>);</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/>out-&gt;AddLine(wxT(</highlight><highlight class="stringliteral">&quot;MLabelsEnd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight></codeline>
<codeline lineno="2401" refid="class_label_track_1a5684ef2dd7276d9b8818748b7f2427f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a5684ef2dd7276d9b8818748b7f2427f3" kindref="member">LabelTrack::Cut</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="2402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Copy(t0,<sp/>t1,<sp/>dest))</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Clear(t0,<sp/>t1))</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LabelTrack::SplitCut(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="2413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SplitCut()<sp/>==<sp/>Copy()<sp/>+<sp/>SplitDelete()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Copy(t0,<sp/>t1,<sp/>dest))</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SplitDelete(t0,<sp/>t1))</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight></codeline>
<codeline lineno="2425" refid="class_label_track_1aee8ad8e315214951cba5f532c9c8a6e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1aee8ad8e315214951cba5f532c9c8a6e5" kindref="member">LabelTrack::Copy</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**<sp/>dest)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2426"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/>*dest<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref>(GetDirManager());</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>mLabels.Count();</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8" kindref="member">LabelStruct::TimeRelations</ref><sp/>relation<sp/>=</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;RegionRelation(t0,<sp/>t1,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a7d2eb849dac366b9e3f59933e643b3fe" kindref="member">LabelStruct::SURROUNDS_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>&amp;<ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref><sp/>=<sp/>*mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref>(label.<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>,</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>-<sp/>t0,</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>()<sp/>-<sp/>t0,</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*)<sp/>(*dest))-&gt;mLabels.Add(l);</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a3cfb7877ad14a3006551b7a0c503e242" kindref="member">LabelStruct::WITHIN_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>&amp;<ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref><sp/>=<sp/>*mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref>(label.<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>,<sp/>0,<sp/>t1-t0,</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>);</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*)<sp/>(*dest))-&gt;mLabels.Add(l);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a5546f41def946d8ff28f8cedbcd17945" kindref="member">LabelStruct::BEGINS_IN_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>&amp;<ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref><sp/>=<sp/>*mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref>(label.<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>,</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>()<sp/>-<sp/>t0,</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>);</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*)<sp/>(*dest))-&gt;mLabels.Add(l);</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a955b9201235ae459ac0e0c2613dd396d" kindref="member">LabelStruct::ENDS_IN_LABEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>&amp;<ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref><sp/>=<sp/>*mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref>(label.<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>,</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>-<sp/>t0,</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>-<sp/>t0,</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>);</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*)<sp/>(*dest))-&gt;mLabels.Add(l);</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/>((<ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*)<sp/>(*dest))-&gt;mClipLen<sp/>=<sp/>(t1<sp/>-<sp/>t0);</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"></highlight></codeline>
<codeline lineno="2474" refid="class_label_track_1ae518ab1e49c941c36f0d478043ffb532" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1ae518ab1e49c941c36f0d478043ffb532" kindref="member">LabelTrack::PasteOver</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/>src)</highlight></codeline>
<codeline lineno="2475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>!=<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>)</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>mLabels.Count();</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/>len<sp/>&amp;&amp;<sp/>mLabels[pos]-&gt;<ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>&lt;<sp/>t)</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos++;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*sl<sp/>=<sp/>(<ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*)<sp/>src;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>sl-&gt;mLabels.Count();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>&amp;<ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref><sp/>=<sp/>*sl-&gt;mLabels[j];</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref>(label.<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>,</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>+<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>()<sp/>+<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels.Insert(l,<sp/>pos++);</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len++;</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight></codeline>
<codeline lineno="2500" refid="class_label_track_1a9c593d64e402ac9667f0868fedf22b62" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a9c593d64e402ac9667f0868fedf22b62" kindref="member">LabelTrack::Paste</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*src)</highlight></codeline>
<codeline lineno="2501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>!=<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>)</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*lt<sp/>=<sp/>(<ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*)src;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>shiftAmt<sp/>=<sp/>lt-&gt;mClipLen<sp/>&gt;<sp/>0.0<sp/>?<sp/>lt-&gt;mClipLen<sp/>:<sp/>lt-&gt;<ref refid="class_label_track_1a00581204bb86be2ca7c980f3ced9a102" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/>ShiftLabelsOnInsert(shiftAmt,<sp/>t);</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PasteOver(t,<sp/>src);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>repeats<sp/>the<sp/>labels<sp/>in<sp/>a<sp/>time<sp/>interval<sp/>a<sp/>specified<sp/>number<sp/>of<sp/>times.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2514" refid="class_label_track_1a1306746f8abe5e15a21949ffab23ea11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a1306746f8abe5e15a21949ffab23ea11" kindref="member">LabelTrack::Repeat</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="2515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity-check<sp/>the<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0<sp/>||<sp/>t1<sp/>&lt;<sp/>t0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tLen<sp/>=<sp/>t1<sp/>-<sp/>t0;</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>space<sp/>for<sp/>the<sp/>repetitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/>ShiftLabelsOnInsert(tLen<sp/>*<sp/>n,<sp/>t1);</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mLabels.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8" kindref="member">LabelStruct::TimeRelations</ref><sp/>relation<sp/>=</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;RegionRelation(t0,<sp/>t1,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a7d2eb849dac366b9e3f59933e643b3fe" kindref="member">LabelStruct::SURROUNDS_LABEL</ref>)</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Label<sp/>is<sp/>completely<sp/>inside<sp/>the<sp/>selection;<sp/>duplicate<sp/>it<sp/>in<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>repeat<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/></highlight><highlight class="comment">//<sp/>running<sp/>label<sp/>insertion<sp/>position<sp/>in<sp/>mLabels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>n;<sp/>j++)</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>&amp;<ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref><sp/>=<sp/>*mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref>(label.<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>,</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>+<sp/>j<sp/>*<sp/>tLen,</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>()<sp/>+<sp/>j<sp/>*<sp/>tLen,</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>);</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Figure<sp/>out<sp/>where<sp/>to<sp/>insert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/>mLabels.Count()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[pos]-&gt;getT0()<sp/>&lt;<sp/>l-&gt;<ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>())</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos++;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels.Insert(l,<sp/>pos);</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a5546f41def946d8ff28f8cedbcd17945" kindref="member">LabelStruct::BEGINS_IN_LABEL</ref>)</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Label<sp/>ends<sp/>inside<sp/>the<sp/>selection;<sp/>ShiftLabelsOnInsert()<sp/>hasn&apos;t<sp/>touched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it,<sp/>and<sp/>we<sp/>need<sp/>to<sp/>extend<sp/>it<sp/>through<sp/>to<sp/>the<sp/>last<sp/>repeat<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1ac60d0f5224d5d39b5b661b7c00890879" kindref="member">moveT1</ref>(n<sp/>*<sp/>tLen);</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>cases<sp/>have<sp/>already<sp/>been<sp/>handled<sp/>by<sp/>ShiftLabelsOnInsert()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight></codeline>
<codeline lineno="2563" refid="class_label_track_1acc1e0755247d34ad57331e7b02e16ff9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1acc1e0755247d34ad57331e7b02e16ff9" kindref="member">LabelTrack::Silence</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)</highlight></codeline>
<codeline lineno="2564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>mLabels.Count();</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8" kindref="member">LabelStruct::TimeRelations</ref><sp/>relation<sp/>=</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;RegionRelation(t0,<sp/>t1,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a3cfb7877ad14a3006551b7a0c503e242" kindref="member">LabelStruct::WITHIN_LABEL</ref>)</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Split<sp/>label<sp/>around<sp/>the<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>&amp;<ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref><sp/>=<sp/>*mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref>(label.<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>,<sp/>t1,<sp/>label.<ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>(),</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>);</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1ae32e3f4d254e58372548619e069da39c" kindref="member">setT1</ref>(t0);</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>might<sp/>not<sp/>be<sp/>the<sp/>right<sp/>place<sp/>to<sp/>insert,<sp/>but<sp/>we<sp/>sort<sp/>at<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels.Insert(l,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a955b9201235ae459ac0e0c2613dd396d" kindref="member">LabelStruct::ENDS_IN_LABEL</ref>)</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Beginning<sp/>of<sp/>label<sp/>to<sp/>selection<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.setT0(t1);</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a5546f41def946d8ff28f8cedbcd17945" kindref="member">LabelStruct::BEGINS_IN_LABEL</ref>)</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>label<sp/>to<sp/>selection<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.setT1(t0);</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>==<sp/><ref refid="class_label_struct_1a3e70ad31acce8270b0796c9e46bbdfe8a7d2eb849dac366b9e3f59933e643b3fe" kindref="member">LabelStruct::SURROUNDS_LABEL</ref>)</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeleteLabel(<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>);</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len--;</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>--;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/>SortLabels();</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"></highlight></codeline>
<codeline lineno="2607" refid="class_label_track_1a64b95093d7629264adbbbc03df13ffd2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a64b95093d7629264adbbbc03df13ffd2" kindref="member">LabelTrack::InsertSilence</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="2608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numLabels<sp/>=<sp/>mLabels.Count();</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>numLabels;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;getT0();</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;getT1();</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&gt;=<sp/>t)</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>+=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;=<sp/>t)</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>+=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;selectedRegion.setTimes(t0,<sp/>t1);</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"></highlight></codeline>
<codeline lineno="2625" refid="class_label_track_1a94ca622c101401002bd01fc47c464d1f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a94ca622c101401002bd01fc47c464d1f" kindref="member">LabelTrack::GetNumLabels</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2626"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabels.Count();</highlight></codeline>
<codeline lineno="2628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"></highlight></codeline>
<codeline lineno="2630" refid="class_label_track_1a03a362d6ca8cefb4dc964c787509e779" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<ref refid="class_label_track_1a03a362d6ca8cefb4dc964c787509e779" kindref="member">LabelTrack::GetLabel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2631"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLabels[index];</highlight></codeline>
<codeline lineno="2633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight></codeline>
<codeline lineno="2635" refid="class_label_track_1ac76961f516724b066199e8d21e30f964" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1ac76961f516724b066199e8d21e30f964" kindref="member">LabelTrack::GetLabelIndex</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)</highlight></codeline>
<codeline lineno="2636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>mLabels.Count();</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//We&apos;d<sp/>have<sp/>liked<sp/>to<sp/>have<sp/>times<sp/>in<sp/>terms<sp/>of<sp/>samples,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//because<sp/>then<sp/>we&apos;re<sp/>doing<sp/>an<sp/>intrger<sp/>comparison.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Never<sp/>mind.<sp/><sp/>Instead<sp/>we<sp/>look<sp/>for<sp/>near<sp/>enough.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>level<sp/>of<sp/>(in)accuracy<sp/>is<sp/>only<sp/>a<sp/>problem<sp/>if<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//deal<sp/>with<sp/>sounds<sp/>in<sp/>the<sp/>MHz<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>1.0e-7;</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;i&lt;<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;i++)</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(<sp/>l-&gt;<ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>-<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>)<sp/>&gt;<sp/>delta<sp/>)</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(<sp/>l-&gt;<ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>()<sp/>-<sp/>t1<sp/>)<sp/>&gt;<sp/>delta<sp/>)</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxNOT_FOUND;</highlight></codeline>
<codeline lineno="2658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"></highlight></codeline>
<codeline lineno="2660" refid="class_label_track_1a585c1d8651b4a1770e9f5b9ab6fb6cc5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a585c1d8651b4a1770e9f5b9ab6fb6cc5" kindref="member">LabelTrack::AddLabel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>,</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>restoreFocus)</highlight></codeline>
<codeline lineno="2662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref>(selectedRegion,<sp/>title);</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>title.length();</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/>mInitialCursorPos<sp/>=<sp/>mCurrentCursorPos;</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>mLabels.Count();</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/>len<sp/>&amp;&amp;<sp/>mLabels[pos]-&gt;<ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>&lt;<sp/>selectedRegion.<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>())</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos++;</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/>mLabels.Insert(l,<sp/>pos);</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/>mSelIndex<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>caret<sp/>is<sp/>visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLL:<sp/>The<sp/>cursor<sp/>will<sp/>not<sp/>be<sp/>drawn<sp/>when<sp/>the<sp/>first<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>added<sp/>since<sp/>mDrawCursor<sp/>will<sp/>be<sp/>false.<sp/><sp/>Presumably,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>user<sp/>adds<sp/>a<sp/>label,<sp/>then<sp/>a<sp/>cursor<sp/>should<sp/>be<sp/>drawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>indicate<sp/>that<sp/>typing<sp/>is<sp/>expected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>label<sp/>is<sp/>added<sp/>during<sp/>actions<sp/>like<sp/>import,<sp/>then<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>mDrawCursor<sp/>flag<sp/>will<sp/>be<sp/>reset<sp/>once<sp/>the<sp/>action<sp/>is<sp/>complete.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/>mDrawCursor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/>mRestoreFocus<sp/>=<sp/>restoreFocus;</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="2691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight></codeline>
<codeline lineno="2693" refid="class_label_track_1a6d48364c4bdf7bc2333842546617e601" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a6d48364c4bdf7bc2333842546617e601" kindref="member">LabelTrack::DeleteLabel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="2694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/>wxASSERT((index<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mLabels.GetCount()));</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mLabels[index];</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/>mLabels.RemoveAt(index);</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IF<sp/>we&apos;ve<sp/>deleted<sp/>the<sp/>selected<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>THEN<sp/>set<sp/>no<sp/>label<sp/>selected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mSelIndex==<sp/>index<sp/>)</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentCursorPos<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IF<sp/>we<sp/>removed<sp/>a<sp/>label<sp/>before<sp/>the<sp/>selected<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>THEN<sp/>the<sp/>NEW<sp/>selected<sp/>label<sp/>number<sp/>is<sp/>one<sp/>less.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>index<sp/>&lt;<sp/>mSelIndex<sp/>)</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex--;</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713" refid="class_label_track_1a693026a7f48f1fbb8fb6e98db6afee24" refkind="member"><highlight class="normal">wxBitmap<sp/>&amp;<sp/><ref refid="class_label_track_1a693026a7f48f1fbb8fb6e98db6afee24" kindref="member">LabelTrack::GetGlyph</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="2714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a243b237025e874834e0570a9121df35f" kindref="member">Bitmap</ref>(<sp/>i<sp/>+<sp/>bmpLabelGlyph0);</highlight></codeline>
<codeline lineno="2716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>one<sp/>XPM<sp/>spec<sp/>is<sp/>used<sp/>to<sp/>generate<sp/>a<sp/>number<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"></highlight><highlight class="comment">//<sp/>different<sp/>wxIcons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>XPM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2721"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GlyphXpmRegionSpec[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>columns<sp/>rows<sp/>colors<sp/>chars-per-pixel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;15<sp/>23<sp/>7<sp/>1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Default<sp/>colors,<sp/>with<sp/>first<sp/>color<sp/>transparent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;.<sp/>c<sp/>none&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;2<sp/>c<sp/>black&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;3<sp/>c<sp/>black&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;4<sp/>c<sp/>black&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;5<sp/>c<sp/>#BEBEF0&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;6<sp/>c<sp/>#BEBEF0&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;7<sp/>c<sp/>#BEBEF0&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pixels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;...............&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;...............&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;...............&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;....333.444....&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;...3553.4774...&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;...3553.4774...&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;..35553.47774..&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;..35522222774..&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;.3552666662774.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;.3526666666274.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;355266666662774&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;355266666662774&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;355266666662774&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;.3526666666274.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;.3552666662774.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;..35522222774..&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;..35553.47774..&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;...3553.4774...&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;...3553.4774...&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;....333.444....&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;...............&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;...............&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;...............&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2756"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"></highlight></codeline>
<codeline lineno="2773" refid="class_label_track_1ac2477fc2203f388831307ed740bfd60f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1ac2477fc2203f388831307ed740bfd60f" kindref="member">LabelTrack::CreateCustomGlyphs</ref>()</highlight></codeline>
<codeline lineno="2774"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iConfig;</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iHighlight;</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSpecRows<sp/>=</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>GlyphXpmRegionSpec<sp/>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>GlyphXpmRegionSpec[0]);</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*XmpBmp[nSpecRows];</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>glyphs<sp/>are<sp/>declared<sp/>static<sp/>wxIcon;<sp/>so<sp/>we<sp/>only<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>create<sp/>them<sp/>once,<sp/>no<sp/>matter<sp/>how<sp/>many<sp/>LabelTracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mbGlyphsReady<sp/>)</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>about<sp/>to<sp/>tweak<sp/>the<sp/>basic<sp/>color<sp/>spec<sp/>to<sp/>get<sp/>12<sp/>variations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>iConfig=0;iConfig&lt;<ref refid="_label_track_8h_1af7e528a28f0ee89d46e0a725835ca5cf" kindref="member">NUM_GLYPH_CONFIGS</ref>;iConfig++)</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>iHighlight=0;iHighlight&lt;<ref refid="_label_track_8h_1af41aeb811fc4ae44c596821bef0f00b8" kindref="member">NUM_GLYPH_HIGHLIGHTS</ref>;iHighlight++)</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>iConfig<sp/>+<sp/>NUM_GLYPH_CONFIGS<sp/>*<sp/>iHighlight;</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>basic<sp/>spec...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>XmpBmp,<sp/>GlyphXpmRegionSpec,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>GlyphXpmRegionSpec<sp/>));</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>higlighted<sp/>region<sp/>(if<sp/>any)<sp/>is<sp/>white...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iHighlight==1<sp/>)<sp/>XmpBmp[5]=</highlight><highlight class="stringliteral">&quot;5<sp/>c<sp/>#FFFFFF&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iHighlight==2<sp/>)<sp/>XmpBmp[6]=</highlight><highlight class="stringliteral">&quot;6<sp/>c<sp/>#FFFFFF&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iHighlight==3<sp/>)<sp/>XmpBmp[7]=</highlight><highlight class="stringliteral">&quot;7<sp/>c<sp/>#FFFFFF&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>left<sp/>or<sp/>right<sp/>arrow<sp/>the<sp/>other<sp/>side<sp/>of<sp/>the<sp/>glyph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>transparent<sp/>color.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iConfig==0)<sp/>{<sp/>XmpBmp[3]=</highlight><highlight class="stringliteral">&quot;3<sp/>c<sp/>none&quot;</highlight><highlight class="normal">;<sp/>XmpBmp[5]=</highlight><highlight class="stringliteral">&quot;5<sp/>c<sp/>none&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iConfig==1)<sp/>{<sp/>XmpBmp[4]=</highlight><highlight class="stringliteral">&quot;4<sp/>c<sp/>none&quot;</highlight><highlight class="normal">;<sp/>XmpBmp[7]=</highlight><highlight class="stringliteral">&quot;7<sp/>c<sp/>none&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>icon<sp/>from<sp/>the<sp/>tweaked<sp/>spec.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBoundaryGlyphs[index]<sp/>=<sp/>wxBitmap(XmpBmp);</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBoundaryGlyphs[index].SetMask(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxMask(mBoundaryGlyphs[index],<sp/>wxColour(192,<sp/>192,<sp/>192)));</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/>mIconWidth<sp/><sp/>=<sp/>mBoundaryGlyphs[0].GetWidth();</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/>mIconHeight<sp/>=<sp/>mBoundaryGlyphs[0].GetHeight();</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/>mTextHeight<sp/>=<sp/>mIconHeight;<sp/></highlight><highlight class="comment">//<sp/>until<sp/>proved<sp/>otherwise...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>icon<sp/>should<sp/>have<sp/>an<sp/>odd<sp/>width<sp/>so<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>goes<sp/>exactly<sp/>down<sp/>the<sp/>middle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(<sp/>(mIconWidth<sp/>%2)==1);</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/>mbGlyphsReady=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight></codeline>
<codeline lineno="2821" refid="class_label_track_1a34303d1b56a6ca8712c164b38ecf6251" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1a34303d1b56a6ca8712c164b38ecf6251" kindref="member">LabelTrack::IsGoodLabelFirstKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxKeyEvent<sp/>&amp;<sp/>evt)</highlight></codeline>
<codeline lineno="2822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyCode<sp/>=<sp/>evt.GetKeyCode();</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(keyCode<sp/>&lt;<sp/>WXK_START</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>keyCode<sp/>!=<sp/>WXK_SPACE<sp/>&amp;&amp;<sp/>keyCode<sp/>!=<sp/>WXK_DELETE<sp/>&amp;&amp;<sp/>keyCode<sp/>!=<sp/>WXK_RETURN)<sp/>||</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(keyCode<sp/>&gt;=<sp/>WXK_NUMPAD0<sp/>&amp;&amp;<sp/>keyCode<sp/>&lt;=<sp/>WXK_DIVIDE)<sp/>||</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(keyCode<sp/>&gt;=<sp/>WXK_NUMPAD_EQUAL<sp/>&amp;&amp;<sp/>keyCode<sp/>&lt;=<sp/>WXK_NUMPAD_DIVIDE)<sp/>||</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(keyCode<sp/>&gt;<sp/>WXK_RAW_CONTROL)<sp/>||</highlight></codeline>
<codeline lineno="2830"><highlight class="normal">#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(keyCode<sp/>&gt;<sp/>WXK_WINDOWS_MENU);</highlight></codeline>
<codeline lineno="2832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"></highlight></codeline>
<codeline lineno="2835" refid="class_label_track_1aa669dd3a7a1636e29983e7d0a71b816b" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1aa669dd3a7a1636e29983e7d0a71b816b" kindref="member">LabelTrack::IsGoodLabelEditKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxKeyEvent<sp/>&amp;<sp/>evt)</highlight></codeline>
<codeline lineno="2836"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyCode<sp/>=<sp/>evt.GetKeyCode();</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accept<sp/>everything<sp/>outside<sp/>of<sp/>WXK_START<sp/>through<sp/>WXK_COMMAND,<sp/>plus<sp/>the<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>within<sp/>that<sp/>range<sp/>that<sp/>are<sp/>usually<sp/>printable,<sp/>plus<sp/>the<sp/>ones<sp/>we<sp/>use<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keyboard<sp/>navigation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyCode<sp/>&lt;<sp/>WXK_START<sp/>||</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(keyCode<sp/>&gt;=<sp/>WXK_END<sp/>&amp;&amp;<sp/>keyCode<sp/>&lt;<sp/>WXK_UP)<sp/>||</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(keyCode<sp/>==<sp/>WXK_RIGHT)<sp/>||</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(keyCode<sp/>&gt;=<sp/>WXK_NUMPAD0<sp/>&amp;&amp;<sp/>keyCode<sp/>&lt;=<sp/>WXK_DIVIDE)<sp/>||</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(keyCode<sp/>&gt;=<sp/>WXK_NUMPAD_SPACE<sp/>&amp;&amp;<sp/>keyCode<sp/>&lt;=<sp/>WXK_NUMPAD_ENTER)<sp/>||</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(keyCode<sp/>&gt;=<sp/>WXK_NUMPAD_HOME<sp/>&amp;&amp;<sp/>keyCode<sp/>&lt;=<sp/>WXK_NUMPAD_END)<sp/>||</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(keyCode<sp/>&gt;=<sp/>WXK_NUMPAD_DELETE<sp/>&amp;&amp;<sp/>keyCode<sp/>&lt;=<sp/>WXK_NUMPAD_DIVIDE)<sp/>||</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(keyCode<sp/>&gt;<sp/>WXK_RAW_CONTROL)<sp/>||</highlight></codeline>
<codeline lineno="2851"><highlight class="normal">#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(keyCode<sp/>&gt;<sp/>WXK_WINDOWS_MENU);</highlight></codeline>
<codeline lineno="2853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"></highlight></codeline>
<codeline lineno="2859" refid="class_label_track_1aee692c966d7e2fbd8fe7f4f56148b62e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_label_track_1aee692c966d7e2fbd8fe7f4f56148b62e" kindref="member">LabelTrack::SortLabels</ref>()</highlight></codeline>
<codeline lineno="2860"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j;</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*<sp/>pTemp;</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)mLabels.Count();<sp/>i++)</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j=i-1;</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(j&gt;=0)<sp/>&amp;&amp;<sp/>(mLabels[j]-&gt;getT0()<sp/>&gt;</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;getT0())<sp/>)</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j--;</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>j&lt;i)</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>at<sp/>i<sp/>and<sp/>insert<sp/>at<sp/>j.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>use<sp/>DeleteLabel()<sp/>since<sp/>just<sp/>moving<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTemp<sp/>=<sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels.RemoveAt(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels.Insert(pTemp,<sp/>j);</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Various<sp/>indecese<sp/>need<sp/>to<sp/>be<sp/>updated<sp/>with<sp/>the<sp/>moved<sp/>items...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mMouseOverLabelLeft<sp/>&lt;=i<sp/>)</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mMouseOverLabelLeft<sp/>==<sp/>i<sp/>)</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMouseOverLabelLeft=j;</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mMouseOverLabelLeft<sp/>&gt;=<sp/>j)</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMouseOverLabelLeft++;</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mMouseOverLabelRight<sp/>&lt;=i<sp/>)</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mMouseOverLabelRight<sp/>==<sp/>i<sp/>)</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMouseOverLabelRight=j;</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mMouseOverLabelRight<sp/>&gt;=<sp/>j)</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMouseOverLabelRight++;</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mSelIndex<sp/>&lt;=i<sp/>)</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mSelIndex<sp/>==<sp/>i<sp/>)</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex=j;</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mSelIndex<sp/>&gt;=<sp/>j)</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSelIndex++;</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2904"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"></highlight></codeline>
<codeline lineno="2906" refid="class_label_track_1a606e406928956ac0e8365b1cff6b29cb" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_label_track_1a606e406928956ac0e8365b1cff6b29cb" kindref="member">LabelTrack::GetTextOfLabels</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)</highlight></codeline>
<codeline lineno="2907"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstLabel<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>retVal;</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"></highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mLabels.GetCount();<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>()<sp/>&gt;=<sp/>t0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;getT1()<sp/>&lt;=<sp/>t1)</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!firstLabel)</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstLabel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>+=<sp/>mLabels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;title;</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"></highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="2924"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/LabelTrack.cpp"/>
  </compounddef>
</doxygen>
