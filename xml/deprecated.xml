<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="deprecated" kind="page">
    <compoundname>deprecated</compoundname>
    <title>Deprecated List</title>
    <detaileddescription>
<para><variablelist>
<varlistentry><term><anchor id="deprecated_1_deprecated000004"/>Member <ref refid="group__lavc__packet_1ga7582daad8c59bb6e5df39db6f9881d97" kindref="member">av_destruct_packet</ref>  (<ref refid="struct_a_v_packet" kindref="compound">AVPacket</ref> *pkt)</term></varlistentry>
<listitem><para>use the AVBuffer API instead  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000027"/>Member <ref refid="group__avoptions_1gaa24cb225a282495b9f44377faac5b73f" kindref="member">av_find_opt</ref>  (void *obj, const char *name, const char *unit, int mask, int flags)</term></varlistentry>
<listitem><para>use av_opt_find.  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000030"/>Member <ref refid="samplefmt_8h_1a28980a44eb31c96e72dacac777265e22" kindref="member">av_get_bits_per_sample_fmt</ref>  (enum AVSampleFormat sample_fmt)</term></varlistentry>
<listitem><para>Use <ref refid="samplefmt_8h_1a0c3c218e1dd570ad4917c69a35a6c77d" kindref="member">av_get_bytes_per_sample()</ref> instead.  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000014"/>Member <ref refid="group__lavc__misc_1ga90d24e73ca8633fc9e42c4bf2faf7923" kindref="member">av_log_ask_for_sample</ref>  (void *avc, const char *msg,...) av_printf_format(2</term></varlistentry>
<listitem><para>Use avpriv_request_sample() instead.  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000013"/>Member <ref refid="group__lavc__misc_1ga8df73458e977b4a0f9d8e4f1eeae47f1" kindref="member">av_log_missing_feature</ref>  (void *avc, const char *feature, int want_sample)</term></varlistentry>
<listitem><para>Use avpriv_report_missing_feature() instead.  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000007"/>Member <ref refid="group__lavc__parsing_1ga388e291a22ce1908b932a39c87123756" kindref="member">av_parser_change</ref>  (<ref refid="struct_a_v_codec_parser_context" kindref="compound">AVCodecParserContext</ref> *s, <ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *avctx, uint8_t **poutbuf, int *poutbuf_size, const uint8_t *buf, int buf_size, int keyframe)</term></varlistentry>
<listitem><para>use <ref refid="struct_a_v_bit_stream_filter" kindref="compound">AVBitStreamFilter</ref>  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000028"/>Member <ref refid="group__avoptions_1gaef3d3cd17236e8a38d95c8a13031ba80" kindref="member">av_set_string3</ref>  (void *obj, const char *name, const char *val, int alloc, const <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> **o_out)</term></varlistentry>
<listitem><para>use <ref refid="group__opt__set__funcs_1ga5fd4b92bdf4f392a2847f711676a7537" kindref="member">av_opt_set()</ref>  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000006"/>Member <ref refid="group__lavc__decoding_1gac552241713bbc0eae2206a75d211daf4" kindref="member">avcodec_decode_audio3</ref>  (<ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *avctx, int16_t *samples, int *frame_size_ptr, <ref refid="struct_a_v_packet" kindref="compound">AVPacket</ref> *avpkt)</term></varlistentry>
<listitem><para>Use avcodec_decode_audio4 instead. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000008"/>Member <ref refid="group__lavc__encoding_1gaf12a9da0d33f50ff406e03572fab4763" kindref="member">avcodec_encode_audio</ref>  (<ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *avctx, uint8_t *buf, int buf_size, const short *samples)</term></varlistentry>
<listitem><para>Use avcodec_encode_audio2 instead. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000009"/>Member <ref refid="group__lavc__encoding_1ga22847c21918ee93a4d05f7ffb419f9a9" kindref="member">avcodec_encode_video</ref>  (<ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *avctx, uint8_t *buf, int buf_size, const <ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> *pict)</term></varlistentry>
<listitem><para>use <ref refid="group__lavc__encoding_1gaa2dc9e9ea2567ebb2801a08153c7306b" kindref="member">avcodec_encode_video2()</ref> instead. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000005"/>Member <ref refid="group__lavc__decoding_1gaad92aaeee369795273fc6cfc6ef3b189" kindref="member">avcodec_get_edge_width</ref>  (void)</term></varlistentry>
<listitem><para>CODEC_FLAG_EMU_EDGE is deprecated, so this function is no longer needed  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000012"/>Member <ref refid="group__lavc__misc_1ga4e17541c4f237465b50668d279192da8" kindref="member">avcodec_set_dimensions</ref>  (<ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *s, int width, int height)</term></varlistentry>
<listitem><para>this function is not supposed to be used from outside of lavc  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000022"/>Member <ref refid="struct_a_v_codec_context_1ae6c5c21d82ecb2dc36a9180979c81227" kindref="member">AVCodecContext::error_rate</ref>  </term></varlistentry>
<listitem><para>use the &apos;error_rate&apos; private <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> of the mpegvideo encoders  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000017"/>Member <ref refid="struct_a_v_codec_context_1abc3a806b73306162efa218510448d54f" kindref="member">AVCodecContext::get_buffer</ref>  )(struct <ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *c, <ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> *pic)</term></varlistentry>
<listitem><para>use <ref refid="struct_a_v_codec_context_1aef79333a4c6abf1628c55d75ec82bede" kindref="member">get_buffer2()</ref>  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000023"/>Member <ref refid="struct_a_v_codec_context_1a664ccfc97e45f52d4086759431f0c1fa" kindref="member">AVCodecContext::pkt</ref>  </term></varlistentry>
<listitem><para>this field is not supposed to be accessed from outside lavc  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000018"/>Member <ref refid="struct_a_v_codec_context_1ac934a388c7779e800c13914ff00b6916" kindref="member">AVCodecContext::release_buffer</ref>  )(struct <ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *c, <ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> *pic)</term></varlistentry>
<listitem><para>custom freeing callbacks should be set from <ref refid="struct_a_v_codec_context_1aef79333a4c6abf1628c55d75ec82bede" kindref="member">get_buffer2()</ref>  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000020"/>Member <ref refid="struct_a_v_codec_context_1a64c09907902b41744c3ea60c89fd42fb" kindref="member">AVCodecContext::reordered_opaque</ref>  </term></varlistentry>
<listitem><para>in favor of pkt_pts<itemizedlist>
<listitem><para>encoding: unused</para></listitem><listitem><para>decoding: Set by user.  </para></listitem></itemizedlist>
</para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000016"/>Member <ref refid="struct_a_v_codec_context_1a5ad41beeb47aeedd84d1e81dc2ad40e2" kindref="member">AVCodecContext::request_channels</ref>  </term></varlistentry>
<listitem><para>Deprecated in favor of request_channel_layout.  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000021"/>Member <ref refid="struct_a_v_codec_context_1aeed57307d47f36a39905f206eee8dd96" kindref="member">AVCodecContext::thread_opaque</ref>  </term></varlistentry>
<listitem><para>this field should not be used from outside of lavc  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000015"/>Member <ref refid="struct_a_v_codec_context_1a358503f8848e8a496fc3de96ba62643a" kindref="member">AVCodecContext::xvmc_acceleration</ref>  </term></varlistentry>
<listitem><para>XvMC doesn&apos;t need it anymore.  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000026"/>Member <ref refid="struct_a_v_frame_1a65f7f4bcff7f6ffb020138d839bbb3f6" kindref="member">AVFrame::hwaccel_picture_private</ref>  </term></varlistentry>
<listitem><para>this field is unused  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000025"/>Member <ref refid="struct_a_v_frame_1ab54a78c51318c8c678e545b1f3d6fddd" kindref="member">AVFrame::reordered_opaque</ref>  </term></varlistentry>
<listitem><para>in favor of pkt_pts  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000011"/>Member <ref refid="group__lavc__picture_1gafae4ce3eea8607e0c0c14ef73ff1902f" kindref="member">avpicture_deinterlace</ref>  (<ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> *dst, const <ref refid="struct_a_v_picture" kindref="compound">AVPicture</ref> *src, enum AVPixelFormat pix_fmt, int width, int height)</term></varlistentry>
<listitem><para>- use yadif (in libavfilter) instead  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000003"/>Member <ref refid="group__lavc__core_1ga19dfa49f18ea643e695ee530d060f7de" kindref="member">CODEC_CAP_NEG_LINESIZES</ref>  </term></varlistentry>
<listitem><para>no codecs use this capability  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000002"/>Member <ref refid="group__lavc__core_1ga59f363ca5d22ad82adab3a5e6f520d10" kindref="member">CODEC_FLAG_EMU_EDGE</ref>  </term></varlistentry>
<listitem><para>edges are not used/required anymore. I.e. this flag is now always set.  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000024"/>File <ref refid="dict_8h" kindref="compound">dict.h</ref>  </term></varlistentry>
<listitem><para>AVDictionary is provided for compatibility with libav. It is both in implementation as well as API inefficient. It does not scale and is extremely slow with large dictionaries. It is recommended that new code uses our tree container from tree.c/h where applicable, which uses AVL trees to achieve O(log n) performance.  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000019"/>Member <ref refid="avcodec_8h_1a89c8bc430a198997dcd844d49f0ecc37" kindref="member">FF_DEBUG_MV</ref>  </term></varlistentry>
<listitem><para>this option does nothing  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000001"/>Member <ref refid="group__lavc__core_1gafe5eaf646b3390c6ae8a7a66cd4b7896" kindref="member">FF_MAX_B_FRAMES</ref>  </term></varlistentry>
<listitem><para>there is no libavcodec-wide limit on the number of B-frames  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000010"/><ref refid="class_module" kindref="compound">Module</ref> <ref refid="group__lavc__resample" kindref="compound">lavc_resample</ref>  </term></varlistentry>
<listitem><para>use libswresample instead </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000034"/>Member <ref refid="vorbisenc_8h_1a34c3170d227b6368041e59c1dc7ed6e4" kindref="member">OV_ECTL_RATEMANAGE_AVG</ref>  </term></varlistentry>
<listitem><para>Please use <ref refid="vorbisenc_8h_1a5075e0acb85fd45398a290594f83d6ba" kindref="member">OV_ECTL_RATEMANAGE2_SET</ref> instead. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000032"/>Member <ref refid="vorbisenc_8h_1a614481c0d84bdfbb80eed9208b68f779" kindref="member">OV_ECTL_RATEMANAGE_GET</ref>  </term></varlistentry>
<listitem><para>Please use <ref refid="vorbisenc_8h_1af95048070bedb467f80ce85e20057126" kindref="member">OV_ECTL_RATEMANAGE2_GET</ref> instead. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000035"/>Member <ref refid="vorbisenc_8h_1af8869980a805f431af57a50dffbf5d33" kindref="member">OV_ECTL_RATEMANAGE_HARD</ref>  </term></varlistentry>
<listitem><para>Please use <ref refid="vorbisenc_8h_1a5075e0acb85fd45398a290594f83d6ba" kindref="member">OV_ECTL_RATEMANAGE2_SET</ref> instead. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000033"/>Member <ref refid="vorbisenc_8h_1a1daa1fd8ce1064cce01dde3ad447d389" kindref="member">OV_ECTL_RATEMANAGE_SET</ref>  </term></varlistentry>
<listitem><para>Please use <ref refid="vorbisenc_8h_1a5075e0acb85fd45398a290594f83d6ba" kindref="member">OV_ECTL_RATEMANAGE2_SET</ref> instead. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000031"/>Class <ref refid="structovectl__ratemanage__arg" kindref="compound">ovectl_ratemanage_arg</ref>  </term></varlistentry>
<listitem><para>This is a deprecated interface. Please use <ref refid="vorbisenc_8h_1a5f398a378e20b8ce5e3341a582e773bd" kindref="member">vorbis_encode_ctl()</ref> with the <ref refid="structovectl__ratemanage2__arg" kindref="compound">ovectl_ratemanage2_arg</ref> struct and <ref refid="vorbisenc_8h_1af95048070bedb467f80ce85e20057126" kindref="member">OV_ECTL_RATEMANAGE2_GET</ref> and <ref refid="vorbisenc_8h_1a5075e0acb85fd45398a290594f83d6ba" kindref="member">OV_ECTL_RATEMANAGE2_SET</ref> calls in new code. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000036"/>Member <ref refid="pa__front_8c_1a28f3fd9e6d9f933cc695abea71c4b445" kindref="member">Pa_GetVersionText</ref>  (void)</term></varlistentry>
<listitem><para>use <ref refid="portaudio_8h_1afe94d0dac83fa52b7ae7aaec5b34654f" kindref="member">PaVersionInfo()</ref> instead  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000029"/>Member <ref refid="pixdesc_8h_1a70c18ff2ad9096cb1e38cfd1ed2f3530" kindref="member">PIX_FMT_BE</ref>  </term></varlistentry>
<listitem><para>use the AV_PIX_FMT_FLAG_* flags  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000038"/>Member <ref refid="classwx_app_1a420a1cef557cfe2edaee6ffdaaa5f7fb" kindref="member">wxApp::MacOpenFile</ref>  (const wxString &amp;fileName)</term></varlistentry>
<listitem><para>This function is kept mostly for backwards compatibility. Please override <ref refid="classwx_app_1a0cf8d83fc9e1a7b7f911f29f05127d24" kindref="member">wxApp::MacOpenFiles</ref> method instead in any new code. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000037"/>Member <ref refid="group__group__funcmacro__appinitterm_1gac386c89a04e364afc07edce6d848c27a" kindref="member">wxYield</ref>  ()</term></varlistentry>
<listitem><para>This function is kept only for backwards compatibility. Please use the <ref refid="classwx_app_console_1a302adeb701f247bf8cac1570efc25020" kindref="member">wxAppConsole::Yield</ref> method instead in any new code.</para></listitem>
</variablelist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
