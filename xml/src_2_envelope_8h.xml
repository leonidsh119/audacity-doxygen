<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="src_2_envelope_8h" kind="file" language="C++">
    <compoundname>Envelope.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">vector</includes>
    <includes local="no">wx/dynarray.h</includes>
    <includes local="no">wx/brush.h</includes>
    <includes local="no">wx/pen.h</includes>
    <includes refid="_x_m_l_tag_handler_8h" local="yes">xml/XMLTagHandler.h</includes>
    <includes refid="_internat_8h" local="yes">Internat.h</includes>
    <includedby refid="lib-src_2libnyquist_2nyquist_2nyqstk_2src_2_envelope_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Envelope.cpp</includedby>
    <includedby refid="_audacity_headers_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</includedby>
    <includedby refid="_equalization_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp</includedby>
    <includedby refid="src_2_envelope_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp</includedby>
    <includedby refid="_time_track_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/TimeTrack.cpp</includedby>
    <includedby refid="_transcription_tool_bar_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/toolbars/TranscriptionToolBar.cpp</includedby>
    <includedby refid="_track_artist_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp</includedby>
    <includedby refid="_track_panel_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/TrackPanel.cpp</includedby>
    <includedby refid="_wave_clip_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/WaveClip.cpp</includedby>
    <includedby refid="_wave_track_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp</includedby>
    <incdepgraph>
      <node id="13980">
        <label>wx/ffile.h</label>
      </node>
      <node id="13981">
        <label>Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="13979" relation="include">
        </childnode>
        <childnode refid="13976" relation="include">
        </childnode>
        <childnode refid="13982" relation="include">
        </childnode>
      </node>
      <node id="13974">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="13975" relation="include">
        </childnode>
        <childnode refid="13976" relation="include">
        </childnode>
        <childnode refid="13977" relation="include">
        </childnode>
        <childnode refid="13978" relation="include">
        </childnode>
      </node>
      <node id="13968">
        <label>stdlib.h</label>
      </node>
      <node id="13973">
        <label>wx/pen.h</label>
      </node>
      <node id="13972">
        <label>wx/brush.h</label>
      </node>
      <node id="13975">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="13970">
        <label>vector</label>
      </node>
      <node id="13971">
        <label>wx/dynarray.h</label>
      </node>
      <node id="13976">
        <label>wx/string.h</label>
      </node>
      <node id="13967">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Envelope.h</label>
        <link refid="src/Envelope.h"/>
        <childnode refid="13968" relation="include">
        </childnode>
        <childnode refid="13969" relation="include">
        </childnode>
        <childnode refid="13970" relation="include">
        </childnode>
        <childnode refid="13971" relation="include">
        </childnode>
        <childnode refid="13972" relation="include">
        </childnode>
        <childnode refid="13973" relation="include">
        </childnode>
        <childnode refid="13974" relation="include">
        </childnode>
        <childnode refid="13981" relation="include">
        </childnode>
      </node>
      <node id="13979">
        <label>wx/arrstr.h</label>
      </node>
      <node id="13982">
        <label>wx/longlong.h</label>
      </node>
      <node id="13969">
        <label>algorithm</label>
      </node>
      <node id="13977">
        <label>stdio.h</label>
      </node>
      <node id="13978">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="13979" relation="include">
        </childnode>
        <childnode refid="13971" relation="include">
        </childnode>
        <childnode refid="13980" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13987">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp</label>
        <link refid="_equalization_8cpp"/>
      </node>
      <node id="13993">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveClip.cpp</label>
        <link refid="_wave_clip_8cpp"/>
      </node>
      <node id="13990">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/TranscriptionToolBar.cpp</label>
        <link refid="_transcription_tool_bar_8cpp"/>
      </node>
      <node id="13989">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TimeTrack.cpp</label>
        <link refid="_time_track_8cpp"/>
      </node>
      <node id="13984">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Envelope.cpp</label>
        <link refid="lib-src_2libnyquist_2nyquist_2nyqstk_2src_2_envelope_8cpp"/>
      </node>
      <node id="13985">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</label>
        <link refid="_audacity_headers_8h"/>
        <childnode refid="13986" relation="include">
        </childnode>
      </node>
      <node id="13988">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp</label>
        <link refid="src_2_envelope_8cpp"/>
      </node>
      <node id="13983">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Envelope.h</label>
        <link refid="src/Envelope.h"/>
        <childnode refid="13984" relation="include">
        </childnode>
        <childnode refid="13985" relation="include">
        </childnode>
        <childnode refid="13987" relation="include">
        </childnode>
        <childnode refid="13988" relation="include">
        </childnode>
        <childnode refid="13989" relation="include">
        </childnode>
        <childnode refid="13990" relation="include">
        </childnode>
        <childnode refid="13991" relation="include">
        </childnode>
        <childnode refid="13992" relation="include">
        </childnode>
        <childnode refid="13993" relation="include">
        </childnode>
        <childnode refid="13994" relation="include">
        </childnode>
      </node>
      <node id="13994">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp</label>
        <link refid="_wave_track_8cpp"/>
      </node>
      <node id="13992">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackPanel.cpp</label>
        <link refid="_track_panel_8cpp"/>
      </node>
      <node id="13991">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp</label>
        <link refid="_track_artist_8cpp"/>
      </node>
      <node id="13986">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.cpp</label>
        <link refid="_audacity_headers_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_env_point" prot="public">EnvPoint</innerclass>
    <innerclass refid="class_envelope" prot="public">Envelope</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="src_2_envelope_8h_1af280411d53741dc361cd21582accd4cf" prot="public" static="no">
        <type>std::vector&lt; <ref refid="class_env_point" kindref="compound">EnvPoint</ref> &gt;</type>
        <definition>typedef std::vector&lt;EnvPoint&gt; EnvArray</definition>
        <argsstring></argsstring>
        <name>EnvArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Envelope.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AUDACITY_ENVELOPE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AUDACITY_ENVELOPE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dynarray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/brush.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/pen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_x_m_l_tag_handler_8h" kindref="compound">xml/XMLTagHandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_internat_8h" kindref="compound">Internat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">wxRect;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">wxDC;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">wxMouseEvent;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">wxTextFile;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_dir_manager" kindref="compound">DirManager</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_envelope" kindref="compound">Envelope</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_env_point" kindref="compound">EnvPoint</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_env_point" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_env_point" kindref="compound">EnvPoint</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_env_point_1acbbdb26d5b667bb2a0bb1d42159260eb" kindref="member">EnvPoint</ref>(<ref refid="class_envelope" kindref="compound">Envelope</ref><sp/>*envelope,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_env_point_1a7a45982a42a319d7a2ebd93caf2d37b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_env_point_1a7a45982a42a319d7a2ebd93caf2d37b2" kindref="member">GetT</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mT;<sp/>}</highlight></codeline>
<codeline lineno="42" refid="class_env_point_1abb2a889ec1dfc887081cbd956d330307" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_env_point_1abb2a889ec1dfc887081cbd956d330307" kindref="member">SetT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t)<sp/>{<sp/>mT<sp/>=<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;<sp/>}</highlight></codeline>
<codeline lineno="43" refid="class_env_point_1a17919888a1b25ab0c6b2f30541645ec2" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_env_point_1a17919888a1b25ab0c6b2f30541645ec2" kindref="member">GetVal</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mVal;<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_env_point_1a24be12a7de872660810026e2b277cbcd" kindref="member">SetVal</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_env_point_1adae6f328eff8b89fc026eb502131eb56" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_env_point_1adae6f328eff8b89fc026eb502131eb56" kindref="member">HandleXMLTag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="structtag" kindref="compound">tag</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>**attrs)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;controlpoint&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*attrs)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*attr<sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;t&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_env_point_1abb2a889ec1dfc887081cbd956d330307" kindref="member">SetT</ref>(<ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(value));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;val&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_env_point_1a24be12a7de872660810026e2b277cbcd" kindref="member">SetVal</ref>(<ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(value));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_env_point_1a0ca149271d107560858dd8edc899746d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref><sp/>*<ref refid="class_env_point_1a0ca149271d107560858dd8edc899746d" kindref="member">HandleXMLChild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<sp/>WXUNUSED(<ref refid="structtag" kindref="compound">tag</ref>))</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_envelope" kindref="compound">Envelope</ref><sp/>*mEnvelope;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mT;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mVal;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="src_2_envelope_8h_1af280411d53741dc361cd21582accd4cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;EnvPoint&gt;<sp/><ref refid="src_2_envelope_8h_1af280411d53741dc361cd21582accd4cf" kindref="member">EnvArray</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_envelope" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_envelope" kindref="compound">Envelope</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_envelope" kindref="compound">Envelope</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Initialize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPoints);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_envelope" kindref="compound"> Envelope</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_envelope_1abd472dcf0eb0f885452a0cad1dae0696" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_envelope_1abd472dcf0eb0f885452a0cad1dae0696" kindref="member">GetInterpolateDB</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDB;<sp/>}</highlight></codeline>
<codeline lineno="85" refid="class_envelope_1ad2ed64914b2d02981f892b813c72707f" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_envelope_1ad2ed64914b2d02981f892b813c72707f" kindref="member">SetInterpolateDB</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>db)<sp/>{<sp/>mDB<sp/>=<sp/>db;<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Mirror(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mirror);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Rescale(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minValue,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxValue);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Flatten(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="90" refid="class_envelope_1a2e71d43f9b2f683080c57e57fb93355c" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_envelope_1a2e71d43f9b2f683080c57e57fb93355c" kindref="member">GetDragPoint</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDragPoint;}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="class_envelope_1ad5ddd2293653954e70ab48e02a3ee7a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_envelope_1ad5ddd2293653954e70ab48e02a3ee7a5" kindref="member">GetMinValue</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMinValue;<sp/>}</highlight></codeline>
<codeline lineno="93" refid="class_envelope_1a52926076ca223b39d682fd168e2a17fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_envelope_1a52926076ca223b39d682fd168e2a17fb" kindref="member">GetMaxValue</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMaxValue;<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minValue,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxValue);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_envelope_1a4a8e03849f2caa80641c7aabcbf36ee7" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_envelope_1a4a8e03849f2caa80641c7aabcbf36ee7" kindref="member">ClampValue</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(mMinValue,<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(mMaxValue,<sp/>value));<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LEGACY_PROJECT_FILE_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>File<sp/>I/O</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Load(wxTextFile<sp/>*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*<sp/>dirManager)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Save(wxTextFile<sp/>*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overwrite)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Newfangled<sp/>XML<sp/>file<sp/>I/O</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_env_point_1adae6f328eff8b89fc026eb502131eb56" kindref="member">HandleXMLTag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="structtag" kindref="compound">tag</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>**attrs)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref><sp/>*<ref refid="class_env_point_1a0ca149271d107560858dd8edc899746d" kindref="member">HandleXMLChild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*tag)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteXML(<ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref><sp/>&amp;xmlFile)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawPoints(wxDC<sp/>&amp;<sp/>dc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;<sp/>r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dB,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dBRange,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMax)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Event<sp/>Handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>ofthese<sp/>returns<sp/>true<sp/>if<sp/>parents<sp/>needs<sp/>to<sp/>be<sp/>redrawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MouseEvent(wxMouseEvent<sp/>&amp;<sp/>event,<sp/>wxRect<sp/>&amp;<sp/>r,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dB,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dBRange,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMax);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleMouseButtonDown(<sp/>wxMouseEvent<sp/>&amp;<sp/>event,<sp/>wxRect<sp/>&amp;<sp/>r,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dB,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dBRange,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMax);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleDragging(<sp/>wxMouseEvent<sp/>&amp;<sp/>event,<sp/>wxRect<sp/>&amp;<sp/>r,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dB,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dBRange,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMax);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleMouseButtonUp();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handling<sp/>Cut/Copy/Paste<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CollapseRegion(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CopyFrom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_envelope" kindref="compound">Envelope</ref><sp/>*<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Paste(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_envelope" kindref="compound">Envelope</ref><sp/>*e);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertSpace(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tlen);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RemoveUnneededPoints(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref><sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tolerence<sp/>=<sp/>0.001);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetOffset(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newOffset);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetTrackLen(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trackLen);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accessors</highlight></codeline>
<codeline lineno="139"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetValue(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetValues(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tstep)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetValues</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufferLen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftOffset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumberOfPointsAfter(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>NextPointAfter(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Average(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>AverageOfInverse(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Integral(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>IntegralOfInverse(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SolveIntegralOfInverse(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>area)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testMe();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsDirty()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Insert(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>when,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Move(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>when,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Delete(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>point);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Insert(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>point,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_env_point" kindref="compound">EnvPoint</ref><sp/>&amp;<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetNumberOfPoints()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_envelope_1a87cb929c2866ef1ca20e947f22d23747" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_env_point" kindref="compound">EnvPoint</ref><sp/>&amp;operator[]<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="185"><highlight class="keyword"><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mEnv[index];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetPoints(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bufferWhen,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bufferValue,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufferLen)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_env_point" kindref="compound">EnvPoint</ref><sp/>*<sp/><sp/>AddPointAtEnd(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MarkDragPointForDeletion();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_track_artist_8cpp_1ae9fe7afff0bfbea92663e8a2c0ecf0cb" kindref="member">ValueOfPixel</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>upper,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dB,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dBRange,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMax);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BinarySearchForTime(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;Lo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;Hi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetInterpolationStartValueAtPoint(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iPoint<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MoveDraggedPoint(<sp/>wxMouseEvent<sp/>&amp;<sp/>event,<sp/>wxRect<sp/>&amp;<sp/>r,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>&amp;zoomInfo,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dB,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dBRange,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>zoomMax);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Possibly<sp/>inline<sp/>functions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>resets<sp/>them<sp/>integral<sp/>memoizers<sp/>(call<sp/>whenever<sp/>the<sp/>Envelope<sp/>changes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resetIntegralMemoizer()<sp/>{<sp/>lastIntegral_t0=0;<sp/>lastIntegral_t1=0;<sp/>lastIntegral_result=0;<sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>list<sp/>of<sp/>envelope<sp/>control<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/>EnvArray<sp/>mEnv;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mMirror;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mOffset;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mTrackLen;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>mTrackEpsilon<sp/>based<sp/>on<sp/>assumption<sp/>of<sp/>200KHz.<sp/><sp/>Needs<sp/>review<sp/>if/when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>support<sp/>higher<sp/>sample<sp/>rates.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mTrackEpsilon;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mDefaultValue;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mContourOffset;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mInitialVal;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>used<sp/>in<sp/>dragging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mDragPoint;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mInitialY;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mUpper;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mIsDeleting;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mButton;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mDB;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mDirty;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mMinValue,<sp/>mMaxValue;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>memoizing<sp/>variables<sp/>for<sp/>Integral()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastIntegral_t0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastIntegral_t1;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastIntegral_result;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mSearchGuess;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">};</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="class_env_point_1acbbdb26d5b667bb2a0bb1d42159260eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_env_point_1acbbdb26d5b667bb2a0bb1d42159260eb" kindref="member">EnvPoint::EnvPoint</ref>(<ref refid="class_envelope" kindref="compound">Envelope</ref><sp/>*envelope,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>mEnvelope<sp/>=<sp/>envelope;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/>mT<sp/>=<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/>mVal<sp/>=<sp/>mEnvelope-&gt;ClampValue(val);</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="class_env_point_1a24be12a7de872660810026e2b277cbcd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_env_point_1a24be12a7de872660810026e2b277cbcd" kindref="member">EnvPoint::SetVal</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/>mVal<sp/>=<sp/>mEnvelope-&gt;ClampValue(val);</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h"/>
  </compounddef>
</doxygen>
