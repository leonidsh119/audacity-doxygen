<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sord_2waflib_2extras_2doxygen_8py" kind="file" language="Python">
    <compoundname>doxygen.py</compoundname>
    <innerclass refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen" prot="public">waflib::extras::doxygen::doxygen</innerclass>
    <innerclass refid="classwaflib_1_1extras_1_1doxygen_1_1tar" prot="public">waflib::extras::doxygen::tar</innerclass>
    <innernamespace refid="namespacewaflib_1_1extras_1_1doxygen">waflib::extras::doxygen</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>encoding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WARNING!<sp/>Do<sp/>not<sp/>edit!<sp/>http://waf.googlecode.com/git/docs/wafbook/single.html#_obtaining_the_waf_file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fnmatch<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>fnmatchcase</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os,os.path,re,stat</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>waflib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Task,Utils,Node,Logs</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_task_gen" kindref="compound">waflib.TaskGen</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>feature</highlight></codeline>
<codeline lineno="9"><highlight class="normal">DOXY_STR=</highlight><highlight class="stringliteral">&apos;${DOXYGEN}<sp/>-<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">DOXY_FMTS=</highlight><highlight class="stringliteral">&apos;html<sp/>latex<sp/>man<sp/>rft<sp/>xml&apos;</highlight><highlight class="normal">.split()</highlight></codeline>
<codeline lineno="11"><highlight class="normal">DOXY_FILE_PATTERNS=</highlight><highlight class="stringliteral">&apos;*.&apos;</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&apos;<sp/>*.&apos;</highlight><highlight class="normal">.join(</highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">c<sp/>cc<sp/>cxx<sp/>cpp<sp/>c++<sp/>java<sp/>ii<sp/>ixx<sp/>ipp<sp/>i++<sp/>inl<sp/>h<sp/>hh<sp/>hxx<sp/>hpp<sp/>h++<sp/>idl<sp/>odl<sp/>cs<sp/>php<sp/>php3</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">inc<sp/>m<sp/>mm<sp/>py<sp/>f90c<sp/>cc<sp/>cxx<sp/>cpp<sp/>c++<sp/>java<sp/>ii<sp/>ixx<sp/>ipp<sp/>i++<sp/>inl<sp/>h<sp/>hh<sp/>hxx</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal">.split())</highlight></codeline>
<codeline lineno="15"><highlight class="normal">re_rl=re.compile(</highlight><highlight class="stringliteral">&apos;\\\\\r*\n&apos;</highlight><highlight class="normal">,re.MULTILINE)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">re_nl=re.compile(</highlight><highlight class="stringliteral">&apos;\r*\n&apos;</highlight><highlight class="normal">,re.M)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1doxygen_1ad00d728a0949db6dd441165547e07e7a" kindref="member">parse_doxy</ref>(txt):</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>tbl={}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>txt=re_rl.sub(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,txt)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>lines=re_nl.split(txt)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lines:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=x.strip()</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x.find(</highlight><highlight class="stringliteral">&apos;=&apos;</highlight><highlight class="normal">)&lt;0:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x.find(</highlight><highlight class="stringliteral">&apos;+=&apos;</highlight><highlight class="normal">)&gt;=0:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp=x.split(</highlight><highlight class="stringliteral">&apos;+=&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key=tmp[0].strip()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tbl:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbl[key]+=</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&apos;+=&apos;</highlight><highlight class="normal">.join(tmp[1:]).strip()</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbl[key]=</highlight><highlight class="stringliteral">&apos;+=&apos;</highlight><highlight class="normal">.join(tmp[1:]).strip()</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp=x.split(</highlight><highlight class="stringliteral">&apos;=&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbl[tmp[0].strip()]=</highlight><highlight class="stringliteral">&apos;=&apos;</highlight><highlight class="normal">.join(tmp[1:]).strip()</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tbl</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">doxygen(Task.Task):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>vars=[</highlight><highlight class="stringliteral">&apos;DOXYGEN&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;DOXYFLAGS&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a9296bc8174969eb9d34a207086b25979" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a9296bc8174969eb9d34a207086b25979" kindref="member">runnable_status</ref>(self):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pars<sp/>are<sp/>populated<sp/>in<sp/>runnable_status<sp/>-<sp/>because<sp/>this<sp/>function<sp/>is<sp/>being</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>run<sp/>*before*<sp/>both<sp/>self.pars<sp/>&quot;consumers&quot;<sp/>-<sp/>scan()<sp/>and<sp/>run()</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>output_dir<sp/>(node)<sp/>for<sp/>the<sp/>output</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1aa7c8052cdf396076b486c3265b99b245" kindref="member">run_after</ref>:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>x.hasrun:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Task.ASK_LATER</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;pars&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txt=self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>[0].read()</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a431448bf1c1cb60dbf666faa1ec27bfb" kindref="member">pars</ref>=<ref refid="namespacewaflib_1_1extras_1_1doxygen_1ad00d728a0949db6dd441165547e07e7a" kindref="member">parse_doxy</ref>(txt)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.pars.get(</highlight><highlight class="stringliteral">&apos;OUTPUT_DIRECTORY&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a431448bf1c1cb60dbf666faa1ec27bfb" kindref="member">pars</ref>[</highlight><highlight class="stringliteral">&apos;OUTPUT_DIRECTORY&apos;</highlight><highlight class="normal">]=self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>[0].parent.get_bld().abspath()</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(self.<ref refid="classwaflib_1_1_task_1_1_task_base_1ab2845bbbc20cc2212baf138df4f10e9a" kindref="member">generator</ref>,</highlight><highlight class="stringliteral">&apos;pars&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.generator.pars.iteritems():</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a431448bf1c1cb60dbf666faa1ec27bfb" kindref="member">pars</ref>[k]=v</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a87228c743c24595457bd87f01f36c7fd" kindref="member">doxy_inputs</ref>=getattr(self,</highlight><highlight class="stringliteral">&apos;doxy_inputs&apos;</highlight><highlight class="normal">,[])</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.pars.get(</highlight><highlight class="stringliteral">&apos;INPUT&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.doxy_inputs.append(self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>[0].parent)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.pars.get(</highlight><highlight class="stringliteral">&apos;INPUT&apos;</highlight><highlight class="normal">).split():</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isabs(i):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node=self.generator.bld.root.find_node(i)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node=self.generator.path.find_node(i)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>node:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.generator.bld.fatal(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>find<sp/>the<sp/>doxygen<sp/>input<sp/>%r&apos;</highlight><highlight class="normal">%i)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.doxy_inputs.append(node)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;output_dir&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld=self.generator.bld</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a6dda9f470be0c485902a1ede0801cf14" kindref="member">output_dir</ref>=bld.root.find_dir(self.<ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a431448bf1c1cb60dbf666faa1ec27bfb" kindref="member">pars</ref>[</highlight><highlight class="stringliteral">&apos;OUTPUT_DIRECTORY&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a6dda9f470be0c485902a1ede0801cf14" kindref="member">output_dir</ref>:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a6dda9f470be0c485902a1ede0801cf14" kindref="member">output_dir</ref>=bld.path.find_or_declare(self.<ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a431448bf1c1cb60dbf666faa1ec27bfb" kindref="member">pars</ref>[</highlight><highlight class="stringliteral">&apos;OUTPUT_DIRECTORY&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a48e55f13de8172b779a4e63794c7f44f" kindref="member">signature</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Task.Task.runnable_status(self)</highlight></codeline>
<codeline lineno="76" refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a429bd9d2361167ffbe527e4dd944bf38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a429bd9d2361167ffbe527e4dd944bf38" kindref="member">scan</ref>(self):</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.pars.get(</highlight><highlight class="stringliteral">&apos;RECURSIVE&apos;</highlight><highlight class="normal">)==</highlight><highlight class="stringliteral">&apos;YES&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.warn(</highlight><highlight class="stringliteral">&quot;Doxygen<sp/>RECURSIVE<sp/>dependencies<sp/>are<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exclude_patterns=self.pars.get(</highlight><highlight class="stringliteral">&apos;EXCLUDE_PATTERNS&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">).split()</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_patterns=self.pars.get(</highlight><highlight class="stringliteral">&apos;FILE_PATTERNS&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">).split()</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>file_patterns:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_patterns=DOXY_FILE_PATTERNS</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes=[]</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names=[]</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>node<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a87228c743c24595457bd87f01f36c7fd" kindref="member">doxy_inputs</ref>:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isdir(node.abspath()):</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>node.ant_glob(file_patterns):</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.append(m)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.append(node)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref>(nodes,names)</highlight></codeline>
<codeline lineno="92" refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1adfbde18b61a6ae5e0af7ff252af4dcf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1adfbde18b61a6ae5e0af7ff252af4dcf5" kindref="member">run</ref>(self):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct=self.pars.copy()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct[</highlight><highlight class="stringliteral">&apos;INPUT&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">.join([x.abspath()</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a87228c743c24595457bd87f01f36c7fd" kindref="member">doxy_inputs</ref>])</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code=</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">.join([</highlight><highlight class="stringliteral">&apos;%s<sp/>=<sp/>%s&apos;</highlight><highlight class="normal">%(x,dct[x])</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a431448bf1c1cb60dbf666faa1ec27bfb" kindref="member">pars</ref>])</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code=code</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd=Utils.subst_vars(DOXY_STR,self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env=self.env.env<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proc=Utils.subprocess.Popen(cmd,shell=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,stdin=Utils.subprocess.PIPE,env=env,cwd=self.generator.bld.path.get_bld().abspath())</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proc.communicate(code)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proc.returncode</highlight></codeline>
<codeline lineno="102" refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a62a09f0a46cbab7cffab4ab496c46e80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1extras_1_1doxygen_1_1doxygen_1a62a09f0a46cbab7cffab4ab496c46e80" kindref="member">post_run</ref>(self):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes=self.output_dir.ant_glob(</highlight><highlight class="stringliteral">&apos;**/*&apos;</highlight><highlight class="normal">,quiet=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nodes:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.sig=Utils.h_file(x.abspath())</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a7183c692f1eb01b9f7e66daca035bce4" kindref="member">outputs</ref>+=nodes</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Task.Task.post_run(self)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1extras_1_1doxygen_1_1tar" kindref="compound">tar</ref>(<ref refid="classwaflib_1_1_task_1_1_task" kindref="compound">Task.Task</ref>):</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${TAR}<sp/>${TAROPTS}<sp/>${TGT}<sp/>${SRC}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;RED&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>after=[</highlight><highlight class="stringliteral">&apos;doxygen&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="112" refid="classwaflib_1_1extras_1_1doxygen_1_1tar_1ab00fcc1c9916ad5302e0483869c00014" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1extras_1_1doxygen_1_1tar_1ab00fcc1c9916ad5302e0483869c00014" kindref="member">runnable_status</ref>(self):</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;input_tasks&apos;</highlight><highlight class="normal">,[]):</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>x.hasrun:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Task.ASK_LATER</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;tar_done_adding&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1extras_1_1doxygen_1_1tar_1a9697fe6cf03d445d0d9c5df25b8f90b1" kindref="member">tar_done_adding</ref>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;input_tasks&apos;</highlight><highlight class="normal">,[]):</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a647c971bbca84d07daeff8d24f70ea18" kindref="member">set_inputs</ref>(x.outputs)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Task.SKIP_ME</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Task.Task.runnable_status(self)</highlight></codeline>
<codeline lineno="123" refid="classwaflib_1_1extras_1_1doxygen_1_1tar_1ad6afde29277bb81c32d8bb60b1409240" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1extras_1_1doxygen_1_1tar_1ad6afde29277bb81c32d8bb60b1409240" kindref="member">__str__</ref>(self):</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgt_str=</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">.join([a.nice_path(self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a7183c692f1eb01b9f7e66daca035bce4" kindref="member">outputs</ref>])</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&apos;%s:<sp/>%s\n&apos;</highlight><highlight class="normal">%(self.__class__.__name__,tgt_str)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;doxygen&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1doxygen_1a88b85c6ce6a068c606c3e035e84d8760" kindref="member">process_doxy</ref>(self):</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;doxyfile&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.generator.bld.fatal(</highlight><highlight class="stringliteral">&apos;no<sp/>doxyfile??&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>node=self.doxyfile</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(node,<ref refid="classwaflib_1_1_node_1_1_node" kindref="compound">Node.Node</ref>):</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node=self.path.find_resource(node)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>node:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;doxygen<sp/>file<sp/>not<sp/>found&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>dsk=self.create_task(</highlight><highlight class="stringliteral">&apos;doxygen&apos;</highlight><highlight class="normal">,node)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;doxy_tar&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk=self.create_task(</highlight><highlight class="stringliteral">&apos;tar&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk.input_tasks=[dsk]</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk.set_outputs(self.path.find_or_declare(self.doxy_tar))</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.doxy_tar.endswith(</highlight><highlight class="stringliteral">&apos;bz2&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk.env[</highlight><highlight class="stringliteral">&apos;TAROPTS&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;cjf&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.doxy_tar.endswith(</highlight><highlight class="stringliteral">&apos;gz&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk.env[</highlight><highlight class="stringliteral">&apos;TAROPTS&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;czf&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk.env[</highlight><highlight class="stringliteral">&apos;TAROPTS&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;cf&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1doxygen_1a172fdeb5aa82f9d3d452b22a5f4abe70" kindref="member">configure</ref>(conf):</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.find_program(</highlight><highlight class="stringliteral">&apos;doxygen&apos;</highlight><highlight class="normal">,var=</highlight><highlight class="stringliteral">&apos;DOXYGEN&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.find_program(</highlight><highlight class="stringliteral">&apos;tar&apos;</highlight><highlight class="normal">,var=</highlight><highlight class="stringliteral">&apos;TAR&apos;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/waflib/extras/doxygen.py"/>
  </compounddef>
</doxygen>
