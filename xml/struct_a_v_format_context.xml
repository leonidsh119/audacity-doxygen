<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="struct_a_v_format_context" kind="struct" language="C++" prot="public">
    <compoundname>AVFormatContext</compoundname>
    <includes refid="avformat_8h" local="no">avformat.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_a_v_format_context_1a0c396740b9a2487aa57d4352d2dc1687" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> *</type>
        <definition>const AVClass* AVFormatContext::av_class</definition>
        <argsstring></argsstring>
        <name>av_class</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A class for logging and <ref refid="group__avoptions" kindref="compound">AVOptions</ref>. Set by <ref refid="group__lavf__core_1gac7a91abf2f59648d995894711f070f62" kindref="member">avformat_alloc_context()</ref>. Exports (de)muxer private options if they exist. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1095" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1095" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a78efc5a53c21c8d81197445207ac4374" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_a_v_input_format" kindref="compound">AVInputFormat</ref> *</type>
        <definition>struct AVInputFormat* AVFormatContext::iformat</definition>
        <argsstring></argsstring>
        <name>iformat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The input container format.</para><para>Demuxing only, set by <ref refid="group__lavf__decoding_1ga10a404346c646e4ab58f4ed798baca32" kindref="member">avformat_open_input()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1102" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a20d80ac07e38ff5c268d15aaf2798b98" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_a_v_output_format" kindref="compound">AVOutputFormat</ref> *</type>
        <definition>struct AVOutputFormat* AVFormatContext::oformat</definition>
        <argsstring></argsstring>
        <name>oformat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The output container format.</para><para>Muxing only, must be set by the caller before <ref refid="group__lavf__encoding_1ga78d4e734fecb1d2385536e6dd5b7b9f5" kindref="member">avformat_write_header()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1109" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1ac4c0777e54085af2f3f1b27130e2b21b" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>void* AVFormatContext::priv_data</definition>
        <argsstring></argsstring>
        <name>priv_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_format" kindref="compound">Format</ref> private data. This is an AVOptions-enabled struct if and only if iformat/oformat.priv_class is not NULL.</para><para><itemizedlist>
<listitem><para>muxing: set by <ref refid="group__lavf__encoding_1ga78d4e734fecb1d2385536e6dd5b7b9f5" kindref="member">avformat_write_header()</ref></para></listitem><listitem><para>demuxing: set by <ref refid="group__lavf__decoding_1ga10a404346c646e4ab58f4ed798baca32" kindref="member">avformat_open_input()</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1118" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a1e7324262b6b78522e52064daaa7bc87" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref> *</type>
        <definition>AVIOContext* AVFormatContext::pb</definition>
        <argsstring></argsstring>
        <name>pb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>I/O context.</para><para><itemizedlist>
<listitem><para>demuxing: either set by the user before <ref refid="group__lavf__decoding_1ga10a404346c646e4ab58f4ed798baca32" kindref="member">avformat_open_input()</ref> (then the user must close it manually) or set by <ref refid="group__lavf__decoding_1ga10a404346c646e4ab58f4ed798baca32" kindref="member">avformat_open_input()</ref>.</para></listitem><listitem><para>muxing: set by the user before <ref refid="group__lavf__encoding_1ga78d4e734fecb1d2385536e6dd5b7b9f5" kindref="member">avformat_write_header()</ref>. The caller must take care of closing / freeing the IO context.</para></listitem></itemizedlist>
</para><para>Do NOT set this field if AVFMT_NOFILE flag is set in iformat/oformat.flags. In such a case, the (de)muxer will handle I/O in some other way and this field will be NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1132" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a4e6076343df1ffc2e16cedbba3f3f397" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::ctx_flags</definition>
        <argsstring></argsstring>
        <name>ctx_flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Format-specific flags, see AVFMTCTX_xx </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1135" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a0b748d924898b08b89ff4974afd17285" prot="public" static="no" mutable="no">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int AVFormatContext::nb_streams</definition>
        <argsstring></argsstring>
        <name>nb_streams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of elements in <ref refid="struct_a_v_format_context_1acfefb6b6cf21e87a0dcbd1a547ba2348" kindref="member">AVFormatContext.streams</ref>.</para><para>Set by <ref refid="group__lavf__core_1gadcb0fd3e507d9b58fe78f61f8ad39827" kindref="member">avformat_new_stream()</ref>, must not be modified by any other code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1142" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1acfefb6b6cf21e87a0dcbd1a547ba2348" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_v_stream" kindref="compound">AVStream</ref> **</type>
        <definition>AVStream** AVFormatContext::streams</definition>
        <argsstring></argsstring>
        <name>streams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A list of all streams in the file. New streams are created with <ref refid="group__lavf__core_1gadcb0fd3e507d9b58fe78f61f8ad39827" kindref="member">avformat_new_stream()</ref>.</para><para><itemizedlist>
<listitem><para>demuxing: streams are created by libavformat in <ref refid="group__lavf__decoding_1ga10a404346c646e4ab58f4ed798baca32" kindref="member">avformat_open_input()</ref>. If AVFMTCTX_NOHEADER is set in ctx_flags, then new streams may also appear in <ref refid="group__lavf__decoding_1ga4fdb3084415a82e3810de6ee60e46a61" kindref="member">av_read_frame()</ref>.</para></listitem><listitem><para>muxing: streams are created by the user before <ref refid="group__lavf__encoding_1ga78d4e734fecb1d2385536e6dd5b7b9f5" kindref="member">avformat_write_header()</ref>.</para></listitem></itemizedlist>
</para><para>Freed by libavformat in <ref refid="group__lavf__core_1gac2990b13b68e831a408fce8e1d0d6445" kindref="member">avformat_free_context()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1154" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a65a978cf0ca3c0f0da52840d2e97f9ea" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char AVFormatContext::filename[1024]</definition>
        <argsstring>[1024]</argsstring>
        <name>filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>input or output filename</para><para><itemizedlist>
<listitem><para>demuxing: set by <ref refid="group__lavf__decoding_1ga10a404346c646e4ab58f4ed798baca32" kindref="member">avformat_open_input()</ref></para></listitem><listitem><para>muxing: may be set by the caller before <ref refid="group__lavf__encoding_1ga78d4e734fecb1d2385536e6dd5b7b9f5" kindref="member">avformat_write_header()</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1162" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a2590129e00adfa726ab2033a10e905e9" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t AVFormatContext::start_time</definition>
        <argsstring></argsstring>
        <name>start_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the first frame of the component, in AV_TIME_BASE fractional seconds. NEVER set this value directly: It is deduced from the <ref refid="struct_a_v_stream" kindref="compound">AVStream</ref> values.</para><para>Demuxing only, set by libavformat. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1171" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1ad0ea78ac48f5bb0a15a15c1c472744d9" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t AVFormatContext::duration</definition>
        <argsstring></argsstring>
        <name>duration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Duration of the stream, in AV_TIME_BASE fractional seconds. Only set this value if you know none of the individual stream durations and also do not set any of them. This is deduced from the <ref refid="struct_a_v_stream" kindref="compound">AVStream</ref> values if not set.</para><para>Demuxing only, set by libavformat. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1181" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a4f7a7b9b1313907c88e62b03f3e569e6" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::bit_rate</definition>
        <argsstring></argsstring>
        <name>bit_rate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Total stream bitrate in bit/s, 0 if not available. Never set it directly if the file_size and the duration are known as FFmpeg can compute it automatically. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1188" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a0739c2952969d3c67788f02ea829f549" prot="public" static="no" mutable="no">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int AVFormatContext::packet_size</definition>
        <argsstring></argsstring>
        <name>packet_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1190" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a58422ed3d461b3440a15cf057ac5f5b7" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::max_delay</definition>
        <argsstring></argsstring>
        <name>max_delay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1191" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a32379cc371463b235d54235d4af06a15" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1193" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1afcff2757459cf56050b2d908f46957b0" prot="public" static="no" mutable="no">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int AVFormatContext::probesize</definition>
        <argsstring></argsstring>
        <name>probesize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum size of the data read from input for determining the input container format. Demuxing only, set by the caller before <ref refid="group__lavf__decoding_1ga10a404346c646e4ab58f4ed798baca32" kindref="member">avformat_open_input()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1214" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1aa1f733fdfa1655d9e6ccc80f6b926274" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::max_analyze_duration</definition>
        <argsstring></argsstring>
        <name>max_analyze_duration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum duration (in AV_TIME_BASE units) of the data read from input in <ref refid="group__lavf__decoding_1gad42172e27cddafb81096939783b157bb" kindref="member">avformat_find_stream_info()</ref>. Demuxing only, set by the caller before <ref refid="group__lavf__decoding_1gad42172e27cddafb81096939783b157bb" kindref="member">avformat_find_stream_info()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1221" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a19cb4471ba011fc7adc5e17344c608f5" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
        <definition>const uint8_t* AVFormatContext::key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1223" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a1f2c1db3070cc100938eaed81ff3767d" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::keylen</definition>
        <argsstring></argsstring>
        <name>keylen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1224" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a58c8c4d0ea974e0fcb0ce06fb1174f9f" prot="public" static="no" mutable="no">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int AVFormatContext::nb_programs</definition>
        <argsstring></argsstring>
        <name>nb_programs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1226" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a4c2c5a4c758966349ff513e95154d062" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_v_program" kindref="compound">AVProgram</ref> **</type>
        <definition>AVProgram** AVFormatContext::programs</definition>
        <argsstring></argsstring>
        <name>programs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1227" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1ab179ade0dbe905ab2867b7001bf618ec" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__lavc__core_1gaadca229ad2c20e060a14fec08a5cc7ce" kindref="member">AVCodecID</ref></type>
        <definition>enum AVCodecID AVFormatContext::video_codec_id</definition>
        <argsstring></argsstring>
        <name>video_codec_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forced video codec_id. Demuxing: Set by user. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1227" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a1c99fc118bf047959a0284bffc2c1a9a" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__lavc__core_1gaadca229ad2c20e060a14fec08a5cc7ce" kindref="member">AVCodecID</ref></type>
        <definition>enum AVCodecID AVFormatContext::audio_codec_id</definition>
        <argsstring></argsstring>
        <name>audio_codec_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forced audio codec_id. Demuxing: Set by user. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1227" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1acca61846d663b15e5a56b35c903e4d3b" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__lavc__core_1gaadca229ad2c20e060a14fec08a5cc7ce" kindref="member">AVCodecID</ref></type>
        <definition>enum AVCodecID AVFormatContext::subtitle_codec_id</definition>
        <argsstring></argsstring>
        <name>subtitle_codec_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forced subtitle codec_id. Demuxing: Set by user. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1227" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1ab0470d586a71d4f356194d202591617d" prot="public" static="no" mutable="no">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int AVFormatContext::max_index_size</definition>
        <argsstring></argsstring>
        <name>max_index_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum amount of memory in bytes to use for the index of each stream. If the index exceeds this size, entries will be discarded as needed to maintain a smaller size. This can lead to slower or less accurate seeking (depends on demuxer). Demuxers for which a full in-memory index is mandatory will ignore this.<itemizedlist>
<listitem><para>muxing: unused</para></listitem><listitem><para>demuxing: set by user </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1257" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1ae188350a3838a14a233bf272d68998be" prot="public" static="no" mutable="no">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int AVFormatContext::max_picture_buffer</definition>
        <argsstring></argsstring>
        <name>max_picture_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum amount of memory in bytes to use for buffering frames obtained from realtime capture devices. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1263" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a6f60043baf4abd0d201ccefc27bb4306" prot="public" static="no" mutable="no">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int AVFormatContext::nb_chapters</definition>
        <argsstring></argsstring>
        <name>nb_chapters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of chapters in <ref refid="struct_a_v_chapter" kindref="compound">AVChapter</ref> array. When muxing, chapters are normally written in the file header, so nb_chapters should normally be initialized before write_header is called. Some muxers (e.g. mov and mkv) can also write chapters in the trailer. To write chapters in the trailer, nb_chapters must be zero when write_header is called and non-zero when write_trailer is called.<itemizedlist>
<listitem><para>muxing: set by user</para></listitem><listitem><para>demuxing: set by libavformat </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1276" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1ac17d5fc2dcdb00806cc83b02d9f940f3" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_v_chapter" kindref="compound">AVChapter</ref> **</type>
        <definition>AVChapter** AVFormatContext::chapters</definition>
        <argsstring></argsstring>
        <name>chapters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1277" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a3019a56080ed2e3297ff25bc2ff88adf" prot="public" static="no" mutable="no">
        <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> *</type>
        <definition>AVDictionary* AVFormatContext::metadata</definition>
        <argsstring></argsstring>
        <name>metadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Metadata that applies to the whole file.</para><para><itemizedlist>
<listitem><para>demuxing: set by libavformat in <ref refid="group__lavf__decoding_1ga10a404346c646e4ab58f4ed798baca32" kindref="member">avformat_open_input()</ref></para></listitem><listitem><para>muxing: may be set by the caller before <ref refid="group__lavf__encoding_1ga78d4e734fecb1d2385536e6dd5b7b9f5" kindref="member">avformat_write_header()</ref></para></listitem></itemizedlist>
</para><para>Freed by libavformat in <ref refid="group__lavf__core_1gac2990b13b68e831a408fce8e1d0d6445" kindref="member">avformat_free_context()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1287" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1aa5ddb5cee1df28f21739133f2e37f1c5" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t AVFormatContext::start_time_realtime</definition>
        <argsstring></argsstring>
        <name>start_time_realtime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start time of the stream in real world time, in microseconds since the Unix epoch (00:00 1st January 1970). That is, pts=0 in the stream was captured at this real world time. Muxing only, set by the caller before <ref refid="group__lavf__encoding_1ga78d4e734fecb1d2385536e6dd5b7b9f5" kindref="member">avformat_write_header()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1295" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a517e6b5dcada506a49ef413d4d8d477a" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::fps_probe_size</definition>
        <argsstring></argsstring>
        <name>fps_probe_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of frames used for determining the framerate in <ref refid="group__lavf__decoding_1gad42172e27cddafb81096939783b157bb" kindref="member">avformat_find_stream_info()</ref>. Demuxing only, set by the caller before <ref refid="group__lavf__decoding_1gad42172e27cddafb81096939783b157bb" kindref="member">avformat_find_stream_info()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1302" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1aeebb15a72d1503e641b633aeb3be0bf0" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::error_recognition</definition>
        <argsstring></argsstring>
        <name>error_recognition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error recognition; higher values will detect more errors but may misdetect some more or less valid parts as errors. Demuxing only, set by the caller before <ref refid="group__lavf__decoding_1ga10a404346c646e4ab58f4ed798baca32" kindref="member">avformat_open_input()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1309" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a5b37acfe4024d92ee510064e80920b40" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_v_i_o_interrupt_c_b" kindref="compound">AVIOInterruptCB</ref></type>
        <definition>AVIOInterruptCB AVFormatContext::interrupt_callback</definition>
        <argsstring></argsstring>
        <name>interrupt_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Custom interrupt callbacks for the I/O layer.</para><para>demuxing: set by the user before <ref refid="group__lavf__decoding_1ga10a404346c646e4ab58f4ed798baca32" kindref="member">avformat_open_input()</ref>. muxing: set by the user before <ref refid="group__lavf__encoding_1ga78d4e734fecb1d2385536e6dd5b7b9f5" kindref="member">avformat_write_header()</ref> (mainly useful for AVFMT_NOFILE formats). The callback should also be passed to <ref refid="avio_8h_1ade8a63980569494c99593ebf0d1e891b" kindref="member">avio_open2()</ref> if it&apos;s used to open the file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1320" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1ab4478e9742f661800cf7e0af84136cae" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::debug</definition>
        <argsstring></argsstring>
        <name>debug</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flags to enable debugging. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1325" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a00edb6b7a31f8dabfa668334ca1f92d7" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t AVFormatContext::max_interleave_delta</definition>
        <argsstring></argsstring>
        <name>max_interleave_delta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum buffering duration for interleaving.</para><para>To ensure all the streams are interleaved correctly, <ref refid="group__lavf__encoding_1ga37352ed2c63493c38219d935e71db6c1" kindref="member">av_interleaved_write_frame()</ref> will wait until it has at least one packet for each stream before actually writing any packets to the output file. When some streams are &quot;sparse&quot; (i.e. there are large gaps between successive packets), this can result in excessive buffering.</para><para>This field specifies the maximum difference between the timestamps of the first and the last packet in the muxing queue, above which libavformat will output a packet regardless of whether it has queued a packet for all the streams.</para><para>Muxing only, set by the caller before <ref refid="group__lavf__encoding_1ga78d4e734fecb1d2385536e6dd5b7b9f5" kindref="member">avformat_write_header()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1344" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a5d331e9a0609a93dd4593af6c118cc4b" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::ts_id</definition>
        <argsstring></argsstring>
        <name>ts_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transport stream id. This will be moved into demuxer private options. Thus no API/ABI compatibility </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1350" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1ac02383c2106cca8022f8a293399aed58" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::audio_preload</definition>
        <argsstring></argsstring>
        <name>audio_preload</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Audio preload in microseconds. Note, not all formats support this and unpredictable things may happen if it is used when not supported.<itemizedlist>
<listitem><para>encoding: Set by user via AVOptions (NO direct access)</para></listitem><listitem><para>decoding: unused </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1358" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1ae20c589e20f22f74f1687702de6d2e8e" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::max_chunk_duration</definition>
        <argsstring></argsstring>
        <name>max_chunk_duration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Max chunk time in microseconds. Note, not all formats support this and unpredictable things may happen if it is used when not supported.<itemizedlist>
<listitem><para>encoding: Set by user via AVOptions (NO direct access)</para></listitem><listitem><para>decoding: unused </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1366" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a3d8cfff712c81d1cbc725b40ce02f7e7" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::max_chunk_size</definition>
        <argsstring></argsstring>
        <name>max_chunk_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Max chunk size in bytes Note, not all formats support this and unpredictable things may happen if it is used when not supported.<itemizedlist>
<listitem><para>encoding: Set by user via AVOptions (NO direct access)</para></listitem><listitem><para>decoding: unused </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1374" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a90251622aa2b78badbb846274aff4633" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::use_wallclock_as_timestamps</definition>
        <argsstring></argsstring>
        <name>use_wallclock_as_timestamps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>forces the use of wallclock timestamps as pts/dts of packets This has undefined results in the presence of B frames.<itemizedlist>
<listitem><para>encoding: unused</para></listitem><listitem><para>decoding: Set by user via AVOptions (NO direct access) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1382" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a032c7d859883eddc9d87a9e3b2cc3853" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::avoid_negative_ts</definition>
        <argsstring></argsstring>
        <name>avoid_negative_ts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Avoid negative timestamps during muxing. 0 -&gt; allow negative timestamps 1 -&gt; avoid negative timestamps -1 -&gt; choose automatically (default) Note, this only works when interleave_packet_per_dts is in use.<itemizedlist>
<listitem><para>encoding: Set by user via AVOptions (NO direct access)</para></listitem><listitem><para>decoding: unused </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1393" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a5e6814c9de3c272396f07e2ff18c7b27" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::avio_flags</definition>
        <argsstring></argsstring>
        <name>avio_flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>avio flags, used to force AVIO_FLAG_DIRECT.<itemizedlist>
<listitem><para>encoding: unused</para></listitem><listitem><para>decoding: Set by user via AVOptions (NO direct access) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1400" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a95035552afae17c1b7cd701ad72e67b5" prot="public" static="no" mutable="no">
        <type>enum <ref refid="avformat_8h_1a7c2692ffa20d3e888e40e79eeda6d73b" kindref="member">AVDurationEstimationMethod</ref></type>
        <definition>enum AVDurationEstimationMethod AVFormatContext::duration_estimation_method</definition>
        <argsstring></argsstring>
        <name>duration_estimation_method</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The duration field can be estimated through various ways, and this field can be used to know how the duration was estimated.<itemizedlist>
<listitem><para>encoding: unused</para></listitem><listitem><para>decoding: Read by user via AVOptions (NO direct access) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1400" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a168eb984d75525d3d86065fdbc96ced2" prot="public" static="no" mutable="no">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int AVFormatContext::skip_initial_bytes</definition>
        <argsstring></argsstring>
        <name>skip_initial_bytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Skip initial bytes when opening stream<itemizedlist>
<listitem><para>encoding: unused</para></listitem><listitem><para>decoding: Set by user via AVOptions (NO direct access) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1415" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1afe4c7f02033d4b58b3636b9e42db25de" prot="public" static="no" mutable="no">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int AVFormatContext::correct_ts_overflow</definition>
        <argsstring></argsstring>
        <name>correct_ts_overflow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Correct single timestamp overflows<itemizedlist>
<listitem><para>encoding: unused</para></listitem><listitem><para>decoding: Set by user via AVOptions (NO direct access) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1422" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a41a1f108aa38e851f65ff4f0a70ce5a5" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::seek2any</definition>
        <argsstring></argsstring>
        <name>seek2any</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Force seeking to any (also non key) frames.<itemizedlist>
<listitem><para>encoding: unused</para></listitem><listitem><para>decoding: Set by user via AVOptions (NO direct access) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1429" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a1fdd77fff4c7df1e30ce1d42e10922e9" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::flush_packets</definition>
        <argsstring></argsstring>
        <name>flush_packets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flush the I/O context after each packet.<itemizedlist>
<listitem><para>encoding: Set by user via AVOptions (NO direct access)</para></listitem><listitem><para>decoding: unused </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1436" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a65f11f94f40f83866ebe651c8ae111cf" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::probe_score</definition>
        <argsstring></argsstring>
        <name>probe_score</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>format probing score. The maximal score is AVPROBE_SCORE_MAX, its set when the demuxer probes the format.<itemizedlist>
<listitem><para>encoding: unused</para></listitem><listitem><para>decoding: set by avformat, read by user via <ref refid="avformat_8h_1ad332941a01e30dd7d20a25f98dd69907" kindref="member">av_format_get_probe_score()</ref> (NO direct access) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1445" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1ae08f4cb8a9362e1701e2a511c820471a" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_a_v_packet_list" kindref="compound">AVPacketList</ref> *</type>
        <definition>struct AVPacketList* AVFormatContext::packet_buffer</definition>
        <argsstring></argsstring>
        <name>packet_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This buffer is only needed when packets were already buffered but not decoded, for example to get the codec parameters in MPEG streams. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1460" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a7d695eaac54a6de2dddc444a34d7ed05" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_a_v_packet_list" kindref="compound">AVPacketList</ref> *</type>
        <definition>struct AVPacketList* AVFormatContext::packet_buffer_end</definition>
        <argsstring></argsstring>
        <name>packet_buffer_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1461" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1ab39a854407abf72836e4653a982d5f2b" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t AVFormatContext::data_offset</definition>
        <argsstring></argsstring>
        <name>data_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>offset of the first packet </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1464" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a8ca5b3ff8a0e4e3523ebc3f320660e4c" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_a_v_packet_list" kindref="compound">AVPacketList</ref> *</type>
        <definition>struct AVPacketList* AVFormatContext::raw_packet_buffer</definition>
        <argsstring></argsstring>
        <name>raw_packet_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raw packets from the demuxer, prior to parsing and decoding. This buffer is used for buffering packets until the codec can be identified, as parsing cannot be done without knowing the codec. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1472" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a88d15460d48097522af38525fbfc2f21" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_a_v_packet_list" kindref="compound">AVPacketList</ref> *</type>
        <definition>struct AVPacketList* AVFormatContext::raw_packet_buffer_end</definition>
        <argsstring></argsstring>
        <name>raw_packet_buffer_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1473" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1acfa90f811da6e2727288e04c88eb102a" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_a_v_packet_list" kindref="compound">AVPacketList</ref> *</type>
        <definition>struct AVPacketList* AVFormatContext::parse_queue</definition>
        <argsstring></argsstring>
        <name>parse_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Packets split by the parser get queued here. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1477" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a756b1fa44fb1b8e2adf0594f7e0d4ab1" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_a_v_packet_list" kindref="compound">AVPacketList</ref> *</type>
        <definition>struct AVPacketList* AVFormatContext::parse_queue_end</definition>
        <argsstring></argsstring>
        <name>parse_queue_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1478" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a26c2db682c45c75d22246ef66e9fe838" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::raw_packet_buffer_remaining_size</definition>
        <argsstring></argsstring>
        <name>raw_packet_buffer_remaining_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1483" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1af5376f05f8adb610e57095b4b0705512" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t AVFormatContext::offset</definition>
        <argsstring></argsstring>
        <name>offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Offset to remap timestamps to be non-negative. Expressed in timebase units. <simplesect kind="see"><para><ref refid="struct_a_v_stream_1ae0598c5dc8ff45ac6cb56a7a23847a37" kindref="member">AVStream.mux_ts_offset</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1490" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1ad8f1cdcd2d3193d962c1834835d790c6" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
        <definition>AVRational AVFormatContext::offset_timebase</definition>
        <argsstring></argsstring>
        <name>offset_timebase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timebase for the timestamp offset. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1495" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a8a8bec51da36db65ff864f88a85805d9" prot="public" static="no" mutable="no">
        <type><ref refid="avformat_8h_1a7bec8d592652431045d81a02fef74f28" kindref="member">AVFormatInternal</ref> *</type>
        <definition>AVFormatInternal* AVFormatContext::internal</definition>
        <argsstring></argsstring>
        <name>internal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An opaque field for libavformat internal usage. Must not be accessed in any way by callers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1501" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a45afe89c377463a1b9446ac94b3c513b" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::io_repositioned</definition>
        <argsstring></argsstring>
        <name>io_repositioned</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IO repositioned flag. This is set by avformat when the underlaying IO context read pointer is repositioned, for example when doing byte based seeking. Demuxers can use the flag to detect such changes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1509" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a1891d82f7f853a16ebcba7cae939c4f0" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_v_codec" kindref="compound">AVCodec</ref> *</type>
        <definition>AVCodec* AVFormatContext::video_codec</definition>
        <argsstring></argsstring>
        <name>video_codec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forced video codec. This allows forcing a specific decoder, even when there are multiple with the same codec_id. Demuxing: Set by user via av_format_set_video_codec (NO direct access). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1517" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1ab73f76ceac8ed711c56decc2d64456f0" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_v_codec" kindref="compound">AVCodec</ref> *</type>
        <definition>AVCodec* AVFormatContext::audio_codec</definition>
        <argsstring></argsstring>
        <name>audio_codec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forced audio codec. This allows forcing a specific decoder, even when there are multiple with the same codec_id. Demuxing: Set by user via av_format_set_audio_codec (NO direct access). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1525" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a9cc6a317755fa4f65b0bab36bcb18c87" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_v_codec" kindref="compound">AVCodec</ref> *</type>
        <definition>AVCodec* AVFormatContext::subtitle_codec</definition>
        <argsstring></argsstring>
        <name>subtitle_codec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forced subtitle codec. This allows forcing a specific decoder, even when there are multiple with the same codec_id. Demuxing: Set by user via av_format_set_subtitle_codec (NO direct access). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1533" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a6fc5a51cf62b6e8ad379c1ac57d4a0c4" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFormatContext::metadata_header_padding</definition>
        <argsstring></argsstring>
        <name>metadata_header_padding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of bytes to be written as padding in a metadata header. Demuxing: Unused. Muxing: Set by user via av_format_set_metadata_header_padding. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1540" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a71797838db59ca0682dd2d18b149134e" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>void* AVFormatContext::opaque</definition>
        <argsstring></argsstring>
        <name>opaque</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>User data. This is a place for some private data of the user. Mostly usable with control_message_cb or any future callbacks in device&apos;s context. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1547" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1ab569e23a4966ca1f708fb498dd6b3d5f" prot="public" static="no" mutable="no">
        <type><ref refid="avformat_8h_1a80856b99bcf4373936fb4fba028b11ca" kindref="member">av_format_control_message</ref></type>
        <definition>av_format_control_message AVFormatContext::control_message_cb</definition>
        <argsstring></argsstring>
        <name>control_message_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_callback" kindref="compound">Callback</ref> used by devices to communicate with application. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1552" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_format_context_1a711dc3e6159c44dc31843f915b893a12" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t AVFormatContext::output_ts_offset</definition>
        <argsstring></argsstring>
        <name>output_ts_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Output timestamp offset, in microseconds. Muxing: set by user via AVOptions (NO direct access) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1558" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1558" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_format" kindref="compound">Format</ref> I/O context. New fields can be added to the end with minor version bumps. Removal, reordering and changes to existing fields require a major version bump. sizeof(AVFormatContext) must not be used outside libav*, use <ref refid="group__lavf__core_1gac7a91abf2f59648d995894711f070f62" kindref="member">avformat_alloc_context()</ref> to create an <ref refid="struct_a_v_format_context" kindref="compound">AVFormatContext</ref>. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="1232">
        <label>AVFrac</label>
        <link refid="struct_a_v_frac"/>
      </node>
      <node id="1221">
        <label>AVCodecParser</label>
        <link refid="struct_a_v_codec_parser"/>
        <childnode refid="1221" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="1217">
        <label>AVProgram</label>
        <link refid="struct_a_v_program"/>
      </node>
      <node id="1224">
        <label>AVHWAccel</label>
        <link refid="struct_a_v_h_w_accel"/>
        <childnode refid="1224" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="1212">
        <label>AVBufferRef</label>
        <link refid="struct_a_v_buffer_ref"/>
      </node>
      <node id="1216">
        <label>AVChapter</label>
        <link refid="struct_a_v_chapter"/>
        <childnode refid="1209" relation="usage">
          <edgelabel>time_base</edgelabel>
        </childnode>
      </node>
      <node id="1220">
        <label>AVCodecParserContext</label>
        <link refid="struct_a_v_codec_parser_context"/>
        <childnode refid="1221" relation="usage">
          <edgelabel>parser</edgelabel>
        </childnode>
      </node>
      <node id="1230">
        <label>AVCodec</label>
        <link refid="struct_a_v_codec"/>
        <childnode refid="1231" relation="usage">
          <edgelabel>profiles</edgelabel>
        </childnode>
        <childnode refid="1207" relation="usage">
          <edgelabel>priv_class</edgelabel>
        </childnode>
        <childnode refid="1209" relation="usage">
          <edgelabel>supported_framerates</edgelabel>
        </childnode>
        <childnode refid="1230" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="1218">
        <label>AVStream</label>
        <link refid="struct_a_v_stream"/>
        <childnode refid="1211" relation="usage">
          <edgelabel>attached_pic</edgelabel>
        </childnode>
        <childnode refid="1209" relation="usage">
          <edgelabel>r_frame_rate</edgelabel>
          <edgelabel>sample_aspect_ratio</edgelabel>
          <edgelabel>avg_frame_rate</edgelabel>
          <edgelabel>time_base</edgelabel>
        </childnode>
        <childnode refid="1219" relation="usage">
          <edgelabel>probe_data</edgelabel>
        </childnode>
        <childnode refid="1210" relation="usage">
          <edgelabel>last_in_packet_buffer</edgelabel>
        </childnode>
        <childnode refid="1220" relation="usage">
          <edgelabel>parser</edgelabel>
        </childnode>
        <childnode refid="1222" relation="usage">
          <edgelabel>index_entries</edgelabel>
        </childnode>
        <childnode refid="1223" relation="usage">
          <edgelabel>codec</edgelabel>
        </childnode>
        <childnode refid="1232" relation="usage">
          <edgelabel>pts</edgelabel>
        </childnode>
      </node>
      <node id="1211">
        <label>AVPacket</label>
        <link refid="struct_a_v_packet"/>
        <childnode refid="1212" relation="usage">
          <edgelabel>buf</edgelabel>
        </childnode>
      </node>
      <node id="1215">
        <label>AVInputFormat</label>
        <link refid="struct_a_v_input_format"/>
        <childnode refid="1207" relation="usage">
          <edgelabel>priv_class</edgelabel>
        </childnode>
        <childnode refid="1215" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="1226">
        <label>AVFrameSideData</label>
        <link refid="struct_a_v_frame_side_data"/>
      </node>
      <node id="1209">
        <label>AVRational</label>
        <link refid="struct_a_v_rational"/>
      </node>
      <node id="1207">
        <label>AVClass</label>
        <link refid="struct_a_v_class"/>
        <childnode refid="1207" relation="usage">
          <edgelabel>child_class_next</edgelabel>
        </childnode>
        <childnode refid="1208" relation="usage">
          <edgelabel>option</edgelabel>
        </childnode>
      </node>
      <node id="1228">
        <label>AVCodecDescriptor</label>
        <link refid="struct_a_v_codec_descriptor"/>
      </node>
      <node id="1225">
        <label>AVFrame</label>
        <link refid="struct_a_v_frame"/>
        <childnode refid="1226" relation="usage">
          <edgelabel>side_data</edgelabel>
        </childnode>
        <childnode refid="1209" relation="usage">
          <edgelabel>sample_aspect_ratio</edgelabel>
        </childnode>
        <childnode refid="1227" relation="usage">
          <edgelabel>pan_scan</edgelabel>
        </childnode>
        <childnode refid="1212" relation="usage">
          <edgelabel>qp_table_buf</edgelabel>
          <edgelabel>extended_buf</edgelabel>
          <edgelabel>buf</edgelabel>
        </childnode>
        <childnode refid="1223" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
      <node id="1205">
        <label>AVFormatContext</label>
        <link refid="struct_a_v_format_context"/>
        <childnode refid="1206" relation="usage">
          <edgelabel>oformat</edgelabel>
        </childnode>
        <childnode refid="1209" relation="usage">
          <edgelabel>offset_timebase</edgelabel>
        </childnode>
        <childnode refid="1207" relation="usage">
          <edgelabel>av_class</edgelabel>
        </childnode>
        <childnode refid="1210" relation="usage">
          <edgelabel>raw_packet_buffer_end</edgelabel>
          <edgelabel>raw_packet_buffer</edgelabel>
          <edgelabel>parse_queue_end</edgelabel>
          <edgelabel>packet_buffer</edgelabel>
          <edgelabel>parse_queue</edgelabel>
          <edgelabel>packet_buffer_end</edgelabel>
        </childnode>
        <childnode refid="1213" relation="usage">
          <edgelabel>interrupt_callback</edgelabel>
        </childnode>
        <childnode refid="1214" relation="usage">
          <edgelabel>pb</edgelabel>
        </childnode>
        <childnode refid="1215" relation="usage">
          <edgelabel>iformat</edgelabel>
        </childnode>
        <childnode refid="1216" relation="usage">
          <edgelabel>chapters</edgelabel>
        </childnode>
        <childnode refid="1217" relation="usage">
          <edgelabel>programs</edgelabel>
        </childnode>
        <childnode refid="1205" relation="usage">
          <edgelabel>control_message_cb</edgelabel>
        </childnode>
        <childnode refid="1218" relation="usage">
          <edgelabel>streams</edgelabel>
        </childnode>
        <childnode refid="1230" relation="usage">
          <edgelabel>audio_codec</edgelabel>
          <edgelabel>subtitle_codec</edgelabel>
          <edgelabel>video_codec</edgelabel>
        </childnode>
      </node>
      <node id="1214">
        <label>AVIOContext</label>
        <link refid="struct_a_v_i_o_context"/>
        <childnode refid="1207" relation="usage">
          <edgelabel>av_class</edgelabel>
        </childnode>
      </node>
      <node id="1213">
        <label>AVIOInterruptCB</label>
        <link refid="struct_a_v_i_o_interrupt_c_b"/>
      </node>
      <node id="1219">
        <label>AVProbeData</label>
        <link refid="struct_a_v_probe_data"/>
      </node>
      <node id="1223">
        <label>AVCodecContext</label>
        <link refid="struct_a_v_codec_context"/>
        <childnode refid="1211" relation="usage">
          <edgelabel>pkt</edgelabel>
        </childnode>
        <childnode refid="1209" relation="usage">
          <edgelabel>sample_aspect_ratio</edgelabel>
          <edgelabel>pkt_timebase</edgelabel>
          <edgelabel>time_base</edgelabel>
        </childnode>
        <childnode refid="1207" relation="usage">
          <edgelabel>av_class</edgelabel>
        </childnode>
        <childnode refid="1224" relation="usage">
          <edgelabel>hwaccel</edgelabel>
        </childnode>
        <childnode refid="1225" relation="usage">
          <edgelabel>coded_frame</edgelabel>
        </childnode>
        <childnode refid="1228" relation="usage">
          <edgelabel>codec_descriptor</edgelabel>
        </childnode>
        <childnode refid="1229" relation="usage">
          <edgelabel>rc_override</edgelabel>
        </childnode>
        <childnode refid="1230" relation="usage">
          <edgelabel>codec</edgelabel>
        </childnode>
      </node>
      <node id="1227">
        <label>AVPanScan</label>
        <link refid="struct_a_v_pan_scan"/>
      </node>
      <node id="1229">
        <label>RcOverride</label>
        <link refid="struct_rc_override"/>
      </node>
      <node id="1222">
        <label>AVIndexEntry</label>
        <link refid="struct_a_v_index_entry"/>
      </node>
      <node id="1231">
        <label>AVProfile</label>
        <link refid="struct_a_v_profile"/>
      </node>
      <node id="1206">
        <label>AVOutputFormat</label>
        <link refid="struct_a_v_output_format"/>
        <childnode refid="1206" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="1207" relation="usage">
          <edgelabel>priv_class</edgelabel>
        </childnode>
      </node>
      <node id="1208">
        <label>AVOption</label>
        <link refid="struct_a_v_option"/>
        <childnode refid="1209" relation="usage">
          <edgelabel>q</edgelabel>
        </childnode>
      </node>
      <node id="1210">
        <label>AVPacketList</label>
        <link refid="struct_a_v_packet_list"/>
        <childnode refid="1211" relation="usage">
          <edgelabel>pkt</edgelabel>
        </childnode>
        <childnode refid="1210" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1090" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="1090" bodyend="1559"/>
    <listofallmembers>
      <member refid="struct_a_v_format_context_1ab73f76ceac8ed711c56decc2d64456f0" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>audio_codec</name></member>
      <member refid="struct_a_v_format_context_1a1c99fc118bf047959a0284bffc2c1a9a" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>audio_codec_id</name></member>
      <member refid="struct_a_v_format_context_1ac02383c2106cca8022f8a293399aed58" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>audio_preload</name></member>
      <member refid="struct_a_v_format_context_1a0c396740b9a2487aa57d4352d2dc1687" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>av_class</name></member>
      <member refid="struct_a_v_format_context_1a5e6814c9de3c272396f07e2ff18c7b27" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>avio_flags</name></member>
      <member refid="struct_a_v_format_context_1a032c7d859883eddc9d87a9e3b2cc3853" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>avoid_negative_ts</name></member>
      <member refid="struct_a_v_format_context_1a4f7a7b9b1313907c88e62b03f3e569e6" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>bit_rate</name></member>
      <member refid="struct_a_v_format_context_1ac17d5fc2dcdb00806cc83b02d9f940f3" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>chapters</name></member>
      <member refid="struct_a_v_format_context_1ab569e23a4966ca1f708fb498dd6b3d5f" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>control_message_cb</name></member>
      <member refid="struct_a_v_format_context_1afe4c7f02033d4b58b3636b9e42db25de" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>correct_ts_overflow</name></member>
      <member refid="struct_a_v_format_context_1a4e6076343df1ffc2e16cedbba3f3f397" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>ctx_flags</name></member>
      <member refid="struct_a_v_format_context_1ab39a854407abf72836e4653a982d5f2b" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>data_offset</name></member>
      <member refid="struct_a_v_format_context_1ab4478e9742f661800cf7e0af84136cae" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>debug</name></member>
      <member refid="struct_a_v_format_context_1ad0ea78ac48f5bb0a15a15c1c472744d9" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>duration</name></member>
      <member refid="struct_a_v_format_context_1a95035552afae17c1b7cd701ad72e67b5" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>duration_estimation_method</name></member>
      <member refid="struct_a_v_format_context_1aeebb15a72d1503e641b633aeb3be0bf0" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>error_recognition</name></member>
      <member refid="struct_a_v_format_context_1a65a978cf0ca3c0f0da52840d2e97f9ea" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>filename</name></member>
      <member refid="struct_a_v_format_context_1a32379cc371463b235d54235d4af06a15" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>flags</name></member>
      <member refid="struct_a_v_format_context_1a1fdd77fff4c7df1e30ce1d42e10922e9" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>flush_packets</name></member>
      <member refid="struct_a_v_format_context_1a517e6b5dcada506a49ef413d4d8d477a" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>fps_probe_size</name></member>
      <member refid="struct_a_v_format_context_1a78efc5a53c21c8d81197445207ac4374" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>iformat</name></member>
      <member refid="struct_a_v_format_context_1a8a8bec51da36db65ff864f88a85805d9" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>internal</name></member>
      <member refid="struct_a_v_format_context_1a5b37acfe4024d92ee510064e80920b40" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>interrupt_callback</name></member>
      <member refid="struct_a_v_format_context_1a45afe89c377463a1b9446ac94b3c513b" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>io_repositioned</name></member>
      <member refid="struct_a_v_format_context_1a19cb4471ba011fc7adc5e17344c608f5" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>key</name></member>
      <member refid="struct_a_v_format_context_1a1f2c1db3070cc100938eaed81ff3767d" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>keylen</name></member>
      <member refid="struct_a_v_format_context_1aa1f733fdfa1655d9e6ccc80f6b926274" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>max_analyze_duration</name></member>
      <member refid="struct_a_v_format_context_1ae20c589e20f22f74f1687702de6d2e8e" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>max_chunk_duration</name></member>
      <member refid="struct_a_v_format_context_1a3d8cfff712c81d1cbc725b40ce02f7e7" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>max_chunk_size</name></member>
      <member refid="struct_a_v_format_context_1a58422ed3d461b3440a15cf057ac5f5b7" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>max_delay</name></member>
      <member refid="struct_a_v_format_context_1ab0470d586a71d4f356194d202591617d" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>max_index_size</name></member>
      <member refid="struct_a_v_format_context_1a00edb6b7a31f8dabfa668334ca1f92d7" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>max_interleave_delta</name></member>
      <member refid="struct_a_v_format_context_1ae188350a3838a14a233bf272d68998be" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>max_picture_buffer</name></member>
      <member refid="struct_a_v_format_context_1a3019a56080ed2e3297ff25bc2ff88adf" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>metadata</name></member>
      <member refid="struct_a_v_format_context_1a6fc5a51cf62b6e8ad379c1ac57d4a0c4" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>metadata_header_padding</name></member>
      <member refid="struct_a_v_format_context_1a6f60043baf4abd0d201ccefc27bb4306" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>nb_chapters</name></member>
      <member refid="struct_a_v_format_context_1a58c8c4d0ea974e0fcb0ce06fb1174f9f" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>nb_programs</name></member>
      <member refid="struct_a_v_format_context_1a0b748d924898b08b89ff4974afd17285" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>nb_streams</name></member>
      <member refid="struct_a_v_format_context_1af5376f05f8adb610e57095b4b0705512" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>offset</name></member>
      <member refid="struct_a_v_format_context_1ad8f1cdcd2d3193d962c1834835d790c6" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>offset_timebase</name></member>
      <member refid="struct_a_v_format_context_1a20d80ac07e38ff5c268d15aaf2798b98" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>oformat</name></member>
      <member refid="struct_a_v_format_context_1a71797838db59ca0682dd2d18b149134e" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>opaque</name></member>
      <member refid="struct_a_v_format_context_1a711dc3e6159c44dc31843f915b893a12" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>output_ts_offset</name></member>
      <member refid="struct_a_v_format_context_1ae08f4cb8a9362e1701e2a511c820471a" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>packet_buffer</name></member>
      <member refid="struct_a_v_format_context_1a7d695eaac54a6de2dddc444a34d7ed05" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>packet_buffer_end</name></member>
      <member refid="struct_a_v_format_context_1a0739c2952969d3c67788f02ea829f549" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>packet_size</name></member>
      <member refid="struct_a_v_format_context_1acfa90f811da6e2727288e04c88eb102a" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>parse_queue</name></member>
      <member refid="struct_a_v_format_context_1a756b1fa44fb1b8e2adf0594f7e0d4ab1" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>parse_queue_end</name></member>
      <member refid="struct_a_v_format_context_1a1e7324262b6b78522e52064daaa7bc87" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>pb</name></member>
      <member refid="struct_a_v_format_context_1ac4c0777e54085af2f3f1b27130e2b21b" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>priv_data</name></member>
      <member refid="struct_a_v_format_context_1a65f11f94f40f83866ebe651c8ae111cf" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>probe_score</name></member>
      <member refid="struct_a_v_format_context_1afcff2757459cf56050b2d908f46957b0" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>probesize</name></member>
      <member refid="struct_a_v_format_context_1a4c2c5a4c758966349ff513e95154d062" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>programs</name></member>
      <member refid="struct_a_v_format_context_1a8ca5b3ff8a0e4e3523ebc3f320660e4c" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>raw_packet_buffer</name></member>
      <member refid="struct_a_v_format_context_1a88d15460d48097522af38525fbfc2f21" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>raw_packet_buffer_end</name></member>
      <member refid="struct_a_v_format_context_1a26c2db682c45c75d22246ef66e9fe838" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>raw_packet_buffer_remaining_size</name></member>
      <member refid="struct_a_v_format_context_1a41a1f108aa38e851f65ff4f0a70ce5a5" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>seek2any</name></member>
      <member refid="struct_a_v_format_context_1a168eb984d75525d3d86065fdbc96ced2" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>skip_initial_bytes</name></member>
      <member refid="struct_a_v_format_context_1a2590129e00adfa726ab2033a10e905e9" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>start_time</name></member>
      <member refid="struct_a_v_format_context_1aa5ddb5cee1df28f21739133f2e37f1c5" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>start_time_realtime</name></member>
      <member refid="struct_a_v_format_context_1acfefb6b6cf21e87a0dcbd1a547ba2348" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>streams</name></member>
      <member refid="struct_a_v_format_context_1a9cc6a317755fa4f65b0bab36bcb18c87" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>subtitle_codec</name></member>
      <member refid="struct_a_v_format_context_1acca61846d663b15e5a56b35c903e4d3b" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>subtitle_codec_id</name></member>
      <member refid="struct_a_v_format_context_1a5d331e9a0609a93dd4593af6c118cc4b" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>ts_id</name></member>
      <member refid="struct_a_v_format_context_1a90251622aa2b78badbb846274aff4633" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>use_wallclock_as_timestamps</name></member>
      <member refid="struct_a_v_format_context_1a1891d82f7f853a16ebcba7cae939c4f0" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>video_codec</name></member>
      <member refid="struct_a_v_format_context_1ab179ade0dbe905ab2867b7001bf618ec" prot="public" virt="non-virtual"><scope>AVFormatContext</scope><name>video_codec_id</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
