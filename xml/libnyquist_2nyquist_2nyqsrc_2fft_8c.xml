<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="libnyquist_2nyquist_2nyqsrc_2fft_8c" kind="file" language="C++">
    <compoundname>fft.c</compoundname>
    <includes local="no">math.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="yes">stdlib.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <includes refid="falloc_8h" local="yes">falloc.h</includes>
    <includes refid="lib-src_2libnyquist_2nyquist_2nyqsrc_2fft_8h" local="yes">fft.h</includes>
    <includes refid="fftext_8h" local="yes">fftext.h</includes>
    <incdepgraph>
      <node id="12401">
        <label>stdlib.h</label>
      </node>
      <node id="12404">
        <label>setjmp.h</label>
      </node>
      <node id="12413">
        <label>falloc.h</label>
        <link refid="falloc_8h"/>
        <childnode refid="12414" relation="include">
        </childnode>
        <childnode refid="12415" relation="include">
        </childnode>
      </node>
      <node id="12402">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="12401" relation="include">
        </childnode>
        <childnode refid="12400" relation="include">
        </childnode>
        <childnode refid="12403" relation="include">
        </childnode>
        <childnode refid="12404" relation="include">
        </childnode>
        <childnode refid="12405" relation="include">
        </childnode>
      </node>
      <node id="12398">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c</label>
        <link refid="libnyquist/nyquist/nyqsrc/fft.c"/>
        <childnode refid="12399" relation="include">
        </childnode>
        <childnode refid="12400" relation="include">
        </childnode>
        <childnode refid="12401" relation="include">
        </childnode>
        <childnode refid="12402" relation="include">
        </childnode>
        <childnode refid="12406" relation="include">
        </childnode>
        <childnode refid="12413" relation="include">
        </childnode>
        <childnode refid="12416" relation="include">
        </childnode>
        <childnode refid="12417" relation="include">
        </childnode>
      </node>
      <node id="12412">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="12416">
        <label>fft.h</label>
        <link refid="lib-src_2libnyquist_2nyquist_2nyqsrc_2fft_8h"/>
      </node>
      <node id="12411">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="12410">
        <label>string.h</label>
      </node>
      <node id="12417">
        <label>fftext.h</label>
        <link refid="fftext_8h"/>
      </node>
      <node id="12414">
        <label>cque.h</label>
        <link refid="cque_8h"/>
      </node>
      <node id="12406">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="12399" relation="include">
        </childnode>
        <childnode refid="12407" relation="include">
        </childnode>
      </node>
      <node id="12399">
        <label>math.h</label>
      </node>
      <node id="12409">
        <label>switches.h</label>
      </node>
      <node id="12407">
        <label>stdefs.h</label>
        <link refid="stdefs_8h"/>
        <childnode refid="12408" relation="include">
        </childnode>
      </node>
      <node id="12405">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="12403">
        <label>ctype.h</label>
      </node>
      <node id="12415">
        <label>debug.h</label>
        <link refid="libnyquist_2nyquist_2nyqsrc_2debug_8h"/>
      </node>
      <node id="12400">
        <label>stdio.h</label>
      </node>
      <node id="12408">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="12409" relation="include">
        </childnode>
        <childnode refid="12400" relation="include">
        </childnode>
        <childnode refid="12410" relation="include">
        </childnode>
        <childnode refid="12399" relation="include">
        </childnode>
        <childnode refid="12411" relation="include">
        </childnode>
        <childnode refid="12412" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="libnyquist_2nyquist_2nyqsrc_2fft_8c_1a525335710b53cb064ca56b936120431e" prot="public" static="no">
        <name>_USE_MATH_DEFINES</name>
        <initializer>1 /* <ref refid="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" kindref="member">for</ref> Visual C++ to get <ref refid="vr32_8c_1a92428112a5d24721208748774a4f23e6" kindref="member">M_LN2</ref> */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" line="3" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libnyquist_2nyquist_2nyqsrc_2fft_8c_1a6a4288add566c8d9c96f7cb0dc661c66" prot="public" static="no">
        <name>CNT</name>
        <initializer>extra[1]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" line="51" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libnyquist_2nyquist_2nyqsrc_2fft_8c_1ac6885dbfb371c33e523c7fb046118b36" prot="public" static="no">
        <name>INDEX</name>
        <initializer>extra[2]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" line="52" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libnyquist_2nyquist_2nyqsrc_2fft_8c_1a37dfe203b33a1b857120715d29cd27fb" prot="public" static="no">
        <name>FILLCNT</name>
        <initializer>extra[3]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" line="53" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libnyquist_2nyquist_2nyqsrc_2fft_8c_1aab6fbf001c84b54391c733af2b9a457f" prot="public" static="no">
        <name>TERMCNT</name>
        <initializer>extra[4]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" line="54" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libnyquist_2nyquist_2nyqsrc_2fft_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" prot="public" static="no">
        <name>OFFSET</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" line="55" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libnyquist_2nyquist_2nyqsrc_2fft_8c_1ad0c329adebc27917fc0a4f51079acf6a" prot="public" static="no">
        <name>SAMPLES</name>
        <initializer>list-&gt;<ref refid="structblock" kindref="compound">block</ref>-&gt;<ref refid="test__w__saw8_8c_1a54185623a5a093f671a73e5fba6197a1" kindref="member">samples</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" line="56" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="libnyquist_2nyquist_2nyqsrc_2fft_8c_1aabfcdb317486216a015fc182e1acb6bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void n_samples_from_sound</definition>
        <argsstring>(sound_type s, long n, float *table)</argsstring>
        <name>n_samples_from_sound</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" bodystart="70" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="libnyquist_2nyquist_2nyqsrc_2fft_8c_1af6f7bb028a1f94f854488f015cf354d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL snd_fft</definition>
        <argsstring>(sound_type s, long len, long step, LVAL winval)</argsstring>
        <name>snd_fft</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len</declname>
        </param>
        <param>
          <type>long</type>
          <declname>step</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>winval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c" bodystart="89" bodyend="232"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>fft.c<sp/>--<sp/>implement<sp/>snd_fft<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1a525335710b53cb064ca56b936120431e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_USE_MATH_DEFINES<sp/>1<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>Visual<sp/>C++<sp/>to<sp/>get<sp/>M_LN2<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>mips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sound_8h" kindref="compound">sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="falloc_8h" kindref="compound">falloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lib-src_2libnyquist_2nyquist_2nyqsrc_2fft_8h" kindref="compound">fft.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fftext_8h" kindref="compound">fftext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CHANGE<sp/>LOG</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>28Apr03<sp/><sp/>dm<sp/><sp/>change<sp/>for<sp/>portability:<sp/>min-&gt;MIN</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>this<sp/>code<sp/>does<sp/>not<sp/>properly<sp/>handle<sp/>start<sp/>times<sp/>that<sp/>do<sp/>not</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>correspond<sp/>to<sp/>the<sp/>time<sp/>of<sp/>the<sp/>first<sp/>actual<sp/>sample</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>snd_fft<sp/>function<sp/>is<sp/>based<sp/>on<sp/>snd_fetch_array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>storage<sp/>layout:<sp/>the<sp/>extra<sp/>field<sp/>points<sp/>to<sp/>extra<sp/>state<sp/>that<sp/>we&apos;ll<sp/>use</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>extra[0]<sp/>-&gt;<sp/>length<sp/>of<sp/>extra<sp/>storage</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>extra[1]<sp/>-&gt;<sp/>CNT<sp/>(number<sp/>of<sp/>samples<sp/>in<sp/>current<sp/>block)</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>extra[2]<sp/>-&gt;<sp/>INDEX<sp/>(current<sp/>sample<sp/>index<sp/>in<sp/>current<sp/>block)</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>extra[3]<sp/>-&gt;<sp/>FILLCNT<sp/>(how<sp/>many<sp/>samples<sp/>in<sp/>buffer)</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>extra[4]<sp/>-&gt;<sp/>TERMCNT<sp/>(how<sp/>many<sp/>samples<sp/>until<sp/>termination)</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>extra[5<sp/>..<sp/>5+len-1]<sp/>-&gt;<sp/>samples<sp/>(stored<sp/>as<sp/>floats)</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>extra[5+len<sp/>..<sp/>5+2*len-1]<sp/>-&gt;<sp/>array<sp/>of<sp/>samples<sp/>to<sp/>fft</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>extra[5+2*len<sp/>...<sp/>5+3*len-1]<sp/>-&gt;<sp/>window<sp/>coefficients</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>Termination<sp/>details:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Return<sp/>NIL<sp/>when<sp/>the<sp/>sound<sp/>terminates.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Termination<sp/>is<sp/>defined<sp/>as<sp/>the<sp/>point<sp/>where<sp/>all<sp/>original</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>signal<sp/>samples<sp/>have<sp/>been<sp/>shifted<sp/>out<sp/>of<sp/>the<sp/>samples<sp/>buffer</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>so<sp/>that<sp/>all<sp/>that&apos;s<sp/>left<sp/>are<sp/>zeros<sp/>from<sp/>beyond<sp/>the<sp/>termination</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>point.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Implementation:<sp/>when<sp/>termination<sp/>is<sp/>discovered,<sp/>set<sp/>TERMCNT</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>to<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>to<sp/>be<sp/>shifted<sp/>out.<sp/>TERMCNT<sp/>is<sp/>initially</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>-1<sp/>as<sp/>a<sp/>flag<sp/>that<sp/>we<sp/>haven&apos;t<sp/>seen<sp/>the<sp/>termination<sp/>yet.<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>Each<sp/>time<sp/>samples<sp/>are<sp/>shifted,<sp/>decrement<sp/>TERMCNT<sp/>by<sp/>the<sp/>shift<sp/>amount.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>When<sp/>TERMCNT<sp/>goes<sp/>to<sp/>zero,<sp/>return<sp/>NULL.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1a6a4288add566c8d9c96f7cb0dc661c66" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNT<sp/>extra[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1ac6885dbfb371c33e523c7fb046118b36" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INDEX<sp/>extra[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1a37dfe203b33a1b857120715d29cd27fb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FILLCNT<sp/>extra[3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1aab6fbf001c84b54391c733af2b9a457f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TERMCNT<sp/>extra[4]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OFFSET<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1ad0c329adebc27917fc0a4f51079acf6a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAMPLES<sp/>list-&gt;block-&gt;samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DEBUGGING<sp/>PRINT<sp/>FUNCTION:</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/>void<sp/>printfloats(char<sp/>*caption,<sp/>float<sp/>*data,<sp/>int<sp/>len)</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>i;</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;%s:<sp/>&quot;,<sp/>caption);</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;%d:%g<sp/>&quot;,<sp/>i,<sp/>data[i]);</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;\n&quot;);</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1aabfcdb317486216a015fc182e1acb6bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1aabfcdb317486216a015fc182e1acb6bd" kindref="member">n_samples_from_sound</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*table)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>blocklen;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>scale_factor<sp/>=<sp/>s-&gt;<ref refid="structsound__struct_1a7531e5d5bc141fa994e5d787bb2dea01" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="sound_8c_1ad56b2f689f0d4897c4d2c79356d6102d" kindref="member">sound_copy</ref>(s);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>sampblock<sp/>=<sp/><ref refid="sound_8h_1ad30a7d8107577d30a6ecbfc322f2220c" kindref="member">sound_get_next</ref>(s,<sp/>&amp;blocklen);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>togo<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(blocklen,<sp/>n);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>sbufp<sp/>=<sp/>sampblock-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>togo;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*table++<sp/>=<sp/>(float)<sp/>(*sbufp++<sp/>*<sp/>scale_factor);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>-=<sp/>togo;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a6160c7ed8621e6ca60d9c0875cd25f9f" kindref="member">sound_unref</ref>(s);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="lib-src_2libnyquist_2nyquist_2nyqsrc_2fft_8h_1a9c49dd9f5bf37d21ccc38dc5219c3f6f" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1af6f7bb028a1f94f854488f015cf354d9" kindref="member">snd_fft</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>step,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>winval)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>,<sp/>maxlen,<sp/>skip,<sp/>fillptr;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*temp_fft;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*window;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>result;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*float_base;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>1)<sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;len<sp/>&lt;<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>the<sp/>first<sp/>call,<sp/>so<sp/>fix<sp/>up<sp/>s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>w<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long)<sp/>*<sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" kindref="member">OFFSET</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>3<sp/>*<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(winval)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sound_8c_1a648e09ad8e5937bdcec6c10ddaac4738" kindref="member">soundp</ref>(winval))<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/><ref refid="sound_8h_1aa309e04f7a0ff565a69f56d34fd6f899" kindref="member">getsound</ref>(winval);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;expected<sp/>a<sp/>sound&quot;</highlight><highlight class="normal">,<sp/>winval);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>any<sp/>storage<sp/>required<sp/>by<sp/>fft<sp/>must<sp/>be<sp/>allocated<sp/>here<sp/>in<sp/>a<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>contiguous<sp/>block<sp/>of<sp/>memory<sp/>whose<sp/>size<sp/>is<sp/>given<sp/>by<sp/>the<sp/>first<sp/>long</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>the<sp/>block.<sp/>Here,<sp/>there<sp/>are<sp/>4<sp/>more<sp/>longs<sp/>after<sp/>the<sp/>size,<sp/>and<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>then<sp/>room<sp/>for<sp/>3*len<sp/>floats</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>reason<sp/>for<sp/>3*len<sp/>floats<sp/>is<sp/>to<sp/>provide<sp/>space<sp/>for:</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>the<sp/>samples<sp/>to<sp/>be<sp/>transformed<sp/>(len)</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>the<sp/>complex<sp/>FFT<sp/>result<sp/>(len)</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>the<sp/>window<sp/>coefficients<sp/>(len)</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>reason<sp/>for<sp/>this<sp/>storage<sp/>restriction<sp/>is<sp/>that<sp/>when<sp/>a<sp/>sound<sp/>is<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>freed,<sp/>the<sp/>block<sp/>of<sp/>memory<sp/>pointed<sp/>to<sp/>by<sp/>extra<sp/>is<sp/>also<sp/>freed.<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>There<sp/>is<sp/>no<sp/>function<sp/>call<sp/>that<sp/>might<sp/>free<sp/>a<sp/>more<sp/>complex<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>structure<sp/>(this<sp/>could<sp/>be<sp/>added<sp/>in<sp/>sound.c,<sp/>however,<sp/>if<sp/>it&apos;s<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>really<sp/>necessary).</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*)<sp/>malloc(bytes);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref>[0]<sp/>=<sp/>bytes;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;CNT<sp/>=<sp/>s-&gt;INDEX<sp/>=<sp/>s-&gt;FILLCNT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;TERMCNT<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxlen<sp/>=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>float_base<sp/>is<sp/>where<sp/>the<sp/>floats<sp/>start,<sp/>after<sp/>the<sp/>longs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float_base<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>&amp;(s-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref>[<ref refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" kindref="member">OFFSET</ref>]);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window<sp/>=<sp/>float_base<sp/>+<sp/>2<sp/>*<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>the<sp/>window<sp/>from<sp/>w<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!w)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)<sp/>*window++<sp/>=<sp/>1.0<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1aabfcdb317486216a015fc182e1acb6bd" kindref="member">n_samples_from_sound</ref>(w,<sp/>len,<sp/>window);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxlen<sp/>=<sp/>(s-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref>[0]<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long)<sp/>*<sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" kindref="member">OFFSET</ref>)<sp/>/<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float)<sp/>*<sp/>3);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxlen<sp/>!=<sp/>len)<sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;len<sp/>changed<sp/>from<sp/>initial<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float_base<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>&amp;(s-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref>[<ref refid="libnyquist_2nyquist_2nyqsrc_2fft_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" kindref="member">OFFSET</ref>]);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>samples<sp/>=<sp/>float_base;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_fft<sp/>=<sp/>float_base<sp/>+<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>code<sp/>computes<sp/>window<sp/>location<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>window<sp/>=<sp/>float_base<sp/>+<sp/>2<sp/>*<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>1:<sp/>refill<sp/>buffer<sp/>with<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>fillptr<sp/>=<sp/>s-&gt;FILLCNT;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fillptr<sp/>&lt;<sp/>maxlen)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;INDEX<sp/>==<sp/>s-&gt;CNT)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1ad30a7d8107577d30a6ecbfc322f2220c" kindref="member">sound_get_next</ref>(s,<sp/>&amp;(s-&gt;CNT));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;SAMPLES<sp/>==<sp/><ref refid="sound_8c_1a5917e1ea52952f15fd755fa27432113b" kindref="member">zero_block</ref>-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;TERMCNT<sp/>&lt;<sp/>0)<sp/>s-&gt;TERMCNT<sp/>=<sp/>fillptr;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;INDEX<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples[fillptr++]<sp/>=<sp/>s-&gt;SAMPLES[s-&gt;INDEX++]<sp/>*<sp/>s-&gt;<ref refid="structsound__struct_1a7531e5d5bc141fa994e5d787bb2dea01" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;FILLCNT<sp/>=<sp/>fillptr;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>it<sp/>is<sp/>important<sp/>to<sp/>test<sp/>here<sp/>AFTER<sp/>filling<sp/>the<sp/>buffer,<sp/>because</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>fillptr<sp/>WAS<sp/>0<sp/>when<sp/>we<sp/>hit<sp/>the<sp/>zero_block,<sp/>then<sp/>filling<sp/>the<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>buffer<sp/>will<sp/>set<sp/>TERMCNT<sp/>to<sp/>0.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;TERMCNT<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>logical<sp/>stop<sp/>time<sp/>is<sp/>ignored<sp/>by<sp/>this<sp/>code<sp/>--<sp/>to<sp/>fix<sp/>this,</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>you<sp/>would<sp/>need<sp/>a<sp/>way<sp/>to<sp/>return<sp/>the<sp/>logical<sp/>stop<sp/>time<sp/>to<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>caller.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>2:<sp/>construct<sp/>an<sp/>array<sp/>and<sp/>return<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(result);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="xldmem_8c_1aff7eb5a000567061935089b85eaa3c1a" kindref="member">newvector</ref>(len);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>len<sp/>floats<sp/>will<sp/>be<sp/>real<sp/>part,<sp/>second<sp/>len<sp/>floats<sp/>imaginary</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>copy<sp/>buffer<sp/>to<sp/>temp_fft<sp/>with<sp/>windowing</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_fft[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>samples[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*<sp/>*window++;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>perform<sp/>the<sp/>fft:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>round(log(len)<sp/>/<sp/><ref refid="mathematics_8h_1a92428112a5d24721208748774a4f23e6" kindref="member">M_LN2</ref>);<sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>log-base-2(len)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(1<sp/>&lt;&lt;<sp/>m<sp/>!=<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;FFT<sp/>len<sp/>is<sp/>not<sp/>a<sp/>power<sp/>of<sp/>two&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="fftext_8c_1a6df620a166f1f7e9f5cd756d3adbc7ff" kindref="member">fftInit</ref>(m))<sp/><ref refid="fftext_8c_1af10a67ac76af119dd518bc569b289d72" kindref="member">rffts</ref>(temp_fft,<sp/>m,<sp/>1);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;FFT<sp/>initialization<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>results<sp/>to<sp/>Lisp<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a14c2a197abaade2dfe3bd8ec204530ef" kindref="member">setelement</ref>(result,<sp/>0,<sp/><ref refid="xldmem_8c_1a136914cbe882831bbdd74a24b58c4759" kindref="member">cvflonum</ref>(temp_fft[0]));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a14c2a197abaade2dfe3bd8ec204530ef" kindref="member">setelement</ref>(result,<sp/>len<sp/>-<sp/>1,<sp/><ref refid="xldmem_8c_1a136914cbe882831bbdd74a24b58c4759" kindref="member">cvflonum</ref>(temp_fft[1]));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a14c2a197abaade2dfe3bd8ec204530ef" kindref="member">setelement</ref>(result,<sp/>i<sp/>-<sp/>1,<sp/><ref refid="xldmem_8c_1a136914cbe882831bbdd74a24b58c4759" kindref="member">cvflonum</ref>(temp_fft[i]));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>3:<sp/>shift<sp/>samples<sp/>by<sp/>step<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(step<sp/>&lt;<sp/>0)<sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;step<sp/>&lt;<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;FILLCNT<sp/>-=<sp/>step;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;FILLCNT<sp/>&lt;<sp/>0)<sp/>s-&gt;FILLCNT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;FILLCNT;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>samples[i<sp/>+<sp/>step];</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;TERMCNT<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;TERMCNT<sp/>-=<sp/>step;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;TERMCNT<sp/>&lt;<sp/>0)<sp/>s-&gt;TERMCNT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>4:<sp/>advance<sp/>in<sp/>sound<sp/>to<sp/>next<sp/>sample<sp/>we<sp/>need</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>(only<sp/>does<sp/>work<sp/>if<sp/>step<sp/>&gt;<sp/>size<sp/>of<sp/>buffer)</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>skip<sp/>=<sp/>step<sp/>-<sp/>maxlen;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(skip<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>remaining<sp/>=<sp/>s-&gt;CNT<sp/>-<sp/>s-&gt;INDEX;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining<sp/>&gt;=<sp/>skip)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;INDEX<sp/>+=<sp/>skip;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip<sp/>-=<sp/>remaining;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1ad30a7d8107577d30a6ecbfc322f2220c" kindref="member">sound_get_next</ref>(s,<sp/>&amp;(s-&gt;CNT));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;INDEX<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>snd_fetch_array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c"/>
  </compounddef>
</doxygen>
