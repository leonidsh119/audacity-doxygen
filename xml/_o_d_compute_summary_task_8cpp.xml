<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_o_d_compute_summary_task_8cpp" kind="file" language="C++">
    <compoundname>ODComputeSummaryTask.cpp</compoundname>
    <includes refid="_o_d_compute_summary_task_8h" local="yes">ODComputeSummaryTask.h</includes>
    <includes refid="_o_d_p_c_m_alias_block_file_8h" local="yes">../blockfile/ODPCMAliasBlockFile.h</includes>
    <includes refid="_sequence_8h" local="yes">../Sequence.h</includes>
    <includes refid="_wave_track_8h" local="yes">../WaveTrack.h</includes>
    <includes local="no">wx/wx.h</includes>
    <incdepgraph>
      <node id="49337">
        <label>wx/dir.h</label>
      </node>
      <node id="49346">
        <label>wx/choice.h</label>
      </node>
      <node id="49388">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="49305" relation="include">
        </childnode>
        <childnode refid="49315" relation="include">
        </childnode>
        <childnode refid="49370" relation="include">
        </childnode>
        <childnode refid="49303" relation="include">
        </childnode>
        <childnode refid="49310" relation="include">
        </childnode>
        <childnode refid="49319" relation="include">
        </childnode>
        <childnode refid="49389" relation="include">
        </childnode>
        <childnode refid="49387" relation="include">
        </childnode>
        <childnode refid="49369" relation="include">
        </childnode>
        <childnode refid="49321" relation="include">
        </childnode>
        <childnode refid="49390" relation="include">
        </childnode>
        <childnode refid="49301" relation="include">
        </childnode>
      </node>
      <node id="49322">
        <label>wx/hashmap.h</label>
      </node>
      <node id="49374">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="49372">
        <label>wx/gauge.h</label>
      </node>
      <node id="49338">
        <label>wx/event.h</label>
      </node>
      <node id="49308">
        <label>wx/ffile.h</label>
      </node>
      <node id="49361">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="49317" relation="include">
        </childnode>
        <childnode refid="49353" relation="include">
        </childnode>
        <childnode refid="49362" relation="include">
        </childnode>
      </node>
      <node id="49302">
        <label>ODTask.h</label>
        <link refid="_o_d_task_8h"/>
        <childnode refid="49303" relation="include">
        </childnode>
        <childnode refid="49306" relation="include">
        </childnode>
        <childnode refid="49318" relation="include">
        </childnode>
        <childnode refid="49301" relation="include">
        </childnode>
        <childnode refid="49381" relation="include">
        </childnode>
      </node>
      <node id="49379">
        <label>wx/dcclient.h</label>
      </node>
      <node id="49336">
        <label>wx/cmdline.h</label>
      </node>
      <node id="49352">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="49317" relation="include">
        </childnode>
        <childnode refid="49353" relation="include">
        </childnode>
        <childnode refid="49354" relation="include">
        </childnode>
        <childnode refid="49355" relation="include">
        </childnode>
        <childnode refid="49350" relation="include">
        </childnode>
      </node>
      <node id="49368">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="49313" relation="include">
        </childnode>
        <childnode refid="49307" relation="include">
        </childnode>
        <childnode refid="49369" relation="include">
        </childnode>
      </node>
      <node id="49310">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="49305" relation="include">
        </childnode>
        <childnode refid="49307" relation="include">
        </childnode>
        <childnode refid="49311" relation="include">
        </childnode>
        <childnode refid="49312" relation="include">
        </childnode>
      </node>
      <node id="49328">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="49326">
        <label>wx/wxchar.h</label>
      </node>
      <node id="49382">
        <label>../blockfile/ODPCMAliasBlockFile.h</label>
        <link refid="_o_d_p_c_m_alias_block_file_8h"/>
        <childnode refid="49383" relation="include">
        </childnode>
        <childnode refid="49306" relation="include">
        </childnode>
        <childnode refid="49303" relation="include">
        </childnode>
        <childnode refid="49320" relation="include">
        </childnode>
        <childnode refid="49304" relation="include">
        </childnode>
      </node>
      <node id="49378">
        <label>wx/frame.h</label>
      </node>
      <node id="49303">
        <label>ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="49304" relation="include">
        </childnode>
        <childnode refid="49305" relation="include">
        </childnode>
      </node>
      <node id="49354">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="49317" relation="include">
        </childnode>
      </node>
      <node id="49323">
        <label>wx/utils.h</label>
      </node>
      <node id="49371">
        <label>wx/evtloop.h</label>
      </node>
      <node id="49319">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="49316" relation="include">
        </childnode>
      </node>
      <node id="49344">
        <label>wx/timer.h</label>
      </node>
      <node id="49300">
        <label>ODComputeSummaryTask.h</label>
        <link refid="_o_d_compute_summary_task_8h"/>
        <childnode refid="49301" relation="include">
        </childnode>
        <childnode refid="49302" relation="include">
        </childnode>
        <childnode refid="49303" relation="include">
        </childnode>
      </node>
      <node id="49387">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="49324">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="49301" relation="include">
        </childnode>
        <childnode refid="49325" relation="include">
        </childnode>
      </node>
      <node id="49367">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="49357">
        <label>wx/fileconf.h</label>
      </node>
      <node id="49359">
        <label>map</label>
      </node>
      <node id="49391">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="49362">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="49317" relation="include">
        </childnode>
        <childnode refid="49354" relation="include">
        </childnode>
        <childnode refid="49352" relation="include">
        </childnode>
        <childnode refid="49353" relation="include">
        </childnode>
        <childnode refid="49360" relation="include">
        </childnode>
        <childnode refid="49361" relation="include">
        </childnode>
      </node>
      <node id="49389">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="49319" relation="include">
        </childnode>
      </node>
      <node id="49375">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="49305" relation="include">
        </childnode>
      </node>
      <node id="49373">
        <label>wx/stattext.h</label>
      </node>
      <node id="49343">
        <label>wx/socket.h</label>
      </node>
      <node id="49377">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="49353">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="49317" relation="include">
        </childnode>
      </node>
      <node id="49321">
        <label>wx/list.h</label>
      </node>
      <node id="49333">
        <label>wx/menu.h</label>
      </node>
      <node id="49316">
        <label>wx/defs.h</label>
      </node>
      <node id="49348">
        <label>wx/window.h</label>
      </node>
      <node id="49340">
        <label>wx/intl.h</label>
      </node>
      <node id="49370">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="49305" relation="include">
        </childnode>
        <childnode refid="49316" relation="include">
        </childnode>
        <childnode refid="49350" relation="include">
        </childnode>
        <childnode refid="49371" relation="include">
        </childnode>
        <childnode refid="49372" relation="include">
        </childnode>
        <childnode refid="49373" relation="include">
        </childnode>
        <childnode refid="49323" relation="include">
        </childnode>
      </node>
      <node id="49365">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="49317">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="49307" relation="include">
        </childnode>
        <childnode refid="49313" relation="include">
        </childnode>
      </node>
      <node id="49306">
        <label>../BlockFile.h</label>
        <link refid="_block_file_8h"/>
        <childnode refid="49307" relation="include">
        </childnode>
        <childnode refid="49308" relation="include">
        </childnode>
        <childnode refid="49309" relation="include">
        </childnode>
        <childnode refid="49310" relation="include">
        </childnode>
        <childnode refid="49312" relation="include">
        </childnode>
        <childnode refid="49315" relation="include">
        </childnode>
      </node>
      <node id="49358">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="49316" relation="include">
        </childnode>
        <childnode refid="49314" relation="include">
        </childnode>
        <childnode refid="49357" relation="include">
        </childnode>
        <childnode refid="49307" relation="include">
        </childnode>
        <childnode refid="49359" relation="include">
        </childnode>
        <childnode refid="49352" relation="include">
        </childnode>
        <childnode refid="49360" relation="include">
        </childnode>
        <childnode refid="49361" relation="include">
        </childnode>
        <childnode refid="49362" relation="include">
        </childnode>
      </node>
      <node id="49350">
        <label>wx/dialog.h</label>
      </node>
      <node id="49309">
        <label>wx/filename.h</label>
      </node>
      <node id="49349">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="49319" relation="include">
        </childnode>
        <childnode refid="49346" relation="include">
        </childnode>
        <childnode refid="49350" relation="include">
        </childnode>
        <childnode refid="49338" relation="include">
        </childnode>
        <childnode refid="49351" relation="include">
        </childnode>
        <childnode refid="49307" relation="include">
        </childnode>
        <childnode refid="49352" relation="include">
        </childnode>
        <childnode refid="49358" relation="include">
        </childnode>
        <childnode refid="49363" relation="include">
        </childnode>
      </node>
      <node id="49383">
        <label>PCMAliasBlockFile.h</label>
        <link refid="_p_c_m_alias_block_file_8h"/>
        <childnode refid="49306" relation="include">
        </childnode>
        <childnode refid="49320" relation="include">
        </childnode>
      </node>
      <node id="49384">
        <label>../Sequence.h</label>
        <link refid="_sequence_8h"/>
        <childnode refid="49301" relation="include">
        </childnode>
        <childnode refid="49307" relation="include">
        </childnode>
        <childnode refid="49314" relation="include">
        </childnode>
        <childnode refid="49315" relation="include">
        </childnode>
        <childnode refid="49310" relation="include">
        </childnode>
        <childnode refid="49312" relation="include">
        </childnode>
        <childnode refid="49303" relation="include">
        </childnode>
        <childnode refid="49317" relation="include">
        </childnode>
      </node>
      <node id="49355">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="49356" relation="include">
        </childnode>
        <childnode refid="49336" relation="include">
        </childnode>
        <childnode refid="49357" relation="include">
        </childnode>
        <childnode refid="49340" relation="include">
        </childnode>
      </node>
      <node id="49330">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="49319" relation="include">
        </childnode>
        <childnode refid="49331" relation="include">
        </childnode>
        <childnode refid="49301" relation="include">
        </childnode>
        <childnode refid="49307" relation="include">
        </childnode>
        <childnode refid="49314" relation="include">
        </childnode>
        <childnode refid="49333" relation="include">
        </childnode>
        <childnode refid="49322" relation="include">
        </childnode>
        <childnode refid="49334" relation="include">
        </childnode>
        <childnode refid="49310" relation="include">
        </childnode>
        <childnode refid="49317" relation="include">
        </childnode>
      </node>
      <node id="49305">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="49347">
        <label>wx/grid.h</label>
      </node>
      <node id="49299">
        <label>C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODComputeSummaryTask.cpp</label>
        <link refid="ODComputeSummaryTask.cpp"/>
        <childnode refid="49300" relation="include">
        </childnode>
        <childnode refid="49382" relation="include">
        </childnode>
        <childnode refid="49384" relation="include">
        </childnode>
        <childnode refid="49385" relation="include">
        </childnode>
        <childnode refid="49381" relation="include">
        </childnode>
      </node>
      <node id="49301">
        <label>vector</label>
      </node>
      <node id="49363">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="49305" relation="include">
        </childnode>
        <childnode refid="49331" relation="include">
        </childnode>
        <childnode refid="49364" relation="include">
        </childnode>
        <childnode refid="49365" relation="include">
        </childnode>
        <childnode refid="49314" relation="include">
        </childnode>
        <childnode refid="49340" relation="include">
        </childnode>
        <childnode refid="49307" relation="include">
        </childnode>
        <childnode refid="49366" relation="include">
        </childnode>
        <childnode refid="49354" relation="include">
        </childnode>
        <childnode refid="49352" relation="include">
        </childnode>
        <childnode refid="49319" relation="include">
        </childnode>
        <childnode refid="49325" relation="include">
        </childnode>
        <childnode refid="49367" relation="include">
        </childnode>
        <childnode refid="49368" relation="include">
        </childnode>
        <childnode refid="49370" relation="include">
        </childnode>
      </node>
      <node id="49314">
        <label>wx/dynarray.h</label>
      </node>
      <node id="49318">
        <label>../Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="49305" relation="include">
        </childnode>
        <childnode refid="49319" relation="include">
        </childnode>
        <childnode refid="49320" relation="include">
        </childnode>
        <childnode refid="49324" relation="include">
        </childnode>
        <childnode refid="49328" relation="include">
        </childnode>
        <childnode refid="49329" relation="include">
        </childnode>
        <childnode refid="49330" relation="include">
        </childnode>
        <childnode refid="49349" relation="include">
        </childnode>
        <childnode refid="49310" relation="include">
        </childnode>
        <childnode refid="49374" relation="include">
        </childnode>
        <childnode refid="49375" relation="include">
        </childnode>
        <childnode refid="49316" relation="include">
        </childnode>
        <childnode refid="49338" relation="include">
        </childnode>
        <childnode refid="49342" relation="include">
        </childnode>
        <childnode refid="49376" relation="include">
        </childnode>
        <childnode refid="49377" relation="include">
        </childnode>
        <childnode refid="49378" relation="include">
        </childnode>
        <childnode refid="49340" relation="include">
        </childnode>
        <childnode refid="49379" relation="include">
        </childnode>
        <childnode refid="49380" relation="include">
        </childnode>
      </node>
      <node id="49360">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="49317" relation="include">
        </childnode>
        <childnode refid="49354" relation="include">
        </childnode>
        <childnode refid="49353" relation="include">
        </childnode>
      </node>
      <node id="49307">
        <label>wx/string.h</label>
      </node>
      <node id="49334">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="49305" relation="include">
        </childnode>
        <childnode refid="49335" relation="include">
        </childnode>
        <childnode refid="49336" relation="include">
        </childnode>
        <childnode refid="49337" relation="include">
        </childnode>
        <childnode refid="49338" relation="include">
        </childnode>
        <childnode refid="49339" relation="include">
        </childnode>
        <childnode refid="49340" relation="include">
        </childnode>
        <childnode refid="49341" relation="include">
        </childnode>
        <childnode refid="49342" relation="include">
        </childnode>
        <childnode refid="49343" relation="include">
        </childnode>
        <childnode refid="49344" relation="include">
        </childnode>
        <childnode refid="49345" relation="include">
        </childnode>
        <childnode refid="49303" relation="include">
        </childnode>
        <childnode refid="49319" relation="include">
        </childnode>
      </node>
      <node id="49351">
        <label>wx/listbox.h</label>
      </node>
      <node id="49390">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="49342">
        <label>wx/log.h</label>
      </node>
      <node id="49327">
        <label>math.h</label>
      </node>
      <node id="49320">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="49321" relation="include">
        </childnode>
        <childnode refid="49307" relation="include">
        </childnode>
        <childnode refid="49309" relation="include">
        </childnode>
        <childnode refid="49322" relation="include">
        </childnode>
        <childnode refid="49323" relation="include">
        </childnode>
        <childnode refid="49317" relation="include">
        </childnode>
        <childnode refid="49310" relation="include">
        </childnode>
      </node>
      <node id="49325">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="49305" relation="include">
        </childnode>
        <childnode refid="49319" relation="include">
        </childnode>
        <childnode refid="49316" relation="include">
        </childnode>
        <childnode refid="49326" relation="include">
        </childnode>
        <childnode refid="49327" relation="include">
        </childnode>
      </node>
      <node id="49313">
        <label>wx/arrstr.h</label>
      </node>
      <node id="49381">
        <label>wx/wx.h</label>
      </node>
      <node id="49341">
        <label>wx/snglinst.h</label>
      </node>
      <node id="49386">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="49305" relation="include">
        </childnode>
        <childnode refid="49331" relation="include">
        </childnode>
        <childnode refid="49301" relation="include">
        </childnode>
        <childnode refid="49314" relation="include">
        </childnode>
        <childnode refid="49338" relation="include">
        </childnode>
        <childnode refid="49387" relation="include">
        </childnode>
        <childnode refid="49369" relation="include">
        </childnode>
        <childnode refid="49307" relation="include">
        </childnode>
        <childnode refid="49319" relation="include">
        </childnode>
        <childnode refid="49315" relation="include">
        </childnode>
        <childnode refid="49310" relation="include">
        </childnode>
      </node>
      <node id="49304">
        <label>wx/thread.h</label>
      </node>
      <node id="49376">
        <label>wx/dragimag.h</label>
      </node>
      <node id="49366">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="49331">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="49332" relation="include">
        </childnode>
      </node>
      <node id="49345">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="49316" relation="include">
        </childnode>
        <childnode refid="49346" relation="include">
        </childnode>
        <childnode refid="49314" relation="include">
        </childnode>
        <childnode refid="49338" relation="include">
        </childnode>
        <childnode refid="49347" relation="include">
        </childnode>
        <childnode refid="49307" relation="include">
        </childnode>
        <childnode refid="49348" relation="include">
        </childnode>
      </node>
      <node id="49364">
        <label>set</label>
      </node>
      <node id="49380">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="49319" relation="include">
        </childnode>
      </node>
      <node id="49335">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="49369">
        <label>wx/longlong.h</label>
      </node>
      <node id="49385">
        <label>../WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="49386" relation="include">
        </childnode>
        <childnode refid="49315" relation="include">
        </childnode>
        <childnode refid="49388" relation="include">
        </childnode>
        <childnode refid="49319" relation="include">
        </childnode>
        <childnode refid="49370" relation="include">
        </childnode>
        <childnode refid="49301" relation="include">
        </childnode>
        <childnode refid="49387" relation="include">
        </childnode>
        <childnode refid="49369" relation="include">
        </childnode>
        <childnode refid="49304" relation="include">
        </childnode>
        <childnode refid="49391" relation="include">
        </childnode>
      </node>
      <node id="49311">
        <label>stdio.h</label>
      </node>
      <node id="49315">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="49305" relation="include">
        </childnode>
        <childnode refid="49316" relation="include">
        </childnode>
        <childnode refid="49317" relation="include">
        </childnode>
      </node>
      <node id="49356">
        <label>locale.h</label>
      </node>
      <node id="49339">
        <label>wx/docview.h</label>
      </node>
      <node id="49332">
        <label>memory</label>
      </node>
      <node id="49312">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="49313" relation="include">
        </childnode>
        <childnode refid="49314" relation="include">
        </childnode>
        <childnode refid="49308" relation="include">
        </childnode>
      </node>
      <node id="49329">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="49307" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_o_d_compute_summary_task_8cpp_1a7de28f0c0188e240362e5358de3b35b8" prot="public" static="no">
        <name>kNumBlockFilesPerDoSome</name>
        <initializer>36</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODComputeSummaryTask.cpp" line="28" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODComputeSummaryTask.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>ODComputeSummaryTask.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Created<sp/>by<sp/>Michael<sp/>Chinen<sp/>(mchinen)<sp/>on<sp/>6/8/08.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Audacity(R)<sp/>is<sp/>copyright<sp/>(c)<sp/>1999-2008<sp/>Audacity<sp/>Team.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>License:<sp/>GPL<sp/>v2.<sp/><sp/>See<sp/>License.txt.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_compute_summary_task_8h" kindref="compound">ODComputeSummaryTask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../blockfile/ODPCMAliasBlockFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Sequence.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../WaveTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/wx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//36<sp/>blockfiles<sp/>&gt;<sp/>3<sp/>minutes<sp/>stereo<sp/>44.1kHz<sp/>per<sp/>ODTask::DoSome</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="_o_d_compute_summary_task_8cpp_1a7de28f0c0188e240362e5358de3b35b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>kNumBlockFilesPerDoSome<sp/>36</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_o_d_compute_summary_task_1aea49b78ebf61d1278bb24317055b49c2" refkind="member"><highlight class="normal"><ref refid="class_o_d_compute_summary_task_1aea49b78ebf61d1278bb24317055b49c2" kindref="member">ODComputeSummaryTask::ODComputeSummaryTask</ref>()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a0a0d29cc904dc42a7060c396ac3bf391" kindref="member">mMaxBlockFiles</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a46a4ba6dbbcf45d41488ce3a7c992444" kindref="member">mComputedBlockFiles</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a6c1b4d0272f909d4b1c7e04e9ab73fe3" kindref="member">mHasUpdateRan</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_o_d_compute_summary_task_1a54dbb1599de0deb41d88b3136680b279" refkind="member"><highlight class="normal"><ref refid="class_o_d_task" kindref="compound">ODTask</ref>*<sp/><ref refid="class_o_d_compute_summary_task_1a54dbb1599de0deb41d88b3136680b279" kindref="member">ODComputeSummaryTask::Clone</ref>()</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task" kindref="compound">ODComputeSummaryTask</ref>*<sp/><ref refid="group__flacpp__metadata__object_1gaea2484b59c72f4cce8366f25133f5d51" kindref="member">clone</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_o_d_compute_summary_task_1aea49b78ebf61d1278bb24317055b49c2" kindref="member">ODComputeSummaryTask</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>clone-&gt;<ref refid="class_o_d_task_1a2805d376b4e66174128836a31ce4b4ce" kindref="member">mDemandSample</ref>=<ref refid="class_o_d_task_1ace2d7a68e5f8681025c539000487aa81" kindref="member">GetDemandSample</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__flacpp__metadata__object_1gaea2484b59c72f4cce8366f25133f5d51" kindref="member">clone</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_o_d_compute_summary_task_1a86f4bf81bd99c3cec23eee5352424ad3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_compute_summary_task_1a86f4bf81bd99c3cec23eee5352424ad3" kindref="member">ODComputeSummaryTask::Terminate</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>terminate<sp/>block<sp/>won&apos;t<sp/>allow<sp/>DoSomeInternal<sp/>and<sp/>this<sp/>method<sp/>to<sp/>be<sp/>run<sp/>async,<sp/>so<sp/>this<sp/>is<sp/>thread-safe.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Deref<sp/>the<sp/>block<sp/>files<sp/>since<sp/>they<sp/>are<sp/>ref&apos;ed<sp/>when<sp/>put<sp/>into<sp/>the<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a559f0f89aadfdaa0b5e16177d3f888bd" kindref="member">mBlockFilesMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;Deref();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.clear();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a559f0f89aadfdaa0b5e16177d3f888bd" kindref="member">mBlockFilesMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_o_d_compute_summary_task_1a12f1ea0f398eea35650380cdfb44f038" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_compute_summary_task_1a12f1ea0f398eea35650380cdfb44f038" kindref="member">ODComputeSummaryTask::DoSomeInternal</ref>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.size()&lt;=0)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1add5ff78b44107292569dfdeeb90c8118" kindref="member">mPercentCompleteMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1a81842f8c6d99d72ce3cd215c113a261d" kindref="member">mPercentComplete</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1add5ff78b44107292569dfdeeb90c8118" kindref="member">mPercentCompleteMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_p_c_m_alias_block_file" kindref="compound">ODPCMAliasBlockFile</ref>*<sp/>bf;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>blockStartSample<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>blockEndSample<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a559f0f89aadfdaa0b5e16177d3f888bd" kindref="member">mBlockFilesMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>.size()<sp/>&amp;&amp;<sp/><ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bf<sp/>=<sp/><ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>[0];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//first<sp/>check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>ref<sp/>count<sp/>is<sp/>at<sp/>least<sp/>2.<sp/><sp/>It<sp/>should<sp/>have<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//from<sp/>when<sp/>we<sp/>added<sp/>it<sp/>to<sp/>this<sp/>instance&apos;s<sp/>mBlockFiles<sp/>array,<sp/>and<sp/>one<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>Wavetrack/sequence.<sp/><sp/>If<sp/>it<sp/>doesn&apos;t<sp/>it<sp/>has<sp/>been<sp/>deleted<sp/>and<sp/>we<sp/>should<sp/>forget<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bf-&gt;RefCount()&gt;=2)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bf-&gt;<ref refid="class_o_d_p_c_m_alias_block_file_1a4294c50df9862c688da8d15035215f88" kindref="member">DoWriteSummary</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockStartSample<sp/>=<sp/>bf-&gt;<ref refid="class_o_d_p_c_m_alias_block_file_1a1d8885341e139e687852e8ed84b370ab" kindref="member">GetStart</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockEndSample<sp/>=<sp/>blockStartSample<sp/>+<sp/>bf-&gt;<ref refid="class_block_file_1a93fa23bb9606cafba976f2c0b818719c" kindref="member">GetLength</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a46a4ba6dbbcf45d41488ce3a7c992444" kindref="member">mComputedBlockFiles</ref>++;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>waveform<sp/>in<sp/>the<sp/>wavetrack<sp/>now<sp/>is<sp/>shorter,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>update<sp/>mMaxBlockFiles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//because<sp/>now<sp/>there<sp/>is<sp/>less<sp/>work<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a0a0d29cc904dc42a7060c396ac3bf391" kindref="member">mMaxBlockFiles</ref>--;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Release<sp/>the<sp/>refcount<sp/>we<sp/>placed<sp/>on<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bf-&gt;Deref();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//take<sp/>it<sp/>out<sp/>of<sp/>the<sp/>array<sp/>-<sp/>we<sp/>are<sp/>done<sp/>with<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.erase(<ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.begin());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>is<sp/>a<sp/>bit<sp/>of<sp/>a<sp/>convenience<sp/>in<sp/>case<sp/>someone<sp/>tries<sp/>to<sp/>terminate<sp/>the<sp/>task<sp/>by<sp/>closing<sp/>the<sp/>trackpanel<sp/>or<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ODComputeSummaryTask::Terminate()<sp/>uses<sp/>this<sp/>lock<sp/>to<sp/>remove<sp/>everything,<sp/>and<sp/>we<sp/>don&apos;t<sp/>want<sp/>it<sp/>to<sp/>wait<sp/>since<sp/>the<sp/>UI<sp/>is<sp/>being<sp/>blocked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a559f0f89aadfdaa0b5e16177d3f888bd" kindref="member">mBlockFilesMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxThread::This()-&gt;Yield();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a559f0f89aadfdaa0b5e16177d3f888bd" kindref="member">mBlockFilesMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//upddate<sp/>the<sp/>gui<sp/>for<sp/>all<sp/>associated<sp/>blocks.<sp/><sp/>It<sp/>doesn&apos;t<sp/>matter<sp/>that<sp/>we&apos;re<sp/>hitting<sp/>more<sp/>wavetracks<sp/>then<sp/>we<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//because<sp/>this<sp/>loop<sp/>runs<sp/>a<sp/>number<sp/>of<sp/>times<sp/>equal<sp/>to<sp/>the<sp/>number<sp/>of<sp/>tracks,<sp/>they<sp/>probably<sp/>are<sp/>getting<sp/>processed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>next<sp/>iteration<sp/>at<sp/>the<sp/>same<sp/>sample<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(success<sp/>&amp;&amp;<sp/><ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;AddInvalidRegion(blockStartSample,blockEndSample);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a559f0f89aadfdaa0b5e16177d3f888bd" kindref="member">mBlockFilesMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//update<sp/>percentage<sp/>complete.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1ab1723e6af0e37ca604bf4675e1531604" kindref="member">CalculatePercentComplete</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_o_d_compute_summary_task_1a546eb6fc22657346e92daa64602cdf4e" refkind="member"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_o_d_compute_summary_task_1a546eb6fc22657346e92daa64602cdf4e" kindref="member">ODComputeSummaryTask::ComputeNextWorkUntilPercentageComplete</ref>()</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_compute_summary_task_1a0a0d29cc904dc42a7060c396ac3bf391" kindref="member">mMaxBlockFiles</ref>==0)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nextPercent;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1add5ff78b44107292569dfdeeb90c8118" kindref="member">mPercentCompleteMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>nextPercent=<ref refid="class_o_d_task_1a81842f8c6d99d72ce3cd215c113a261d" kindref="member">mPercentComplete</ref><sp/>+<sp/>((float)<ref refid="_o_d_compute_summary_task_8cpp_1a7de28f0c0188e240362e5358de3b35b8" kindref="member">kNumBlockFilesPerDoSome</ref>/(<ref refid="class_o_d_compute_summary_task_1a0a0d29cc904dc42a7060c396ac3bf391" kindref="member">mMaxBlockFiles</ref>+1));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1add5ff78b44107292569dfdeeb90c8118" kindref="member">mPercentCompleteMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nextPercent;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_o_d_compute_summary_task_1a68e893559694a5d884a19b27d23f13b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_compute_summary_task_1a68e893559694a5d884a19b27d23f13b0" kindref="member">ODComputeSummaryTask::MarkUpdateRan</ref>()</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a7df3770e2254fc12c16be67401ceaab4" kindref="member">mHasUpdateRanMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a6c1b4d0272f909d4b1c7e04e9ab73fe3" kindref="member">mHasUpdateRan</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a7df3770e2254fc12c16be67401ceaab4" kindref="member">mHasUpdateRanMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="class_o_d_compute_summary_task_1a76fde124f8242756ebb2dfc510d42b59" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_compute_summary_task_1a76fde124f8242756ebb2dfc510d42b59" kindref="member">ODComputeSummaryTask::HasUpdateRan</ref>()</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a7df3770e2254fc12c16be67401ceaab4" kindref="member">mHasUpdateRanMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_o_d_compute_summary_task_1a6c1b4d0272f909d4b1c7e04e9ab73fe3" kindref="member">mHasUpdateRan</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a7df3770e2254fc12c16be67401ceaab4" kindref="member">mHasUpdateRanMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_o_d_compute_summary_task_1ab1723e6af0e37ca604bf4675e1531604" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_compute_summary_task_1ab1723e6af0e37ca604bf4675e1531604" kindref="member">ODComputeSummaryTask::CalculatePercentComplete</ref>()</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasUpdateRan;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>hasUpdateRan<sp/>=<sp/><ref refid="class_o_d_compute_summary_task_1a76fde124f8242756ebb2dfc510d42b59" kindref="member">HasUpdateRan</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1add5ff78b44107292569dfdeeb90c8118" kindref="member">mPercentCompleteMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hasUpdateRan)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1a81842f8c6d99d72ce3cd215c113a261d" kindref="member">mPercentComplete</ref><sp/>=<sp/>(float)<sp/>1.0<sp/>-<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.size()<sp/>/<sp/>(<ref refid="class_o_d_compute_summary_task_1a0a0d29cc904dc42a7060c396ac3bf391" kindref="member">mMaxBlockFiles</ref>+1));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1a81842f8c6d99d72ce3cd215c113a261d" kindref="member">mPercentComplete</ref><sp/>=0.0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1add5ff78b44107292569dfdeeb90c8118" kindref="member">mPercentCompleteMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="class_o_d_compute_summary_task_1aa0401e8172b766391aaebb528349ee24" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_compute_summary_task_1aa0401e8172b766391aaebb528349ee24" kindref="member">ODComputeSummaryTask::Update</ref>()</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;ODPCMAliasBlockFile*&gt;<sp/>tempBlocks;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=0;j&lt;<ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>.size();j++)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[j])</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_array" kindref="compound">BlockArray</ref><sp/>*blocks;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref><sp/>*seq;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//gather<sp/>all<sp/>the<sp/>blockfiles<sp/>that<sp/>we<sp/>should<sp/>process<sp/>in<sp/>the<sp/>wavetrack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="structnode" kindref="compound">node</ref><sp/>=<sp/><ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[j]-&gt;GetClipIterator();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(node)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip<sp/>=<sp/>node-&gt;GetData();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seq<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1abd2e26af620a0406b2c45aca8736bd9a" kindref="member">GetSequence</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>lock<sp/>may<sp/>be<sp/>way<sp/>too<sp/>big<sp/>since<sp/>the<sp/>whole<sp/>file<sp/>is<sp/>one<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>test<sp/>for<sp/>large<sp/>files<sp/>and<sp/>find<sp/>a<sp/>way<sp/>to<sp/>break<sp/>it<sp/>down.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sequence_1_1_delete_update_mutex_locker" kindref="compound">Sequence::DeleteUpdateMutexLocker</ref><sp/>locker(*seq);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//See<sp/>Sequence::Delete()<sp/>for<sp/>why<sp/>need<sp/>this<sp/>for<sp/>now..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>don&apos;t<sp/>need<sp/>the<sp/>mBlockFilesMutex<sp/>here<sp/>because<sp/>it<sp/>is<sp/>only<sp/>for<sp/>the<sp/>vector<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//These<sp/>are<sp/>existing<sp/>blocks,<sp/>and<sp/>its<sp/>wavetrack<sp/>or<sp/>blockfiles<sp/>won&apos;t<sp/>be<sp/>deleted<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//of<sp/>the<sp/>respective<sp/>mWaveTrackMutex<sp/>lock<sp/>and<sp/>LockDeleteUpdateMutex()<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a229b276264c7a7c1a9684cdbe6a7234c" kindref="member">GetSequenceBlockArray</ref>();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>insertCursor;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertCursor<sp/>=0;</highlight><highlight class="comment">//OD<sp/>TODO:see<sp/>if<sp/>this<sp/>works,<sp/>removed<sp/>from<sp/>inner<sp/>loop<sp/>(bfore<sp/>was<sp/>n*n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)blocks-&gt;size();<sp/>i++)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>there<sp/>is<sp/>data<sp/>but<sp/>no<sp/>summary,<sp/>this<sp/>blockfile<sp/>needs<sp/>summarizing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_seq_block" kindref="compound">SeqBlock</ref><sp/>&amp;<ref refid="structblock" kindref="compound">block</ref><sp/>=<sp/>(*blocks)[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>file<sp/>=<sp/>block.<ref refid="class_seq_block_1afc9b7e81170d82463b8849815b2cf2a2" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file-&gt;<ref refid="class_block_file_1a8908840cad2f547172b3a2373f9dd347" kindref="member">IsDataAvailable</ref>()<sp/>&amp;&amp;<sp/>!file-&gt;<ref refid="class_block_file_1ada91556581464e844478f51762f50a70" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;Ref();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_p_c_m_alias_block_file" kindref="compound">ODPCMAliasBlockFile</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>odpcmaFile<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_o_d_p_c_m_alias_block_file" kindref="compound">ODPCMAliasBlockFile</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(file);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odpcmaFile-&gt;<ref refid="class_o_d_p_c_m_alias_block_file_1afc69161dd2f83cd8ba0f59bdf6691ef9" kindref="member">SetStart</ref>(block.<ref refid="class_seq_block_1a38a34e33b7c97b7b2e55163644b9028f" kindref="member">start</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odpcmaFile-&gt;<ref refid="class_o_d_p_c_m_alias_block_file_1a007ed81516a03caeb97703f665fd9cf7" kindref="member">SetClipOffset</ref>((<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)(clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()*clip-&gt;<ref refid="class_wave_clip_1a04d1806de89e39538576880a8dd43c11" kindref="member">GetRate</ref>()));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//these<sp/>will<sp/>always<sp/>be<sp/>linear<sp/>within<sp/>a<sp/>sequence-lets<sp/>take<sp/>advantage<sp/>of<sp/>this<sp/>by<sp/>keeping<sp/>a<sp/>cursor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(insertCursor&lt;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)tempBlocks.size()&amp;&amp;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)(tempBlocks[insertCursor]-&gt;GetStart()+tempBlocks[insertCursor]-&gt;GetClipOffset())<sp/>&lt;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)(odpcmaFile-&gt;<ref refid="class_o_d_p_c_m_alias_block_file_1a1d8885341e139e687852e8ed84b370ab" kindref="member">GetStart</ref>()+odpcmaFile-&gt;<ref refid="class_o_d_p_c_m_alias_block_file_1a86bdfce755ba0804cd35482d77953e63" kindref="member">GetClipOffset</ref>()))</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertCursor++;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempBlocks.insert(tempBlocks.begin()<sp/>+<sp/>insertCursor++,<sp/>odpcmaFile);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;GetNext();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>NEW<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a559f0f89aadfdaa0b5e16177d3f888bd" kindref="member">mBlockFilesMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a0358213532e2df63b020d931dfd5fdc3" kindref="member">OrderBlockFiles</ref>(tempBlocks);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a559f0f89aadfdaa0b5e16177d3f888bd" kindref="member">mBlockFilesMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a68e893559694a5d884a19b27d23f13b0" kindref="member">MarkUpdateRan</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="class_o_d_compute_summary_task_1a0358213532e2df63b020d931dfd5fdc3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_compute_summary_task_1a0358213532e2df63b020d931dfd5fdc3" kindref="member">ODComputeSummaryTask::OrderBlockFiles</ref>(std::vector&lt;ODPCMAliasBlockFile*&gt;<sp/>&amp;unorderedBlocks)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>are<sp/>going<sp/>to<sp/>take<sp/>things<sp/>out<sp/>of<sp/>the<sp/>array.<sp/><sp/>But<sp/>first<sp/>deref<sp/>them<sp/>since<sp/>we<sp/>ref<sp/>them<sp/>when<sp/>we<sp/>put<sp/>them<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;Deref();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.clear();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Order<sp/>the<sp/>blockfiles<sp/>into<sp/>our<sp/>queue<sp/>in<sp/>a<sp/>fancy<sp/>convenient<sp/>way.<sp/><sp/>(this<sp/>could<sp/>be<sp/>user-prefs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>now<sp/>just<sp/>put<sp/>them<sp/>in<sp/>linear.<sp/><sp/>We<sp/>start<sp/>the<sp/>order<sp/>from<sp/>the<sp/>first<sp/>block<sp/>that<sp/>includes<sp/>the<sp/>ondemand<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//(which<sp/>the<sp/>user<sp/>sets<sp/>by<sp/>clicking.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Note<sp/>that<sp/>this<sp/>code<sp/>assumes<sp/>that<sp/>the<sp/>array<sp/>is<sp/>sorted<sp/>in<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>the<sp/>startpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>processStartSample<sp/>=<sp/><ref refid="class_o_d_task_1ace2d7a68e5f8681025c539000487aa81" kindref="member">GetDemandSample</ref>();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)unorderedBlocks.size())-1;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&gt;=<sp/>0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>--)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>refcount<sp/>is<sp/>at<sp/>least<sp/>two<sp/>before<sp/>we<sp/>add<sp/>it<sp/>to<sp/>the<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//There<sp/>should<sp/>be<sp/>one<sp/>Ref()<sp/>from<sp/>the<sp/>one<sp/>added<sp/>by<sp/>this<sp/>ODTask,<sp/>and<sp/>one<sp/>from<sp/>the<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>there<sp/>isn&apos;t,<sp/>then<sp/>the<sp/>block<sp/>was<sp/>deleted<sp/>for<sp/>some<sp/>reason<sp/>and<sp/>we<sp/>should<sp/>ignore<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(unorderedBlocks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;RefCount()&gt;=2)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//test<sp/>if<sp/>the<sp/>blockfiles<sp/>are<sp/>near<sp/>the<sp/>task<sp/>cursor.<sp/><sp/>we<sp/>use<sp/>the<sp/>last<sp/>mBlockFiles[0]<sp/>as<sp/>our<sp/>point<sp/>of<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>add<sp/>ones<sp/>that<sp/>are<sp/>closer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.size()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unorderedBlocks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;GetGlobalEnd()<sp/>&gt;=<sp/>processStartSample<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/><ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>[0]-&gt;GetGlobalEnd()<sp/>&lt;<sp/>processStartSample<sp/>||</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unorderedBlocks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;GetGlobalStart()<sp/>&lt;=<sp/><ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>[0]-&gt;GetGlobalStart())</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//insert<sp/>at<sp/>the<sp/>front<sp/>of<sp/>the<sp/>list<sp/>if<sp/>we<sp/>get<sp/>blockfiles<sp/>that<sp/>are<sp/>after<sp/>the<sp/>demand<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.insert(<ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.begin()+0,unorderedBlocks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//otherwise<sp/>no<sp/>priority</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.push_back(unorderedBlocks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_compute_summary_task_1a0a0d29cc904dc42a7060c396ac3bf391" kindref="member">mMaxBlockFiles</ref>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.size())</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task_1a0a0d29cc904dc42a7060c396ac3bf391" kindref="member">mMaxBlockFiles</ref><sp/>=<sp/><ref refid="class_o_d_compute_summary_task_1ad68b1da3dcbe481ab2e438c3fdda0920" kindref="member">mBlockFiles</ref>.size();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Otherwise,<sp/>let<sp/>it<sp/>be<sp/>deleted<sp/>and<sp/>forget<sp/>about<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unorderedBlocks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;Deref();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODComputeSummaryTask.cpp"/>
  </compounddef>
</doxygen>
