<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="patest__wmme__find__best__latency__params_8c" kind="file" language="C++">
    <compoundname>patest_wmme_find_best_latency_params.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">windows.h</includes>
    <includes local="no">mmsystem.h</includes>
    <includes local="no">conio.h</includes>
    <includes refid="portaudio_8h" local="yes">portaudio.h</includes>
    <includes refid="pa__win__wmme_8h" local="yes">pa_win_wmme.h</includes>
    <incdepgraph>
      <node id="30709">
        <label>windows.h</label>
      </node>
      <node id="30705">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c</label>
        <link refid="patest_wmme_find_best_latency_params.c"/>
        <childnode refid="30706" relation="include">
        </childnode>
        <childnode refid="30707" relation="include">
        </childnode>
        <childnode refid="30708" relation="include">
        </childnode>
        <childnode refid="30709" relation="include">
        </childnode>
        <childnode refid="30710" relation="include">
        </childnode>
        <childnode refid="30711" relation="include">
        </childnode>
        <childnode refid="30712" relation="include">
        </childnode>
        <childnode refid="30713" relation="include">
        </childnode>
      </node>
      <node id="30714">
        <label>pa_win_waveformat.h</label>
        <link refid="pa__win__waveformat_8h"/>
      </node>
      <node id="30711">
        <label>conio.h</label>
      </node>
      <node id="30712">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="30707">
        <label>time.h</label>
      </node>
      <node id="30708">
        <label>math.h</label>
      </node>
      <node id="30713">
        <label>pa_win_wmme.h</label>
        <link refid="pa__win__wmme_8h"/>
        <childnode refid="30712" relation="include">
        </childnode>
        <childnode refid="30714" relation="include">
        </childnode>
      </node>
      <node id="30710">
        <label>mmsystem.h</label>
      </node>
      <node id="30706">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structpa_test_data" prot="public">paTestData</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="patest__wmme__find__best__latency__params_8c_1ac50762666aa00bd3a4308158510f1748" prot="public" static="no">
        <name>_WIN32_WINNT</name>
        <initializer>0x0501 /* for GetNativeSystemInfo */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="43" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__wmme__find__best__latency__params_8c_1abe9b1c28165a7071e354bd9d7823ca1a" prot="public" static="no">
        <name>DEFAULT_SAMPLE_RATE</name>
        <initializer>(44100.)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="54" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__wmme__find__best__latency__params_8c_1ae71449b1cc6e6250b91f539153a7a0d3" prot="public" static="no">
        <name>M_PI</name>
        <initializer>(3.14159265)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="57" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__wmme__find__best__latency__params_8c_1a032503e76d6f69bc67e99e909c8125da" prot="public" static="no">
        <name>TABLE_SIZE</name>
        <initializer>(2048)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="60" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__wmme__find__best__latency__params_8c_1a29e42927003b0aa647ee45965f4ccb07" prot="public" static="no">
        <name>CHANNEL_COUNT</name>
        <initializer>(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="62" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__wmme__find__best__latency__params_8c_1a2c03962bfd37d8999f50a2eacb78b493" prot="public" static="no">
        <name>MIN_WMME_BUFFER_COUNT</name>
        <initializer>(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="66" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__wmme__find__best__latency__params_8c_1a00dc6b84c12e8a2318577bc3027401fd" prot="public" static="no">
        <name>MAX_WMME_BUFFER_COUNT</name>
        <initializer>(12)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="67" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__wmme__find__best__latency__params_8c_1a7ebc9a785e5ab85457c98595aac81589" prot="public" static="no">
        <name>YES</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="291" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__wmme__find__best__latency__params_8c_1a996bde01ecac342918f0a2c4e7ce7bd5" prot="public" static="no">
        <name>NO</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="292" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="292" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="patest__wmme__find__best__latency__params_8c_1a85326e1ccfeff8dbee821eaea17b16d8" prot="public" static="no" mutable="no">
        <type>typedef</type>
        <definition>typedef PBOOL</definition>
        <argsstring></argsstring>
        <name>PBOOL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="73" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="patest__wmme__find__best__latency__params_8c_1a26fcce622038d84b249f44acf58bef21" prot="public" static="no" mutable="no">
        <type>LPFN_ISWOW64PROCESS</type>
        <definition>LPFN_ISWOW64PROCESS fnIsWow64Process</definition>
        <argsstring></argsstring>
        <name>fnIsWow64Process</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="patest__wmme__find__best__latency__params_8c_1aa1b664b4f895cbac1cdcb3ef8cf6587c" prot="public" static="yes" mutable="no">
        <type><ref refid="structpa_test_data" kindref="compound">paTestData</ref></type>
        <definition>paTestData data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="241" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="241" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="patest__wmme__find__best__latency__params_8c_1a7ca02251638f0223f68659d45476edb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>typedef</type>
        <definition>typedef BOOL</definition>
        <argsstring>(WINAPI *LPFN_ISWOW64PROCESS)(HANDLE</argsstring>
        <name>BOOL</name>
        <param>
          <type><ref refid="mapinls_8h_1a9aa60e1ead64be77ad551e745cbfd4d3" kindref="member">WINAPI</ref> *</type>
          <declname>LPFN_ISWOW64PROCESS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="patest__wmme__find__best__latency__params_8c_1a45b74527ac45cd619a09eabc1d378d94" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nfilterkit_8h_1a3be13892ae7076009afcf121347dd319" kindref="member">BOOL</ref></type>
        <definition>static BOOL IsWow64</definition>
        <argsstring>()</argsstring>
        <name>IsWow64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="77" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="patest__wmme__find__best__latency__params_8c_1a9ef2f6254404863630c5979e5c831066" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void printWindowsVersionInfo</definition>
        <argsstring>(FILE *fp)</argsstring>
        <name>printWindowsVersionInfo</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="98" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="98" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="patest__wmme__find__best__latency__params_8c_1a558b8e12013dcdb4dbfd29702686079e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void printTimeAndDate</definition>
        <argsstring>(FILE *fp)</argsstring>
        <name>printTimeAndDate</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="216" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="216" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="patest__wmme__find__best__latency__params_8c_1a24a9ff6bad6a3850fac39fbe3ed92e2e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int patestCallback</definition>
        <argsstring>(const void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, const PaStreamCallbackTimeInfo *timeInfo, PaStreamCallbackFlags statusFlags, void *userData)</argsstring>
        <name>patestCallback</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>inputBuffer</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>outputBuffer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesPerBuffer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref> *</type>
          <declname>timeInfo</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref></type>
          <declname>statusFlags</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="247" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="247" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="patest__wmme__find__best__latency__params_8c_1aed53247d31322c70cb308d2146b2a815" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int playUntilKeyPress</definition>
        <argsstring>(int deviceIndex, float sampleRate, int framesPerUserBuffer, int framesPerWmmeBuffer, int wmmeBufferCount)</argsstring>
        <name>playUntilKeyPress</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>deviceIndex</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sampleRate</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>framesPerUserBuffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>framesPerWmmeBuffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>wmmeBufferCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="295" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="295" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="patest__wmme__find__best__latency__params_8c_1af2c0f9f4cb4afcedaf0eeaf7eca3c225" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void usage</definition>
        <argsstring>(int wmmeHostApiIndex)</argsstring>
        <name>usage</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>wmmeHostApiIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="365" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="365" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="patest__wmme__find__best__latency__params_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" line="387" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c" bodystart="387" bodyend="517"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>$</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Portable<sp/>Audio<sp/>I/O<sp/>Library</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Windows<sp/>MME<sp/>low<sp/>level<sp/>buffer<sp/>user<sp/>guided<sp/>parameters<sp/>search</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="patest__wmme__find__best__latency__params_8c_1ac50762666aa00bd3a4308158510f1748" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>_WIN32_WINNT<sp/>0x0501<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>GetNativeSystemInfo<sp/>*/</highlight><highlight class="preprocessor"><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>required<sp/>when<sp/>using<sp/>pa_win_wmme.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mmsystem.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>required<sp/>when<sp/>using<sp/>pa_win_wmme.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;conio.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>_getch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portaudio_8h" kindref="compound">portaudio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__win__wmme_8h" kindref="compound">pa_win_wmme.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="patest__wmme__find__best__latency__params_8c_1abe9b1c28165a7071e354bd9d7823ca1a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_SAMPLE_RATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(44100.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="patest__wmme__find__best__latency__params_8c_1ae71449b1cc6e6250b91f539153a7a0d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_PI<sp/><sp/>(3.14159265)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="patest__wmme__find__best__latency__params_8c_1a032503e76d6f69bc67e99e909c8125da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TABLE_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2048)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="patest__wmme__find__best__latency__params_8c_1a29e42927003b0aa647ee45965f4ccb07" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHANNEL_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>seach<sp/>parameters.<sp/>we<sp/>test<sp/>all<sp/>buffer<sp/>counts<sp/>in<sp/>this<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="patest__wmme__find__best__latency__params_8c_1a2c03962bfd37d8999f50a2eacb78b493" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_WMME_BUFFER_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="patest__wmme__find__best__latency__params_8c_1a00dc6b84c12e8a2318577bc3027401fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_WMME_BUFFER_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>functions<sp/>to<sp/>query<sp/>and<sp/>print<sp/>Windows<sp/>version<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="patest__wmme__find__best__latency__params_8c_1a85326e1ccfeff8dbee821eaea17b16d8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a7ca02251638f0223f68659d45476edb2" kindref="member">BOOL</ref><sp/>(<ref refid="mapinls_8h_1a9aa60e1ead64be77ad551e745cbfd4d3" kindref="member">WINAPI</ref><sp/>*LPFN_ISWOW64PROCESS)<sp/>(<ref refid="_sound_touch_d_l_l_8h_1aa8c0374618b33785ccb02f74bcfebc46" kindref="member">HANDLE</ref>,<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a85326e1ccfeff8dbee821eaea17b16d8" kindref="member">PBOOL</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="patest__wmme__find__best__latency__params_8c_1a26fcce622038d84b249f44acf58bef21" refkind="member"><highlight class="normal">LPFN_ISWOW64PROCESS<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a26fcce622038d84b249f44acf58bef21" kindref="member">fnIsWow64Process</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="nfilterkit_8h_1a3be13892ae7076009afcf121347dd319" kindref="member">BOOL</ref><sp/>IsWow64()</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nfilterkit_8h_1a3be13892ae7076009afcf121347dd319" kindref="member">BOOL</ref><sp/>bIsWow64<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//IsWow64Process<sp/>is<sp/>not<sp/>available<sp/>on<sp/>all<sp/>supported<sp/>versions<sp/>of<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Use<sp/>GetModuleHandle<sp/>to<sp/>get<sp/>a<sp/>handle<sp/>to<sp/>the<sp/>DLL<sp/>that<sp/>contains<sp/>the<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>GetProcAddress<sp/>to<sp/>get<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>function<sp/>if<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a26fcce622038d84b249f44acf58bef21" kindref="member">fnIsWow64Process</ref><sp/>=<sp/>(LPFN_ISWOW64PROCESS)<sp/>GetProcAddress(</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetModuleHandle(TEXT(</highlight><highlight class="stringliteral">&quot;kernel32&quot;</highlight><highlight class="normal">)),</highlight><highlight class="stringliteral">&quot;IsWow64Process&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>!=<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a26fcce622038d84b249f44acf58bef21" kindref="member">fnIsWow64Process</ref>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="patest__wmme__find__best__latency__params_8c_1a26fcce622038d84b249f44acf58bef21" kindref="member">fnIsWow64Process</ref>(GetCurrentProcess(),&amp;bIsWow64))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//handle<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bIsWow64;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printWindowsVersionInfo(<sp/>FILE<sp/>*fp<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>OSVERSIONINFOEX<sp/>osVersionInfoEx;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>SYSTEM_INFO<sp/>systemInfo;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*osProductType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*processorArchitecture<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;osVersionInfoEx,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(OSVERSIONINFOEX)<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>osVersionInfoEx.dwOSVersionInfoSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(OSVERSIONINFOEX);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>GetVersionEx(<sp/>&amp;osVersionInfoEx<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>osVersionInfoEx.dwPlatformId<sp/>==<sp/>VER_PLATFORM_WIN32_WINDOWS<sp/>){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>osVersionInfoEx.dwMinorVersion<sp/>){</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>95&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>10:<sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>98&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>also<sp/>be<sp/>98SE<sp/>(I&apos;ve<sp/>seen<sp/>code<sp/>discriminate<sp/>based<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>osInfo.Version.Revision.ToString()<sp/>==<sp/>&quot;2222A&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>90:<sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>Me&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>osVersionInfoEx.dwPlatformId<sp/>==<sp/>VER_PLATFORM_WIN32_NT<sp/>){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>osVersionInfoEx.dwMajorVersion<sp/>){</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>NT<sp/>3.51&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>NT<sp/>4.0&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>osVersionInfoEx.dwMinorVersion<sp/>){</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>2000&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>XP&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>osVersionInfoEx.wSuiteMask<sp/>&amp;<sp/>0x00008000<sp/></highlight><highlight class="comment">/*VER_SUITE_WH_SERVER*/</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>Home<sp/>Server&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>osVersionInfoEx.wProductType<sp/>==<sp/>VER_NT_WORKSTATION<sp/>){</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>XP<sp/>Professional<sp/>x64<sp/>Edition<sp/>(?)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>GetSystemMetrics(</highlight><highlight class="comment">/*SM_SERVERR2*/</highlight><highlight class="normal">89)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>Server<sp/>2003&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>Server<sp/>2003<sp/>R2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>osVersionInfoEx.dwMinorVersion<sp/>){</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>osVersionInfoEx.wProductType<sp/>==<sp/>VER_NT_WORKSTATION<sp/>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>Vista&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>Server<sp/>2008&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>osVersionInfoEx.wProductType<sp/>==<sp/>VER_NT_WORKSTATION<sp/>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>7&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Windows<sp/>Server<sp/>2008<sp/>R2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(osVersionInfoEx.dwMajorVersion<sp/>==<sp/>4)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(osVersionInfoEx.wProductType<sp/>==<sp/>VER_NT_WORKSTATION)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osProductType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Workstation&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(osVersionInfoEx.wProductType<sp/>==<sp/>VER_NT_SERVER)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osProductType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Server&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(osVersionInfoEx.dwMajorVersion<sp/>==<sp/>5)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(osVersionInfoEx.wProductType<sp/>==<sp/>VER_NT_WORKSTATION)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((osVersionInfoEx.wSuiteMask<sp/>&amp;<sp/>VER_SUITE_PERSONAL)<sp/>==<sp/>VER_SUITE_PERSONAL)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osProductType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Home<sp/>Edition&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>XP<sp/>Home<sp/>Edition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osProductType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Professional&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>XP<sp/>/<sp/>Windows<sp/>2000<sp/>Professional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(osVersionInfoEx.wProductType<sp/>==<sp/>VER_NT_SERVER)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(osVersionInfoEx.dwMinorVersion<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((osVersionInfoEx.wSuiteMask<sp/>&amp;<sp/>VER_SUITE_DATACENTER)<sp/>==<sp/>VER_SUITE_DATACENTER)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osProductType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Datacenter<sp/>Server&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>2000<sp/>Datacenter<sp/>Server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((osVersionInfoEx.wSuiteMask<sp/>&amp;<sp/>VER_SUITE_ENTERPRISE)<sp/>==<sp/>VER_SUITE_ENTERPRISE)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osProductType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Advanced<sp/>Server&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>2000<sp/>Advanced<sp/>Server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osProductType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Server&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>2000<sp/>Server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((osVersionInfoEx.wSuiteMask<sp/>&amp;<sp/>VER_SUITE_DATACENTER)<sp/>==<sp/>VER_SUITE_DATACENTER)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osProductType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Datacenter<sp/>Edition&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>Server<sp/>2003<sp/>Datacenter<sp/>Edition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((osVersionInfoEx.wSuiteMask<sp/>&amp;<sp/>VER_SUITE_ENTERPRISE)<sp/>==<sp/>VER_SUITE_ENTERPRISE)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osProductType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Enterprise<sp/>Edition&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>Server<sp/>2003<sp/>Enterprise<sp/>Edition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((osVersionInfoEx.wSuiteMask<sp/>&amp;<sp/>VER_SUITE_BLADE)<sp/>==<sp/>VER_SUITE_BLADE)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osProductType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Web<sp/>Edition&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>Server<sp/>2003<sp/>Web<sp/>Edition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osProductType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Standard<sp/>Edition&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>Server<sp/>2003<sp/>Standard<sp/>Edition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;systemInfo,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SYSTEM_INFO)<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>GetNativeSystemInfo(<sp/>&amp;systemInfo<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>systemInfo.wProcessorArchitecture<sp/>==<sp/>PROCESSOR_ARCHITECTURE_INTEL<sp/>)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processorArchitecture<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;x86&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>systemInfo.wProcessorArchitecture<sp/>==<sp/>PROCESSOR_ARCHITECTURE_AMD64<sp/>)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processorArchitecture<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;x64&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>systemInfo.wProcessorArchitecture<sp/>==<sp/>PROCESSOR_ARCHITECTURE_IA64<sp/>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processorArchitecture<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Itanium&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>fp,<sp/></highlight><highlight class="stringliteral">&quot;OS<sp/>name<sp/>and<sp/>edition:<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>osName,<sp/>osProductType<sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>fp,<sp/></highlight><highlight class="stringliteral">&quot;OS<sp/>version:<sp/>%d.%d.%d<sp/>%S\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osVersionInfoEx.dwMajorVersion,<sp/>osVersionInfoEx.dwMinorVersion,<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osVersionInfoEx.dwBuildNumber,<sp/>osVersionInfoEx.szCSDVersion<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>fp,<sp/></highlight><highlight class="stringliteral">&quot;Processor<sp/>architecture:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>processorArchitecture<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>fp,<sp/></highlight><highlight class="stringliteral">&quot;WoW64<sp/>process:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>IsWow64()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Yes&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;No&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printTimeAndDate(<sp/>FILE<sp/>*fp<sp/>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*local;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>local<sp/>=<sp/>localtime(&amp;t);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Local<sp/>time<sp/>and<sp/>date:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>asctime(local));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>local<sp/>=<sp/>gmtime(&amp;t);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;UTC<sp/>time<sp/>and<sp/>date:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>asctime(local));</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sine[<ref refid="patest__wmme__find__best__latency__params_8c_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref>];</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phaseIncrement;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fadeIn;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fadeOut;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amp;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="patest__clip_8c_1a0b6204bada21caa804fccecf238a2d8f" kindref="member">paTestData</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structpa_test_data" kindref="compound">paTestData</ref><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>routine<sp/>will<sp/>be<sp/>called<sp/>by<sp/>the<sp/>PortAudio<sp/>engine<sp/>when<sp/>audio<sp/>is<sp/>needed.</highlight></codeline>
<codeline lineno="244"><highlight class="comment">**<sp/>It<sp/>may<sp/>called<sp/>at<sp/>interrupt<sp/>level<sp/>on<sp/>some<sp/>machines<sp/>so<sp/>don&apos;t<sp/>do<sp/>anything</highlight></codeline>
<codeline lineno="245"><highlight class="comment">**<sp/>that<sp/>could<sp/>mess<sp/>up<sp/>the<sp/>system<sp/>like<sp/>calling<sp/>malloc()<sp/>or<sp/>free().</highlight></codeline>
<codeline lineno="246"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>patestCallback(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*inputBuffer,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*outputBuffer,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesPerBuffer,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref>*<sp/>timeInfo,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref><sp/>statusFlags,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmlparse_8c_1a4b666535c828e23ccd16510a0a1a1943" kindref="member">userData</ref><sp/>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpa_test_data" kindref="compound">paTestData</ref><sp/>*data<sp/>=<sp/>(<ref refid="structpa_test_data" kindref="compound">paTestData</ref>*)userData;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)outputBuffer;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>timeInfo;<sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>variable<sp/>warnings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>statusFlags;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>inputBuffer;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;framesPerBuffer;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>data-&gt;<ref refid="structpa_test_data_1ae193ea73c8894d186396d0730cf260e5" kindref="member">sine</ref>[(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)data-&gt;<ref refid="structpa_test_data_1a64605f187ec79bda1bcbcc818781d486" kindref="member">phase</ref>];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1a64605f187ec79bda1bcbcc818781d486" kindref="member">phase</ref><sp/>+=<sp/>data-&gt;<ref refid="structpa_test_data_1a5f8db72e12b41cc07c48c8b87e00196b" kindref="member">phaseIncrement</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="structpa_test_data_1a64605f187ec79bda1bcbcc818781d486" kindref="member">phase</ref><sp/>&gt;=<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref><sp/>){</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1a64605f187ec79bda1bcbcc818781d486" kindref="member">phase</ref><sp/>-=<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>*=<sp/>data-&gt;<ref refid="structpa_test_data_1a32fb3d8e9314d36eb5e3534d4a8319bf" kindref="member">amp</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="structpa_test_data_1ac02b04d549c80e075c26d0001ef91ef7" kindref="member">fadeIn</ref><sp/>){</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1a32fb3d8e9314d36eb5e3534d4a8319bf" kindref="member">amp</ref><sp/>+=<sp/>.001;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="structpa_test_data_1a32fb3d8e9314d36eb5e3534d4a8319bf" kindref="member">amp</ref><sp/>&gt;=<sp/>1.<sp/>)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1ac02b04d549c80e075c26d0001ef91ef7" kindref="member">fadeIn</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="structpa_test_data_1ae88449a85b022d09a9affdb7c75c1a87" kindref="member">fadeOut</ref><sp/>){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="structpa_test_data_1a32fb3d8e9314d36eb5e3534d4a8319bf" kindref="member">amp</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1a32fb3d8e9314d36eb5e3534d4a8319bf" kindref="member">amp</ref><sp/>-=<sp/>.001;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a29e42927003b0aa647ee45965f4ccb07" kindref="member">CHANNEL_COUNT</ref>;<sp/>++j<sp/>){</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="structpa_test_data_1a32fb3d8e9314d36eb5e3534d4a8319bf" kindref="member">amp</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acba49cbf0e3bf605bb3deecef3b4fce3" kindref="member">paContinue</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32aa01800db52ead393d8b0016f63d76650" kindref="member">paComplete</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="patest__wmme__find__best__latency__params_8c_1a7ebc9a785e5ab85457c98595aac81589" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YES<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="patest__wmme__find__best__latency__params_8c_1a996bde01ecac342918f0a2c4e7ce7bd5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NO<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>playUntilKeyPress(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>deviceIndex,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>,<sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesPerUserBuffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesPerWmmeBuffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wmmeBufferCount<sp/>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>outputParameters;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_win_mme_stream_info" kindref="compound">PaWinMmeStreamInfo</ref><sp/>wmmeStreamInfo;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*stream;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>err;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1aebaf648b4d11dd1252a747b76b8da084" kindref="member">device</ref><sp/>=<sp/>deviceIndex;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref><sp/>=<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a29e42927003b0aa647ee45965f4ccb07" kindref="member">CHANNEL_COUNT</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1ad8d2d3063757b812f9e5f8709f41052b" kindref="member">sampleFormat</ref><sp/>=<sp/><ref refid="portaudio_8h_1a2f16d29916725b8791eae60ab9e0b081" kindref="member">paFloat32</ref>;<sp/></highlight><highlight class="comment">/*<sp/>32<sp/>bit<sp/>floating<sp/>point<sp/>processing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1aa1e80ac0551162fd091db8936ccbe9a0" kindref="member">suggestedLatency</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*Pa_GetDeviceInfo(<sp/>outputParameters.device<sp/>)-&gt;defaultLowOutputLatency;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1aff01b9fa0710ad1654471e97665c06a9" kindref="member">hostApiSpecificStreamInfo</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>wmmeStreamInfo.<ref refid="struct_pa_win_mme_stream_info_1a62c0f8888229904962efdbec924d2527" kindref="member">size</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="pa__win__wmme_8h_1a7a128685b5547c0b4ad8fc6b5ccbb0ef" kindref="member">PaWinMmeStreamInfo</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>wmmeStreamInfo.<ref refid="struct_pa_win_mme_stream_info_1a393237910fb36b3f42396a365184ce01" kindref="member">hostApiType</ref><sp/>=<sp/><ref refid="portaudio_8h_1a8eaebe3d39c5ea45598da8f86dc2e5aea92db20780c2d5a900ea6a9e988b4da0c" kindref="member">paMME</ref>;<sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>wmmeStreamInfo.<ref refid="struct_pa_win_mme_stream_info_1a881694ff44db0af4d0f3067453c3db38" kindref="member">version</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>wmmeStreamInfo.<ref refid="struct_pa_win_mme_stream_info_1a3c253061ac0a54f2298f979343af90c4" kindref="member">flags</ref><sp/>=<sp/><ref refid="pa__win__wmme_8h_1a730c8a906c8991134bbb419cff40a0a0" kindref="member">paWinMmeUseLowLevelLatencyParameters</ref><sp/>|<sp/><ref refid="pa__win__wmme_8h_1a89f82596ff104d9b994e97af07022a34" kindref="member">paWinMmeDontThrottleOverloadedProcessingThread</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>wmmeStreamInfo.<ref refid="struct_pa_win_mme_stream_info_1a187a4ecd4f51bb767eccbf9e9e19781b" kindref="member">framesPerBuffer</ref><sp/>=<sp/>framesPerWmmeBuffer;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>wmmeStreamInfo.<ref refid="struct_pa_win_mme_stream_info_1aec154a2fcc5f3267e9007b2b46d4368c" kindref="member">bufferCount</ref><sp/>=<sp/>wmmeBufferCount;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1aff01b9fa0710ad1654471e97665c06a9" kindref="member">hostApiSpecificStreamInfo</ref><sp/>=<sp/>&amp;wmmeStreamInfo;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a443ad16338191af364e3be988014cbbe" kindref="member">Pa_OpenStream</ref>(</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stream,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;outputParameters,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampleRate,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerUserBuffer,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a837b8a81be3f7e36c96003e0d8dcec12" kindref="member">paClipOff</ref><sp/>|<sp/><ref refid="portaudio_8h_1ad7b862a223edd680d7985c33c847e31d" kindref="member">paPrimeOutputBuffersUsingStreamCallback</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>won&apos;t<sp/>output<sp/>out<sp/>of<sp/>range<sp/>samples<sp/>so<sp/>don&apos;t<sp/>bother<sp/>clipping<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patestCallback,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;data<sp/>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structpa_test_data_1a32fb3d8e9314d36eb5e3534d4a8319bf" kindref="member">amp</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structpa_test_data_1ac02b04d549c80e075c26d0001ef91ef7" kindref="member">fadeIn</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structpa_test_data_1ae88449a85b022d09a9affdb7c75c1a87" kindref="member">fadeOut</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structpa_test_data_1a64605f187ec79bda1bcbcc818781d486" kindref="member">phase</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structpa_test_data_1a5f8db72e12b41cc07c48c8b87e00196b" kindref="member">phaseIncrement</ref><sp/>=<sp/>15<sp/>+<sp/>((rand()%100)<sp/>/<sp/>10);<sp/></highlight><highlight class="comment">//<sp/>randomise<sp/>pitch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a7432aadd26c40452da12fa99fc1a047b" kindref="member">Pa_StartStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>buffer<sp/>size<sp/>%d.\nIf<sp/>it<sp/>sounds<sp/>smooth<sp/>(without<sp/>clicks<sp/>or<sp/>glitches)<sp/>press<sp/>&apos;y&apos;,<sp/>if<sp/>it<sp/>sounds<sp/>bad<sp/>press<sp/>&apos;n&apos;<sp/>(&apos;q&apos;<sp/>to<sp/>quit)\n&quot;</highlight><highlight class="normal">,<sp/>framesPerWmmeBuffer<sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>tolower(_getch());</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;q&apos;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a0db317604e916e8bd6098e60e6237221" kindref="member">Pa_Terminate</ref>();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structpa_test_data_1ae88449a85b022d09a9affdb7c75c1a87" kindref="member">fadeOut</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/><ref refid="portaudio_8h_1a1f8709c4971932643681a6f374c4bb5a" kindref="member">Pa_IsStreamActive</ref>(stream)<sp/>==<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a1b3c20044c9401c42add29475636e83d" kindref="member">Pa_Sleep</ref>(<sp/>100<sp/>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1af18dd60220251286c337631a855e38a0" kindref="member">Pa_StopStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a92f56f88cbd14da0e8e03077e835d104" kindref="member">Pa_CloseStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal">)<sp/>?<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a7ebc9a785e5ab85457c98595aac81589" kindref="member">YES</ref><sp/>:<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a996bde01ecac342918f0a2c4e7ce7bd5" kindref="member">NO</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vamp-simple-host_8cpp_1a7cac13da282785878351e0a820104851" kindref="member">usage</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wmmeHostApiIndex<sp/>)</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;PortAudio<sp/>WMME<sp/>output<sp/>latency<sp/>user<sp/>guided<sp/>test\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Usage:<sp/>x.exe<sp/>mme-device-index<sp/>[sampleRate<sp/>[min-buffer-count<sp/>max-buffer-count]]\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>device<sp/>index.<sp/>Use<sp/>one<sp/>of<sp/>these:\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="portaudio_8h_1acfe4d3c5ec1a343f459981bfa2057f8d" kindref="member">Pa_GetDeviceCount</ref>();<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>){</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="portaudio_8h_1ac7d8e091ffc1d1d4a035704660e117eb" kindref="member">Pa_GetDeviceInfo</ref>(i)-&gt;<ref refid="struct_pa_device_info_1afe741e4d185069577f7e74b78fdef5a4" kindref="member">hostApi</ref><sp/>==<sp/>wmmeHostApiIndex<sp/>&amp;&amp;<sp/><ref refid="portaudio_8h_1ac7d8e091ffc1d1d4a035704660e117eb" kindref="member">Pa_GetDeviceInfo</ref>(i)-&gt;<ref refid="struct_pa_device_info_1a48f908b21e8a11fdf0a88132b18fe7b0" kindref="member">maxOutputChannels</ref><sp/>&gt;<sp/>0<sp/><sp/>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>(%s)\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/><ref refid="portaudio_8h_1ac7d8e091ffc1d1d4a035704660e117eb" kindref="member">Pa_GetDeviceInfo</ref>(i)-&gt;<ref refid="struct_pa_device_info_1a1bc26d68f1d89472ae67eaa49a542aea" kindref="member">name</ref><sp/>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a0db317604e916e8bd6098e60e6237221" kindref="member">Pa_Terminate</ref>();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/>ideas:<sp/></highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o-<sp/>could<sp/>be<sp/>testing<sp/>with<sp/>80%<sp/>CPU<sp/>load</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o-<sp/>could<sp/>test<sp/>with<sp/>different<sp/>channel<sp/>counts</highlight></codeline>
<codeline lineno="385"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="patest__wmme__find__best__latency__params_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[])</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>err;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>deviceIndex;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wmmeBufferCount,<sp/>wmmeBufferSize,<sp/>smallestWorkingBufferSize;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>smallestWorkingBufferingLatencyFrames;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>,<sp/>mid;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>testResult;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*resultsFp;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wmmeHostApiIndex;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_host_api_info" kindref="compound">PaHostApiInfo</ref><sp/>*wmmeHostApiInfo;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>=<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1abe9b1c28165a7071e354bd9d7823ca1a" kindref="member">DEFAULT_SAMPLE_RATE</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wmmeMinBufferCount<sp/>=<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a2c03962bfd37d8999f50a2eacb78b493" kindref="member">MIN_WMME_BUFFER_COUNT</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wmmeMaxBufferCount<sp/>=<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a00dc6b84c12e8a2318577bc3027401fd" kindref="member">MAX_WMME_BUFFER_COUNT</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1abed859482d156622d9332dff9b2d89da" kindref="member">Pa_Initialize</ref>();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>wmmeHostApiIndex<sp/>=<sp/><ref refid="portaudio_8h_1a081c3975126d20b4226facfb7ba0620f" kindref="member">Pa_HostApiTypeIdToHostApiIndex</ref>(<sp/><ref refid="portaudio_8h_1a8eaebe3d39c5ea45598da8f86dc2e5aea92db20780c2d5a900ea6a9e988b4da0c" kindref="member">paMME</ref><sp/>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>wmmeHostApiInfo<sp/>=<sp/><ref refid="portaudio_8h_1a7c650aede88ea553066bab9bbe97ea90" kindref="member">Pa_GetHostApiInfo</ref>(<sp/>wmmeHostApiIndex<sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>argc<sp/>&gt;<sp/>5<sp/>)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vamp-simple-host_8cpp_1a7cac13da282785878351e0a820104851" kindref="member">usage</ref>(wmmeHostApiIndex);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceIndex<sp/>=<sp/>wmmeHostApiInfo-&gt;<ref refid="struct_pa_host_api_info_1a62632690b5f7906d3c9bfdab91e7f4b2" kindref="member">defaultOutputDevice</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>argc<sp/>&gt;=<sp/>2<sp/>){</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>sscanf(<sp/>argv[1],<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;deviceIndex<sp/>)<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vamp-simple-host_8cpp_1a7cac13da282785878351e0a820104851" kindref="member">usage</ref>(wmmeHostApiIndex);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>deviceIndex<sp/>&lt;<sp/>0<sp/>||<sp/>deviceIndex<sp/>&gt;=<sp/><ref refid="portaudio_8h_1acfe4d3c5ec1a343f459981bfa2057f8d" kindref="member">Pa_GetDeviceCount</ref>()<sp/>||<sp/><ref refid="portaudio_8h_1ac7d8e091ffc1d1d4a035704660e117eb" kindref="member">Pa_GetDeviceInfo</ref>(deviceIndex)-&gt;hostApi<sp/>!=<sp/>wmmeHostApiIndex<sp/>){</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vamp-simple-host_8cpp_1a7cac13da282785878351e0a820104851" kindref="member">usage</ref>(wmmeHostApiIndex);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>device<sp/>id<sp/>%d<sp/>(%s)\n&quot;</highlight><highlight class="normal">,<sp/>deviceIndex,<sp/><ref refid="portaudio_8h_1ac7d8e091ffc1d1d4a035704660e117eb" kindref="member">Pa_GetDeviceInfo</ref>(deviceIndex)-&gt;<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>argc<sp/>&gt;=<sp/>3<sp/>){</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>sscanf(<sp/>argv[2],<sp/></highlight><highlight class="stringliteral">&quot;%lf&quot;</highlight><highlight class="normal">,<sp/>&amp;sampleRate<sp/>)<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vamp-simple-host_8cpp_1a7cac13da282785878351e0a820104851" kindref="member">usage</ref>(wmmeHostApiIndex);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>with<sp/>sample<sp/>rate<sp/>%f.\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)sampleRate<sp/>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>argc<sp/>==<sp/>4<sp/>){</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>sscanf(<sp/>argv[3],<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;wmmeMinBufferCount<sp/>)<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vamp-simple-host_8cpp_1a7cac13da282785878351e0a820104851" kindref="member">usage</ref>(wmmeHostApiIndex);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wmmeMaxBufferCount<sp/>=<sp/>wmmeMinBufferCount;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>argc<sp/>==<sp/>5<sp/>){</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>sscanf(<sp/>argv[3],<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;wmmeMinBufferCount<sp/>)<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vamp-simple-host_8cpp_1a7cac13da282785878351e0a820104851" kindref="member">usage</ref>(wmmeHostApiIndex);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>sscanf(<sp/>argv[4],<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;wmmeMaxBufferCount<sp/>)<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vamp-simple-host_8cpp_1a7cac13da282785878351e0a820104851" kindref="member">usage</ref>(wmmeHostApiIndex);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>buffer<sp/>counts<sp/>from<sp/>%d<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>wmmeMinBufferCount,<sp/>wmmeMaxBufferCount<sp/>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialise<sp/>sinusoidal<sp/>wavetable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;<ref refid="patest__wmme__find__best__latency__params_8c_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="structpa_test_data_1ae193ea73c8894d186396d0730cf260e5" kindref="member">sine</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(float)<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>(<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)i/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)TABLE_SIZE)<sp/>*<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>2.<sp/>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structpa_test_data_1a64605f187ec79bda1bcbcc818781d486" kindref="member">phase</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>resultsFp<sp/>=<sp/>fopen(<sp/></highlight><highlight class="stringliteral">&quot;results.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;at&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>resultsFp,<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>WMME<sp/>smallest<sp/>working<sp/>output<sp/>buffer<sp/>sizes\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>printTimeAndDate(<sp/>resultsFp<sp/>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>printWindowsVersionInfo(<sp/>resultsFp<sp/>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>resultsFp,<sp/></highlight><highlight class="stringliteral">&quot;audio<sp/>device:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="portaudio_8h_1ac7d8e091ffc1d1d4a035704660e117eb" kindref="member">Pa_GetDeviceInfo</ref>(<sp/>deviceIndex<sp/>)-&gt;<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<sp/>resultsFp<sp/>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>resultsFp,<sp/></highlight><highlight class="stringliteral">&quot;Sample<sp/>rate:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)sampleRate<sp/>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>resultsFp,<sp/></highlight><highlight class="stringliteral">&quot;Buffer<sp/>count,<sp/>Smallest<sp/>working<sp/>buffer<sp/>size<sp/>(frames),<sp/>Smallest<sp/>working<sp/>buffering<sp/>latency<sp/>(frames),<sp/>Smallest<sp/>working<sp/>buffering<sp/>latency<sp/>(Seconds)\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>wmmeBufferCount<sp/>=<sp/>wmmeMinBufferCount;<sp/>wmmeBufferCount<sp/>&lt;=<sp/>wmmeMaxBufferCount;<sp/>++wmmeBufferCount<sp/>){</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>%d<sp/>of<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(wmmeBufferCount<sp/>-<sp/>wmmeMinBufferCount)<sp/>+<sp/>1,<sp/>(wmmeMaxBufferCount-wmmeMinBufferCount)<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>with<sp/>%d<sp/>buffers...\n&quot;</highlight><highlight class="normal">,<sp/>wmmeBufferCount<sp/>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Binary<sp/>search<sp/>after<sp/>Niklaus<sp/>Wirth</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>http://en.wikipedia.org/wiki/Binary_search_algorithm#The_algorithm</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)((sampleRate<sp/>*<sp/>.3)<sp/>/<sp/>(wmmeBufferCount-1));<sp/></highlight><highlight class="comment">//8192;<sp/><sp/><sp/><sp/>/*<sp/>we<sp/>assume<sp/>that<sp/>this<sp/>size<sp/>works<sp/>300ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallestWorkingBufferSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid<sp/>=<sp/>min<sp/>+<sp/>((max<sp/>-<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wmmeBufferSize<sp/>=<sp/>mid;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testResult<sp/>=<sp/>playUntilKeyPress(<sp/>deviceIndex,<sp/>sampleRate,<sp/>wmmeBufferSize,<sp/>wmmeBufferSize,<sp/>wmmeBufferCount<sp/>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>testResult<sp/>==<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a7ebc9a785e5ab85457c98595aac81589" kindref="member">YES</ref><sp/>){</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>mid<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallestWorkingBufferSize<sp/>=<sp/>wmmeBufferSize;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>mid<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(min<sp/>&lt;=<sp/>max)<sp/>&amp;&amp;<sp/>(testResult<sp/>==<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a7ebc9a785e5ab85457c98595aac81589" kindref="member">YES</ref><sp/>||<sp/>testResult<sp/>==<sp/><ref refid="patest__wmme__find__best__latency__params_8c_1a996bde01ecac342918f0a2c4e7ce7bd5" kindref="member">NO</ref>)<sp/>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallestWorkingBufferingLatencyFrames<sp/>=<sp/>smallestWorkingBufferSize<sp/>*<sp/>(wmmeBufferCount<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Smallest<sp/>working<sp/>buffer<sp/>size<sp/>for<sp/>%d<sp/>buffers<sp/>is:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>wmmeBufferCount,<sp/>smallestWorkingBufferSize<sp/>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Corresponding<sp/>to<sp/>buffering<sp/>latency<sp/>of<sp/>%d<sp/>frames,<sp/>or<sp/>%f<sp/>seconds.\n&quot;</highlight><highlight class="normal">,<sp/>smallestWorkingBufferingLatencyFrames,<sp/>smallestWorkingBufferingLatencyFrames<sp/>/<sp/>sampleRate<sp/>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<sp/>resultsFp,<sp/></highlight><highlight class="stringliteral">&quot;%d,<sp/>%d,<sp/>%d,<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>wmmeBufferCount,<sp/>smallestWorkingBufferSize,<sp/>smallestWorkingBufferingLatencyFrames,<sp/>smallestWorkingBufferingLatencyFrames<sp/>/<sp/>sampleRate<sp/>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<sp/>resultsFp<sp/>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/>resultsFp,<sp/></highlight><highlight class="stringliteral">&quot;###\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(<sp/>resultsFp<sp/>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a0db317604e916e8bd6098e60e6237221" kindref="member">Pa_Terminate</ref>();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Test<sp/>finished.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a0db317604e916e8bd6098e60e6237221" kindref="member">Pa_Terminate</ref>();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occured<sp/>while<sp/>using<sp/>the<sp/>portaudio<sp/>stream\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>number:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>err<sp/>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>message:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="portaudio_8h_1ae606855a611cf29c7d2d7421df5e3b5d" kindref="member">Pa_GetErrorText</ref>(<sp/>err<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_wmme_find_best_latency_params.c"/>
  </compounddef>
</doxygen>
