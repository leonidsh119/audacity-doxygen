<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pa__linux__alsa_8c" kind="file" language="C++">
    <compoundname>pa_linux_alsa.c</compoundname>
    <includes local="no">alsa/asoundlib.h</includes>
    <includes local="no">sys/poll.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">sys/mman.h</includes>
    <includes refid="portaudio_8h" local="yes">portaudio.h</includes>
    <includes refid="pa__util_8h" local="yes">pa_util.h</includes>
    <includes refid="pa__unix__util_8h" local="yes">pa_unix_util.h</includes>
    <includes refid="pa__allocation_8h" local="yes">pa_allocation.h</includes>
    <includes refid="pa__hostapi_8h" local="yes">pa_hostapi.h</includes>
    <includes refid="pa__stream_8h" local="yes">pa_stream.h</includes>
    <includes refid="pa__cpuload_8h" local="yes">pa_cpuload.h</includes>
    <includes refid="pa__process_8h" local="yes">pa_process.h</includes>
    <includes refid="pa__endianness_8h" local="yes">pa_endianness.h</includes>
    <includes refid="pa__debugprint_8h" local="yes">pa_debugprint.h</includes>
    <includes refid="pa__linux__alsa_8h" local="yes">pa_linux_alsa.h</includes>
    <incdepgraph>
      <node id="29708">
        <label>pa_hostapi.h</label>
        <link refid="pa__hostapi_8h"/>
        <childnode refid="29702" relation="include">
        </childnode>
      </node>
      <node id="29701">
        <label>sys/mman.h</label>
      </node>
      <node id="29707">
        <label>pa_allocation.h</label>
        <link refid="pa__allocation_8h"/>
      </node>
      <node id="29704">
        <label>pa_unix_util.h</label>
        <link refid="pa__unix__util_8h"/>
        <childnode refid="29705" relation="include">
        </childnode>
        <childnode refid="29706" relation="include">
        </childnode>
        <childnode refid="29698" relation="include">
        </childnode>
        <childnode refid="29699" relation="include">
        </childnode>
      </node>
      <node id="29694">
        <label>sys/poll.h</label>
      </node>
      <node id="29710">
        <label>pa_process.h</label>
        <link refid="pa__process_8h"/>
        <childnode refid="29702" relation="include">
        </childnode>
        <childnode refid="29711" relation="include">
        </childnode>
        <childnode refid="29712" relation="include">
        </childnode>
      </node>
      <node id="29705">
        <label>pa_cpuload.h</label>
        <link refid="pa__cpuload_8h"/>
      </node>
      <node id="29716">
        <label>pa_linux_alsa.h</label>
        <link refid="pa__linux__alsa_8h"/>
        <childnode refid="29702" relation="include">
        </childnode>
      </node>
      <node id="29692">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c</label>
        <link refid="pa_linux_alsa.c"/>
        <childnode refid="29693" relation="include">
        </childnode>
        <childnode refid="29694" relation="include">
        </childnode>
        <childnode refid="29695" relation="include">
        </childnode>
        <childnode refid="29696" relation="include">
        </childnode>
        <childnode refid="29697" relation="include">
        </childnode>
        <childnode refid="29698" relation="include">
        </childnode>
        <childnode refid="29699" relation="include">
        </childnode>
        <childnode refid="29700" relation="include">
        </childnode>
        <childnode refid="29701" relation="include">
        </childnode>
        <childnode refid="29702" relation="include">
        </childnode>
        <childnode refid="29703" relation="include">
        </childnode>
        <childnode refid="29704" relation="include">
        </childnode>
        <childnode refid="29707" relation="include">
        </childnode>
        <childnode refid="29708" relation="include">
        </childnode>
        <childnode refid="29709" relation="include">
        </childnode>
        <childnode refid="29705" relation="include">
        </childnode>
        <childnode refid="29710" relation="include">
        </childnode>
        <childnode refid="29714" relation="include">
        </childnode>
        <childnode refid="29715" relation="include">
        </childnode>
        <childnode refid="29716" relation="include">
        </childnode>
      </node>
      <node id="29706">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="29693">
        <label>alsa/asoundlib.h</label>
      </node>
      <node id="29696">
        <label>limits.h</label>
      </node>
      <node id="29714">
        <label>pa_endianness.h</label>
        <link refid="pa__endianness_8h"/>
      </node>
      <node id="29698">
        <label>pthread.h</label>
      </node>
      <node id="29695">
        <label>string.h</label>
      </node>
      <node id="29712">
        <label>pa_dither.h</label>
        <link refid="pa__dither_8h"/>
        <childnode refid="29713" relation="include">
        </childnode>
      </node>
      <node id="29699">
        <label>signal.h</label>
      </node>
      <node id="29702">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="29700">
        <label>time.h</label>
      </node>
      <node id="29697">
        <label>math.h</label>
      </node>
      <node id="29709">
        <label>pa_stream.h</label>
        <link refid="pa__stream_8h"/>
        <childnode refid="29702" relation="include">
        </childnode>
      </node>
      <node id="29713">
        <label>pa_types.h</label>
        <link refid="pa__types_8h"/>
      </node>
      <node id="29711">
        <label>pa_converters.h</label>
        <link refid="pa__converters_8h"/>
        <childnode refid="29702" relation="include">
        </childnode>
      </node>
      <node id="29715">
        <label>pa_debugprint.h</label>
        <link refid="pa__debugprint_8h"/>
      </node>
      <node id="29703">
        <label>pa_util.h</label>
        <link refid="pa__util_8h"/>
        <childnode refid="29702" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_pa_alsa_stream_component" prot="public">PaAlsaStreamComponent</innerclass>
    <innerclass refid="struct_pa_alsa_stream" prot="public">PaAlsaStream</innerclass>
    <innerclass refid="struct_pa_alsa_host_api_representation" prot="public">PaAlsaHostApiRepresentation</innerclass>
    <innerclass refid="struct_pa_alsa_device_info" prot="public">PaAlsaDeviceInfo</innerclass>
    <innerclass refid="struct_hw_dev_info" prot="public">HwDevInfo</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pa__linux__alsa_8c_1a705350c14c1f28bb8d6d57dafbf9ccff" prot="public" static="no">
        <name>ALSA_PCM_NEW_HW_PARAMS_API</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="50" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1a5b61c3b8eee0c6801209e39a760b928a" prot="public" static="no">
        <name>ALSA_PCM_NEW_SW_PARAMS_API</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="51" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1aff83aac9633496129e2cdf9442c4ad87" prot="public" static="no">
        <name>SND_PCM_TSTAMP_ENABLE</name>
        <initializer>SND_PCM_TSTAMP_MMAP</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="84" column="13" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1ad58ac533f6bb5499e822284ce6a4f377" prot="public" static="no">
        <name>ALSA_VERSION_INT</name>
        <param><defname>major</defname></param>
        <param><defname>minor</defname></param>
        <param><defname>subminor</defname></param>
        <initializer>((major &lt;&lt; 16) | (minor &lt;&lt; 8) | subminor)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="88" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1af59870a8b44c748c2933363c8d96b296" prot="public" static="no">
        <name>RATE_MAX_DEVIATE_RATIO</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="91" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" prot="public" static="no">
        <name>_PA_DEFINE_FUNC</name>
        <param><defname>x</defname></param>
        <initializer>typedef typeof(x) x##_ft; static x##_ft *alsa_##x = 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="94" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1a64a0322b1e1b4e01d1cf02d6afd1d8bf" prot="public" static="no">
        <name>__alsa_snd_alloca</name>
        <param><defname>ptr</defname></param>
        <param><defname>type</defname></param>
        <initializer>do { size_t __alsa_alloca_size = alsa_##type##_sizeof(); (*ptr) = (type##_t *) alloca(__alsa_alloca_size); memset(*ptr, 0, __alsa_alloca_size); } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="97" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1aa154c2bb63aa4b6f8aad17e8c828396c" prot="public" static="no">
        <name>alsa_snd_pcm_hw_params_alloca</name>
        <param><defname>ptr</defname></param>
        <initializer><ref refid="pa__linux__alsa_8c_1a64a0322b1e1b4e01d1cf02d6afd1d8bf" kindref="member">__alsa_snd_alloca</ref>(ptr, snd_pcm_hw_params)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="170" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1a008e32f49ee6737893486a40b089827f" prot="public" static="no">
        <name>alsa_snd_pcm_sw_params_alloca</name>
        <param><defname>ptr</defname></param>
        <initializer><ref refid="pa__linux__alsa_8c_1a64a0322b1e1b4e01d1cf02d6afd1d8bf" kindref="member">__alsa_snd_alloca</ref>(ptr, snd_pcm_sw_params)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="185" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1aaa0a47047adc52963b11d9be20235346" prot="public" static="no">
        <name>alsa_snd_pcm_info_alloca</name>
        <param><defname>ptr</defname></param>
        <initializer><ref refid="pa__linux__alsa_8c_1a64a0322b1e1b4e01d1cf02d6afd1d8bf" kindref="member">__alsa_snd_alloca</ref>(ptr, snd_pcm_info)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="196" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1ad6363b683f708bbe9616906956fea5a9" prot="public" static="no">
        <name>alsa_snd_ctl_card_info_alloca</name>
        <param><defname>ptr</defname></param>
        <initializer><ref refid="pa__linux__alsa_8c_1a64a0322b1e1b4e01d1cf02d6afd1d8bf" kindref="member">__alsa_snd_alloca</ref>(ptr, snd_ctl_card_info)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="207" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1a52087bf8ca51ff0145dd1ed1a7fa6650" prot="public" static="no">
        <name>alsa_snd_pcm_status_alloca</name>
        <param><defname>ptr</defname></param>
        <initializer><ref refid="pa__linux__alsa_8c_1a64a0322b1e1b4e01d1cf02d6afd1d8bf" kindref="member">__alsa_snd_alloca</ref>(ptr, snd_pcm_status)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="226" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1a60348909c2d3bf5811e39782977197c1" prot="public" static="no">
        <name>alsa_snd_config_for_each</name>
        <param><defname>pos</defname></param>
        <param><defname>next</defname></param>
        <param><defname>node</defname></param>
        <initializer><ref refid="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" kindref="member">for</ref> (pos = alsa_snd_config_iterator_first(<ref refid="structnode" kindref="compound">node</ref>),\
         <ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref> = alsa_snd_config_iterator_next(pos);\
         pos != alsa_snd_config_iterator_end(<ref refid="structnode" kindref="compound">node</ref>); pos = <ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>, <ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref> = alsa_snd_config_iterator_next(pos))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="233" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1a6089c526fbee9e2052de21f6226b8fab" prot="public" static="no">
        <name>PA_ALSA_PATHNAME</name>
        <initializer>&quot;libasound.so&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="242" column="13" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" prot="public" static="no">
        <name>_PA_LOAD_FUNC</name>
        <param><defname>x</defname></param>
        <initializer>alsa_##x = &amp;x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="376" column="13"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" prot="public" static="no">
        <name>ENSURE_</name>
        <param><defname>expr</defname></param>
        <param><defname>code</defname></param>
        <initializer>do { \
        <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> __pa_unsure_error_id;\
        <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref>( <ref refid="pa__unix__util_8h_1a9acc330d508b9a3b775cfdf7ce405e7d" kindref="member">UNLIKELY</ref>( (__pa_unsure_error_id = (expr)) &lt; 0 ) ) \
        { \
            /* <ref refid="pa__util_8h_1a9c3ad627c13c1d695fef054c216667f7" kindref="member">PaUtil_SetLastHostErrorInfo</ref> should only be used <ref refid="latency_8c_1a7d946209d777cb95fe30364b8d321207" kindref="member">in</ref> <ref refid="nasm_8h_1aaf57ffcfef0bee04f46c6ada2a905a8c" kindref="member">the</ref> <ref refid="_simple_block_file_test_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref> thread */ \
            <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref>( (code) == <ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref> &amp;&amp; pthread_equal( pthread_self(), <ref refid="pa__unix__util_8h_1a786fbebfd9d315bc39dec32568a4dfe1" kindref="member">paUnixMainThread</ref>) ) \
            { \
                <ref refid="pa__util_8h_1a9c3ad627c13c1d695fef054c216667f7" kindref="member">PaUtil_SetLastHostErrorInfo</ref>( <ref refid="portaudio_8h_1a8eaebe3d39c5ea45598da8f86dc2e5aea5fb23d8b2cf3e2e714298de5ab1b83e1" kindref="member">paALSA</ref>, __pa_unsure_error_id, alsa_snd_strerror( __pa_unsure_error_id ) ); \
            } \
            <ref refid="pa__debugprint_8h_1a775ad90aa83e8a15e724f1b0fc55a0d3" kindref="member">PaUtil_DebugPrint</ref>( &quot;Expression &apos;&quot; #expr &quot;&apos; failed <ref refid="latency_8c_1a7d946209d777cb95fe30364b8d321207" kindref="member">in</ref> &apos;&quot; __FILE__ &quot;&apos;, line: &quot; STRINGIZE( __LINE__ ) &quot;\n&quot; ); \
            if( (code) == <ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref> ) \
                <ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>(( &quot;Host <ref refid="sndfile__save_8m_1ada4b423bc19e6ff5c5b514e55f518a82" kindref="member">error</ref> description: %s\n&quot;, alsa_snd_strerror( __pa_unsure_error_id ) )); \
            result = (code); \
            goto <ref refid="sndfile__save_8m_1ada4b423bc19e6ff5c5b514e55f518a82" kindref="member">error</ref>; \
        } \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="562" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__linux__alsa_8c_1adfe580bff275a80ee5935113c053d30d" prot="public" static="no">
        <name>ASSERT_CALL_</name>
        <param><defname>expr</defname></param>
        <param><defname>success</defname></param>
        <initializer>do {\
        <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> __pa_assert_error_id;\
        __pa_assert_error_id = (expr);\
        <ref refid="libmad_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>( success == __pa_assert_error_id );\
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="580" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="580" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" prot="public" static="no">
        <name>StreamDirection</name>
        <enumvalue id="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" prot="public">
          <name>StreamDirection_In</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64ae177efd435a0afd9a45c4efc3b63b229" prot="public">
          <name>StreamDirection_Out</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="597" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="596" bodyend="600"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pa__linux__alsa_8c_1a6a0d07f7c8812042783c069798c0ae49" prot="public" static="no">
        <type>struct <ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref></type>
        <definition>typedef struct PaAlsaStream
 PaAlsaStream</definition>
        <argsstring></argsstring>
        <name>PaAlsaStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="660" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pa__linux__alsa_8c_1ae6d2c516141cb810e28edb768bfd3879" prot="public" static="no">
        <type>struct <ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref></type>
        <definition>typedef struct PaAlsaHostApiRepresentation
 PaAlsaHostApiRepresentation</definition>
        <argsstring></argsstring>
        <name>PaAlsaHostApiRepresentation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="675" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pa__linux__alsa_8c_1a35f61c8241caea31ec36ae13baee4545" prot="public" static="no">
        <type>struct <ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref></type>
        <definition>typedef struct PaAlsaDeviceInfo
 PaAlsaDeviceInfo</definition>
        <argsstring></argsstring>
        <name>PaAlsaDeviceInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="685" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pa__linux__alsa_8c_1a8e9ed1b3c7a9a084ea3837f4fee39931" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* g_AlsaLibName</definition>
        <argsstring></argsstring>
        <name>g_AlsaLibName</name>
        <initializer>= <ref refid="pa__linux__alsa_8c_1a6089c526fbee9e2052de21f6226b8fab" kindref="member">PA_ALSA_PATHNAME</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="244" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pa__linux__alsa_8c_1a4e44ce2bfdc094dff0208dd8f42314f1" prot="public" static="yes" mutable="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>void* g_AlsaLib</definition>
        <argsstring></argsstring>
        <name>g_AlsaLib</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="247" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pa__linux__alsa_8c_1a41e3798a60d8deba921d0afb2b54fe90" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int numPeriods_</definition>
        <argsstring></argsstring>
        <name>numPeriods_</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="587" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pa__linux__alsa_8c_1abff890af84908d945a2cf3ddddf1815f" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int busyRetries_</definition>
        <argsstring></argsstring>
        <name>busyRetries_</name>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="588" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pa__linux__alsa_8c_1a678f357aa9293068bbedbfe6be43af35" prot="public" static="no" mutable="no">
        <type><ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref></type>
        <definition>HwDevInfo predefinedNames[]</definition>
        <argsstring>[]</argsstring>
        <name>predefinedNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="994" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="994" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pa__linux__alsa_8c_1a9126f716fb60ebe606012f379127eff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_open)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_open</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a82d056b0ca4ead55cd47f0c16bc91b77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_close)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_close</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a213a0aac0e4796d121c212c13497de4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_nonblock)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_nonblock</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aa6ab6e790c56308a6ca92314b213e0a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_frames_to_bytes)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_frames_to_bytes</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a7d09c78a5de6741c39c4559ee2a4f2d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_prepare)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_prepare</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a777d29fe6e93ee5c42276e59cd9f56fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_start)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_start</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a39b9b812e742855e07ef257e09f95adb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_resume)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_resume</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a5c3c0596d8f773efdaed028ce43fa9c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_wait)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_wait</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a8221435d0fdf3e26d433edbc70b8da84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_state)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_state</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ae09f06e8dc74e131770e51b616d56592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_avail_update)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_avail_update</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a3e8c5e9216f38a7c672291aef8a692fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_areas_silence)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_areas_silence</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a07c0d639b80d6e526717b84808d44831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_mmap_begin)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_mmap_begin</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a97185509e6e2dbe136036d4e719ee637" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_mmap_commit)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_mmap_commit</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a295692e4381b5b7e030192ff8350f661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_readi)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_readi</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a4454ab20358b46ee23bff6ac1b65665c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_readn)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_readn</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aea2b52c92706c07846712eef5ab65887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_writei)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_writei</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a4bc42e7cca0cab8c0fcacc9c003716cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_writen)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_writen</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1abb4ac32f5255ffa2df467d86b97961e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_drain)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_drain</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a089d5c4d5ce9b4ebd224a1353350349c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_recover)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_recover</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1af575195db45007e0813de71b6f0fca4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_drop)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_drop</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a3e07ca2a96cf0b6b7edd84fc5c26283d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_area_copy)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_area_copy</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a80ccf442cb0d14d6749e174279bce3b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_poll_descriptors)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_poll_descriptors</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a580aa57284ba87635dc280fda6433038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_poll_descriptors_count)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_poll_descriptors_count</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a92416882cdf255dc8800daaff4d9d5bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_poll_descriptors_revents)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_poll_descriptors_revents</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a75f94cf3d2ae2ad60ff7bf831222590a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_format_size)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_format_size</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a179c9b170746499e072857f21c7a3196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_link)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_link</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a81e7a06093fadc0b3d3eb4aaca8faede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_delay)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_delay</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a84e6dce1b316e340b75f9fb5a5b907ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_sizeof)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_sizeof</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ac781e0f2e164ce73e26c684a2f87abaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_malloc)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_malloc</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a9af252edcdcde17e803ce3e57130e3f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_free)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_free</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a2a74332bba092589d23d30c55f259714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_any)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_any</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1abae57b0f6fcf70f307b118eb02fb0fd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_set_access)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_set_access</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ae85e75f99f11a01b7e4f25c36433a668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_set_format)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_set_format</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a9ea10acc1749c19f2c47c96f613f747d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_set_channels)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_set_channels</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a2e6b1d12889a92e65a6f0413d4cdad22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_set_rate_near)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_set_rate_near</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a75bb1d18852ef30c04cb514dd63646be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_set_rate)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_set_rate</type>
        </param>
        <briefdescription>
<para>!! </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a0ef106803f4c3764a894ca11a1e3073e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_set_rate_resample)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_set_rate_resample</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a75dec8a5aa6ddeff01e821fc7741540c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_set_buffer_size)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_set_buffer_size</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a247de743d9ad97a6990b9195131b18d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_set_buffer_size_near)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_set_buffer_size_near</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a5eb6eaeb70f626d15b5d2f8b8191a5ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_set_buffer_size_min)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_set_buffer_size_min</type>
        </param>
        <briefdescription>
<para>!! </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a5be3890558f57b2c7a0aeb54e46a529c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_set_period_size_near)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_set_period_size_near</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a93d6f74c54661b192f62b428bda3d845" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_set_periods_integer)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_set_periods_integer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a49773419c25c96c1653ff79b51738171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_set_periods_min)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_set_periods_min</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aaee75bc87789693c300aaabd0a819a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_get_buffer_size)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_get_buffer_size</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1abcba42a7a8437164475cf58f610a67bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_get_channels_min)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_get_channels_min</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a084d3b20813dc041949ae233ba6efbf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_get_channels_max)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_get_channels_max</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1af9f5ee763c428b8a86b789f063171828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_test_period_size)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_test_period_size</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ab9db6ef2d8db9902bd21bdbc3eb33aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_test_format)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_test_format</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a01791dc6f0497287ba0252c0b2f9b08e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_test_access)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_test_access</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a8a13e4c5bac4bd3c4031d7b74274090c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_dump)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_dump</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a404f4f9734fdfdd6204349cdf433e30f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aebf5651fd1540b3cd0978a153a25e21c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_get_periods_min)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_get_periods_min</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a67df056a61b544cc5c9df8057d6e3fe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_get_periods_max)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_get_periods_max</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a48b29f2c2dc54c904641385a48967e9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_set_period_size)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_set_period_size</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aa78d0dfd9c0ee4cd6017345922de06db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_get_period_size_min)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_get_period_size_min</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ac7eed4682a5810d94179d6102eb385e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_get_period_size_max)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_get_period_size_max</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aaed0d83ee9eeb1fe20d491c9b083d310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_get_buffer_size_max)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_get_buffer_size_max</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a543960b1f03bc01eb2aacea201bda35a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_get_rate_min)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_get_rate_min</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a7d81109577cf3e3fd0f9f34d6e1686a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_get_rate_max)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_get_rate_max</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a982dbcfe5d57676003905e856c8a07cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_hw_params_get_rate_numden)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_hw_params_get_rate_numden</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ae971bba8f190232d820afe13b1e295da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_sw_params_sizeof)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_sw_params_sizeof</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1af9bd31f071efd0d9176ac6eca1393eb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_sw_params_malloc)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_sw_params_malloc</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a3722024c98008cc79acf99e6f9c20012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_sw_params_current)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_sw_params_current</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a3e017b5ea1fe9b7e9ee4926b56a7192b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_sw_params_set_avail_min)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_sw_params_set_avail_min</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a40e1c777ff4176af4878ac9d9fcb8ab9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_sw_params)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_sw_params</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ab110b257b129a6a4d52851ba8046d510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_sw_params_free)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_sw_params_free</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a788f6d60ea11b6d460aabdc7b0a4ae1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_sw_params_set_start_threshold)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_sw_params_set_start_threshold</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aa576262741a90a33945d88d72400de24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_sw_params_set_stop_threshold)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_sw_params_set_stop_threshold</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a65509c90c7c54e3ef3b8ae9d7fd13d88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_sw_params_get_boundary)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_sw_params_get_boundary</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a5e4ad1d3659501f377dcdaa634258c32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_sw_params_set_silence_threshold)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_sw_params_set_silence_threshold</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a04e67a8e5cd45eca96c8a418f3e5934c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_sw_params_set_silence_size)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_sw_params_set_silence_size</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ae89ef56a988006fbc1df6bbfa06f376f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_sw_params_set_xfer_align)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_sw_params_set_xfer_align</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ac15ab4310ab947aa77f7d1a4e31b9aff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_sw_params_set_tstamp_mode)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_sw_params_set_tstamp_mode</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1addf53b1917459a820848c6f4c6c24ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_info)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_info</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1afefc5491f47a11211a753bf798fa7c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_info_sizeof)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_info_sizeof</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aa332e8e61a48f2c5f5893e95581569c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_info_malloc)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_info_malloc</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1af87d6992a5f057437e991be30b4d8ea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_info_free)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_info_free</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a49f6ea989a05f8cbd0516ffc0977684d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_info_set_device)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_info_set_device</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a5d577400d8e9ca091ff0011e2daeef4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_info_set_subdevice)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_info_set_subdevice</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a98a41bc22c7dc351dd4bd63e6b50bd84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_info_set_stream)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_info_set_stream</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ab9555fd29558ff8104e7d9dac61ddd0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_info_get_name)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_info_get_name</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a78e0fc13ddfe13673e3181daac09a5e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_info_get_card)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_info_get_card</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a188657086d4aa0fe09e7ad9c4cf21d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_ctl_pcm_next_device)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_ctl_pcm_next_device</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a09a7bc6bbe7032a904ac188afa681b2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_ctl_pcm_info)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_ctl_pcm_info</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a397c826dbacb5548338f8954784a0729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_ctl_open)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_ctl_open</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a3fe32205cdddb152bd2d65814f796e6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_ctl_close)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_ctl_close</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ac3d638900c16e2851fc16413631a0f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_ctl_card_info_malloc)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_ctl_card_info_malloc</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1af08507d5635a97fc1f2896497c5e0800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_ctl_card_info_free)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_ctl_card_info_free</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a56f1f1c94ca4a341b786d884d89eee27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_ctl_card_info)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_ctl_card_info</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a5b9fe547addbbf90edbf2b9a1fcbed1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_ctl_card_info_sizeof)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_ctl_card_info_sizeof</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a04feff72c45826cc4f124f58e16fa73b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_ctl_card_info_get_name)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_ctl_card_info_get_name</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a8d5fbd265d4b8c82eeb872be21fcc2a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_config)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_config</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a459dcb407e54341412b59e70d5e210c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_config_update)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_config_update</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a4d392f3f6096a3676c10e466f0ae4955" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_config_search)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_config_search</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a76a139b1b0d011b3efc8d2342cd43027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_config_iterator_entry)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_config_iterator_entry</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1af62117900dba2fd683c8f707ebdb361a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_config_iterator_first)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_config_iterator_first</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ae01863718e07e44d57c9778054b08d64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_config_iterator_end)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_config_iterator_end</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a4a5849c9e2d66c24a42c600360bc1144" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_config_iterator_next)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_config_iterator_next</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a7c5314306f6e0b90047bc7051e15e7f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_config_get_string)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_config_get_string</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a1c0ef406f11c268324f3b425b2b4477c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_config_get_id)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_config_get_id</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aff93bd12ee75baf5ddbe8eff1a95103a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_config_update_free_global)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_config_update_free_global</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a64b2d17a6ddc51bf97c496f908dcd5e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_status)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_status</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ae05aecd01ab48f610e3441b020a79202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_status_sizeof)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_status_sizeof</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ab729d03db1d598f780444335adddbce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_status_get_tstamp)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_status_get_tstamp</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a2e246c23a455dcb7269c4b4c5673e2b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_status_get_state)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_status_get_state</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a6f1ee41e11f3868ce3330aefe5837667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_status_get_trigger_tstamp)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_status_get_trigger_tstamp</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1abd9335b75b89182bc8f5ed76d72e2de3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_pcm_status_get_delay)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_pcm_status_get_delay</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a1fa698cf1ac7fbfffcf40530322456aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_card_next)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_card_next</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a53379e529dbbe551a280ed8fd930657a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_asoundlib_version)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_asoundlib_version</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a61172a2f8ab196238e53aa0ddea2dde7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_strerror)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_strerror</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a2fdb175a9abd507d1e13b709c3501906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PA_DEFINE_FUNC</definition>
        <argsstring>(snd_output_stdio_attach)</argsstring>
        <name>_PA_DEFINE_FUNC</name>
        <param>
          <type>snd_output_stdio_attach</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a8870966279a746b7ca10ac5576edf2e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int PaAlsa_LoadLibrary</definition>
        <argsstring>()</argsstring>
        <name>PaAlsa_LoadLibrary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="352" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="352" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a7517c2e54801c8bd73c2f6db30aeaff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaAlsa_SetLibraryPathName</definition>
        <argsstring>(const char *pathName)</argsstring>
        <name>PaAlsa_SetLibraryPathName</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>pathName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the path and name of ALSA library file if PortAudio is configured to load it dynamically (see PA_ALSA_DYNAMIC). This setting will overwrite the default name set by PA_ALSA_PATHNAME define. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pathName</parametername>
</parameternamelist>
<parameterdescription>
<para>Full path with filename. Only filename can be used, but dlopen() will lookup default searchable directories (/usr/lib;/usr/local/lib) then. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="543" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="543" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a6051622ebef2c2b18478cab556843f8b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void PaAlsa_CloseLibrary</definition>
        <argsstring>()</argsstring>
        <name>PaAlsa_CloseLibrary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="553" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="553" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ade14c5bdbcdc7fb418cba123379ed529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaAlsa_SetNumPeriods</definition>
        <argsstring>(int numPeriods)</argsstring>
        <name>PaAlsa_SetNumPeriods</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numPeriods</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the number of periods (buffer fragments) to configure devices with.</para><para>By default the number of periods is 4, this is the lowest number of periods that works well on the author&apos;s soundcard. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numPeriods</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of periods. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="590" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="590" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aceda435bfe9c0d0959dcd41043016c6c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void Terminate</definition>
        <argsstring>(struct PaUtilHostApiRepresentation *hostApi)</argsstring>
        <name>Terminate</name>
        <param>
          <type>struct <ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref> *</type>
          <declname>hostApi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>See AlsaErrorHandler and PaAlsa_Initialize for details.</para>        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="689" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="806" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1addd36fca55daaf757e041555254b05e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError IsFormatSupported</definition>
        <argsstring>(struct PaUtilHostApiRepresentation *hostApi, const PaStreamParameters *inputParameters, const PaStreamParameters *outputParameters, double sampleRate)</argsstring>
        <name>IsFormatSupported</name>
        <param>
          <type>struct <ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref> *</type>
          <declname>hostApi</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>inputParameters</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>outputParameters</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="690" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1827" bodyend="1869"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a101b6d5723ed21fced695211c4acb7da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError OpenStream</definition>
        <argsstring>(struct PaUtilHostApiRepresentation *hostApi, PaStream **s, const PaStreamParameters *inputParameters, const PaStreamParameters *outputParameters, double sampleRate, unsigned long framesPerBuffer, PaStreamFlags streamFlags, PaStreamCallback *callback, void *userData)</argsstring>
        <name>OpenStream</name>
        <param>
          <type>struct <ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref> *</type>
          <declname>hostApi</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> **</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>inputParameters</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>outputParameters</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesPerBuffer</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a37c7ac3ace7d2dd1430f40ecdee4ebb6" kindref="member">PaStreamFlags</ref></type>
          <declname>streamFlags</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a8a60fb2a5ec9cbade3f54a9c978e2710" kindref="member">PaStreamCallback</ref> *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="694" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2792" bodyend="2875"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a6684024dfdc36122d40cf7adae0e4322" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError CloseStream</definition>
        <argsstring>(PaStream *stream)</argsstring>
        <name>CloseStream</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="703" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2877" bodyend="2888"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1afa58dcb70fc29aa4c667d6d07b748f6e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError StartStream</definition>
        <argsstring>(PaStream *stream)</argsstring>
        <name>StartStream</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>stream</declname>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Utility function for determining if pcms are in running state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="704" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2984" bodyend="3016"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a39e942c55c24e34c3796d29d61889370" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError StopStream</definition>
        <argsstring>(PaStream *stream)</argsstring>
        <name>StopStream</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="705" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3128" bodyend="3131"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a28c623db69cda01e15f064fd2bf84f0f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError AbortStream</definition>
        <argsstring>(PaStream *stream)</argsstring>
        <name>AbortStream</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="706" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3133" bodyend="3136"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aa9f1516c5edd9ea34b8e150f662f8f4e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError IsStreamStopped</definition>
        <argsstring>(PaStream *s)</argsstring>
        <name>IsStreamStopped</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The stream is considered stopped before StartStream, or AFTER a call to Abort/StopStream (callback returning !paContinue is not considered) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="707" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3142" bodyend="3148"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a4f3f06c27a57b78bf59b603f30b6b466" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError IsStreamActive</definition>
        <argsstring>(PaStream *stream)</argsstring>
        <name>IsStreamActive</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="708" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3150" bodyend="3154"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ab41ee17db1430b9bb3957324f6ac20f1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref></type>
        <definition>static PaTime GetStreamTime</definition>
        <argsstring>(PaStream *stream)</argsstring>
        <name>GetStreamTime</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="709" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3156" bodyend="3181"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a3877d53c30b8b20f35f362ef07b998cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double GetStreamCpuLoad</definition>
        <argsstring>(PaStream *stream)</argsstring>
        <name>GetStreamCpuLoad</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="710" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3183" bodyend="3188"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aafc8899cd86c1e67eaf58c6031062126" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError BuildDeviceList</definition>
        <argsstring>(PaAlsaHostApiRepresentation *hostApi)</argsstring>
        <name>BuildDeviceList</name>
        <param>
          <type><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref> *</type>
          <declname>hostApi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="711" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1228" bodyend="1481"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a24549bd5ecc1b9e6c70af7a71961c8fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int SetApproximateSampleRate</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *hwParams, double sampleRate)</argsstring>
        <name>SetApproximateSampleRate</name>
        <param>
          <type>snd_pcm_t *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>snd_pcm_hw_params_t *</type>
          <declname>hwParams</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="712" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3191" bodyend="3221"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a1f05767135bca84d108e3a856eadf82c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int GetExactSampleRate</definition>
        <argsstring>(snd_pcm_hw_params_t *hwParams, double *sampleRate)</argsstring>
        <name>GetExactSampleRate</name>
        <param>
          <type>snd_pcm_hw_params_t *</type>
          <declname>hwParams</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>sampleRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="713" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3224" bodyend="3235"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a2c73f982729d88e0a5c5312165dff423" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pa__types_8h_1a9cff423f720226e66a7826c30509c465" kindref="member">PaUint32</ref></type>
        <definition>static PaUint32 PaAlsaVersionNum</definition>
        <argsstring>(void)</argsstring>
        <name>PaAlsaVersionNum</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="714" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="970" bodyend="980"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ae2b34928832709fd0989351e62ec5a7f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>static void * CallbackThreadFunc</definition>
        <argsstring>(void *userData)</argsstring>
        <name>CallbackThreadFunc</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_callback" kindref="compound">Callback</ref> thread&apos;s function.</para><para>Roughly, the workflow can be described in the following way: The number of available frames that can be processed directly is obtained from ALSA, we then request as much directly accessible memory as possible within this amount from ALSA. The buffer memory is registered with the PA buffer processor and processing is carried out with PaUtil_EndBufferProcessing. Finally, the number of processed frames is reported to ALSA. The processing can happen in several iterations untill we have consumed the known number of available frames (or an xrun is detected). </para>        </detaileddescription>
        <inbodydescription>
<para>BlockAdaption: Go on if adaption buffers are empty</para><para>Xruns Under/overflows are to be reported to the callback</para><para>FullDuplex It&apos;s possible that only one direction is being processed to avoid an under- or overflow, this should be reported correspondingly </para>        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="717" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="4172" bodyend="4361"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1af3ea5c9901a11f7b5d247a9c99c256d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>signed long</type>
        <definition>static signed long GetStreamReadAvailable</definition>
        <argsstring>(PaStream *s)</argsstring>
        <name>GetStreamReadAvailable</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="720" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="4493" bodyend="4513"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ab77d083f90194fb2e0252dc48ebb3f4f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>signed long</type>
        <definition>static signed long GetStreamWriteAvailable</definition>
        <argsstring>(PaStream *s)</argsstring>
        <name>GetStreamWriteAvailable</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="721" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="4515" bodyend="4540"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a9e7f111c33d1e80f40473846864e84fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError ReadStream</definition>
        <argsstring>(PaStream *stream, void *buffer, unsigned long frames)</argsstring>
        <name>ReadStream</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="722" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="4365" bodyend="4423"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a0cfb7772846808945bd521d23d5626eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError WriteStream</definition>
        <argsstring>(PaStream *stream, const void *buffer, unsigned long frames)</argsstring>
        <name>WriteStream</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="723" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="4425" bodyend="4490"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a90b63ffa146545c8113364e98d8b396b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref> *</type>
        <definition>static const PaAlsaDeviceInfo* GetDeviceInfo</definition>
        <argsstring>(const PaUtilHostApiRepresentation *hostApi, int device)</argsstring>
        <name>GetDeviceInfo</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref> *</type>
          <declname>hostApi</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="726" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="726" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a68bdfa54581e698d5958b6463faf43d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaAlsa_Initialize</definition>
        <argsstring>(PaUtilHostApiRepresentation **hostApi, PaHostApiIndex hostApiIndex)</argsstring>
        <name>PaAlsa_Initialize</name>
        <param>
          <type><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref> **</type>
          <declname>hostApi</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1aeef6da084c57c70aa94be97411e19930" kindref="member">PaHostApiIndex</ref></type>
          <declname>hostApiIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Uncommented because AlsaErrorHandler is unused for anything good yet. If AlsaErrorHandler is to be used, do not forget to register this callback in PaAlsa_Initialize, and unregister in Terminate. </para>        </detaileddescription>
        <inbodydescription>
<para>If AlsaErrorHandler is to be used, do not forget to unregister callback pointer in Terminate function.</para>        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="738" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="738" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a28f24783f5e7d3433cf04fb0b3e8827e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError GropeDevice</definition>
        <argsstring>(snd_pcm_t *pcm, int isPlug, StreamDirection mode, int openBlocking, PaAlsaDeviceInfo *devInfo)</argsstring>
        <name>GropeDevice</name>
        <param>
          <type>snd_pcm_t *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>isPlug</declname>
        </param>
        <param>
          <type><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" kindref="member">StreamDirection</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>openBlocking</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref> *</type>
          <declname>devInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine max channels and default latencies.</para><para>This function provides functionality to grope an opened (might be opened for capture or playback) pcm device for traits like max channels, suitable default latencies and default sample rate. Upon error, max channels is set to zero, and a suitable result returned. The device is closed before returning. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="835" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="835" bodyend="947"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a98f6ba97423e5c5e26d86586ffade958" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void InitializeDeviceInfo</definition>
        <argsstring>(PaDeviceInfo *deviceInfo)</argsstring>
        <name>InitializeDeviceInfo</name>
        <param>
          <type><ref refid="struct_pa_device_info" kindref="compound">PaDeviceInfo</ref> *</type>
          <declname>deviceInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="951" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="951" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a1af3050f285b362f0e84ad72134573c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref> *</type>
        <definition>static const HwDevInfo* FindDeviceName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>FindDeviceName</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1031" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1031" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a42b560251d8e375d5ddfb4c0c22aca92" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsa_StrDup</definition>
        <argsstring>(PaAlsaHostApiRepresentation *alsaApi, char **dst, const char *src)</argsstring>
        <name>PaAlsa_StrDup</name>
        <param>
          <type><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref> *</type>
          <declname>alsaApi</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1046" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1046" bodyend="1061"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a1a03af29384f2c61fe0eed068d54a9d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int IgnorePlugin</definition>
        <argsstring>(const char *pluginId)</argsstring>
        <name>IgnorePlugin</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>pluginId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1065" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1065" bodyend="1080"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a0384d1697e131b8d76bf70f0c06055fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* SkipCardDetailsInName</definition>
        <argsstring>(char *infoSkipName, char *cardRefName)</argsstring>
        <name>SkipCardDetailsInName</name>
        <param>
          <type>char *</type>
          <declname>infoSkipName</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>cardRefName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1083" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1083" bodyend="1112"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a2fa56cdc5232b1825a6f1883dcc005b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int OpenPcm</definition>
        <argsstring>(snd_pcm_t **pcmp, const char *name, snd_pcm_stream_t stream, int mode, int waitOnBusy)</argsstring>
        <name>OpenPcm</name>
        <param>
          <type>snd_pcm_t **</type>
          <declname>pcmp</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>snd_pcm_stream_t</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>waitOnBusy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open PCM device.</para><para>Wrapper around alsa_snd_pcm_open which may repeatedly retry opening a device if it is busy, for a certain time. This is because dmix may temporarily hold on to a device after it (dmix) has been opened and closed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Open mode (e.g., SND_PCM_BLOCKING). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>waitOnBusy</parametername>
</parameternamelist>
<parameterdescription>
<para>Retry opening busy device for up to one second? </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1122" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1122" bodyend="1148"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a727c2b6f873c9dd88103d0571de8c54d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError FillInDevInfo</definition>
        <argsstring>(PaAlsaHostApiRepresentation *alsaApi, HwDevInfo *deviceHwInfo, int blocking, PaAlsaDeviceInfo *devInfo, int *devIdx)</argsstring>
        <name>FillInDevInfo</name>
        <param>
          <type><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref> *</type>
          <declname>alsaApi</declname>
        </param>
        <param>
          <type><ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref> *</type>
          <declname>deviceHwInfo</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>blocking</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref> *</type>
          <declname>devInfo</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>devIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1150" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1150" bodyend="1225"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aa7b22a80a194800acc630616aea7b172" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError ValidateParameters</definition>
        <argsstring>(const PaStreamParameters *parameters, PaUtilHostApiRepresentation *hostApi, StreamDirection mode)</argsstring>
        <name>ValidateParameters</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref> *</type>
          <declname>hostApi</declname>
        </param>
        <param>
          <type><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" kindref="member">StreamDirection</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1484" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1484" bodyend="1518"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a8a5b557a031fb4c9c2a98619811385f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref></type>
        <definition>static PaSampleFormat GetAvailableFormats</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>GetAvailableFormats</name>
        <param>
          <type>snd_pcm_t *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1521" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1521" bodyend="1553"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a6292e3cf40974979d96cc99f741079f0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void LogAllAvailableFormats</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>LogAllAvailableFormats</name>
        <param>
          <type>snd_pcm_t *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1556" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1556" bodyend="1675"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ac9dd69c06d78370429a73fc729fada6c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>snd_pcm_format_t</type>
        <definition>static snd_pcm_format_t Pa2AlsaFormat</definition>
        <argsstring>(PaSampleFormat paFormat)</argsstring>
        <name>Pa2AlsaFormat</name>
        <param>
          <type><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref></type>
          <declname>paFormat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1677" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1677" bodyend="1706"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a8ce378f1913ce9615a817e3fd710491d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError AlsaOpen</definition>
        <argsstring>(const PaUtilHostApiRepresentation *hostApi, const PaStreamParameters *params, StreamDirection streamDir, snd_pcm_t **pcm)</argsstring>
        <name>AlsaOpen</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref> *</type>
          <declname>hostApi</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" kindref="member">StreamDirection</ref></type>
          <declname>streamDir</declname>
        </param>
        <param>
          <type>snd_pcm_t **</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open an ALSA pcm handle.</para><para>The device to be open can be specified by name in a custom <ref refid="struct_pa_alsa_stream_info" kindref="compound">PaAlsaStreamInfo</ref> struct, or it will be by the Portaudio device number supplied in the stream parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1713" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1713" bodyend="1745"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1af61ed6b2de4401efccb9dab7c6b8ca93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError TestParameters</definition>
        <argsstring>(const PaUtilHostApiRepresentation *hostApi, const PaStreamParameters *parameters, double sampleRate, StreamDirection streamDir)</argsstring>
        <name>TestParameters</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref> *</type>
          <declname>hostApi</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <param>
          <type><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" kindref="member">StreamDirection</ref></type>
          <declname>streamDir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1747" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1747" bodyend="1825"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a781821dc6760514018739bbd6a5e1ced" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStreamComponent_Initialize</definition>
        <argsstring>(PaAlsaStreamComponent *self, PaAlsaHostApiRepresentation *alsaApi, const PaStreamParameters *params, StreamDirection streamDir, int callbackMode)</argsstring>
        <name>PaAlsaStreamComponent_Initialize</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref> *</type>
          <declname>alsaApi</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" kindref="member">StreamDirection</ref></type>
          <declname>streamDir</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>callbackMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1872" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1872" bodyend="1938"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ac512431fb6694f03d40c62ce276c2aab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void PaAlsaStreamComponent_Terminate</definition>
        <argsstring>(PaAlsaStreamComponent *self)</argsstring>
        <name>PaAlsaStreamComponent_Terminate</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1940" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1940" bodyend="1945"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aacc5327ebf5e9da6c88533399499c5a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStreamComponent_InitialConfigure</definition>
        <argsstring>(PaAlsaStreamComponent *self, const PaStreamParameters *params, int primeBuffers, snd_pcm_hw_params_t *hwParams, double *sampleRate)</argsstring>
        <name>PaAlsaStreamComponent_InitialConfigure</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>primeBuffers</declname>
        </param>
        <param>
          <type>snd_pcm_hw_params_t *</type>
          <declname>hwParams</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>sampleRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initiate configuration, preparing for determining a period size suitable for both capture and playback components. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="1958" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="1958" bodyend="2066"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aabf34c2bc7f38d8b6ab9a60d948e6c35" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStreamComponent_FinishConfigure</definition>
        <argsstring>(PaAlsaStreamComponent *self, snd_pcm_hw_params_t *hwParams, const PaStreamParameters *params, int primeBuffers, double sampleRate, PaTime *latency)</argsstring>
        <name>PaAlsaStreamComponent_FinishConfigure</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>snd_pcm_hw_params_t *</type>
          <declname>hwParams</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>primeBuffers</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref> *</type>
          <declname>latency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finish the configuration of the component&apos;s ALSA device.</para><para>As part of this method, the component&apos;s alsaBufferSize attribute will be set. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>latency</parametername>
</parameternamelist>
<parameterdescription>
<para>The latency for this component. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="2073" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2073" bodyend="2135"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a6c1bc974088ba29fb5a40d25df9028a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStream_Initialize</definition>
        <argsstring>(PaAlsaStream *self, PaAlsaHostApiRepresentation *alsaApi, const PaStreamParameters *inParams, const PaStreamParameters *outParams, double sampleRate, unsigned long framesPerUserBuffer, PaStreamCallback callback, PaStreamFlags streamFlags, void *userData)</argsstring>
        <name>PaAlsaStream_Initialize</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref> *</type>
          <declname>alsaApi</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>inParams</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>outParams</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesPerUserBuffer</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a8a60fb2a5ec9cbade3f54a9c978e2710" kindref="member">PaStreamCallback</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a37c7ac3ace7d2dd1430f40ecdee4ebb6" kindref="member">PaStreamFlags</ref></type>
          <declname>streamFlags</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="2137" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2137" bodyend="2188"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ab9b2714b2a544e247365d56307ee1614" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void PaAlsaStream_Terminate</definition>
        <argsstring>(PaAlsaStream *self)</argsstring>
        <name>PaAlsaStream_Terminate</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free resources associated with stream, and eventually stream itself.</para><para>Frees allocated memory, and terminates individual StreamComponents. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="2194" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2194" bodyend="2211"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a722183c820f07d2ab17574fe5942bab5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int CalculatePollTimeout</definition>
        <argsstring>(const PaAlsaStream *stream, unsigned long frames)</argsstring>
        <name>CalculatePollTimeout</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate polling timeout</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frames</parametername>
</parameternamelist>
<parameterdescription>
<para>Time to wait </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Polling timeout in milliseconds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="2218" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2218" bodyend="2223"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a8468f7b3461e1bdbc8098704b13cda35" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long PaAlsa_AlignBackward</definition>
        <argsstring>(unsigned long v, unsigned long align)</argsstring>
        <name>PaAlsa_AlignBackward</name>
        <param>
          <type>unsigned long</type>
          <declname>v</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Align value in backward direction.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to align. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="2230" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2230" bodyend="2233"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a9ab1ff83f067cfb52053c31d7df90926" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long PaAlsa_AlignForward</definition>
        <argsstring>(unsigned long v, unsigned long align)</argsstring>
        <name>PaAlsa_AlignForward</name>
        <param>
          <type>unsigned long</type>
          <declname>v</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Align value in forward direction.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to align. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>Alignment. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="2240" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2240" bodyend="2244"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a6ff33d02d99b4f02297542578523f5b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long PaAlsa_GetFramesPerHostBuffer</definition>
        <argsstring>(unsigned long userFramesPerBuffer, PaTime suggestedLatency, double sampleRate)</argsstring>
        <name>PaAlsa_GetFramesPerHostBuffer</name>
        <param>
          <type>unsigned long</type>
          <declname>userFramesPerBuffer</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref></type>
          <declname>suggestedLatency</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get size of host buffer maintained from the number of user frames, sample rate and suggested latency. Minimum double buffering is maintained to allow 100% CPU usage inside user callback.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>userFramesPerBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>User buffer size in number of frames. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>suggestedLatency</parametername>
</parameternamelist>
<parameterdescription>
<para>User provided desired latency. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampleRate</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_sample" kindref="compound">Sample</ref> rate. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="2253" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2253" bodyend="2257"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a273e3f04c59531465f1aa4215e96a845" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStreamComponent_DetermineFramesPerBuffer</definition>
        <argsstring>(PaAlsaStreamComponent *self, const PaStreamParameters *params, unsigned long framesPerUserBuffer, double sampleRate, snd_pcm_hw_params_t *hwParams, int *accurate)</argsstring>
        <name>PaAlsaStreamComponent_DetermineFramesPerBuffer</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesPerUserBuffer</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <param>
          <type>snd_pcm_hw_params_t *</type>
          <declname>hwParams</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>accurate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine size per host buffer.</para><para>During this method call, the component&apos;s framesPerPeriod attribute gets computed, and the corresponding period size gets configured for the device. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>accurate</parametername>
</parameternamelist>
<parameterdescription>
<para>If the configured period size is non-integer, this will be set to 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="2265" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2265" bodyend="2481"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ac1b96fcf0fc4449c2fe7fb94529d98f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStream_DetermineFramesPerBuffer</definition>
        <argsstring>(PaAlsaStream *self, double sampleRate, const PaStreamParameters *inputParameters, const PaStreamParameters *outputParameters, unsigned long framesPerUserBuffer, snd_pcm_hw_params_t *hwParamsCapture, snd_pcm_hw_params_t *hwParamsPlayback, PaUtilHostBufferSizeMode *hostBufferSizeMode)</argsstring>
        <name>PaAlsaStream_DetermineFramesPerBuffer</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>inputParameters</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>outputParameters</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesPerUserBuffer</declname>
        </param>
        <param>
          <type>snd_pcm_hw_params_t *</type>
          <declname>hwParamsCapture</declname>
        </param>
        <param>
          <type>snd_pcm_hw_params_t *</type>
          <declname>hwParamsPlayback</declname>
        </param>
        <param>
          <type><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484f" kindref="member">PaUtilHostBufferSizeMode</ref> *</type>
          <declname>hostBufferSizeMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="2517" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2517" bodyend="2701"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a21e0ffb4bd664f586b978e806fecd771" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStream_Configure</definition>
        <argsstring>(PaAlsaStream *self, const PaStreamParameters *inParams, const PaStreamParameters *outParams, double sampleRate, unsigned long framesPerUserBuffer, double *inputLatency, double *outputLatency, PaUtilHostBufferSizeMode *hostBufferSizeMode)</argsstring>
        <name>PaAlsaStream_Configure</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>inParams</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>outParams</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesPerUserBuffer</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>inputLatency</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>outputLatency</declname>
        </param>
        <param>
          <type><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484f" kindref="member">PaUtilHostBufferSizeMode</ref> *</type>
          <declname>hostBufferSizeMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set up ALSA stream parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="2706" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2706" bodyend="2790"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1adfc0b0a8615af3196fd70d71ca562113" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void SilenceBuffer</definition>
        <argsstring>(PaAlsaStream *stream)</argsstring>
        <name>SilenceBuffer</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="2890" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2890" bodyend="2898"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ac3372f4a10d1d8f76db9f40d6f4e7777" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError AlsaStart</definition>
        <argsstring>(PaAlsaStream *stream, int priming)</argsstring>
        <name>AlsaStart</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>priming</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start/prepare pcm(s) for streaming.</para><para>Depending on whether the stream is in callback or blocking mode, we will respectively start or simply prepare the playback pcm. If the buffer has <emphasis>not</emphasis> been primed, we will in callback mode prepare and silence the buffer before starting playback. In blocking mode we simply prepare, as the playback will be started automatically as the user writes to output.</para><para>The capture pcm, however, will simply be prepared and started. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="2909" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="2909" bodyend="2941"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a0dbb19ad08cbb36560f9bf9f64da092f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError AlsaStop</definition>
        <argsstring>(PaAlsaStream *stream, int abort)</argsstring>
        <name>AlsaStop</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>abort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop PCM handle, either softly or abruptly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3020" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3020" bodyend="3075"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1abdcf5c2debe7d3e852efe7eedf26ceeb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError RealStop</definition>
        <argsstring>(PaAlsaStream *stream, int abort)</argsstring>
        <name>RealStop</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>abort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop or abort stream.</para><para>If a stream is in callback mode we will have to inspect whether the background thread has finished, or we will have to take it out. In either case we join the thread before returning. In blocking mode, we simply tell ALSA to stop abruptly (abort) or finish buffers (drain)</para><para>Stream will be considered inactive (!PaAlsaStream::isActive) after a call to this function </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3086" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3086" bodyend="3126"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a58b382eec537b370db813676818e171c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError AlsaRestart</definition>
        <argsstring>(PaAlsaStream *stream)</argsstring>
        <name>AlsaRestart</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3240" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3240" bodyend="3254"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ad7abc3c11e17e17307915cc90a6a2416" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStream_HandleXrun</definition>
        <argsstring>(PaAlsaStream *self)</argsstring>
        <name>PaAlsaStream_HandleXrun</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Recover from xrun state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3259" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3259" bodyend="3320"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a6411cae3b1ac80ca1974422d4a5cf9ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError ContinuePoll</definition>
        <argsstring>(const PaAlsaStream *stream, StreamDirection streamDir, int *pollTimeout, int *continuePoll)</argsstring>
        <name>ContinuePoll</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" kindref="member">StreamDirection</ref></type>
          <declname>streamDir</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>pollTimeout</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>continuePoll</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decide if we should continue polling for specified direction, eventually adjust the poll timeout. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3325" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3325" bodyend="3379"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ae31769054b2cbea634e78e3025de571c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void OnExit</definition>
        <argsstring>(void *data)</argsstring>
        <name>OnExit</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3383" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3383" bodyend="3403"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1acc7fd336bdd671ce49cb0eba7f0d1adb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void CalculateTimeInfo</definition>
        <argsstring>(PaAlsaStream *stream, PaStreamCallbackTimeInfo *timeInfo)</argsstring>
        <name>CalculateTimeInfo</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref> *</type>
          <declname>timeInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3405" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3405" bodyend="3453"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1af59e356c536e31a42fd88f3102adb6db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStreamComponent_EndProcessing</definition>
        <argsstring>(PaAlsaStreamComponent *self, unsigned long numFrames, int *xrun)</argsstring>
        <name>PaAlsaStreamComponent_EndProcessing</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>numFrames</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>xrun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called after buffer processing is finished.</para><para>A number of mmapped frames is committed, it is possible that an xrun has occurred in the meantime.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numFrames</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of frames that has been processed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xrun</parametername>
</parameternamelist>
<parameterdescription>
<para>Return whether an xrun has occurred </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3462" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3462" bodyend="3508"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a8cd99ba4d731abf82d35c3b3b08ad527" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>static unsigned char* ExtractAddress</definition>
        <argsstring>(const snd_pcm_channel_area_t *area, snd_pcm_uframes_t offset)</argsstring>
        <name>ExtractAddress</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> snd_pcm_channel_area_t *</type>
          <declname>area</declname>
        </param>
        <param>
          <type>snd_pcm_uframes_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3511" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3511" bodyend="3514"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ab22c4e14dbdd613a4ec8a4b832297d68" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStreamComponent_DoChannelAdaption</definition>
        <argsstring>(PaAlsaStreamComponent *self, PaUtilBufferProcessor *bp, int numFrames)</argsstring>
        <name>PaAlsaStreamComponent_DoChannelAdaption</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numFrames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Do necessary adaption between user and host channels.</para><para>ChannelAdaption Adapting between user and host channels can involve silencing unused channels and duplicating mono information if host outputs come in pairs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3521" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3521" bodyend="3584"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a755d31f00f98d0874d94a52131fd30ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStream_EndProcessing</definition>
        <argsstring>(PaAlsaStream *self, unsigned long numFrames, int *xrunOccurred)</argsstring>
        <name>PaAlsaStream_EndProcessing</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>numFrames</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>xrunOccurred</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3586" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3586" bodyend="3607"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ab52360f9a553bb08d4c4b9c01093c10d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStreamComponent_GetAvailableFrames</definition>
        <argsstring>(PaAlsaStreamComponent *self, unsigned long *numFrames, int *xrunOccurred)</argsstring>
        <name>PaAlsaStreamComponent_GetAvailableFrames</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>numFrames</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>xrunOccurred</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the number of available frames. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3612" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3612" bodyend="3632"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1aee2e9ec0d186182a88f2ebfebe263021" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStreamComponent_BeginPolling</definition>
        <argsstring>(PaAlsaStreamComponent *self, struct pollfd *pfds)</argsstring>
        <name>PaAlsaStreamComponent_BeginPolling</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>struct pollfd *</type>
          <declname>pfds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill in pollfd objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3636" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3636" bodyend="3646"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a4fa77949186e5c4bf6c1690ba3e11e0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStreamComponent_EndPolling</definition>
        <argsstring>(PaAlsaStreamComponent *self, struct pollfd *pfds, int *shouldPoll, int *xrun)</argsstring>
        <name>PaAlsaStreamComponent_EndPolling</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>struct pollfd *</type>
          <declname>pfds</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>shouldPoll</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>xrun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Examine results from poll().</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pfds</parametername>
</parameternamelist>
<parameterdescription>
<para>pollfds to inspect </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shouldPoll</parametername>
</parameternamelist>
<parameterdescription>
<para>Should we continue to poll </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xrun</parametername>
</parameternamelist>
<parameterdescription>
<para>Has an xrun occurred </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3654" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3654" bodyend="3689"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a1cbe0a23b6808cf4e3ec9b29b6f18084" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStream_GetAvailableFrames</definition>
        <argsstring>(PaAlsaStream *self, int queryCapture, int queryPlayback, unsigned long *available, int *xrunOccurred)</argsstring>
        <name>PaAlsaStream_GetAvailableFrames</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>queryCapture</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>queryPlayback</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>available</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>xrunOccurred</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of available frames for this stream.</para><para>FullDuplex The minimum available for the two directions is calculated, it might be desirable to ignore one direction however (not marked ready from poll), so this is controlled by queryCapture and queryPlayback.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryCapture</parametername>
</parameternamelist>
<parameterdescription>
<para>Check available for capture </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queryPlayback</parametername>
</parameternamelist>
<parameterdescription>
<para>Check available for playback </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>available</parametername>
</parameternamelist>
<parameterdescription>
<para>The returned number of frames </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xrunOccurred</parametername>
</parameternamelist>
<parameterdescription>
<para>Return whether an xrun has occurred </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3701" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3701" bodyend="3746"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ab31c86062fea461fc4ed15661b8be5ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStream_WaitForFrames</definition>
        <argsstring>(PaAlsaStream *self, unsigned long *framesAvail, int *xrunOccurred)</argsstring>
        <name>PaAlsaStream_WaitForFrames</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>framesAvail</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>xrunOccurred</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wait for and report available buffer space from ALSA.</para><para>Unless ALSA reports a minimum of frames available for I/O, we poll the ALSA filedescriptors for more. Both of these operations can uncover xrun conditions.</para><para>Xruns Both polling and querying available frames can report an xrun condition.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>framesAvail</parametername>
</parameternamelist>
<parameterdescription>
<para>Return the number of available frames </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xrunOccurred</parametername>
</parameternamelist>
<parameterdescription>
<para>Return whether an xrun has occurred </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3758" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3758" bodyend="3938"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a9dd52635b512c7fe75bbc3084c83834a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStreamComponent_RegisterChannels</definition>
        <argsstring>(PaAlsaStreamComponent *self, PaUtilBufferProcessor *bp, unsigned long *numFrames, int *xrun)</argsstring>
        <name>PaAlsaStreamComponent_RegisterChannels</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>numFrames</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>xrun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register per-channel ALSA buffer information with buffer processor.</para><para>Mmapped buffer space is acquired from ALSA, and registered with the buffer processor. Differences between the number of host and user channels is taken into account.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numFrames</parametername>
</parameternamelist>
<parameterdescription>
<para>On entrance the number of requested frames, on exit the number of contiguously accessible frames. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="3947" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="3947" bodyend="4050"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a02ad33d86b9142bf993c7bb246420a08" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError PaAlsaStream_SetUpBuffers</definition>
        <argsstring>(PaAlsaStream *self, unsigned long *numFrames, int *xrunOccurred)</argsstring>
        <name>PaAlsaStream_SetUpBuffers</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>numFrames</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>xrunOccurred</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initiate buffer processing.</para><para>ALSA buffers are registered with the PA buffer processor and the buffer size (in frames) set.</para><para>FullDuplex If both directions are being processed, the minimum amount of frames for the two directions is calculated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numFrames</parametername>
</parameternamelist>
<parameterdescription>
<para>On entrance the number of available frames, on exit the number of received frames </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xrunOccurred</parametername>
</parameternamelist>
<parameterdescription>
<para>Return whether an xrun has occurred </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="4062" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="4062" bodyend="4162"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ac33a394742540a3b6666d77698a72e82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaAlsa_InitializeStreamInfo</definition>
        <argsstring>(PaAlsaStreamInfo *info)</argsstring>
        <name>PaAlsa_InitializeStreamInfo</name>
        <param>
          <type><ref refid="struct_pa_alsa_stream_info" kindref="compound">PaAlsaStreamInfo</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize host API specific structure, call this before setting relevant attributes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="4544" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="4544" bodyend="4550"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1accc41e7fd89dc0a6163d54a4f25fb242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaAlsa_EnableRealtimeScheduling</definition>
        <argsstring>(PaStream *s, int enable)</argsstring>
        <name>PaAlsa_EnableRealtimeScheduling</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instruct whether to enable real-time priority when starting the audio thread.</para><para>If this is turned on by the stream is started, the audio callback thread will be created with the FIFO scheduling policy, which is suitable for realtime operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="4552" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="4552" bodyend="4556"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a58cd09546735887032bc467129896811" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>static PaError GetAlsaStreamPointer</definition>
        <argsstring>(PaStream *s, PaAlsaStream **stream)</argsstring>
        <name>GetAlsaStreamPointer</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref> **</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="4566" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="4566" bodyend="4583"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1ac31edeb99ef568fc89418d77bd4ca624" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaAlsa_GetStreamInputCard</definition>
        <argsstring>(PaStream *s, int *card)</argsstring>
        <name>PaAlsa_GetStreamInputCard</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the ALSA-lib card index of this stream&apos;s input device. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="4585" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="4585" bodyend="4600"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a04d7cd7252120eadf0ab3141ba5a7d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaAlsa_GetStreamOutputCard</definition>
        <argsstring>(PaStream *s, int *card)</argsstring>
        <name>PaAlsa_GetStreamOutputCard</name>
        <param>
          <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the ALSA-lib card index of this stream&apos;s output device. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="4602" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="4602" bodyend="4617"/>
      </memberdef>
      <memberdef kind="function" id="pa__linux__alsa_8c_1a2992cf7c30de5aaea222ec762fc56ad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaAlsa_SetRetriesBusy</definition>
        <argsstring>(int retries)</argsstring>
        <name>PaAlsa_SetRetriesBusy</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>retries</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the maximum number of times to retry opening busy device (sleeping for a short interval inbetween). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" line="4619" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c" bodystart="4619" bodyend="4623"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>pa_linux_alsa.c<sp/>1911<sp/>2013-10-17<sp/>12:44:09Z<sp/>gineera<sp/>$</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>PortAudio<sp/>Portable<sp/>Real-Time<sp/>Audio<sp/>Library</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Latest<sp/>Version<sp/>at:<sp/>http://www.portaudio.com</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>ALSA<sp/>implementation<sp/>by<sp/>Joshua<sp/>Haberman<sp/>and<sp/>Arve<sp/>Knudsen</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2002<sp/>Joshua<sp/>Haberman<sp/>&lt;joshua@haberman.com&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2005-2009<sp/>Arve<sp/>Knudsen<sp/>&lt;arve.knudsen@gmail.com&gt;</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008<sp/>Kevin<sp/>Kofler<sp/>&lt;kevin.kofler@chello.at&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Based<sp/>on<sp/>the<sp/>Open<sp/>Source<sp/>API<sp/>proposed<sp/>by<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2002<sp/>Ross<sp/>Bencina,<sp/>Phil<sp/>Burk</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="pa__linux__alsa_8c_1a705350c14c1f28bb8d6d57dafbf9ccff" refkind="member"><highlight class="preprocessor">#define<sp/>ALSA_PCM_NEW_HW_PARAMS_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="pa__linux__alsa_8c_1a5b61c3b8eee0c6801209e39a760b928a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALSA_PCM_NEW_SW_PARAMS_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;alsa/asoundlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ALSA_PCM_NEW_HW_PARAMS_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ALSA_PCM_NEW_SW_PARAMS_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/poll.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>strlen()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>sig_atomic_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PA_ALSA_DYNAMIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;dlfcn.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>dlXXX<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portaudio_8h" kindref="compound">portaudio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__util_8h" kindref="compound">pa_util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__unix__util_8h" kindref="compound">pa_unix_util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__allocation_8h" kindref="compound">pa_allocation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__hostapi_8h" kindref="compound">pa_hostapi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__stream_8h" kindref="compound">pa_stream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__cpuload_8h" kindref="compound">pa_cpuload.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__process_8h" kindref="compound">pa_process.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__endianness_8h" kindref="compound">pa_endianness.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__debugprint_8h" kindref="compound">pa_debugprint.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__linux__alsa_8h" kindref="compound">pa_linux_alsa.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Add<sp/>missing<sp/>define<sp/>(for<sp/>compatibility<sp/>with<sp/>older<sp/>ALSA<sp/>versions)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SND_PCM_TSTAMP_ENABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="pa__linux__alsa_8c_1aff83aac9633496129e2cdf9442c4ad87" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>SND_PCM_TSTAMP_ENABLE<sp/>SND_PCM_TSTAMP_MMAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Combine<sp/>version<sp/>elements<sp/>into<sp/>a<sp/>single<sp/>(unsigned)<sp/>integer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="pa__linux__alsa_8c_1ad58ac533f6bb5499e822284ce6a4f377" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALSA_VERSION_INT(major,<sp/>minor,<sp/>subminor)<sp/><sp/>((major<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(minor<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>subminor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>acceptable<sp/>tolerance<sp/>of<sp/>sample<sp/>rate<sp/>set,<sp/>to<sp/>that<sp/>requested<sp/>(as<sp/>a<sp/>ratio,<sp/>eg<sp/>50<sp/>is<sp/>2%,<sp/>100<sp/>is<sp/>1%)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="pa__linux__alsa_8c_1af59870a8b44c748c2933363c8d96b296" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RATE_MAX_DEVIATE_RATIO<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Defines<sp/>Alsa<sp/>function<sp/>types<sp/>and<sp/>pointers<sp/>to<sp/>these<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PA_DEFINE_FUNC(x)<sp/><sp/>typedef<sp/>typeof(x)<sp/>x##_ft;<sp/>static<sp/>x##_ft<sp/>*alsa_##x<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Alloca<sp/>helper.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="pa__linux__alsa_8c_1a64a0322b1e1b4e01d1cf02d6afd1d8bf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__alsa_snd_alloca(ptr,type)<sp/>do<sp/>{<sp/>size_t<sp/>__alsa_alloca_size<sp/>=<sp/>alsa_##type##_sizeof();<sp/>(*ptr)<sp/>=<sp/>(type##_t<sp/>*)<sp/>alloca(__alsa_alloca_size);<sp/>memset(*ptr,<sp/>0,<sp/>__alsa_alloca_size);<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_open);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_close);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_nonblock);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_frames_to_bytes);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_prepare);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_start);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_resume);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_wait);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_state);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_avail_update);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_areas_silence);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_mmap_begin);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_mmap_commit);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_readi);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_readn);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_writei);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_writen);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_drain);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_recover);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_drop);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_area_copy);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_poll_descriptors);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_poll_descriptors_count);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_poll_descriptors_revents);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_format_size);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_link);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_delay);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_sizeof);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_malloc);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_free);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_any);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_set_access);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_set_format);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_set_channels);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//_PA_DEFINE_FUNC(snd_pcm_hw_params_set_periods_near);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_set_rate_near);<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_set_rate);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_set_rate_resample);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//_PA_DEFINE_FUNC(snd_pcm_hw_params_set_buffer_time_near);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_set_buffer_size);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_set_buffer_size_near);<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_set_buffer_size_min);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//_PA_DEFINE_FUNC(snd_pcm_hw_params_set_period_time_near);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_set_period_size_near);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_set_periods_integer);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_set_periods_min);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_get_buffer_size);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//_PA_DEFINE_FUNC(snd_pcm_hw_params_get_period_size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//_PA_DEFINE_FUNC(snd_pcm_hw_params_get_access);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//_PA_DEFINE_FUNC(snd_pcm_hw_params_get_periods);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//_PA_DEFINE_FUNC(snd_pcm_hw_params_get_rate);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_get_channels_min);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_get_channels_max);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_test_period_size);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_test_format);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_test_access);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_dump);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_get_periods_min);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_get_periods_max);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_set_period_size);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_get_period_size_min);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_get_period_size_max);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_get_buffer_size_max);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_get_rate_min);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_get_rate_max);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_hw_params_get_rate_numden);</highlight></codeline>
<codeline lineno="170" refid="pa__linux__alsa_8c_1aa154c2bb63aa4b6f8aad17e8c828396c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>alsa_snd_pcm_hw_params_alloca(ptr)<sp/>__alsa_snd_alloca(ptr,<sp/>snd_pcm_hw_params)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_sw_params_sizeof);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_sw_params_malloc);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_sw_params_current);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_sw_params_set_avail_min);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_sw_params);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_sw_params_free);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_sw_params_set_start_threshold);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_sw_params_set_stop_threshold);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_sw_params_get_boundary);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_sw_params_set_silence_threshold);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_sw_params_set_silence_size);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_sw_params_set_xfer_align);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_sw_params_set_tstamp_mode);</highlight></codeline>
<codeline lineno="185" refid="pa__linux__alsa_8c_1a008e32f49ee6737893486a40b089827f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>alsa_snd_pcm_sw_params_alloca(ptr)<sp/>__alsa_snd_alloca(ptr,<sp/>snd_pcm_sw_params)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_info);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_info_sizeof);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_info_malloc);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_info_free);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_info_set_device);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_info_set_subdevice);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_info_set_stream);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_info_get_name);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_info_get_card);</highlight></codeline>
<codeline lineno="196" refid="pa__linux__alsa_8c_1aaa0a47047adc52963b11d9be20235346" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>alsa_snd_pcm_info_alloca(ptr)<sp/>__alsa_snd_alloca(ptr,<sp/>snd_pcm_info)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_ctl_pcm_next_device);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_ctl_pcm_info);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_ctl_open);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_ctl_close);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_ctl_card_info_malloc);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_ctl_card_info_free);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_ctl_card_info);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_ctl_card_info_sizeof);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_ctl_card_info_get_name);</highlight></codeline>
<codeline lineno="207" refid="pa__linux__alsa_8c_1ad6363b683f708bbe9616906956fea5a9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>alsa_snd_ctl_card_info_alloca(ptr)<sp/>__alsa_snd_alloca(ptr,<sp/>snd_ctl_card_info)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_config);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_config_update);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_config_search);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_config_iterator_entry);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_config_iterator_first);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_config_iterator_end);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_config_iterator_next);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_config_get_string);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_config_get_id);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_config_update_free_global);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_status);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_status_sizeof);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_status_get_tstamp);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_status_get_state);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_status_get_trigger_tstamp);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_pcm_status_get_delay);</highlight></codeline>
<codeline lineno="226" refid="pa__linux__alsa_8c_1a52087bf8ca51ff0145dd1ed1a7fa6650" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>alsa_snd_pcm_status_alloca(ptr)<sp/>__alsa_snd_alloca(ptr,<sp/>snd_pcm_status)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_card_next);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_asoundlib_version);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_strerror);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6b3079cec4e6dda96f8e58cd9a5ac4de" kindref="member">_PA_DEFINE_FUNC</ref>(snd_output_stdio_attach);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="pa__linux__alsa_8c_1a60348909c2d3bf5811e39782977197c1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>alsa_snd_config_for_each(pos,<sp/>next,<sp/>node)\</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>(pos<sp/>=<sp/>alsa_snd_config_iterator_first(node),\</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/>alsa_snd_config_iterator_next(pos);\</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>!=<sp/>alsa_snd_config_iterator_end(node);<sp/>pos<sp/>=<sp/>next,<sp/>next<sp/>=<sp/>alsa_snd_config_iterator_next(pos))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_PA_DEFINE_FUNC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Redefine<sp/>&apos;PA_ALSA_PATHNAME&apos;<sp/>to<sp/>a<sp/>different<sp/>Alsa<sp/>library<sp/>name<sp/>if<sp/>desired.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PA_ALSA_PATHNAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="pa__linux__alsa_8c_1a6089c526fbee9e2052de21f6226b8fab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PA_ALSA_PATHNAME<sp/>&quot;libasound.so&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*g_AlsaLibName<sp/>=<sp/><ref refid="pa__linux__alsa_8c_1a6089c526fbee9e2052de21f6226b8fab" kindref="member">PA_ALSA_PATHNAME</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Handle<sp/>to<sp/>dynamically<sp/>loaded<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*g_AlsaLib<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PA_ALSA_DYNAMIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PA_LOCAL_IMPL(x)<sp/>__pa_local_##x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_PA_LOCAL_IMPL(snd_pcm_hw_params_set_rate_near)<sp/>(snd_pcm_t<sp/>*pcm,<sp/>snd_pcm_hw_params_t<sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dir)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<sp/>ret<sp/>=<sp/>alsa_snd_pcm_hw_params_set_rate(pcm,<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/>(*val),<sp/>(*dir))<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_PA_LOCAL_IMPL(snd_pcm_hw_params_set_buffer_size_near)<sp/>(snd_pcm_t<sp/>*pcm,<sp/>snd_pcm_hw_params_t<sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/>snd_pcm_uframes_t<sp/>*val)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<sp/>ret<sp/>=<sp/>alsa_snd_pcm_hw_params_set_buffer_size(pcm,<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/>(*val))<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_PA_LOCAL_IMPL(snd_pcm_hw_params_set_period_size_near)<sp/>(snd_pcm_t<sp/>*pcm,<sp/>snd_pcm_hw_params_t<sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/>snd_pcm_uframes_t<sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dir)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<sp/>ret<sp/>=<sp/>alsa_snd_pcm_hw_params_set_period_size(pcm,<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/>(*val),<sp/>(*dir))<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_PA_LOCAL_IMPL(snd_pcm_hw_params_get_channels_min)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snd_pcm_hw_params_t<sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*val)</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>(*val)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_PA_LOCAL_IMPL(snd_pcm_hw_params_get_channels_max)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snd_pcm_hw_params_t<sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*val)</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>(*val)<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_PA_LOCAL_IMPL(snd_pcm_hw_params_get_periods_min)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snd_pcm_hw_params_t<sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dir)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>(*val)<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_PA_LOCAL_IMPL(snd_pcm_hw_params_get_periods_max)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snd_pcm_hw_params_t<sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dir)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>(*val)<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_PA_LOCAL_IMPL(snd_pcm_hw_params_get_period_size_min)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snd_pcm_hw_params_t<sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/>snd_pcm_uframes_t<sp/>*frames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dir)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>(*frames)<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_PA_LOCAL_IMPL(snd_pcm_hw_params_get_period_size_max)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snd_pcm_hw_params_t<sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/>snd_pcm_uframes_t<sp/>*frames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dir)</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>(*frames)<sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_PA_LOCAL_IMPL(snd_pcm_hw_params_get_buffer_size_max)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snd_pcm_hw_params_t<sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/>snd_pcm_uframes_t<sp/>*val)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/>pmax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pcnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<sp/>ret<sp/>=<sp/>_PA_LOCAL_IMPL(snd_pcm_hw_params_get_period_size_max)(<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/>&amp;pmax,<sp/>&amp;dir)<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<sp/>ret<sp/>=<sp/>_PA_LOCAL_IMPL(snd_pcm_hw_params_get_periods_max)(<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/>&amp;pcnt,<sp/>&amp;dir)<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>(*val)<sp/>=<sp/>pmax<sp/>*<sp/>pcnt;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_PA_LOCAL_IMPL(snd_pcm_hw_params_get_rate_min)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snd_pcm_hw_params_t<sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dir)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>(*val)<sp/>=<sp/>44100;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_PA_LOCAL_IMPL(snd_pcm_hw_params_get_rate_max)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snd_pcm_hw_params_t<sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dir)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>(*val)<sp/>=<sp/>44100;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PA_ALSA_DYNAMIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Trying<sp/>to<sp/>load<sp/>Alsa<sp/>library<sp/>dynamically<sp/>if<sp/>&apos;PA_ALSA_DYNAMIC&apos;<sp/>is<sp/>defined,<sp/>othervise</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/>will<sp/>link<sp/>during<sp/>compilation.</highlight></codeline>
<codeline lineno="351"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PaAlsa_LoadLibrary()</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PA_ALSA_DYNAMIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>loading<sp/>ALSA<sp/>library<sp/>file<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>g_AlsaLibName<sp/>));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>dlerror();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>g_AlsaLib<sp/>=<sp/>dlopen(g_AlsaLibName,<sp/>(RTLD_NOW|RTLD_GLOBAL)<sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_AlsaLib<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>failed<sp/>dlopen()<sp/>ALSA<sp/>library<sp/>file<sp/>-<sp/>%s,<sp/>error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>g_AlsaLibName,<sp/>dlerror()<sp/>));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>loading<sp/>ALSA<sp/>API\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>_PA_LOAD_FUNC(x)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="369"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_##x<sp/>=<sp/>dlsym(<sp/>g_AlsaLib,<sp/>#x<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>alsa_##x<sp/>==<sp/>NULL<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PA_DEBUG((<sp/>&quot;%s:<sp/>symbol<sp/>[%s]<sp/>not<sp/>found<sp/>in<sp/>-<sp/>%s,<sp/>error:<sp/>%s\n&quot;,<sp/>__FUNCTION__,<sp/>#x,<sp/>g_AlsaLibName,<sp/>dlerror()<sp/>));<sp/>}\</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>_PA_LOAD_FUNC(x)<sp/>alsa_##x<sp/>=<sp/>&amp;x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_open);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_close);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_nonblock);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_frames_to_bytes);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_prepare);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_start);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_resume);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_wait);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_state);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_avail_update);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_areas_silence);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_mmap_begin);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_mmap_commit);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_readi);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_readn);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_writei);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_writen);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_drain);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_recover);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_drop);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_area_copy);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_poll_descriptors);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_poll_descriptors_count);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_poll_descriptors_revents);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_format_size);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_link);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_delay);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_sizeof);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_malloc);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_free);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_any);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_set_access);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_set_format);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_set_channels);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>_PA_LOAD_FUNC(snd_pcm_hw_params_set_periods_near);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_set_rate_near);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_set_rate);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_set_rate_resample);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>_PA_LOAD_FUNC(snd_pcm_hw_params_set_buffer_time_near);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_set_buffer_size);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_set_buffer_size_near);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_set_buffer_size_min);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>_PA_LOAD_FUNC(snd_pcm_hw_params_set_period_time_near);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_set_period_size_near);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_set_periods_integer);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_set_periods_min);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_get_buffer_size);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>_PA_LOAD_FUNC(snd_pcm_hw_params_get_period_size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>_PA_LOAD_FUNC(snd_pcm_hw_params_get_access);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>_PA_LOAD_FUNC(snd_pcm_hw_params_get_periods);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>_PA_LOAD_FUNC(snd_pcm_hw_params_get_rate);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_get_channels_min);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_get_channels_max);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_test_period_size);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_test_format);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_test_access);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_dump);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_get_periods_min);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_get_periods_max);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_set_period_size);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_get_period_size_min);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_get_period_size_max);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_get_buffer_size_max);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_get_rate_min);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_get_rate_max);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_hw_params_get_rate_numden);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_sw_params_sizeof);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_sw_params_malloc);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_sw_params_current);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_sw_params_set_avail_min);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_sw_params);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_sw_params_free);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_sw_params_set_start_threshold);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_sw_params_set_stop_threshold);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_sw_params_get_boundary);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_sw_params_set_silence_threshold);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_sw_params_set_silence_size);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_sw_params_set_xfer_align);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_sw_params_set_tstamp_mode);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_info);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_info_sizeof);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_info_malloc);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_info_free);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_info_set_device);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_info_set_subdevice);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_info_set_stream);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_info_get_name);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_info_get_card);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_ctl_pcm_next_device);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_ctl_pcm_info);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_ctl_open);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_ctl_close);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_ctl_card_info_malloc);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_ctl_card_info_free);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_ctl_card_info);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_ctl_card_info_sizeof);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_ctl_card_info_get_name);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_config);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_config_update);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_config_search);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_config_iterator_entry);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_config_iterator_first);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_config_iterator_end);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_config_iterator_next);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_config_get_string);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_config_get_id);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_config_update_free_global);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_status);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_status_sizeof);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_status_get_tstamp);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_status_get_state);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_status_get_trigger_tstamp);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_pcm_status_get_delay);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_card_next);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_asoundlib_version);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_strerror);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a1c197e670a65e133f35ba5486097f864" kindref="member">_PA_LOAD_FUNC</ref>(snd_output_stdio_attach);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_PA_LOAD_FUNC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PA_ALSA_DYNAMIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>loaded<sp/>ALSA<sp/>API<sp/>-<sp/>ok\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PA_VALIDATE_LOAD_REPLACEMENT(x)\</highlight></codeline>
<codeline lineno="514"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{\</highlight></codeline>
<codeline lineno="515"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>alsa_##x<sp/>==<sp/>NULL<sp/>)\</highlight></codeline>
<codeline lineno="516"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="517"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_##x<sp/>=<sp/>&amp;_PA_LOCAL_IMPL(x);\</highlight></codeline>
<codeline lineno="518"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PA_DEBUG((<sp/>&quot;%s:<sp/>replacing<sp/>[%s]<sp/>with<sp/>local<sp/>implementation\n&quot;,<sp/>__FUNCTION__,<sp/>#x<sp/>));\</highlight></codeline>
<codeline lineno="519"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="520"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>_PA_VALIDATE_LOAD_REPLACEMENT(snd_pcm_hw_params_set_rate_near);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>_PA_VALIDATE_LOAD_REPLACEMENT(snd_pcm_hw_params_set_buffer_size_near);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>_PA_VALIDATE_LOAD_REPLACEMENT(snd_pcm_hw_params_set_period_size_near);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>_PA_VALIDATE_LOAD_REPLACEMENT(snd_pcm_hw_params_get_channels_min);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>_PA_VALIDATE_LOAD_REPLACEMENT(snd_pcm_hw_params_get_channels_max);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>_PA_VALIDATE_LOAD_REPLACEMENT(snd_pcm_hw_params_get_periods_min);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>_PA_VALIDATE_LOAD_REPLACEMENT(snd_pcm_hw_params_get_periods_max);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>_PA_VALIDATE_LOAD_REPLACEMENT(snd_pcm_hw_params_get_period_size_min);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>_PA_VALIDATE_LOAD_REPLACEMENT(snd_pcm_hw_params_get_period_size_max);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>_PA_VALIDATE_LOAD_REPLACEMENT(snd_pcm_hw_params_get_buffer_size_max);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>_PA_VALIDATE_LOAD_REPLACEMENT(snd_pcm_hw_params_get_rate_min);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>_PA_VALIDATE_LOAD_REPLACEMENT(snd_pcm_hw_params_get_rate_max);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_PA_LOCAL_IMPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_PA_VALIDATE_LOAD_REPLACEMENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PA_ALSA_DYNAMIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="pa__linux__alsa_8c_1a7517c2e54801c8bd73c2f6db30aeaff9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__linux__alsa_8c_1a7517c2e54801c8bd73c2f6db30aeaff9" kindref="member">PaAlsa_SetLibraryPathName</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathName<sp/>)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PA_ALSA_DYNAMIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>g_AlsaLibName<sp/>=<sp/>pathName;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)pathName;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Close<sp/>handle<sp/>to<sp/>Alsa<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PaAlsa_CloseLibrary()</highlight></codeline>
<codeline lineno="554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PA_ALSA_DYNAMIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>dlclose(g_AlsaLib);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>g_AlsaLib<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>return<sp/>value<sp/>of<sp/>ALSA<sp/>function,<sp/>and<sp/>map<sp/>it<sp/>to<sp/>PaError<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENSURE_(expr,<sp/>code)<sp/>\</highlight></codeline>
<codeline lineno="563"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="564"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>__pa_unsure_error_id;\</highlight></codeline>
<codeline lineno="565"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>UNLIKELY(<sp/>(__pa_unsure_error_id<sp/>=<sp/>(expr))<sp/>&lt;<sp/>0<sp/>)<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="566"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="567"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PaUtil_SetLastHostErrorInfo<sp/>should<sp/>only<sp/>be<sp/>used<sp/>in<sp/>the<sp/>main<sp/>thread<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="568"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>(code)<sp/>==<sp/>paUnanticipatedHostError<sp/>&amp;&amp;<sp/>pthread_equal(<sp/>pthread_self(),<sp/>paUnixMainThread)<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="569"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="570"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaUtil_SetLastHostErrorInfo(<sp/>paALSA,<sp/>__pa_unsure_error_id,<sp/>alsa_snd_strerror(<sp/>__pa_unsure_error_id<sp/>)<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="571"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="572"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaUtil_DebugPrint(<sp/>&quot;Expression<sp/>&apos;&quot;<sp/>#expr<sp/>&quot;&apos;<sp/>failed<sp/>in<sp/>&apos;&quot;<sp/>__FILE__<sp/>&quot;&apos;,<sp/>line:<sp/>&quot;<sp/>STRINGIZE(<sp/>__LINE__<sp/>)<sp/>&quot;\n&quot;<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="573"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>(code)<sp/>==<sp/>paUnanticipatedHostError<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="574"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PA_DEBUG((<sp/>&quot;Host<sp/>error<sp/>description:<sp/>%s\n&quot;,<sp/>alsa_snd_strerror(<sp/>__pa_unsure_error_id<sp/>)<sp/>));<sp/>\</highlight></codeline>
<codeline lineno="575"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(code);<sp/>\</highlight></codeline>
<codeline lineno="576"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>error;<sp/>\</highlight></codeline>
<codeline lineno="577"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="578"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="pa__linux__alsa_8c_1adfe580bff275a80ee5935113c053d30d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_CALL_(expr,<sp/>success)<sp/>\</highlight></codeline>
<codeline lineno="581"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{\</highlight></codeline>
<codeline lineno="582"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>__pa_assert_error_id;\</highlight></codeline>
<codeline lineno="583"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__pa_assert_error_id<sp/>=<sp/>(expr);\</highlight></codeline>
<codeline lineno="584"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>success<sp/>==<sp/>__pa_assert_error_id<sp/>);\</highlight></codeline>
<codeline lineno="585"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPeriods_<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>busyRetries_<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="pa__linux__alsa_8c_1ade14c5bdbcdc7fb418cba123379ed529" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pa__linux__alsa_8c_1ade14c5bdbcdc7fb418cba123379ed529" kindref="member">PaAlsa_SetNumPeriods</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPeriods<sp/>)</highlight></codeline>
<codeline lineno="591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>numPeriods_<sp/>=<sp/>numPeriods;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598" refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref>,</highlight></codeline>
<codeline lineno="599" refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64ae177efd435a0afd9a45c4efc3b63b229" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64ae177efd435a0afd9a45c4efc3b63b229" kindref="member">StreamDirection_Out</ref></highlight></codeline>
<codeline lineno="600"><highlight class="normal">}<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" kindref="member">StreamDirection</ref>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="struct_pa_alsa_stream_component" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="604" refid="struct_pa_alsa_stream_component_1a1fc676cfdb28a43f9ee7d941b7ac94f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/><ref refid="struct_pa_alsa_stream_component_1a1fc676cfdb28a43f9ee7d941b7ac94f8" kindref="member">hostSampleFormat</ref>;</highlight></codeline>
<codeline lineno="605" refid="struct_pa_alsa_stream_component_1a0e902bdf00aa3f7e9adc258c434ee99c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_component_1a0e902bdf00aa3f7e9adc258c434ee99c" kindref="member">numUserChannels</ref>,<sp/>numHostChannels;</highlight></codeline>
<codeline lineno="606" refid="struct_pa_alsa_stream_component_1aae34cf96e56f05ce576baa7df06d5045" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_component_1aae34cf96e56f05ce576baa7df06d5045" kindref="member">userInterleaved</ref>,<sp/>hostInterleaved;</highlight></codeline>
<codeline lineno="607" refid="struct_pa_alsa_stream_component_1a95ddfb65dc825b91524f7d6b5f0fe004" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_component_1a95ddfb65dc825b91524f7d6b5f0fe004" kindref="member">canMmap</ref>;</highlight></codeline>
<codeline lineno="608" refid="struct_pa_alsa_stream_component_1af5ba1c53cd31f35d1474aa5575200450" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_pa_alsa_stream_component_1af5ba1c53cd31f35d1474aa5575200450" kindref="member">nonMmapBuffer</ref>;</highlight></codeline>
<codeline lineno="609" refid="struct_pa_alsa_stream_component_1aa34fb77349c23b3e10d1a588c3d8f106" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_component_1aa34fb77349c23b3e10d1a588c3d8f106" kindref="member">nonMmapBufferSize</ref>;</highlight></codeline>
<codeline lineno="610" refid="struct_pa_alsa_stream_component_1a7194a0ca74245ec54df327760b54d94e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1ad79317e65bde63d76c4b8e711ac5a361" kindref="member">PaDeviceIndex</ref><sp/><ref refid="struct_pa_alsa_stream_component_1a7194a0ca74245ec54df327760b54d94e" kindref="member">device</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Keep<sp/>the<sp/>device<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="struct_pa_alsa_stream_component_1a551815cd6a86d58ea632f63e8962c5dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_component_1a551815cd6a86d58ea632f63e8962c5dd" kindref="member">deviceIsPlug</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Distinguish<sp/>plug<sp/>types<sp/>from<sp/>direct<sp/>&apos;hw:&apos;<sp/>devices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="struct_pa_alsa_stream_component_1a306ed4d1f073e1edad9e3dcc76e38809" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_component_1a306ed4d1f073e1edad9e3dcc76e38809" kindref="member">useReventFix</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Alsa<sp/>older<sp/>than<sp/>1.0.16,<sp/>plug<sp/>devices<sp/>need<sp/>a<sp/>fix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_t<sp/>*<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref>;</highlight></codeline>
<codeline lineno="615" refid="struct_pa_alsa_stream_component_1adf73ee5aacd35d2068cf7b0316d8cec5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/><ref refid="struct_pa_alsa_stream_component_1adf73ee5aacd35d2068cf7b0316d8cec5" kindref="member">framesPerPeriod</ref>,<sp/>alsaBufferSize;</highlight></codeline>
<codeline lineno="616" refid="struct_pa_alsa_stream_component_1a3cc7e53dfa502ec320c1e870a9c02dd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_format_t<sp/><ref refid="struct_pa_alsa_stream_component_1a3cc7e53dfa502ec320c1e870a9c02dd2" kindref="member">nativeFormat</ref>;</highlight></codeline>
<codeline lineno="617" refid="struct_pa_alsa_stream_component_1a718de0ee2c66d4a7c3185742db0082ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_component_1a718de0ee2c66d4a7c3185742db0082ba" kindref="member">nfds</ref>;</highlight></codeline>
<codeline lineno="618" refid="struct_pa_alsa_stream_component_1af0dc1dc7181a8e310995efd0c4f1d44c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_component_1af0dc1dc7181a8e310995efd0c4f1d44c" kindref="member">ready</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Marked<sp/>ready<sp/>from<sp/>poll<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="struct_pa_alsa_stream_component_1a0c248f3409a0a73fbd641e1be0d71277" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<ref refid="struct_pa_alsa_stream_component_1a0c248f3409a0a73fbd641e1be0d71277" kindref="member">userBuffers</ref>;</highlight></codeline>
<codeline lineno="620" refid="struct_pa_alsa_stream_component_1ad1b799ae758cf0057dd2df7db47b95a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/><ref refid="struct_pa_alsa_stream_component_1ad1b799ae758cf0057dd2df7db47b95a4" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="621" refid="struct_pa_alsa_stream_component_1a68200bf1c2218a02b34799956fe337a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" kindref="member">StreamDirection</ref><sp/><ref refid="struct_pa_alsa_stream_component_1a68200bf1c2218a02b34799956fe337a7" kindref="member">streamDir</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623" refid="struct_pa_alsa_stream_component_1a2d71df829f17e013719fe804a3def576" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_channel_area_t<sp/>*<ref refid="struct_pa_alsa_stream_component_1a2d71df829f17e013719fe804a3def576" kindref="member">channelAreas</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Needed<sp/>for<sp/>channel<sp/>adaption<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="struct_pa_alsa_stream_component_1aaa548d6dfb327ddcc6f1b2b5d9a9be18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_component_1aaa548d6dfb327ddcc6f1b2b5d9a9be18" kindref="member">card</ref>;</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}<sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref>;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Implementation<sp/>specific<sp/>stream<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="struct_pa_alsa_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref></highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630" refid="struct_pa_alsa_stream_1addaeac8fe364c5ff592d34c51102490f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_stream_representation" kindref="compound">PaUtilStreamRepresentation</ref><sp/><ref refid="struct_pa_alsa_stream_1addaeac8fe364c5ff592d34c51102490f" kindref="member">streamRepresentation</ref>;</highlight></codeline>
<codeline lineno="631" refid="struct_pa_alsa_stream_1a29f7550cda202836040ec8d6dd0d6aea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_cpu_load_measurer" kindref="compound">PaUtilCpuLoadMeasurer</ref><sp/><ref refid="struct_pa_alsa_stream_1a29f7550cda202836040ec8d6dd0d6aea" kindref="member">cpuLoadMeasurer</ref>;</highlight></codeline>
<codeline lineno="632" refid="struct_pa_alsa_stream_1acd44698cd6e3508f0d41c877ba5b436a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref><sp/><ref refid="struct_pa_alsa_stream_1acd44698cd6e3508f0d41c877ba5b436a" kindref="member">bufferProcessor</ref>;</highlight></codeline>
<codeline lineno="633" refid="struct_pa_alsa_stream_1a78a3ab135792aa210042183dabab28ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_unix_thread" kindref="compound">PaUnixThread</ref><sp/><ref refid="struct_pa_alsa_stream_1a78a3ab135792aa210042183dabab28ca" kindref="member">thread</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635" refid="struct_pa_alsa_stream_1a975c6b88b478a9408d81e84de435369f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_1a02214e72205abdc3e8cc0564c2e5a8e6" kindref="member">framesPerUserBuffer</ref>,<sp/><ref refid="struct_pa_alsa_stream_1a975c6b88b478a9408d81e84de435369f" kindref="member">maxFramesPerHostBuffer</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637" refid="struct_pa_alsa_stream_1a6977d63a92f8a3e044a8c6f5e1a2cc31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_1a6977d63a92f8a3e044a8c6f5e1a2cc31" kindref="member">primeBuffers</ref>;</highlight></codeline>
<codeline lineno="638" refid="struct_pa_alsa_stream_1ad122ee597668cb143bc79be9712f382e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_1ad122ee597668cb143bc79be9712f382e" kindref="member">callbackMode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bool:<sp/>are<sp/>we<sp/>running<sp/>in<sp/>callback<sp/>mode?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="struct_pa_alsa_stream_1a07464a14e43b11c9e5de064ed33fae70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_1a07464a14e43b11c9e5de064ed33fae70" kindref="member">pcmsSynced</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Have<sp/>we<sp/>successfully<sp/>synced<sp/>pcms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640" refid="struct_pa_alsa_stream_1a950d643d1442448a51072e83debc40be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_1a950d643d1442448a51072e83debc40be" kindref="member">rtSched</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>callback<sp/>thread<sp/>uses<sp/>these<sp/>to<sp/>poll<sp/>the<sp/>sound<sp/>device(s),<sp/>waiting</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>data<sp/>to<sp/>be<sp/>ready/available<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="struct_pa_alsa_stream_1aa2e24a0415a19cf1e2f95dd69af76e4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">pollfd*<sp/><ref refid="struct_pa_alsa_stream_1aa2e24a0415a19cf1e2f95dd69af76e4c" kindref="member">pfds</ref>;</highlight></codeline>
<codeline lineno="645" refid="struct_pa_alsa_stream_1afd9058a227a6b8d8eae41f033c7955ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_1afd9058a227a6b8d8eae41f033c7955ae" kindref="member">pollTimeout</ref>;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Used<sp/>in<sp/>communication<sp/>between<sp/>threads<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648" refid="struct_pa_alsa_stream_1a118a04f7270ac45c669d5cec7a410119" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>sig_atomic_t<sp/><ref refid="struct_pa_alsa_stream_1a118a04f7270ac45c669d5cec7a410119" kindref="member">callback_finished</ref>;<sp/></highlight><highlight class="comment">/*<sp/>bool:<sp/>are<sp/>we<sp/>in<sp/>the<sp/>&quot;callback<sp/>finished&quot;<sp/>state?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649" refid="struct_pa_alsa_stream_1ab572de6c0a951967b3a47713427858d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>sig_atomic_t<sp/><ref refid="struct_pa_alsa_stream_1ab572de6c0a951967b3a47713427858d3" kindref="member">callbackAbort</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Drop<sp/>frames?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650" refid="struct_pa_alsa_stream_1a6bd474f11d49f98eb08f0558b17b5cd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>sig_atomic_t<sp/><ref refid="struct_pa_alsa_stream_1a6bd474f11d49f98eb08f0558b17b5cd3" kindref="member">isActive</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Is<sp/>stream<sp/>in<sp/>active<sp/>state?<sp/>(Between<sp/>StartStream<sp/>and<sp/>StopStream<sp/>||<sp/>!paContinue)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651" refid="struct_pa_alsa_stream_1aba5481778876188e52785adf8e0ce793" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_unix_mutex" kindref="compound">PaUnixMutex</ref><sp/><ref refid="struct_pa_alsa_stream_1aba5481778876188e52785adf8e0ce793" kindref="member">stateMtx</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Used<sp/>to<sp/>synchronize<sp/>access<sp/>to<sp/>stream<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="struct_pa_alsa_stream_1ac0213bb3155e96b4445af2ccbc6c6641" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_1ac0213bb3155e96b4445af2ccbc6c6641" kindref="member">neverDropInput</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655" refid="struct_pa_alsa_stream_1a1158444fe763d7def459e7e7d99bedb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref><sp/><ref refid="struct_pa_alsa_stream_1a1158444fe763d7def459e7e7d99bedb1" kindref="member">underrun</ref>;</highlight></codeline>
<codeline lineno="656" refid="struct_pa_alsa_stream_1a3a8accd426fdfb836f6e692648ced93e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref><sp/><ref refid="struct_pa_alsa_stream_1a3a8accd426fdfb836f6e692648ced93e" kindref="member">overrun</ref>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658" refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref><sp/><ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>,<sp/><ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a6a0d07f7c8812042783c069798c0ae49" kindref="member">PaAlsaStream</ref>;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PaAlsaHostApiRepresentation<sp/>-<sp/>host<sp/>api<sp/>datastructure<sp/>specific<sp/>to<sp/>this<sp/>implementation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664" refid="struct_pa_alsa_host_api_representation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref></highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666" refid="struct_pa_alsa_host_api_representation_1a9a5d2130ae6a1d8826fd265e44eaa1a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref><sp/><ref refid="struct_pa_alsa_host_api_representation_1a9a5d2130ae6a1d8826fd265e44eaa1a6" kindref="member">baseHostApiRep</ref>;</highlight></codeline>
<codeline lineno="667" refid="struct_pa_alsa_host_api_representation_1a7460a29aab991224df3e958f068ad1cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_stream_interface" kindref="compound">PaUtilStreamInterface</ref><sp/><ref refid="struct_pa_alsa_host_api_representation_1a7460a29aab991224df3e958f068ad1cd" kindref="member">callbackStreamInterface</ref>;</highlight></codeline>
<codeline lineno="668" refid="struct_pa_alsa_host_api_representation_1ad6a68540d8914bef7af546594c701634" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_stream_interface" kindref="compound">PaUtilStreamInterface</ref><sp/><ref refid="struct_pa_alsa_host_api_representation_1ad6a68540d8914bef7af546594c701634" kindref="member">blockingStreamInterface</ref>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670" refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_allocation_group" kindref="compound">PaUtilAllocationGroup</ref><sp/>*<ref refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" kindref="member">allocations</ref>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="struct_pa_alsa_host_api_representation_1af50c4c8ec89a0f6277539588e5bd142d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1aeef6da084c57c70aa94be97411e19930" kindref="member">PaHostApiIndex</ref><sp/><ref refid="struct_pa_alsa_host_api_representation_1af50c4c8ec89a0f6277539588e5bd142d" kindref="member">hostApiIndex</ref>;</highlight></codeline>
<codeline lineno="673" refid="struct_pa_alsa_host_api_representation_1a6b697f7d06e5451c66f09f5562b99d5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__types_8h_1a9cff423f720226e66a7826c30509c465" kindref="member">PaUint32</ref><sp/><ref refid="struct_pa_alsa_host_api_representation_1a6b697f7d06e5451c66f09f5562b99d5d" kindref="member">alsaLibVersion</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Retrieved<sp/>from<sp/>the<sp/>library<sp/>at<sp/>run-time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1ae6d2c516141cb810e28edb768bfd3879" kindref="member">PaAlsaHostApiRepresentation</ref>;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677" refid="struct_pa_alsa_device_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref></highlight></codeline>
<codeline lineno="678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="679" refid="struct_pa_alsa_device_info_1a5f17f8aeda7b7e7e041006edacf9d3dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_device_info" kindref="compound">PaDeviceInfo</ref><sp/><ref refid="struct_pa_alsa_device_info_1a5f17f8aeda7b7e7e041006edacf9d3dc" kindref="member">baseDeviceInfo</ref>;</highlight></codeline>
<codeline lineno="680" refid="struct_pa_alsa_device_info_1a09959f7709fe9ba29a4e3fd902fd0880" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_pa_alsa_device_info_1a09959f7709fe9ba29a4e3fd902fd0880" kindref="member">alsaName</ref>;</highlight></codeline>
<codeline lineno="681" refid="struct_pa_alsa_device_info_1a9b00b3189ea32b6635ef2bfdc2938b81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_device_info_1a9b00b3189ea32b6635ef2bfdc2938b81" kindref="member">isPlug</ref>;</highlight></codeline>
<codeline lineno="682" refid="struct_pa_alsa_device_info_1a6209baa598eb9503aabf531309cc217d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_device_info_1a6209baa598eb9503aabf531309cc217d" kindref="member">minInputChannels</ref>;</highlight></codeline>
<codeline lineno="683" refid="struct_pa_alsa_device_info_1a2ce67b50d5ac9bfe1ed3210694e580ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_device_info_1a2ce67b50d5ac9bfe1ed3210694e580ab" kindref="member">minOutputChannels</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><ref refid="pa__linux__alsa_8c_1a35f61c8241caea31ec36ae13baee4545" kindref="member">PaAlsaDeviceInfo</ref>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>prototypes<sp/>for<sp/>functions<sp/>declared<sp/>in<sp/>this<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Terminate(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref><sp/>*hostApi<sp/>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>IsFormatSupported(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref><sp/>*hostApi,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*inputParameters,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*outputParameters,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>OpenStream(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref><sp/>*hostApi,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>**<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*inputParameters,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*outputParameters,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesPerBuffer,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a37c7ac3ace7d2dd1430f40ecdee4ebb6" kindref="member">PaStreamFlags</ref><sp/>streamFlags,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a8a60fb2a5ec9cbade3f54a9c978e2710" kindref="member">PaStreamCallback</ref><sp/>*callback,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmlparse_8c_1a4b666535c828e23ccd16510a0a1a1943" kindref="member">userData</ref><sp/>);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>CloseStream(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>StartStream(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*stream<sp/>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>StopStream(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*stream<sp/>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>AbortStream(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*stream<sp/>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>IsStreamStopped(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>IsStreamActive(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*stream<sp/>);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref><sp/>GetStreamTime(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*stream<sp/>);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetStreamCpuLoad(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>BuildDeviceList(<sp/><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref><sp/>*hostApi<sp/>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SetApproximateSampleRate(<sp/>snd_pcm_t<sp/>*pcm,<sp/>snd_pcm_hw_params_t<sp/>*hwParams,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetExactSampleRate(<sp/>snd_pcm_hw_params_t<sp/>*hwParams,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pa__types_8h_1a9cff423f720226e66a7826c30509c465" kindref="member">PaUint32</ref><sp/>PaAlsaVersionNum(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Callback<sp/>prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*CallbackThreadFunc(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmlparse_8c_1a4b666535c828e23ccd16510a0a1a1943" kindref="member">userData</ref><sp/>);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Blocking<sp/>prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>GetStreamReadAvailable(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>GetStreamWriteAvailable(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>ReadStream(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/>stream,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frames<sp/>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>WriteStream(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/>stream,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frames<sp/>);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref><sp/>*GetDeviceInfo(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref><sp/>*hostApi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device<sp/>)</highlight></codeline>
<codeline lineno="727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref><sp/>*)hostApi-&gt;<ref refid="struct_pa_util_host_api_representation_1a48dcfdf57e6d12d33314929ac213ae28" kindref="member">deviceInfos</ref>[device];</highlight></codeline>
<codeline lineno="729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="comment">/*static<sp/>void<sp/>AlsaErrorHandler(const<sp/>char<sp/>*file,<sp/>int<sp/>line,<sp/>const<sp/>char<sp/>*function,<sp/>int<sp/>err,<sp/>const<sp/>char<sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="735"><highlight class="comment">{</highlight></codeline>
<codeline lineno="736"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="pa__unix__hostapis_8c_1a1ec050517c2db63336a437fa71b64e25" refkind="member"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__linux__alsa_8c_1a68bdfa54581e698d5958b6463faf43d4" kindref="member">PaAlsa_Initialize</ref>(<sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref><sp/>**hostApi,<sp/><ref refid="portaudio_8h_1aeef6da084c57c70aa94be97411e19930" kindref="member">PaHostApiIndex</ref><sp/>hostApiIndex<sp/>)</highlight></codeline>
<codeline lineno="739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref><sp/>*alsaHostApi<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>loading<sp/>Alsa<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PaAlsa_LoadLibrary())</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a4b470a48b5fd9cf04591b1fbdd2ad26a" kindref="member">paHostApiNotFound</ref>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>alsaHostApi<sp/>=<sp/>(<ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref>*)<sp/><ref refid="pa__util_8h_1aa614f193aff12744a6ab90a9eb3128f0" kindref="member">PaUtil_AllocateMemory</ref>(</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref>)<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref><sp/>);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>alsaHostApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" kindref="member">allocations</ref><sp/>=<sp/><ref refid="pa__allocation_8c_1a9cc7370b73e75f690ab0a0360e7fffee" kindref="member">PaUtil_CreateAllocationGroup</ref>(),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref><sp/>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>alsaHostApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1af50c4c8ec89a0f6277539588e5bd142d" kindref="member">hostApiIndex</ref><sp/>=<sp/>hostApiIndex;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>alsaHostApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1a6b697f7d06e5451c66f09f5562b99d5d" kindref="member">alsaLibVersion</ref><sp/>=<sp/>PaAlsaVersionNum();</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>*hostApi<sp/>=<sp/>(<ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref>*)alsaHostApi;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>(*hostApi)-&gt;info.structVersion<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>(*hostApi)-&gt;info.type<sp/>=<sp/><ref refid="portaudio_8h_1a8eaebe3d39c5ea45598da8f86dc2e5aea5fb23d8b2cf3e2e714298de5ab1b83e1" kindref="member">paALSA</ref>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>(*hostApi)-&gt;info.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ALSA&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>(*hostApi)-&gt;Terminate<sp/>=<sp/>Terminate;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>(*hostApi)-&gt;OpenStream<sp/>=<sp/>OpenStream;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>(*hostApi)-&gt;IsFormatSupported<sp/>=<sp/>IsFormatSupported;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*ENSURE_(<sp/>snd_lib_error_set_handler(AlsaErrorHandler),<sp/>paUnanticipatedHostError<sp/>);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>BuildDeviceList(<sp/>alsaHostApi<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__stream_8c_1a7ae912708e0bb060028f25e6f95333b7" kindref="member">PaUtil_InitializeStreamInterface</ref>(<sp/>&amp;alsaHostApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1a7460a29aab991224df3e958f068ad1cd" kindref="member">callbackStreamInterface</ref>,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseStream,<sp/>StartStream,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StopStream,<sp/>AbortStream,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsStreamStopped,<sp/>IsStreamActive,</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetStreamTime,<sp/>GetStreamCpuLoad,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__stream_8c_1ae7a66186864e1f27f9e274e1de562219" kindref="member">PaUtil_DummyRead</ref>,<sp/><ref refid="pa__stream_8c_1a827035da5bb7141143595519b0c0edc7" kindref="member">PaUtil_DummyWrite</ref>,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__stream_8c_1aa43032a8fcb0d7b271f6049e4dc69e5c" kindref="member">PaUtil_DummyGetReadAvailable</ref>,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__stream_8c_1aa4742249759bc11f31590db47cd19c2b" kindref="member">PaUtil_DummyGetWriteAvailable</ref><sp/>);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__stream_8c_1a7ae912708e0bb060028f25e6f95333b7" kindref="member">PaUtil_InitializeStreamInterface</ref>(<sp/>&amp;alsaHostApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ad6a68540d8914bef7af546594c701634" kindref="member">blockingStreamInterface</ref>,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseStream,<sp/>StartStream,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StopStream,<sp/>AbortStream,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsStreamStopped,<sp/>IsStreamActive,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetStreamTime,<sp/><ref refid="pa__stream_8c_1aba19e5ce44bb3621b6ca257959c30b43" kindref="member">PaUtil_DummyGetCpuLoad</ref>,</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReadStream,<sp/>WriteStream,</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetStreamReadAvailable,</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetStreamWriteAvailable<sp/>);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="pa__unix__util_8c_1a1d6b7ffc7a2a08e24900258ef8e3a35a" kindref="member">PaUnixThreading_Initialize</ref>()<sp/>);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsaHostApi<sp/>)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsaHostApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" kindref="member">allocations</ref><sp/>)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__allocation_8c_1aa83a07899e8db63d415d03f68b1f8a3d" kindref="member">PaUtil_FreeAllAllocations</ref>(<sp/>alsaHostApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" kindref="member">allocations</ref><sp/>);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__allocation_8c_1aefcb1143eaa768c2b555bd203f1c9deb" kindref="member">PaUtil_DestroyAllocationGroup</ref>(<sp/>alsaHostApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" kindref="member">allocations</ref><sp/>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>alsaHostApi<sp/>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Terminate(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref><sp/>*hostApi<sp/>)</highlight></codeline>
<codeline lineno="807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref><sp/>*alsaHostApi<sp/>=<sp/>(<ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref>*)hostApi;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>hostApi<sp/>);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*snd_lib_error_set_handler(NULL);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsaHostApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" kindref="member">allocations</ref><sp/>)</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__allocation_8c_1aa83a07899e8db63d415d03f68b1f8a3d" kindref="member">PaUtil_FreeAllAllocations</ref>(<sp/>alsaHostApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" kindref="member">allocations</ref><sp/>);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__allocation_8c_1aefcb1143eaa768c2b555bd203f1c9deb" kindref="member">PaUtil_DestroyAllocationGroup</ref>(<sp/>alsaHostApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" kindref="member">allocations</ref><sp/>);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>alsaHostApi<sp/>);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_snd_config_update_free_global();</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>Alsa<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>PaAlsa_CloseLibrary();</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>GropeDevice(<sp/>snd_pcm_t*<sp/>pcm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isPlug,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" kindref="member">StreamDirection</ref><sp/>mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>openBlocking,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref>*<sp/>devInfo<sp/>)</highlight></codeline>
<codeline lineno="837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_hw_params_t<sp/>*hwParams;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/>alsaBufferFrames,<sp/>alsaPeriodFrames;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minChans,<sp/>maxChans;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>minChannels,<sp/>*<sp/>maxChannels;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>defaultLowLatency,<sp/>*<sp/>defaultHighLatency,<sp/>*<sp/>defaultSampleRate<sp/>=</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a5f17f8aeda7b7e7e041006edacf9d3dc" kindref="member">baseDeviceInfo</ref>.<ref refid="struct_pa_device_info_1a68f435353bfe1a4c9b632203a9afcacb" kindref="member">defaultSampleRate</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>defaultSr<sp/>=<sp/>*defaultSampleRate;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>pcm<sp/>);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>collecting<sp/>info<sp/>..\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref><sp/>==<sp/>mode<sp/>)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minChannels<sp/>=<sp/>&amp;devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a6209baa598eb9503aabf531309cc217d" kindref="member">minInputChannels</ref>;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxChannels<sp/>=<sp/>&amp;devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a5f17f8aeda7b7e7e041006edacf9d3dc" kindref="member">baseDeviceInfo</ref>.<ref refid="struct_pa_device_info_1ad0baeeb2b6ceaf7fc9bb76109a7555e9" kindref="member">maxInputChannels</ref>;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultLowLatency<sp/>=<sp/>&amp;devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a5f17f8aeda7b7e7e041006edacf9d3dc" kindref="member">baseDeviceInfo</ref>.<ref refid="struct_pa_device_info_1aad6629064b8c7cf043d237ea0a5cc534" kindref="member">defaultLowInputLatency</ref>;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultHighLatency<sp/>=<sp/>&amp;devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a5f17f8aeda7b7e7e041006edacf9d3dc" kindref="member">baseDeviceInfo</ref>.<ref refid="struct_pa_device_info_1a4214826038fcaf374beb9816024e6c9f" kindref="member">defaultHighInputLatency</ref>;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minChannels<sp/>=<sp/>&amp;devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a2ce67b50d5ac9bfe1ed3210694e580ab" kindref="member">minOutputChannels</ref>;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxChannels<sp/>=<sp/>&amp;devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a5f17f8aeda7b7e7e041006edacf9d3dc" kindref="member">baseDeviceInfo</ref>.<ref refid="struct_pa_device_info_1a48f908b21e8a11fdf0a88132b18fe7b0" kindref="member">maxOutputChannels</ref>;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultLowLatency<sp/>=<sp/>&amp;devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a5f17f8aeda7b7e7e041006edacf9d3dc" kindref="member">baseDeviceInfo</ref>.<ref refid="struct_pa_device_info_1a89e60515505eea8d668ede3a26a19ac6" kindref="member">defaultLowOutputLatency</ref>;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultHighLatency<sp/>=<sp/>&amp;devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a5f17f8aeda7b7e7e041006edacf9d3dc" kindref="member">baseDeviceInfo</ref>.<ref refid="struct_pa_device_info_1a2a43dbc2b158806a937065bda037070e" kindref="member">defaultHighOutputLatency</ref>;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_nonblock(<sp/>pcm,<sp/>0<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1aa154c2bb63aa4b6f8aad17e8c828396c" kindref="member">alsa_snd_pcm_hw_params_alloca</ref>(<sp/>&amp;hwParams<sp/>);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_snd_pcm_hw_params_any(<sp/>pcm,<sp/>hwParams<sp/>);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>defaultSr<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Could<sp/>be<sp/>that<sp/>the<sp/>device<sp/>opened<sp/>in<sp/>one<sp/>mode<sp/>supports<sp/>samplerates<sp/>that<sp/>the<sp/>other<sp/>mode<sp/>wont<sp/>have,</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>try<sp/>again<sp/>..<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>SetApproximateSampleRate(<sp/>pcm,<sp/>hwParams,<sp/>defaultSr<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultSr<sp/>=<sp/>-1.;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_hw_params_any(<sp/>pcm,<sp/>hwParams<sp/>);<sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>any<sp/>params<sp/>(rate)<sp/>that<sp/>might<sp/>have<sp/>been<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Original<sp/>default<sp/>samplerate<sp/>failed,<sp/>trying<sp/>again<sp/>..\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>defaultSr<sp/>&lt;<sp/>0.<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>sample<sp/>rate<sp/>not<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>=<sp/>44100;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Will<sp/>contain<sp/>approximate<sp/>rate<sp/>returned<sp/>by<sp/>alsa-lib<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>allow<sp/>rate<sp/>resampling<sp/>when<sp/>probing<sp/>for<sp/>the<sp/>default<sp/>rate<sp/>(but<sp/>ignore<sp/>if<sp/>this<sp/>call<sp/>fails)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_hw_params_set_rate_resample(<sp/>pcm,<sp/>hwParams,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_set_rate_near(<sp/>pcm,<sp/>hwParams,<sp/>&amp;sampleRate,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref>;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>GetExactSampleRate(<sp/>hwParams,<sp/>&amp;defaultSr<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_channels_min(<sp/>hwParams,<sp/>&amp;minChans<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_channels_max(<sp/>hwParams,<sp/>&amp;maxChans<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>maxChans<sp/>&lt;=<sp/><ref refid="macint_8h_1a9ec306f36d50c7375e74f0d1c55a3a67" kindref="member">INT_MAX</ref><sp/>);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>maxChans<sp/>&gt;<sp/>0<sp/>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Weird<sp/>linking<sp/>issue<sp/>could<sp/>cause<sp/>wrong<sp/>version<sp/>of<sp/>ALSA<sp/>symbols<sp/>to<sp/>be<sp/>called,</highlight></codeline>
<codeline lineno="902"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resulting<sp/>in<sp/>zeroed<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>Limit<sp/>to<sp/>sensible<sp/>number<sp/>(ALSA<sp/>plugins<sp/>accept<sp/>a<sp/>crazy<sp/>amount<sp/>of<sp/>channels)?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>isPlug<sp/>&amp;&amp;<sp/>maxChans<sp/>&gt;<sp/>128<sp/>)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxChans<sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Limiting<sp/>number<sp/>of<sp/>plugin<sp/>channels<sp/>to<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>maxChans<sp/>));</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TWEAKME:</highlight></codeline>
<codeline lineno="912"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Giving<sp/>values<sp/>for<sp/>default<sp/>min<sp/>and<sp/>max<sp/>latency<sp/>is<sp/>not<sp/>straightforward.</highlight></codeline>
<codeline lineno="913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>*<sp/>for<sp/>low<sp/>latency,<sp/>we<sp/>want<sp/>to<sp/>give<sp/>the<sp/>lowest<sp/>value<sp/>that<sp/>will<sp/>work<sp/>reliably.</highlight></codeline>
<codeline lineno="914"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>varies<sp/>based<sp/>on<sp/>the<sp/>sound<sp/>card,<sp/>kernel,<sp/>CPU,<sp/>etc.<sp/><sp/>Better<sp/>to<sp/>give</highlight></codeline>
<codeline lineno="915"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>sub-optimal<sp/>latency<sp/>than<sp/>to<sp/>give<sp/>a<sp/>number<sp/>too<sp/>low<sp/>and<sp/>cause<sp/>dropouts.</highlight></codeline>
<codeline lineno="916"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>*<sp/>for<sp/>high<sp/>latency<sp/>we<sp/>want<sp/>to<sp/>give<sp/>a<sp/>large<sp/>enough<sp/>value<sp/>that<sp/>dropouts<sp/>are<sp/>basically<sp/>impossible.</highlight></codeline>
<codeline lineno="917"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>doesn&apos;t<sp/>really<sp/>require<sp/>as<sp/>much<sp/>tweaking,<sp/>since<sp/>providing<sp/>too<sp/>large<sp/>a<sp/>number<sp/>will</highlight></codeline>
<codeline lineno="918"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>just<sp/>cause<sp/>us<sp/>to<sp/>select<sp/>the<sp/>nearest<sp/>setting<sp/>that<sp/>will<sp/>work<sp/>at<sp/>stream<sp/>config<sp/>time.</highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>low<sp/>latency<sp/>values,<sp/>(sometimes<sp/>the<sp/>buffer<sp/>&amp;<sp/>period<sp/>that<sp/>result<sp/>are<sp/>larger)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>alsaBufferFrames<sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>alsaPeriodFrames<sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_buffer_size_near(<sp/>pcm,<sp/>hwParams,<sp/>&amp;alsaBufferFrames<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_period_size_near(<sp/>pcm,<sp/>hwParams,<sp/>&amp;alsaPeriodFrames,<sp/>&amp;dir<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>*defaultLowLatency<sp/>=<sp/>(double)<sp/>(alsaBufferFrames<sp/>-<sp/>alsaPeriodFrames)<sp/>/<sp/>defaultSr;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Base<sp/>the<sp/>high<sp/>latency<sp/>case<sp/>on<sp/>values<sp/>four<sp/>times<sp/>larger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>alsaBufferFrames<sp/>=<sp/>2048;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>alsaPeriodFrames<sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Have<sp/>to<sp/>reset<sp/>hwParams,<sp/>to<sp/>set<sp/>new<sp/>buffer<sp/>size;<sp/>need<sp/>to<sp/>also<sp/>set<sp/>sample<sp/>rate<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_any(<sp/>pcm,<sp/>hwParams<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>SetApproximateSampleRate(<sp/>pcm,<sp/>hwParams,<sp/>defaultSr<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_buffer_size_near(<sp/>pcm,<sp/>hwParams,<sp/>&amp;alsaBufferFrames<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_period_size_near(<sp/>pcm,<sp/>hwParams,<sp/>&amp;alsaPeriodFrames,<sp/>&amp;dir<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>*defaultHighLatency<sp/>=<sp/>(double)<sp/>(alsaBufferFrames<sp/>-<sp/>alsaPeriodFrames)<sp/>/<sp/>defaultSr;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>*minChannels<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)minChans;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>*maxChannels<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)maxChans;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>*defaultSampleRate<sp/>=<sp/>defaultSr;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_snd_pcm_close(<sp/>pcm<sp/>);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Initialize<sp/>device<sp/>info<sp/>with<sp/>invalid<sp/>values<sp/>(maxInputChannels<sp/>and<sp/>maxOutputChannels<sp/>are<sp/>set<sp/>to<sp/>zero<sp/>since<sp/>these<sp/>indicate</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/>*<sp/>whether<sp/>input/output<sp/>is<sp/>available)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitializeDeviceInfo(<sp/><ref refid="struct_pa_device_info" kindref="compound">PaDeviceInfo</ref><sp/>*deviceInfo<sp/>)</highlight></codeline>
<codeline lineno="952"><highlight class="normal">{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceInfo-&gt;<ref refid="struct_pa_device_info_1a2d726add4cd2af78a94c052b3a7df568" kindref="member">structVersion</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceInfo-&gt;<ref refid="struct_pa_device_info_1a1bc26d68f1d89472ae67eaa49a542aea" kindref="member">name</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceInfo-&gt;<ref refid="struct_pa_device_info_1afe741e4d185069577f7e74b78fdef5a4" kindref="member">hostApi</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceInfo-&gt;<ref refid="struct_pa_device_info_1ad0baeeb2b6ceaf7fc9bb76109a7555e9" kindref="member">maxInputChannels</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceInfo-&gt;<ref refid="struct_pa_device_info_1a48f908b21e8a11fdf0a88132b18fe7b0" kindref="member">maxOutputChannels</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceInfo-&gt;<ref refid="struct_pa_device_info_1aad6629064b8c7cf043d237ea0a5cc534" kindref="member">defaultLowInputLatency</ref><sp/>=<sp/>-1.;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceInfo-&gt;<ref refid="struct_pa_device_info_1a89e60515505eea8d668ede3a26a19ac6" kindref="member">defaultLowOutputLatency</ref><sp/>=<sp/>-1.;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceInfo-&gt;<ref refid="struct_pa_device_info_1a4214826038fcaf374beb9816024e6c9f" kindref="member">defaultHighInputLatency</ref><sp/>=<sp/>-1.;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceInfo-&gt;<ref refid="struct_pa_device_info_1a2a43dbc2b158806a937065bda037070e" kindref="member">defaultHighOutputLatency</ref><sp/>=<sp/>-1.;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>deviceInfo-&gt;<ref refid="struct_pa_device_info_1a68f435353bfe1a4c9b632203a9afcacb" kindref="member">defaultSampleRate</ref><sp/>=<sp/>-1.;</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Retrieve<sp/>the<sp/>version<sp/>of<sp/>the<sp/>runtime<sp/>Alsa-lib,<sp/>as<sp/>a<sp/>single<sp/>number<sp/>equivalent<sp/>to</highlight></codeline>
<codeline lineno="967"><highlight class="comment"><sp/>*<sp/>SND_LIB_VERSION.<sp/><sp/>Only<sp/>a<sp/>version<sp/>string<sp/>is<sp/>available<sp/>(&quot;a.b.c&quot;)<sp/>so<sp/>this<sp/>has<sp/>to<sp/>be<sp/>converted.</highlight></codeline>
<codeline lineno="968"><highlight class="comment"><sp/>*<sp/>Assume<sp/>&apos;a&apos;<sp/>and<sp/>&apos;b&apos;<sp/>are<sp/>single<sp/>digits<sp/>only.</highlight></codeline>
<codeline lineno="969"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="pa__types_8h_1a9cff423f720226e66a7826c30509c465" kindref="member">PaUint32</ref><sp/>PaAlsaVersionNum(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>verStr;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__types_8h_1a9cff423f720226e66a7826c30509c465" kindref="member">PaUint32</ref><sp/>verNum;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>verStr<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>alsa_snd_asoundlib_version();</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>verNum<sp/>=<sp/><ref refid="pa__linux__alsa_8c_1ad58ac533f6bb5499e822284ce6a4f377" kindref="member">ALSA_VERSION_INT</ref>(<sp/>atoi(verStr),<sp/>atoi(verStr<sp/>+<sp/>2),<sp/>atoi(verStr<sp/>+<sp/>4)<sp/>);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;ALSA<sp/>version<sp/>(build):<sp/>&quot;</highlight><highlight class="normal"><sp/>SND_LIB_VERSION_STR<sp/></highlight><highlight class="stringliteral">&quot;\nALSA<sp/>version<sp/>(runtime):<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>verStr<sp/>));</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>verNum;</highlight></codeline>
<codeline lineno="980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helper<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984" refid="struct_hw_dev_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal">{</highlight></codeline>
<codeline lineno="986" refid="struct_hw_dev_info_1a9c51cd40ef6da3c3fc4a52ec02796092" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_hw_dev_info_1a9c51cd40ef6da3c3fc4a52ec02796092" kindref="member">alsaName</ref>;</highlight></codeline>
<codeline lineno="987" refid="struct_hw_dev_info_1ada014cb1067ae4696a3f7b5e40819971" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_hw_dev_info_1ada014cb1067ae4696a3f7b5e40819971" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="988" refid="struct_hw_dev_info_1a3afbd357df38d146cf8d223cbbe4930f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_hw_dev_info_1a3afbd357df38d146cf8d223cbbe4930f" kindref="member">isPlug</ref>;</highlight></codeline>
<codeline lineno="989" refid="struct_hw_dev_info_1a11200ea7796a9a1c1a44a23e03eef21e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_hw_dev_info_1a11200ea7796a9a1c1a44a23e03eef21e" kindref="member">hasPlayback</ref>;</highlight></codeline>
<codeline lineno="990" refid="struct_hw_dev_info_1a80ee49eb62fed3f40aa4e49591c23980" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_hw_dev_info_1a80ee49eb62fed3f40aa4e49591c23980" kindref="member">hasCapture</ref>;</highlight></codeline>
<codeline lineno="991"><highlight class="normal">}<sp/><ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref>;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994" refid="pa__linux__alsa_8c_1a678f357aa9293068bbedbfe6be43af35" refkind="member"><highlight class="normal"><ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref><sp/><ref refid="pa__linux__alsa_8c_1a678f357aa9293068bbedbfe6be43af35" kindref="member">predefinedNames</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;center_lfe&quot;</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>{<sp/>&quot;default&quot;,<sp/>NULL,<sp/>0,<sp/>1,<sp/>1<sp/>},<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;dmix&quot;</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>{<sp/>&quot;dpl&quot;,<sp/>NULL,<sp/>0,<sp/>1,<sp/>0<sp/>},<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>{<sp/>&quot;dsnoop&quot;,<sp/>NULL,<sp/>0,<sp/>0,<sp/>1<sp/>},<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;front&quot;</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;iec958&quot;</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>{<sp/>&quot;modem&quot;,<sp/>NULL,<sp/>0,<sp/>1,<sp/>0<sp/>},<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;rear&quot;</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;side&quot;</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/>{<sp/>&quot;spdif&quot;,<sp/>NULL,<sp/>0,<sp/>0,<sp/>0<sp/>},<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;surround40&quot;</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;surround41&quot;</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;surround50&quot;</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;surround51&quot;</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;surround71&quot;</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;AndroidPlayback_Earpiece_normal&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;AndroidPlayback_Speaker_normal&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;AndroidPlayback_Bluetooth_normal&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;AndroidPlayback_Headset_normal&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;AndroidPlayback_Speaker_Headset_normal&quot;</highlight><highlight class="normal">,<sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;AndroidPlayback_Bluetooth-A2DP_normal&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;AndroidPlayback_ExtraDockSpeaker_normal&quot;</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;AndroidPlayback_TvOut_normal&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;AndroidRecord_Microphone&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>0,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;AndroidRecord_Earpiece_normal&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>0,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;AndroidRecord_Speaker_normal&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>0,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;AndroidRecord_Headset_normal&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>0,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;AndroidRecord_Bluetooth_normal&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>0,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;AndroidRecord_Speaker_Headset_normal&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>0,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>1,<sp/>0<sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref><sp/>*FindDeviceName(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>)</highlight></codeline>
<codeline lineno="1032"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>predefinedNames[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_hw_dev_info_1a9c51cd40ef6da3c3fc4a52ec02796092" kindref="member">alsaName</ref>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>strcmp(<sp/>name,<sp/>predefinedNames[i].alsaName<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;predefinedNames[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsa_StrDup(<sp/><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref><sp/>*alsaApi,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**dst,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src)</highlight></codeline>
<codeline lineno="1049"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>strlen(<sp/>src<sp/>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PA_DEBUG((&quot;PaStrDup<sp/>%s<sp/>%d\n&quot;,<sp/>src,<sp/>len));<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>*dst<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="pa__allocation_8c_1ace88f0110da3a26cb8d8ed00758accf3" kindref="member">PaUtil_GroupAllocateMemory</ref>(<sp/>alsaApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" kindref="member">allocations</ref>,<sp/>len<sp/>),</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref><sp/>);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(<sp/>*dst,<sp/>src,<sp/>len<sp/>);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Disregard<sp/>some<sp/>standard<sp/>plugins</highlight></codeline>
<codeline lineno="1064"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IgnorePlugin(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pluginId<sp/>)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ignoredPlugins[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;hw&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;plughw&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;plug&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dsnoop&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tee&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;shm&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cards&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rate_convert&quot;</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>};</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>ignoredPlugins[i]<sp/>)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!strcmp(<sp/>pluginId,<sp/>ignoredPlugins[i]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Skip<sp/>past<sp/>parts<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>a<sp/>(pcm)<sp/>info<sp/>name<sp/>that<sp/>are<sp/>already<sp/>in<sp/>the<sp/>card<sp/>name,<sp/>to<sp/>avoid<sp/>duplication<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*SkipCardDetailsInName(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*infoSkipName,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cardRefName<sp/>)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lastSpacePosn<sp/>=<sp/>infoSkipName;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>matching<sp/>chars;<sp/>but<sp/>only<sp/>in<sp/>chunks<sp/>separated<sp/>by<sp/>&apos;<sp/>&apos;<sp/>(not<sp/>part<sp/>words<sp/>etc),<sp/>so<sp/>track<sp/>lastSpacePosn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>*cardRefName<sp/>)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>*infoSkipName<sp/>&amp;&amp;<sp/>*cardRefName<sp/>&amp;&amp;<sp/>*infoSkipName<sp/>==<sp/>*cardRefName)</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infoSkipName++;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cardRefName++;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*infoSkipName<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*infoSkipName<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSpacePosn<sp/>=<sp/>infoSkipName;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infoSkipName<sp/>=<sp/>lastSpacePosn;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>another<sp/>chunk;<sp/>post-increment<sp/>means<sp/>ends<sp/>pointing<sp/>to<sp/>next<sp/>char<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>*cardRefName<sp/>&amp;&amp;<sp/>(<sp/>*cardRefName++<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*infoSkipName<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>The<sp/>2<sp/>names<sp/>were<sp/>identical;<sp/>instead<sp/>of<sp/>a<sp/>nul-string,<sp/>return<sp/>a<sp/>marker<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>want<sp/>to<sp/>move<sp/>to<sp/>the<sp/>first<sp/>char<sp/>after<sp/>any<sp/>spaces<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>*lastSpacePosn<sp/>&amp;&amp;<sp/>*lastSpacePosn<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSpacePosn++;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>a<sp/>single<sp/>separator<sp/>char<sp/>if<sp/>present<sp/>in<sp/>the<sp/>remaining<sp/>pcm<sp/>name;<sp/>(pa<sp/>will<sp/>add<sp/>its<sp/>own)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<sp/>*lastSpacePosn<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>||<sp/>*lastSpacePosn<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>)<sp/>&amp;&amp;<sp/>*(lastSpacePosn<sp/>+<sp/>1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSpacePosn<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lastSpacePosn;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OpenPcm(<sp/>snd_pcm_t<sp/>**pcmp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>snd_pcm_stream_t<sp/>stream,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>waitOnBusy<sp/>)</highlight></codeline>
<codeline lineno="1123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret,<sp/>tries<sp/>=<sp/>0,<sp/>maxTries<sp/>=<sp/>waitOnBusy<sp/>?<sp/>busyRetries_<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>alsa_snd_pcm_open(<sp/>pcmp,<sp/>name,<sp/>stream,<sp/>mode<sp/>);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>tries<sp/>=<sp/>0;<sp/>tries<sp/>&lt;<sp/>maxTries<sp/>&amp;&amp;<sp/>-EBUSY<sp/>==<sp/>ret;<sp/>++tries<sp/>)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a1b3c20044c9401c42add29475636e83d" kindref="member">Pa_Sleep</ref>(<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>alsa_snd_pcm_open(<sp/>pcmp,<sp/>name,<sp/>stream,<sp/>mode<sp/>);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>-EBUSY<sp/>!=<sp/>ret<sp/>)</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Successfully<sp/>opened<sp/>initially<sp/>busy<sp/>device<sp/>after<sp/>%d<sp/>tries\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>tries<sp/>));</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>-EBUSY<sp/>==<sp/>ret<sp/>)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Failed<sp/>to<sp/>open<sp/>busy<sp/>device<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>name<sp/>));</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ret<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Opened<sp/>device<sp/>&apos;%s&apos;<sp/>ptr[%p]<sp/>-<sp/>result:<sp/>[%d:%s]\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>name,<sp/>*pcmp,<sp/>ret,<sp/>alsa_snd_strerror(ret)<sp/>));</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>FillInDevInfo(<sp/><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref><sp/>*alsaApi,<sp/><ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref>*<sp/>deviceHwInfo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blocking,</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref>*<sp/>devInfo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>devIdx<sp/>)</highlight></codeline>
<codeline lineno="1152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_device_info" kindref="compound">PaDeviceInfo</ref><sp/>*baseDeviceInfo<sp/>=<sp/>&amp;devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a5f17f8aeda7b7e7e041006edacf9d3dc" kindref="member">baseDeviceInfo</ref>;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_t<sp/>*pcm<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref><sp/>*baseApi<sp/>=<sp/>&amp;alsaApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1a9a5d2130ae6a1d8826fd265e44eaa1a6" kindref="member">baseHostApiRep</ref>;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Filling<sp/>device<sp/>info<sp/>for:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1ada014cb1067ae4696a3f7b5e40819971" kindref="member">name</ref><sp/>));</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Zero<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>InitializeDeviceInfo(<sp/>baseDeviceInfo<sp/>);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>determine<sp/>device<sp/>capabilities,<sp/>we<sp/>must<sp/>open<sp/>the<sp/>device<sp/>and<sp/>query<sp/>the</highlight></codeline>
<codeline lineno="1164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>hardware<sp/>parameter<sp/>configuration<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Query<sp/>capture<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1a80ee49eb62fed3f40aa4e49591c23980" kindref="member">hasCapture</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenPcm(<sp/>&amp;pcm,<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1a9c51cd40ef6da3c3fc4a52ec02796092" kindref="member">alsaName</ref>,<sp/>SND_PCM_STREAM_CAPTURE,<sp/>blocking,<sp/>0<sp/>)<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>GropeDevice(<sp/>pcm,<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1a3afbd357df38d146cf8d223cbbe4930f" kindref="member">isPlug</ref>,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref>,<sp/>blocking,<sp/>devInfo<sp/>)<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Failed<sp/>groping<sp/>%s<sp/>for<sp/>capture\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1a9c51cd40ef6da3c3fc4a52ec02796092" kindref="member">alsaName</ref><sp/>));</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Query<sp/>playback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1a11200ea7796a9a1c1a44a23e03eef21e" kindref="member">hasPlayback</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OpenPcm(<sp/>&amp;pcm,<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1a9c51cd40ef6da3c3fc4a52ec02796092" kindref="member">alsaName</ref>,<sp/>SND_PCM_STREAM_PLAYBACK,<sp/>blocking,<sp/>0<sp/>)<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>GropeDevice(<sp/>pcm,<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1a3afbd357df38d146cf8d223cbbe4930f" kindref="member">isPlug</ref>,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64ae177efd435a0afd9a45c4efc3b63b229" kindref="member">StreamDirection_Out</ref>,<sp/>blocking,<sp/>devInfo<sp/>)<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Failed<sp/>groping<sp/>%s<sp/>for<sp/>playback\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1a9c51cd40ef6da3c3fc4a52ec02796092" kindref="member">alsaName</ref><sp/>));</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>baseDeviceInfo-&gt;<ref refid="struct_pa_device_info_1a2d726add4cd2af78a94c052b3a7df568" kindref="member">structVersion</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>baseDeviceInfo-&gt;<ref refid="struct_pa_device_info_1afe741e4d185069577f7e74b78fdef5a4" kindref="member">hostApi</ref><sp/>=<sp/>alsaApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1af50c4c8ec89a0f6277539588e5bd142d" kindref="member">hostApiIndex</ref>;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>baseDeviceInfo-&gt;<ref refid="struct_pa_device_info_1a1bc26d68f1d89472ae67eaa49a542aea" kindref="member">name</ref><sp/>=<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1ada014cb1067ae4696a3f7b5e40819971" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a09959f7709fe9ba29a4e3fd902fd0880" kindref="member">alsaName</ref><sp/>=<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1a9c51cd40ef6da3c3fc4a52ec02796092" kindref="member">alsaName</ref>;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a9b00b3189ea32b6635ef2bfdc2938b81" kindref="member">isPlug</ref><sp/>=<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1a3afbd357df38d146cf8d223cbbe4930f" kindref="member">isPlug</ref>;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A:<sp/>Storing<sp/>pointer<sp/>to<sp/>PaAlsaDeviceInfo<sp/>object<sp/>as<sp/>pointer<sp/>to<sp/>PaDeviceInfo<sp/>object.</highlight></codeline>
<codeline lineno="1197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Should<sp/>now<sp/>be<sp/>safe<sp/>to<sp/>add<sp/>device<sp/>info,<sp/>unless<sp/>the<sp/>device<sp/>supports<sp/>neither<sp/>capture<sp/>nor<sp/>playback</highlight></codeline>
<codeline lineno="1198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>baseDeviceInfo-&gt;<ref refid="struct_pa_device_info_1ad0baeeb2b6ceaf7fc9bb76109a7555e9" kindref="member">maxInputChannels</ref><sp/>&gt;<sp/>0<sp/>||<sp/>baseDeviceInfo-&gt;<ref refid="struct_pa_device_info_1a48f908b21e8a11fdf0a88132b18fe7b0" kindref="member">maxOutputChannels</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>device<sp/>default<sp/>if<sp/>there<sp/>isn&apos;t<sp/>already<sp/>one<sp/>or<sp/>it<sp/>is<sp/>the<sp/>ALSA<sp/>&quot;default&quot;<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>baseApi-&gt;<ref refid="struct_pa_util_host_api_representation_1a9c443aa6cf07d3c46167a91b274a9e94" kindref="member">info</ref>.<ref refid="struct_pa_host_api_info_1a85a62057c3479d3efaa477d8562cf21d" kindref="member">defaultInputDevice</ref><sp/>==<sp/><ref refid="portaudio_8h_1a8c26dd5e6f28bb4cda7a1f5460282297" kindref="member">paNoDevice</ref><sp/>||</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strcmp(<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1a9c51cd40ef6da3c3fc4a52ec02796092" kindref="member">alsaName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>&amp;&amp;<sp/>baseDeviceInfo-&gt;<ref refid="struct_pa_device_info_1ad0baeeb2b6ceaf7fc9bb76109a7555e9" kindref="member">maxInputChannels</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseApi-&gt;<ref refid="struct_pa_util_host_api_representation_1a9c443aa6cf07d3c46167a91b274a9e94" kindref="member">info</ref>.<ref refid="struct_pa_host_api_info_1a85a62057c3479d3efaa477d8562cf21d" kindref="member">defaultInputDevice</ref><sp/>=<sp/>*devIdx;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;Default<sp/>input<sp/>device:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1ada014cb1067ae4696a3f7b5e40819971" kindref="member">name</ref><sp/>));</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>baseApi-&gt;<ref refid="struct_pa_util_host_api_representation_1a9c443aa6cf07d3c46167a91b274a9e94" kindref="member">info</ref>.<ref refid="struct_pa_host_api_info_1a62632690b5f7906d3c9bfdab91e7f4b2" kindref="member">defaultOutputDevice</ref><sp/>==<sp/><ref refid="portaudio_8h_1a8c26dd5e6f28bb4cda7a1f5460282297" kindref="member">paNoDevice</ref><sp/>||</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strcmp(<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1a9c51cd40ef6da3c3fc4a52ec02796092" kindref="member">alsaName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>&amp;&amp;<sp/>baseDeviceInfo-&gt;<ref refid="struct_pa_device_info_1a48f908b21e8a11fdf0a88132b18fe7b0" kindref="member">maxOutputChannels</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseApi-&gt;<ref refid="struct_pa_util_host_api_representation_1a9c443aa6cf07d3c46167a91b274a9e94" kindref="member">info</ref>.<ref refid="struct_pa_host_api_info_1a62632690b5f7906d3c9bfdab91e7f4b2" kindref="member">defaultOutputDevice</ref><sp/>=<sp/>*devIdx;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;Default<sp/>output<sp/>device:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1ada014cb1067ae4696a3f7b5e40819971" kindref="member">name</ref><sp/>));</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Adding<sp/>device<sp/>%s:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1ada014cb1067ae4696a3f7b5e40819971" kindref="member">name</ref>,<sp/>*devIdx<sp/>));</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseApi-&gt;<ref refid="struct_pa_util_host_api_representation_1a48dcfdf57e6d12d33314929ac213ae28" kindref="member">deviceInfos</ref>[*devIdx]<sp/>=<sp/>(<ref refid="struct_pa_device_info" kindref="compound">PaDeviceInfo</ref><sp/>*)<sp/>devInfo;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*devIdx)<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Skipped<sp/>device:<sp/>%s,<sp/>all<sp/>channels<sp/>==<sp/>0\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>deviceHwInfo-&gt;<ref refid="struct_hw_dev_info_1ada014cb1067ae4696a3f7b5e40819971" kindref="member">name</ref><sp/>));</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Build<sp/>PaDeviceInfo<sp/>list,<sp/>ignore<sp/>devices<sp/>for<sp/>which<sp/>we<sp/>cannot<sp/>determine<sp/>capabilities<sp/>(possibly<sp/>busy,<sp/>sigh)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>BuildDeviceList(<sp/><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref><sp/>*alsaApi<sp/>)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref><sp/>*baseApi<sp/>=<sp/>&amp;alsaApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1a9a5d2130ae6a1d8826fd265e44eaa1a6" kindref="member">baseHostApiRep</ref>;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref><sp/>*deviceInfoArray;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cardIdx<sp/>=<sp/>-1,<sp/>devIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_ctl_card_info_t<sp/>*cardInfo;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numDeviceNames<sp/>=<sp/>0,<sp/>maxDeviceNames<sp/>=<sp/>1,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref><sp/>*hwDevInfos<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_config_t<sp/>*topNode<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_info_t<sp/>*pcmInfo;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blocking<sp/>=<sp/>SND_PCM_NONBLOCK;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>usePlughw<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hwPrefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>alsaCardName[50];</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PA_ENABLE_DEBUG_OUTPUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref><sp/>startTime<sp/>=<sp/><ref refid="pa__util_8h_1a9598384d28d22d589f607ca1069cc04c" kindref="member">PaUtil_GetTime</ref>();</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PA_ALSA_INITIALIZE_BLOCK&quot;</highlight><highlight class="normal"><sp/>)<sp/>&amp;&amp;<sp/>atoi(<sp/><ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PA_ALSA_INITIALIZE_BLOCK&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocking<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>PA_ALSA_PLUGHW<sp/>is<sp/>1<sp/>(non-zero),<sp/>use<sp/>the<sp/>plughw:<sp/>pcm<sp/>throughout<sp/>instead<sp/>of<sp/>hw:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PA_ALSA_PLUGHW&quot;</highlight><highlight class="normal"><sp/>)<sp/>&amp;&amp;<sp/>atoi(<sp/><ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PA_ALSA_PLUGHW&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usePlughw<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwPrefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;plug&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Using<sp/>Plughw\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>two<sp/>will<sp/>be<sp/>set<sp/>to<sp/>the<sp/>first<sp/>working<sp/>input<sp/>and<sp/>output<sp/>device,<sp/>respectively<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>baseApi-&gt;<ref refid="struct_pa_util_host_api_representation_1a9c443aa6cf07d3c46167a91b274a9e94" kindref="member">info</ref>.<ref refid="struct_pa_host_api_info_1a85a62057c3479d3efaa477d8562cf21d" kindref="member">defaultInputDevice</ref><sp/>=<sp/><ref refid="portaudio_8h_1a8c26dd5e6f28bb4cda7a1f5460282297" kindref="member">paNoDevice</ref>;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>baseApi-&gt;<ref refid="struct_pa_util_host_api_representation_1a9c443aa6cf07d3c46167a91b274a9e94" kindref="member">info</ref>.<ref refid="struct_pa_host_api_info_1a62632690b5f7906d3c9bfdab91e7f4b2" kindref="member">defaultOutputDevice</ref><sp/>=<sp/><ref refid="portaudio_8h_1a8c26dd5e6f28bb4cda7a1f5460282297" kindref="member">paNoDevice</ref>;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Gather<sp/>info<sp/>about<sp/>hw<sp/>devices</highlight></codeline>
<codeline lineno="1264"><highlight class="comment"></highlight></codeline>
<codeline lineno="1265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>alsa_snd_card_next()<sp/>modifies<sp/>the<sp/>integer<sp/>passed<sp/>to<sp/>it<sp/>to<sp/>be:</highlight></codeline>
<codeline lineno="1266"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>index<sp/>of<sp/>the<sp/>first<sp/>card<sp/>if<sp/>the<sp/>parameter<sp/>is<sp/>-1</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>index<sp/>of<sp/>the<sp/>next<sp/>card<sp/>if<sp/>the<sp/>parameter<sp/>is<sp/>the<sp/>index<sp/>of<sp/>a<sp/>card</highlight></codeline>
<codeline lineno="1268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>-1<sp/>if<sp/>there<sp/>are<sp/>no<sp/>more<sp/>cards</highlight></codeline>
<codeline lineno="1269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>function<sp/>itself<sp/>returns<sp/>0<sp/>if<sp/>it<sp/>succeeded.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>cardIdx<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1ad6363b683f708bbe9616906956fea5a9" kindref="member">alsa_snd_ctl_card_info_alloca</ref>(<sp/>&amp;cardInfo<sp/>);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1aaa0a47047adc52963b11d9be20235346" kindref="member">alsa_snd_pcm_info_alloca</ref>(<sp/>&amp;pcmInfo<sp/>);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>alsa_snd_card_next(<sp/>&amp;cardIdx<sp/>)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>cardIdx<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cardName;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>devIdx<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_ctl_t<sp/>*ctl;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>[50];</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref>(<sp/>alsaCardName,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(alsaCardName),<sp/></highlight><highlight class="stringliteral">&quot;hw:%d&quot;</highlight><highlight class="normal">,<sp/>cardIdx<sp/>);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Acquire<sp/>name<sp/>of<sp/>card<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_ctl_open(<sp/>&amp;ctl,<sp/>alsaCardName,<sp/>0<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unable<sp/>to<sp/>open<sp/>card<sp/>:(<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Unable<sp/>to<sp/>open<sp/>device<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>alsaCardName<sp/>));</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_ctl_card_info(<sp/>ctl,<sp/>cardInfo<sp/>);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsa_StrDup(<sp/>alsaApi,<sp/>&amp;cardName,<sp/>alsa_snd_ctl_card_info_get_name(<sp/>cardInfo<sp/>))<sp/>);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>alsa_snd_ctl_pcm_next_device(<sp/>ctl,<sp/>&amp;devIdx<sp/>)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>devIdx<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*alsaDeviceName,<sp/>*deviceName,<sp/>*infoName;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hasPlayback<sp/>=<sp/>0,<sp/>hasCapture<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref>(<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buf),<sp/></highlight><highlight class="stringliteral">&quot;%s%s,%d&quot;</highlight><highlight class="normal">,<sp/>hwPrefix,<sp/>alsaCardName,<sp/>devIdx<sp/>);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Obtain<sp/>info<sp/>about<sp/>this<sp/>particular<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_info_set_device(<sp/>pcmInfo,<sp/>devIdx<sp/>);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_info_set_subdevice(<sp/>pcmInfo,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_info_set_stream(<sp/>pcmInfo,<sp/>SND_PCM_STREAM_CAPTURE<sp/>);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_ctl_pcm_info(<sp/>ctl,<sp/>pcmInfo<sp/>)<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasCapture<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_info_set_stream(<sp/>pcmInfo,<sp/>SND_PCM_STREAM_PLAYBACK<sp/>);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_ctl_pcm_info(<sp/>ctl,<sp/>pcmInfo<sp/>)<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasPlayback<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!hasPlayback<sp/>&amp;&amp;<sp/>!hasCapture<sp/>)</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infoName<sp/>=<sp/>SkipCardDetailsInName(<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)alsa_snd_pcm_info_get_name(<sp/>pcmInfo<sp/>),<sp/>cardName<sp/>);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>length<sp/>of<sp/>the<sp/>string<sp/>written<sp/>by<sp/>snprintf<sp/>plus<sp/>terminating<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref>(<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%s<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>cardName,<sp/>infoName,<sp/>buf<sp/>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>deviceName<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="pa__allocation_8c_1ace88f0110da3a26cb8d8ed00758accf3" kindref="member">PaUtil_GroupAllocateMemory</ref>(<sp/>alsaApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" kindref="member">allocations</ref>,<sp/>len<sp/>),</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref><sp/>);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref>(<sp/>deviceName,<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>%s<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>cardName,<sp/>infoName,<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numDeviceNames;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!hwDevInfos<sp/>||<sp/>numDeviceNames<sp/>&gt;<sp/>maxDeviceNames<sp/>)</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxDeviceNames<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>hwDevInfos<sp/>=<sp/>(<ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref><sp/>*)<sp/>realloc(<sp/>hwDevInfos,<sp/>maxDeviceNames<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref>)<sp/>),</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref><sp/>);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsa_StrDup(<sp/>alsaApi,<sp/>&amp;alsaDeviceName,<sp/>buf<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwDevInfos[<sp/>numDeviceNames<sp/>-<sp/>1<sp/>].<ref refid="struct_hw_dev_info_1a9c51cd40ef6da3c3fc4a52ec02796092" kindref="member">alsaName</ref><sp/>=<sp/>alsaDeviceName;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwDevInfos[<sp/>numDeviceNames<sp/>-<sp/>1<sp/>].<ref refid="struct_hw_dev_info_1ada014cb1067ae4696a3f7b5e40819971" kindref="member">name</ref><sp/>=<sp/>deviceName;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwDevInfos[<sp/>numDeviceNames<sp/>-<sp/>1<sp/>].<ref refid="struct_hw_dev_info_1a3afbd357df38d146cf8d223cbbe4930f" kindref="member">isPlug</ref><sp/>=<sp/>usePlughw;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwDevInfos[<sp/>numDeviceNames<sp/>-<sp/>1<sp/>].<ref refid="struct_hw_dev_info_1a11200ea7796a9a1c1a44a23e03eef21e" kindref="member">hasPlayback</ref><sp/>=<sp/>hasPlayback;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwDevInfos[<sp/>numDeviceNames<sp/>-<sp/>1<sp/>].<ref refid="struct_hw_dev_info_1a80ee49eb62fed3f40aa4e49591c23980" kindref="member">hasCapture</ref><sp/>=<sp/>hasCapture;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_ctl_close(<sp/>ctl<sp/>);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Iterate<sp/>over<sp/>plugin<sp/>devices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>==<sp/>(*alsa_snd_config)<sp/>)</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>alsa_snd_config_update<sp/>is<sp/>called<sp/>implicitly<sp/>by<sp/>some<sp/>functions,<sp/>if<sp/>this<sp/>hasn&apos;t<sp/>happened<sp/>snd_config<sp/>will<sp/>be<sp/>NULL<sp/>(bleh)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_config_update(),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;Updating<sp/>snd_config\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>*alsa_snd_config<sp/>);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>res<sp/>=<sp/>alsa_snd_config_search(<sp/>*alsa_snd_config,<sp/></highlight><highlight class="stringliteral">&quot;pcm&quot;</highlight><highlight class="normal">,<sp/>&amp;topNode<sp/>)<sp/>)<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_config_iterator_t<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a60348909c2d3bf5811e39782977197c1" kindref="member">alsa_snd_config_for_each</ref>(<sp/>i,<sp/>next,<sp/>topNode<sp/>)</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tpStr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">,<sp/>*idStr<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*alsaDeviceName,<sp/>*deviceName;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref><sp/>*predefined<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_config_t<sp/>*n<sp/>=<sp/>alsa_snd_config_iterator_entry(<sp/>i<sp/>),<sp/>*<sp/>tp<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(err<sp/>=<sp/>alsa_snd_config_search(<sp/>n,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,<sp/>&amp;tp<sp/>))<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>-ENOENT<sp/>!=<sp/>err<sp/>)</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(err,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref>);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_config_get_string(<sp/>tp,<sp/>&amp;tpStr<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_config_get_id(<sp/>n,<sp/>&amp;idStr<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>IgnorePlugin(<sp/>idStr<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Ignoring<sp/>ALSA<sp/>plugin<sp/>device<sp/>[%s]<sp/>of<sp/>type<sp/>[%s]\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>idStr,<sp/>tpStr<sp/>));</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Found<sp/>plugin<sp/>[%s]<sp/>of<sp/>type<sp/>[%s]\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>idStr,<sp/>tpStr<sp/>));</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>alsaDeviceName<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="pa__allocation_8c_1ace88f0110da3a26cb8d8ed00758accf3" kindref="member">PaUtil_GroupAllocateMemory</ref>(<sp/>alsaApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" kindref="member">allocations</ref>,</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strlen(idStr)<sp/>+<sp/>6<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref><sp/>);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(<sp/>alsaDeviceName,<sp/>idStr<sp/>);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>deviceName<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="pa__allocation_8c_1ace88f0110da3a26cb8d8ed00758accf3" kindref="member">PaUtil_GroupAllocateMemory</ref>(<sp/>alsaApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" kindref="member">allocations</ref>,</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strlen(idStr)<sp/>+<sp/>1<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref><sp/>);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(<sp/>deviceName,<sp/>idStr<sp/>);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numDeviceNames;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!hwDevInfos<sp/>||<sp/>numDeviceNames<sp/>&gt;<sp/>maxDeviceNames<sp/>)</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxDeviceNames<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>hwDevInfos<sp/>=<sp/>(<ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref><sp/>*)<sp/>realloc(<sp/>hwDevInfos,<sp/>maxDeviceNames<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref>)<sp/>),</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref><sp/>);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>predefined<sp/>=<sp/>FindDeviceName(<sp/>alsaDeviceName<sp/>);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwDevInfos[numDeviceNames<sp/>-<sp/>1].<ref refid="struct_hw_dev_info_1a9c51cd40ef6da3c3fc4a52ec02796092" kindref="member">alsaName</ref><sp/>=<sp/>alsaDeviceName;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwDevInfos[numDeviceNames<sp/>-<sp/>1].<ref refid="struct_hw_dev_info_1ada014cb1067ae4696a3f7b5e40819971" kindref="member">name</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>deviceName;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwDevInfos[numDeviceNames<sp/>-<sp/>1].<ref refid="struct_hw_dev_info_1a3afbd357df38d146cf8d223cbbe4930f" kindref="member">isPlug</ref><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>predefined<sp/>)</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwDevInfos[numDeviceNames<sp/>-<sp/>1].<ref refid="struct_hw_dev_info_1a11200ea7796a9a1c1a44a23e03eef21e" kindref="member">hasPlayback</ref><sp/>=<sp/>predefined-&gt;<ref refid="struct_hw_dev_info_1a11200ea7796a9a1c1a44a23e03eef21e" kindref="member">hasPlayback</ref>;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwDevInfos[numDeviceNames<sp/>-<sp/>1].<ref refid="struct_hw_dev_info_1a80ee49eb62fed3f40aa4e49591c23980" kindref="member">hasCapture</ref><sp/><sp/>=<sp/>predefined-&gt;<ref refid="struct_hw_dev_info_1a80ee49eb62fed3f40aa4e49591c23980" kindref="member">hasCapture</ref>;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwDevInfos[numDeviceNames<sp/>-<sp/>1].<ref refid="struct_hw_dev_info_1a11200ea7796a9a1c1a44a23e03eef21e" kindref="member">hasPlayback</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwDevInfos[numDeviceNames<sp/>-<sp/>1].<ref refid="struct_hw_dev_info_1a80ee49eb62fed3f40aa4e49591c23980" kindref="member">hasCapture</ref><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Iterating<sp/>over<sp/>ALSA<sp/>plugins<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>alsa_snd_strerror(<sp/>res<sp/>)<sp/>));</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>deviceInfo<sp/>memory<sp/>based<sp/>on<sp/>the<sp/>number<sp/>of<sp/>devices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>baseApi-&gt;<ref refid="struct_pa_util_host_api_representation_1a48dcfdf57e6d12d33314929ac213ae28" kindref="member">deviceInfos</ref><sp/>=<sp/>(<ref refid="struct_pa_device_info" kindref="compound">PaDeviceInfo</ref>**)<ref refid="pa__allocation_8c_1ace88f0110da3a26cb8d8ed00758accf3" kindref="member">PaUtil_GroupAllocateMemory</ref>(</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsaApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" kindref="member">allocations</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_pa_device_info" kindref="compound">PaDeviceInfo</ref>*)<sp/>*<sp/>(numDeviceNames)<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref><sp/>);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>all<sp/>device<sp/>info<sp/>structs<sp/>in<sp/>a<sp/>contiguous<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>deviceInfoArray<sp/>=<sp/>(<ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref>*)<ref refid="pa__allocation_8c_1ace88f0110da3a26cb8d8ed00758accf3" kindref="member">PaUtil_GroupAllocateMemory</ref>(</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsaApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ac4095eb12c9265fd690964b4afac3932" kindref="member">allocations</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref>)<sp/>*<sp/>numDeviceNames<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref><sp/>);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>list<sp/>of<sp/>cards,<sp/>filling<sp/>in<sp/>info.<sp/>If<sp/>a<sp/>device<sp/>is<sp/>deemed<sp/>unavailable<sp/>(can&apos;t<sp/>get<sp/>name),</highlight></codeline>
<codeline lineno="1435"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>it&apos;s<sp/>ignored.</highlight></codeline>
<codeline lineno="1436"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1437"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Note<sp/>that<sp/>we<sp/>do<sp/>this<sp/>in<sp/>two<sp/>stages.<sp/>This<sp/>is<sp/>a<sp/>workaround<sp/>owing<sp/>to<sp/>the<sp/>fact<sp/>that<sp/>the<sp/>&apos;dmix&apos;</highlight></codeline>
<codeline lineno="1438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>plugin<sp/>may<sp/>cause<sp/>the<sp/>underlying<sp/>hardware<sp/>device<sp/>to<sp/>be<sp/>busy<sp/>for<sp/>a<sp/>short<sp/>while<sp/>even<sp/>after<sp/>it</highlight></codeline>
<codeline lineno="1439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(dmix)<sp/>is<sp/>closed.<sp/>The<sp/>&apos;default&apos;<sp/>plugin<sp/>may<sp/>also<sp/>point<sp/>to<sp/>the<sp/>dmix<sp/>plugin,<sp/>so<sp/>the<sp/>same<sp/>goes</highlight></codeline>
<codeline lineno="1440"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>this.</highlight></codeline>
<codeline lineno="1441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Filling<sp/>device<sp/>info<sp/>for<sp/>%d<sp/>devices\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>numDeviceNames<sp/>));</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>devIdx<sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>numDeviceNames;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref>*<sp/>devInfo<sp/>=<sp/>&amp;deviceInfoArray[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref>*<sp/>hwInfo<sp/>=<sp/>&amp;hwDevInfos[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!strcmp(<sp/>hwInfo-&gt;<ref refid="struct_hw_dev_info_1ada014cb1067ae4696a3f7b5e40819971" kindref="member">name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;dmix&quot;</highlight><highlight class="normal"><sp/>)<sp/>||<sp/>!strcmp(<sp/>hwInfo-&gt;<ref refid="struct_hw_dev_info_1ada014cb1067ae4696a3f7b5e40819971" kindref="member">name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>FillInDevInfo(<sp/>alsaApi,<sp/>hwInfo,<sp/>blocking,<sp/>devInfo,<sp/>&amp;devIdx<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>devIdx<sp/>&lt;<sp/>numDeviceNames<sp/>);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>inspect<sp/>&apos;dmix&apos;<sp/>and<sp/>&apos;default&apos;<sp/>plugins<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>numDeviceNames;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref>*<sp/>devInfo<sp/>=<sp/>&amp;deviceInfoArray[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_hw_dev_info" kindref="compound">HwDevInfo</ref>*<sp/>hwInfo<sp/>=<sp/>&amp;hwDevInfos[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>strcmp(<sp/>hwInfo-&gt;<ref refid="struct_hw_dev_info_1ada014cb1067ae4696a3f7b5e40819971" kindref="member">name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;dmix&quot;</highlight><highlight class="normal"><sp/>)<sp/>&amp;&amp;<sp/>strcmp(<sp/>hwInfo-&gt;<ref refid="struct_hw_dev_info_1ada014cb1067ae4696a3f7b5e40819971" kindref="member">name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>FillInDevInfo(<sp/>alsaApi,<sp/>hwInfo,<sp/>blocking,<sp/>devInfo,<sp/>&amp;devIdx<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<sp/>hwDevInfos<sp/>);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>baseApi-&gt;<ref refid="struct_pa_util_host_api_representation_1a9c443aa6cf07d3c46167a91b274a9e94" kindref="member">info</ref>.<ref refid="struct_pa_host_api_info_1a44e3adfaba0117a6780e2493468c96b1" kindref="member">deviceCount</ref><sp/>=<sp/>devIdx;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>successfully<sp/>queried<sp/>devices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PA_ENABLE_DEBUG_OUTPUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Building<sp/>device<sp/>list<sp/>took<sp/>%f<sp/>seconds\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/><ref refid="pa__util_8h_1a9598384d28d22d589f607ca1069cc04c" kindref="member">PaUtil_GetTime</ref>()<sp/>-<sp/>startTime<sp/>));</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>particular<sp/>action<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>against<sp/>known<sp/>device<sp/>capabilities<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>ValidateParameters(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*parameters,<sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref><sp/>*hostApi,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" kindref="member">StreamDirection</ref><sp/>mode<sp/>)</highlight></codeline>
<codeline lineno="1485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxChans;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref><sp/>*deviceInfo<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>parameters<sp/>);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>parameters-&gt;<ref refid="struct_pa_stream_parameters_1aebaf648b4d11dd1252a747b76b8da084" kindref="member">device</ref><sp/>!=<sp/><ref refid="portaudio_8h_1a14795fe3377c3b037025a61e550d44b5" kindref="member">paUseHostApiSpecificDeviceSpecification</ref><sp/>)</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>parameters-&gt;<ref refid="struct_pa_stream_parameters_1aebaf648b4d11dd1252a747b76b8da084" kindref="member">device</ref><sp/>&lt;<sp/>hostApi-&gt;<ref refid="struct_pa_util_host_api_representation_1a9c443aa6cf07d3c46167a91b274a9e94" kindref="member">info</ref>.<ref refid="struct_pa_host_api_info_1a44e3adfaba0117a6780e2493468c96b1" kindref="member">deviceCount</ref><sp/>);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>parameters-&gt;<ref refid="struct_pa_stream_parameters_1aff01b9fa0710ad1654471e97665c06a9" kindref="member">hostApiSpecificStreamInfo</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a795db60c291d92362b87edbc0bdb56cc" kindref="member">paBadIODeviceCombination</ref><sp/>);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo<sp/>=<sp/>GetDeviceInfo(<sp/>hostApi,<sp/>parameters-&gt;<ref refid="struct_pa_stream_parameters_1aebaf648b4d11dd1252a747b76b8da084" kindref="member">device</ref><sp/>);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_info" kindref="compound">PaAlsaStreamInfo</ref><sp/>*streamInfo<sp/>=<sp/>parameters-&gt;<ref refid="struct_pa_stream_parameters_1aff01b9fa0710ad1654471e97665c06a9" kindref="member">hostApiSpecificStreamInfo</ref>;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>parameters-&gt;<ref refid="struct_pa_stream_parameters_1aebaf648b4d11dd1252a747b76b8da084" kindref="member">device</ref><sp/>==<sp/><ref refid="portaudio_8h_1a14795fe3377c3b037025a61e550d44b5" kindref="member">paUseHostApiSpecificDeviceSpecification</ref>,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a3442d8018bfa4329847d87df68b564a3" kindref="member">paInvalidDevice</ref><sp/>);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>streamInfo-&gt;<ref refid="struct_pa_alsa_stream_info_1aef7d7bcb7ebeb75d78496cc4821bbb85" kindref="member">size</ref><sp/>==<sp/>sizeof<sp/>(<ref refid="struct_pa_alsa_stream_info" kindref="compound">PaAlsaStreamInfo</ref>)<sp/>&amp;&amp;<sp/>streamInfo-&gt;<ref refid="struct_pa_alsa_stream_info_1afb13c4ff1d97547735d7b19c1006b65c" kindref="member">version</ref><sp/>==<sp/>1,</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a44f6cce375a3d38af28652179a400403" kindref="member">paIncompatibleHostApiSpecificStreamInfo</ref><sp/>);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>streamInfo-&gt;<ref refid="struct_pa_alsa_stream_info_1a442fbbb635cda0cece4e7af397d453f9" kindref="member">deviceString</ref><sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a3442d8018bfa4329847d87df68b564a3" kindref="member">paInvalidDevice</ref><sp/>);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>further<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>deviceInfo<sp/>);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>parameters-&gt;<ref refid="struct_pa_stream_parameters_1aff01b9fa0710ad1654471e97665c06a9" kindref="member">hostApiSpecificStreamInfo</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/>maxChans<sp/>=<sp/>(<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref><sp/>==<sp/>mode<sp/>?<sp/>deviceInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a5f17f8aeda7b7e7e041006edacf9d3dc" kindref="member">baseDeviceInfo</ref>.<ref refid="struct_pa_device_info_1ad0baeeb2b6ceaf7fc9bb76109a7555e9" kindref="member">maxInputChannels</ref><sp/>:</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a5f17f8aeda7b7e7e041006edacf9d3dc" kindref="member">baseDeviceInfo</ref>.<ref refid="struct_pa_device_info_1a48f908b21e8a11fdf0a88132b18fe7b0" kindref="member">maxOutputChannels</ref><sp/>);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>parameters-&gt;<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref><sp/>&lt;=<sp/>maxChans,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a46c51714378540c67c46895e726fb787" kindref="member">paInvalidChannelCount</ref><sp/>);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Given<sp/>an<sp/>open<sp/>stream,<sp/>what<sp/>sample<sp/>formats<sp/>are<sp/>available?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>GetAvailableFormats(<sp/>snd_pcm_t<sp/>*pcm<sp/>)</highlight></codeline>
<codeline lineno="1522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>available<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_hw_params_t<sp/>*hwParams;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1aa154c2bb63aa4b6f8aad17e8c828396c" kindref="member">alsa_snd_pcm_hw_params_alloca</ref>(<sp/>&amp;hwParams<sp/>);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_snd_pcm_hw_params_any(<sp/>pcm,<sp/>hwParams<sp/>);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_FLOAT<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>available<sp/>|=<sp/><ref refid="portaudio_8h_1a2f16d29916725b8791eae60ab9e0b081" kindref="member">paFloat32</ref>;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S32<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>available<sp/>|=<sp/><ref refid="portaudio_8h_1a6fea69f3d81b628288325c06310b2fcf" kindref="member">paInt32</ref>;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PA_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S24_3LE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>available<sp/>|=<sp/><ref refid="portaudio_8h_1a7f891a0bd9e94a94a8f446c176b749e7" kindref="member">paInt24</ref>;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>PA_BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S24_3BE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>available<sp/>|=<sp/><ref refid="portaudio_8h_1a7f891a0bd9e94a94a8f446c176b749e7" kindref="member">paInt24</ref>;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S16<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>available<sp/>|=<sp/><ref refid="portaudio_8h_1ab284f8e0a161d78ede863aec45461dbd" kindref="member">paInt16</ref>;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U8<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>available<sp/>|=<sp/><ref refid="portaudio_8h_1ad826044e4ffe7b16bf990803ab77df37" kindref="member">paUInt8</ref>;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S8<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>available<sp/>|=<sp/><ref refid="portaudio_8h_1a058ecfb48ac9f0efad7a7b0d446efe3e" kindref="member">paInt8</ref>;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>available;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Output<sp/>to<sp/>console<sp/>all<sp/>formats<sp/>supported<sp/>by<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LogAllAvailableFormats(<sp/>snd_pcm_t<sp/>*pcm<sp/>)</highlight></codeline>
<codeline lineno="1557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>available<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_hw_params_t<sp/>*hwParams;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1aa154c2bb63aa4b6f8aad17e8c828396c" kindref="member">alsa_snd_pcm_hw_params_alloca</ref>(<sp/>&amp;hwParams<sp/>);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_snd_pcm_hw_params_any(<sp/>pcm,<sp/>hwParams<sp/>);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;<sp/>---<sp/>Supported<sp/>Formats<sp/>---\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S8<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_S8\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U8<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_U8\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S16_LE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_S16_LE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S16_BE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_S16_BE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U16_LE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_U16_LE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U16_BE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_U16_BE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S24_LE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_S24_LE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S24_BE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_S24_BE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U24_LE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_U24_LE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U24_BE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_U24_BE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_FLOAT_LE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_FLOAT_LE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_FLOAT_BE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_FLOAT_BE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_FLOAT64_LE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_FLOAT64_LE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_FLOAT64_BE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_FLOAT64_BE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_IEC958_SUBFRAME_LE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_IEC958_SUBFRAME_LE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_IEC958_SUBFRAME_BE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_IEC958_SUBFRAME_BE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_MU_LAW<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_MU_LAW\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_A_LAW<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_A_LAW\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_IMA_ADPCM<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_IMA_ADPCM\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_MPEG<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_MPEG\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_GSM<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_GSM\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_SPECIAL<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_SPECIAL\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S24_3LE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_S24_3LE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S24_3BE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_S24_3BE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U24_3LE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_U24_3LE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U24_3BE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_U24_3BE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S20_3LE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_S20_3LE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S20_3BE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_S20_3BE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U20_3LE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_U20_3LE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U20_3BE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_U20_3BE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S18_3LE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_S18_3LE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S18_3BE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_S18_3BE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U18_3LE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_U18_3LE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U18_3BE<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_U18_3BE\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S16<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_S16\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U16<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_U16\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S24<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_S24\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U24<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_U24\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_S32<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_S32\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_U32<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_U32\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_FLOAT<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_FLOAT\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_FLOAT64<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_FLOAT64\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_format(<sp/>pcm,<sp/>hwParams,<sp/>SND_PCM_FORMAT_IEC958_SUBFRAME<sp/>)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;SND_PCM_FORMAT_IEC958_SUBFRAME\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-------------------------\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="1675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>snd_pcm_format_t<sp/>Pa2AlsaFormat(<sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>paFormat<sp/>)</highlight></codeline>
<codeline lineno="1678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>paFormat<sp/>)</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a2f16d29916725b8791eae60ab9e0b081" kindref="member">paFloat32</ref>:</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SND_PCM_FORMAT_FLOAT;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1ab284f8e0a161d78ede863aec45461dbd" kindref="member">paInt16</ref>:</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SND_PCM_FORMAT_S16;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a7f891a0bd9e94a94a8f446c176b749e7" kindref="member">paInt24</ref>:</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PA_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SND_PCM_FORMAT_S24_3LE;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>PA_BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SND_PCM_FORMAT_S24_3BE;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a6fea69f3d81b628288325c06310b2fcf" kindref="member">paInt32</ref>:</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SND_PCM_FORMAT_S32;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a058ecfb48ac9f0efad7a7b0d446efe3e" kindref="member">paInt8</ref>:</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SND_PCM_FORMAT_S8;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1ad826044e4ffe7b16bf990803ab77df37" kindref="member">paUInt8</ref>:</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SND_PCM_FORMAT_U8;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SND_PCM_FORMAT_UNKNOWN;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>AlsaOpen(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref><sp/>*hostApi,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" kindref="member">StreamDirection</ref></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streamDir,<sp/>snd_pcm_t<sp/>**pcm<sp/>)</highlight></codeline>
<codeline lineno="1715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>deviceName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref><sp/>*deviceInfo<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream_info" kindref="compound">PaAlsaStreamInfo</ref><sp/>*streamInfo<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream_info" kindref="compound">PaAlsaStreamInfo</ref><sp/>*)params-&gt;<ref refid="struct_pa_stream_parameters_1aff01b9fa0710ad1654471e97665c06a9" kindref="member">hostApiSpecificStreamInfo</ref>;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!streamInfo<sp/>)</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo<sp/>=<sp/>GetDeviceInfo(<sp/>hostApi,<sp/>params-&gt;<ref refid="struct_pa_stream_parameters_1aebaf648b4d11dd1252a747b76b8da084" kindref="member">device</ref><sp/>);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceName<sp/>=<sp/>deviceInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a09959f7709fe9ba29a4e3fd902fd0880" kindref="member">alsaName</ref>;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceName<sp/>=<sp/>streamInfo-&gt;<ref refid="struct_pa_alsa_stream_info_1a442fbbb635cda0cece4e7af397d453f9" kindref="member">deviceString</ref>;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Opening<sp/>device<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>deviceName<sp/>));</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(ret<sp/>=<sp/>OpenPcm(<sp/>pcm,<sp/>deviceName,<sp/>streamDir<sp/>==<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref><sp/>?<sp/>SND_PCM_STREAM_CAPTURE<sp/>:<sp/>SND_PCM_STREAM_PLAYBACK,</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SND_PCM_NONBLOCK,<sp/>1<sp/>))<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>to<sp/>be<sp/>closed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pcm<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>ret,<sp/>-EBUSY<sp/>==<sp/>ret<sp/>?<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a467dac712e45745d8b0d8cd429fd1a01" kindref="member">paDeviceUnavailable</ref><sp/>:<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a795db60c291d92362b87edbc0bdb56cc" kindref="member">paBadIODeviceCombination</ref><sp/>);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_nonblock(<sp/>*pcm,<sp/>0<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="paqa_8c_1a2382d9450082ea3a30a2110eda2d77f6" kindref="member">TestParameters</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref><sp/>*hostApi,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*parameters,</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" kindref="member">StreamDirection</ref><sp/>streamDir<sp/>)</highlight></codeline>
<codeline lineno="1749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_t<sp/>*pcm<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>availableFormats;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>able<sp/>to<sp/>adapt<sp/>to<sp/>a<sp/>number<sp/>of<sp/>channels<sp/>less<sp/>than<sp/>what<sp/>the<sp/>device<sp/>supports<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numHostChannels;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>hostFormat;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_hw_params_t<sp/>*hwParams;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1aa154c2bb63aa4b6f8aad17e8c828396c" kindref="member">alsa_snd_pcm_hw_params_alloca</ref>(<sp/>&amp;hwParams<sp/>);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!parameters-&gt;<ref refid="struct_pa_stream_parameters_1aff01b9fa0710ad1654471e97665c06a9" kindref="member">hostApiSpecificStreamInfo</ref><sp/>)</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref><sp/>*devInfo<sp/>=<sp/>GetDeviceInfo(<sp/>hostApi,<sp/>parameters-&gt;<ref refid="struct_pa_stream_parameters_1aebaf648b4d11dd1252a747b76b8da084" kindref="member">device</ref><sp/>);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numHostChannels<sp/>=<sp/><ref refid="pa__unix__util_8h_1a4bc529f0326c76adbfea99f629a119bf" kindref="member">PA_MAX</ref>(<sp/>parameters-&gt;<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref>,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref><sp/>==<sp/>streamDir<sp/>?</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a6209baa598eb9503aabf531309cc217d" kindref="member">minInputChannels</ref><sp/>:<sp/>devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a2ce67b50d5ac9bfe1ed3210694e580ab" kindref="member">minOutputChannels</ref><sp/>);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numHostChannels<sp/>=<sp/>parameters-&gt;<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref>;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>AlsaOpen(<sp/>hostApi,<sp/>parameters,<sp/>streamDir,<sp/>&amp;pcm<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_snd_pcm_hw_params_any(<sp/>pcm,<sp/>hwParams<sp/>);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>SetApproximateSampleRate(<sp/>pcm,<sp/>hwParams,<sp/>sampleRate<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a30a98097c3b6d9789077b72c26ae7c24" kindref="member">paInvalidSampleRate</ref>;</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_set_channels(<sp/>pcm,<sp/>hwParams,<sp/>numHostChannels<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a46c51714378540c67c46895e726fb787" kindref="member">paInvalidChannelCount</ref>;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>we<sp/>can<sp/>find<sp/>a<sp/>best<sp/>possible<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>availableFormats<sp/>=<sp/>GetAvailableFormats(<sp/>pcm<sp/>);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>hostFormat<sp/>=<sp/><ref refid="pa__converters_8c_1a74195475fe92d6b7b71de247f2b08184" kindref="member">PaUtil_SelectClosestAvailableFormat</ref>(<sp/>availableFormats,<sp/>parameters-&gt;<ref refid="struct_pa_stream_parameters_1ad8d2d3063757b812f9e5f8709f41052b" kindref="member">sampleFormat</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Some<sp/>specific<sp/>hardware<sp/>(reported:<sp/>Audio8<sp/>DJ)<sp/>can<sp/>fail<sp/>with<sp/>assertion<sp/>during<sp/>this<sp/>step.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_format(<sp/>pcm,<sp/>hwParams,<sp/>Pa2AlsaFormat(<sp/>hostFormat<sp/>)<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>happens<sp/>that<sp/>this<sp/>call<sp/>fails<sp/>because<sp/>the<sp/>device<sp/>is<sp/>busy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>ret<sp/>=<sp/>alsa_snd_pcm_hw_params(<sp/>pcm,<sp/>hwParams<sp/>)<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>-EINVAL<sp/>==<sp/>ret<sp/>)</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>know<sp/>what<sp/>to<sp/>return<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a795db60c291d92362b87edbc0bdb56cc" kindref="member">paBadIODeviceCombination</ref>;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>-EBUSY<sp/>==<sp/>ret<sp/>)</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a467dac712e45745d8b0d8cd429fd1a01" kindref="member">paDeviceUnavailable</ref>;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Device<sp/>is<sp/>busy\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref>;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>ret,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pcm<sp/>)</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_close(<sp/>pcm<sp/>);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>IsFormatSupported(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref><sp/>*hostApi,</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*inputParameters,</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*outputParameters,</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampleRate<sp/>)</highlight></codeline>
<codeline lineno="1831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputChannelCount<sp/>=<sp/>0,<sp/>outputChannelCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>inputSampleFormat,<sp/>outputSampleFormat;</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a400df642339bf4112333060af6a43c0f" kindref="member">paFormatIsSupported</ref>;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>inputParameters<sp/>)</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>ValidateParameters(<sp/>inputParameters,<sp/>hostApi,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputChannelCount<sp/>=<sp/>inputParameters-&gt;<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref>;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputSampleFormat<sp/>=<sp/>inputParameters-&gt;<ref refid="struct_pa_stream_parameters_1ad8d2d3063757b812f9e5f8709f41052b" kindref="member">sampleFormat</ref>;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>outputParameters<sp/>)</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>ValidateParameters(<sp/>outputParameters,<sp/>hostApi,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64ae177efd435a0afd9a45c4efc3b63b229" kindref="member">StreamDirection_Out</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputChannelCount<sp/>=<sp/>outputParameters-&gt;<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref>;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputSampleFormat<sp/>=<sp/>outputParameters-&gt;<ref refid="struct_pa_stream_parameters_1ad8d2d3063757b812f9e5f8709f41052b" kindref="member">sampleFormat</ref>;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>inputChannelCount<sp/>)</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>result<sp/>=<sp/><ref refid="paqa_8c_1a2382d9450082ea3a30a2110eda2d77f6" kindref="member">TestParameters</ref>(<sp/>hostApi,<sp/>inputParameters,<sp/>sampleRate,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>outputChannelCount<sp/>)</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>result<sp/>=<sp/><ref refid="paqa_8c_1a2382d9450082ea3a30a2110eda2d77f6" kindref="member">TestParameters</ref>(<sp/>hostApi,<sp/>outputParameters,<sp/>sampleRate,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64ae177efd435a0afd9a45c4efc3b63b229" kindref="member">StreamDirection_Out</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a400df642339bf4112333060af6a43c0f" kindref="member">paFormatIsSupported</ref>;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStreamComponent_Initialize(<sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref><sp/>*alsaApi,</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*params,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" kindref="member">StreamDirection</ref><sp/>streamDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_1ad122ee597668cb143bc79be9712f382e" kindref="member">callbackMode</ref><sp/>)</highlight></codeline>
<codeline lineno="1874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>userSampleFormat<sp/>=<sp/>params-&gt;<ref refid="struct_pa_stream_parameters_1ad8d2d3063757b812f9e5f8709f41052b" kindref="member">sampleFormat</ref>,<sp/>hostSampleFormat<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>params-&gt;<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref><sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_info_t*<sp/>pcmInfo;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>things<sp/>have<sp/>an<sp/>initial<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref>)<sp/>);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>==<sp/>params-&gt;<ref refid="struct_pa_stream_parameters_1aff01b9fa0710ad1654471e97665c06a9" kindref="member">hostApiSpecificStreamInfo</ref><sp/>)</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_device_info" kindref="compound">PaAlsaDeviceInfo</ref><sp/>*devInfo<sp/>=<sp/>GetDeviceInfo(<sp/>&amp;alsaApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1a9a5d2130ae6a1d8826fd265e44eaa1a6" kindref="member">baseHostApiRep</ref>,<sp/>params-&gt;<ref refid="struct_pa_stream_parameters_1aebaf648b4d11dd1252a747b76b8da084" kindref="member">device</ref><sp/>);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numHostChannels<sp/>=<sp/><ref refid="pa__unix__util_8h_1a4bc529f0326c76adbfea99f629a119bf" kindref="member">PA_MAX</ref>(<sp/>params-&gt;<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref>,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref><sp/>==<sp/>streamDir<sp/>?<sp/>devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a6209baa598eb9503aabf531309cc217d" kindref="member">minInputChannels</ref></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a2ce67b50d5ac9bfe1ed3210694e580ab" kindref="member">minOutputChannels</ref><sp/>);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;deviceIsPlug<sp/>=<sp/>devInfo-&gt;<ref refid="struct_pa_alsa_device_info_1a9b00b3189ea32b6635ef2bfdc2938b81" kindref="member">isPlug</ref>;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Host<sp/>Chans<sp/>%c<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>streamDir<sp/>==<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref><sp/>?<sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">,<sp/>self-&gt;numHostChannels<sp/>));</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>blissfully<sp/>unaware<sp/>of<sp/>the<sp/>minimum<sp/>channelCount<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numHostChannels<sp/>=<sp/>params-&gt;<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref>;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>device<sp/>name<sp/>does<sp/>not<sp/>start<sp/>with<sp/>hw:<sp/>to<sp/>determine<sp/>if<sp/>it<sp/>is<sp/>a<sp/>&apos;plug&apos;<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>strncmp(<sp/></highlight><highlight class="stringliteral">&quot;hw:&quot;</highlight><highlight class="normal">,<sp/>((<ref refid="struct_pa_alsa_stream_info" kindref="compound">PaAlsaStreamInfo</ref><sp/>*)params-&gt;<ref refid="struct_pa_stream_parameters_1aff01b9fa0710ad1654471e97665c06a9" kindref="member">hostApiSpecificStreamInfo</ref>)-&gt;deviceString,<sp/>3<sp/>)<sp/>!=<sp/>0<sp/><sp/>)</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;deviceIsPlug<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>An<sp/>Alsa<sp/>plug<sp/>device,<sp/>not<sp/>a<sp/>direct<sp/>hw<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;deviceIsPlug<sp/>&amp;&amp;<sp/>alsaApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1a6b697f7d06e5451c66f09f5562b99d5d" kindref="member">alsaLibVersion</ref><sp/>&lt;<sp/><ref refid="pa__linux__alsa_8c_1ad58ac533f6bb5499e822284ce6a4f377" kindref="member">ALSA_VERSION_INT</ref>(<sp/>1,<sp/>0,<sp/>16<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;useReventFix<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>Prior<sp/>to<sp/>Alsa1.0.16,<sp/>plug<sp/>devices<sp/>may<sp/>stutter<sp/>without<sp/>this<sp/>fix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;device<sp/>=<sp/>params-&gt;<ref refid="struct_pa_stream_parameters_1aebaf648b4d11dd1252a747b76b8da084" kindref="member">device</ref>;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>AlsaOpen(<sp/>&amp;alsaApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1a9a5d2130ae6a1d8826fd265e44eaa1a6" kindref="member">baseHostApiRep</ref>,<sp/>params,<sp/>streamDir,<sp/>&amp;self-&gt;pcm<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;nfds<sp/>=<sp/>alsa_snd_pcm_poll_descriptors_count(<sp/>self-&gt;pcm<sp/>);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_info_alloca(<sp/>&amp;pcmInfo<sp/>);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;card<sp/>=<sp/>snd_pcm_info_get_card(<sp/>pcmInfo<sp/>);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>hostSampleFormat<sp/>=<sp/><ref refid="pa__converters_8c_1a74195475fe92d6b7b71de247f2b08184" kindref="member">PaUtil_SelectClosestAvailableFormat</ref>(<sp/>GetAvailableFormats(<sp/>self-&gt;pcm<sp/>),<sp/>userSampleFormat<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;hostSampleFormat<sp/>=<sp/>hostSampleFormat;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;nativeFormat<sp/>=<sp/>Pa2AlsaFormat(<sp/>hostSampleFormat<sp/>);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;hostInterleaved<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;userInterleaved<sp/>=<sp/>!(<sp/>userSampleFormat<sp/>&amp;<sp/><ref refid="portaudio_8h_1a1d79f0b88812cef5364b276dbbc898b5" kindref="member">paNonInterleaved</ref><sp/>);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numUserChannels<sp/>=<sp/>params-&gt;<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref>;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;streamDir<sp/>=<sp/>streamDir;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;canMmap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;nonMmapBuffer<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;nonMmapBufferSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!callbackMode<sp/>&amp;&amp;<sp/>!self-&gt;userInterleaved<sp/>)</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pre-allocate<sp/>non-interleaved<sp/>user<sp/>provided<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>self-&gt;userBuffers<sp/>=<sp/><ref refid="pa__util_8h_1aa614f193aff12744a6ab90a9eb3128f0" kindref="member">PaUtil_AllocateMemory</ref>(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>*<sp/>self-&gt;numUserChannels<sp/>),</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref><sp/>);</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Log<sp/>all<sp/>available<sp/>formats.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hostSampleFormat<sp/>==<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a69660cd762aec2672fd3393e0971e99c" kindref="member">paSampleFormatNotSupported</ref><sp/>)</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogAllAvailableFormats(<sp/>self-&gt;pcm<sp/>);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Please<sp/>provide<sp/>the<sp/>log<sp/>output<sp/>to<sp/>PortAudio<sp/>developers,<sp/>your<sp/>hardware<sp/>does<sp/>not<sp/>have<sp/>any<sp/>sample<sp/>format<sp/>implemented<sp/>yet.\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PaAlsaStreamComponent_Terminate(<sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_snd_pcm_close(<sp/>self-&gt;pcm<sp/>);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>self-&gt;userBuffers<sp/>);<sp/></highlight><highlight class="comment">/*<sp/>(Ptr<sp/>can<sp/>be<sp/>NULL;<sp/>PaUtil_FreeMemory<sp/>includes<sp/>a<sp/>NULL<sp/>check)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>self-&gt;nonMmapBuffer<sp/>);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1948"><highlight class="comment">static<sp/>int<sp/>nearbyint_(float<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1949"><highlight class="comment"><sp/><sp/><sp/><sp/>if(<sp/><sp/>value<sp/>-<sp/>(int)value<sp/>&gt;<sp/>.5<sp/>)</highlight></codeline>
<codeline lineno="1950"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(int)ceil(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="1951"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>(int)floor(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="1952"><highlight class="comment">}</highlight></codeline>
<codeline lineno="1953"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStreamComponent_InitialConfigure(<sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*params,</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_1a6977d63a92f8a3e044a8c6f5e1a2cc31" kindref="member">primeBuffers</ref>,<sp/>snd_pcm_hw_params_t<sp/>*hwParams,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*sampleRate<sp/>)</highlight></codeline>
<codeline lineno="1960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configuration<sp/>consists<sp/>of<sp/>setting<sp/>all<sp/>of<sp/>ALSA&apos;s<sp/>parameters.</highlight></codeline>
<codeline lineno="1962"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>These<sp/>parameters<sp/>come<sp/>in<sp/>two<sp/>flavors:<sp/>hardware<sp/>parameters</highlight></codeline>
<codeline lineno="1963"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>software<sp/>paramters.<sp/><sp/>Hardware<sp/>parameters<sp/>will<sp/>affect</highlight></codeline>
<codeline lineno="1964"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>way<sp/>the<sp/>device<sp/>is<sp/>initialized,<sp/>software<sp/>parameters</highlight></codeline>
<codeline lineno="1965"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>affect<sp/>the<sp/>way<sp/>ALSA<sp/>interacts<sp/>with<sp/>me,<sp/>the<sp/>user-level<sp/>client.</highlight></codeline>
<codeline lineno="1966"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_access_t<sp/>accessMode,<sp/>alternateAccessMode;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_t<sp/>*pcm<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;pcm;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sr<sp/>=<sp/>*<ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minPeriods<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>self-&gt;framesPerPeriod<sp/>=<sp/>framesPerHostBuffer;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>...<sp/>fill<sp/>up<sp/>the<sp/>configuration<sp/>space<sp/>with<sp/>all<sp/>possibile</highlight></codeline>
<codeline lineno="1978"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>combinations<sp/>of<sp/>parameters<sp/>this<sp/>device<sp/>will<sp/>accept<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_any(<sp/>pcm,<sp/>hwParams<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_periods_integer(<sp/>pcm,<sp/>hwParams<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>I<sp/>think<sp/>there<sp/>should<sp/>be<sp/>at<sp/>least<sp/>2<sp/>periods<sp/>(even<sp/>though<sp/>ALSA<sp/>doesn&apos;t<sp/>appear<sp/>to<sp/>enforce<sp/>this)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_periods_min(<sp/>pcm,<sp/>hwParams,<sp/>&amp;minPeriods,<sp/>&amp;dir<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;userInterleaved<sp/>)</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessMode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SND_PCM_ACCESS_MMAP_INTERLEAVED;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alternateAccessMode<sp/>=<sp/>SND_PCM_ACCESS_MMAP_NONINTERLEAVED;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>if<sp/>MMAP<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;canMmap<sp/>=<sp/>alsa_snd_pcm_hw_params_test_access(<sp/>pcm,<sp/>hwParams,<sp/>accessMode<sp/>)<sp/>&gt;=<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_hw_params_test_access(<sp/>pcm,<sp/>hwParams,<sp/>alternateAccessMode<sp/>)<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>device<sp/>MMAP<sp/>SND_PCM_ACCESS_MMAP_INTERLEAVED:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>(<sp/>alsa_snd_pcm_hw_params_test_access(<sp/>pcm,<sp/>hwParams,<sp/>accessMode<sp/>)<sp/>&gt;=<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;YES&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;NO&quot;</highlight><highlight class="normal"><sp/>)<sp/>));</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>device<sp/>MMAP<sp/>SND_PCM_ACCESS_MMAP_NONINTERLEAVED:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>(<sp/>alsa_snd_pcm_hw_params_test_access(<sp/>pcm,<sp/>hwParams,<sp/>alternateAccessMode<sp/>)<sp/>&gt;=<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;YES&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;NO&quot;</highlight><highlight class="normal"><sp/>)<sp/>));</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!self-&gt;canMmap<sp/>)</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessMode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SND_PCM_ACCESS_RW_INTERLEAVED;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alternateAccessMode<sp/>=<sp/>SND_PCM_ACCESS_RW_NONINTERLEAVED;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessMode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SND_PCM_ACCESS_MMAP_NONINTERLEAVED;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alternateAccessMode<sp/>=<sp/>SND_PCM_ACCESS_MMAP_INTERLEAVED;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>if<sp/>MMAP<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;canMmap<sp/>=<sp/>alsa_snd_pcm_hw_params_test_access(<sp/>pcm,<sp/>hwParams,<sp/>accessMode<sp/>)<sp/>&gt;=<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_hw_params_test_access(<sp/>pcm,<sp/>hwParams,<sp/>alternateAccessMode<sp/>)<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((</highlight><highlight class="stringliteral">&quot;<sp/>%s:<sp/>device<sp/>MMAP<sp/>SND_PCM_ACCESS_MMAP_NONINTERLEAVED:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>(<sp/>alsa_snd_pcm_hw_params_test_access(<sp/>pcm,<sp/>hwParams,<sp/>accessMode<sp/>)<sp/>&gt;=<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;YES&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;NO&quot;</highlight><highlight class="normal"><sp/>)<sp/>));</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>device<sp/>MMAP<sp/>SND_PCM_ACCESS_MMAP_INTERLEAVED:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>(<sp/>alsa_snd_pcm_hw_params_test_access(<sp/>pcm,<sp/>hwParams,<sp/>alternateAccessMode<sp/>)<sp/>&gt;=<sp/>0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;YES&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;NO&quot;</highlight><highlight class="normal"><sp/>)<sp/>));</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!self-&gt;canMmap<sp/>)</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accessMode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SND_PCM_ACCESS_RW_NONINTERLEAVED;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alternateAccessMode<sp/>=<sp/>SND_PCM_ACCESS_RW_INTERLEAVED;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>device<sp/>can<sp/>MMAP:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>(<sp/>self-&gt;canMmap<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;YES&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;NO&quot;</highlight><highlight class="normal"><sp/>)<sp/>));</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>requested<sp/>access<sp/>mode<sp/>fails,<sp/>try<sp/>alternate<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_set_access(<sp/>pcm,<sp/>hwParams,<sp/>accessMode<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>err<sp/>=<sp/>alsa_snd_pcm_hw_params_set_access(<sp/>pcm,<sp/>hwParams,<sp/>alternateAccessMode<sp/>))<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref>;</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__front_8c_1a9c3ad627c13c1d695fef054c216667f7" kindref="member">PaUtil_SetLastHostErrorInfo</ref>(<sp/><ref refid="portaudio_8h_1a8eaebe3d39c5ea45598da8f86dc2e5aea5fb23d8b2cf3e2e714298de5ab1b83e1" kindref="member">paALSA</ref>,<sp/>err,<sp/>alsa_snd_strerror(<sp/>err<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flip<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;hostInterleaved<sp/>=<sp/>!</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;userInterleaved;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Some<sp/>specific<sp/>hardware<sp/>(reported:<sp/>Audio8<sp/>DJ)<sp/>can<sp/>fail<sp/>with<sp/>assertion<sp/>during<sp/>this<sp/>step.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_format(<sp/>pcm,<sp/>hwParams,<sp/>self-&gt;nativeFormat<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>result<sp/>=<sp/>SetApproximateSampleRate(<sp/>pcm,<sp/>hwParams,<sp/>sr<sp/>))<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>)</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>GetExactSampleRate(<sp/>hwParams,<sp/>&amp;sr<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>==<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a30a98097c3b6d9789077b72c26ae7c24" kindref="member">paInvalidSampleRate</ref><sp/>)<sp/></highlight><highlight class="comment">/*<sp/>From<sp/>the<sp/>SetApproximateSampleRate()<sp/>call<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>The<sp/>sample<sp/>rate<sp/>was<sp/>returned<sp/>as<sp/>&apos;out<sp/>of<sp/>tolerance&apos;<sp/>of<sp/>the<sp/>one<sp/>requested<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Wanted<sp/>%.3f,<sp/>closest<sp/>sample<sp/>rate<sp/>was<sp/>%.3f\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>sampleRate,<sp/>sr<sp/>));</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a30a98097c3b6d9789077b72c26ae7c24" kindref="member">paInvalidSampleRate</ref><sp/>);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_channels(<sp/>pcm,<sp/>hwParams,<sp/>self-&gt;numHostChannels<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a46c51714378540c67c46895e726fb787" kindref="member">paInvalidChannelCount</ref><sp/>);</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/>*sampleRate<sp/>=<sp/>sr;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>particular<sp/>action<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="2066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStreamComponent_FinishConfigure(<sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>snd_pcm_hw_params_t*<sp/>hwParams,</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*params,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>primeBuffers,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampleRate,<sp/><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref>*<sp/><ref refid="sysex_8c_1a9c5bf07170b5d91cfb44d4bfd0517128" kindref="member">latency</ref><sp/>)</highlight></codeline>
<codeline lineno="2075"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_sw_params_t*<sp/>swParams;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/>bufSz<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/>*latency<sp/>=<sp/>-1.;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a008e32f49ee6737893486a40b089827f" kindref="member">alsa_snd_pcm_sw_params_alloca</ref>(<sp/>&amp;swParams<sp/>);</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>bufSz<sp/>=<sp/>params-&gt;<ref refid="struct_pa_stream_parameters_1aa1e80ac0551162fd091db8936ccbe9a0" kindref="member">suggestedLatency</ref><sp/>*<sp/>sampleRate<sp/>+<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;framesPerPeriod;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_buffer_size_near(<sp/>self-&gt;pcm,<sp/>hwParams,<sp/>&amp;bufSz<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>parameters!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>alsa_snd_pcm_hw_params(<sp/>self-&gt;pcm,<sp/>hwParams<sp/>);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PA_ENABLE_DEBUG_OUTPUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>r<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_output_t<sp/>*<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_output_stdio_attach(<sp/>&amp;output,<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_hw_params_dump(<sp/>hwParams,<sp/>output<sp/>);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>r,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_get_buffer_size<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_buffer_size(<sp/>hwParams,<sp/>&amp;self-&gt;alsaBufferSize<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;alsaBufferSize<sp/>=<sp/>bufSz;</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Latency<sp/>in<sp/>seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/>*latency<sp/>=<sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;alsaBufferSize<sp/>-<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;framesPerPeriod)<sp/>/<sp/>sampleRate;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>software<sp/>parameters...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_sw_params_current(<sp/>self-&gt;pcm,<sp/>swParams<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_sw_params_set_start_threshold(<sp/>self-&gt;pcm,<sp/>swParams,<sp/>self-&gt;framesPerPeriod<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_sw_params_set_stop_threshold(<sp/>self-&gt;pcm,<sp/>swParams,<sp/>self-&gt;alsaBufferSize<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Silence<sp/>buffer<sp/>in<sp/>the<sp/>case<sp/>of<sp/>underrun<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!primeBuffers<sp/>)<sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>Make<sp/>sense?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/>boundary;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_sw_params_get_boundary(<sp/>swParams,<sp/>&amp;boundary<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_sw_params_set_silence_threshold(<sp/>self-&gt;pcm,<sp/>swParams,<sp/>0<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_sw_params_set_silence_size(<sp/>self-&gt;pcm,<sp/>swParams,<sp/>boundary<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_sw_params_set_avail_min(<sp/>self-&gt;pcm,<sp/>swParams,<sp/>self-&gt;framesPerPeriod<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_sw_params_set_xfer_align(<sp/>self-&gt;pcm,<sp/>swParams,<sp/>1<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_sw_params_set_tstamp_mode(<sp/>self-&gt;pcm,<sp/>swParams,<sp/><ref refid="pa__linux__alsa_8c_1aff83aac9633496129e2cdf9442c4ad87" kindref="member">SND_PCM_TSTAMP_ENABLE</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>parameters!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_sw_params(<sp/>self-&gt;pcm,<sp/>swParams<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStream_Initialize(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref><sp/>*alsaApi,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*inParams,</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*outParams,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampleRate,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_1a02214e72205abdc3e8cc0564c2e5a8e6" kindref="member">framesPerUserBuffer</ref>,<sp/><ref refid="portaudio_8h_1a8a60fb2a5ec9cbade3f54a9c978e2710" kindref="member">PaStreamCallback</ref><sp/>callback,</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a37c7ac3ace7d2dd1430f40ecdee4ebb6" kindref="member">PaStreamFlags</ref><sp/>streamFlags,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmlparse_8c_1a4b666535c828e23ccd16510a0a1a1943" kindref="member">userData</ref><sp/>)</highlight></codeline>
<codeline lineno="2140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>!=<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__stream_8c_1a0e3a44086f5baa62308dfd6df77396e0" kindref="member">PaUtil_InitializeStreamRepresentation</ref>(<sp/>&amp;self-&gt;streamRepresentation,</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;alsaApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1a7460a29aab991224df3e958f068ad1cd" kindref="member">callbackStreamInterface</ref>,</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback,<sp/>userData<sp/>);</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;callbackMode<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__stream_8c_1a0e3a44086f5baa62308dfd6df77396e0" kindref="member">PaUtil_InitializeStreamRepresentation</ref>(<sp/>&amp;self-&gt;streamRepresentation,</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;alsaApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ad6a68540d8914bef7af546594c701634" kindref="member">blockingStreamInterface</ref>,</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>userData<sp/>);</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;framesPerUserBuffer<sp/>=<sp/><ref refid="struct_pa_alsa_stream_1a02214e72205abdc3e8cc0564c2e5a8e6" kindref="member">framesPerUserBuffer</ref>;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;neverDropInput<sp/>=<sp/>streamFlags<sp/>&amp;<sp/><ref refid="portaudio_8h_1ad89be5ed5279fc4c4a8495c775e1d5d5" kindref="member">paNeverDropInput</ref>;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>Ignore<sp/>paPrimeOutputBuffersUsingStreamCallback<sp/>untill<sp/>buffer<sp/>priming<sp/>is<sp/>fully<sp/>supported<sp/>in<sp/>pa_process.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2164"><highlight class="comment"><sp/><sp/><sp/><sp/>if(<sp/>outParams<sp/>&amp;<sp/>streamFlags<sp/>&amp;<sp/>paPrimeOutputBuffersUsingStreamCallback<sp/>)</highlight></codeline>
<codeline lineno="2165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;primeBuffers<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;self-&gt;capture,<sp/>0,<sp/>sizeof<sp/>(<ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref>)<sp/>);</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;self-&gt;playback,<sp/>0,<sp/>sizeof<sp/>(<ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref>)<sp/>);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>inParams<sp/>)</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_Initialize(<sp/>&amp;self-&gt;capture,<sp/>alsaApi,<sp/>inParams,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>!=<sp/>callback<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>outParams<sp/>)</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_Initialize(<sp/>&amp;self-&gt;playback,<sp/>alsaApi,<sp/>outParams,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64ae177efd435a0afd9a45c4efc3b63b229" kindref="member">StreamDirection_Out</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>!=<sp/>callback<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>self-&gt;capture.nfds<sp/>||<sp/>self-&gt;playback.nfds<sp/>);</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>self-&gt;pfds<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>pollfd*)<ref refid="pa__util_8h_1aa614f193aff12744a6ab90a9eb3128f0" kindref="member">PaUtil_AllocateMemory</ref>(<sp/>(<sp/>self-&gt;capture.nfds<sp/>+</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;playback.nfds<sp/>)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>pollfd<sp/>)<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref><sp/>);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__cpuload_8c_1a8cffac188367367b6c5c5ed8e0b1fe46" kindref="member">PaUtil_InitializeCpuLoadMeasurer</ref>(<sp/>&amp;self-&gt;cpuLoadMeasurer,<sp/>sampleRate<sp/>);</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1adfe580bff275a80ee5935113c053d30d" kindref="member">ASSERT_CALL_</ref>(<sp/><ref refid="pa__unix__util_8c_1a8404184f8c9faff3dd921a12f79d836d" kindref="member">PaUnixMutex_Initialize</ref>(<sp/>&amp;self-&gt;stateMtx<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>);</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PaAlsaStream_Terminate(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="2195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.pcm<sp/>)</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaAlsaStreamComponent_Terminate(<sp/>&amp;self-&gt;capture<sp/>);</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;playback.pcm<sp/>)</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaAlsaStreamComponent_Terminate(<sp/>&amp;self-&gt;playback<sp/>);</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>self-&gt;pfds<sp/>);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1adfe580bff275a80ee5935113c053d30d" kindref="member">ASSERT_CALL_</ref>(<sp/><ref refid="pa__unix__util_8c_1a02e089c1b5a1dfef9b11462c65c280f2" kindref="member">PaUnixMutex_Terminate</ref>(<sp/>&amp;self-&gt;stateMtx<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>);</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CalculatePollTimeout(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frames<sp/>)</highlight></codeline>
<codeline lineno="2219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1addaeac8fe364c5ff592d34c51102490f" kindref="member">streamRepresentation</ref>.<ref refid="struct_pa_util_stream_representation_1a13c2b5318f73dde9a11fd9d874763d4a" kindref="member">streamInfo</ref>.<ref refid="struct_pa_stream_info_1a9200fdee790d9155bc35d03be51ee2dd" kindref="member">sampleRate</ref><sp/>&gt;<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Period<sp/>in<sp/>msecs,<sp/>rounded<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ceil(<sp/>1000<sp/>*<sp/>frames<sp/>/<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1addaeac8fe364c5ff592d34c51102490f" kindref="member">streamRepresentation</ref>.<ref refid="struct_pa_util_stream_representation_1a13c2b5318f73dde9a11fd9d874763d4a" kindref="member">streamInfo</ref>.<ref refid="struct_pa_stream_info_1a9200fdee790d9155bc35d03be51ee2dd" kindref="member">sampleRate</ref><sp/>);</highlight></codeline>
<codeline lineno="2223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>PaAlsa_AlignBackward(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>align)</highlight></codeline>
<codeline lineno="2231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>v<sp/>-<sp/>(<sp/>align<sp/>?<sp/>v<sp/>%<sp/>align<sp/>:<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>PaAlsa_AlignForward(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>align)</highlight></codeline>
<codeline lineno="2241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>remainder<sp/>=<sp/>(<sp/>align<sp/>?<sp/>(<sp/>v<sp/>%<sp/>align<sp/>)<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>remainder<sp/>!=<sp/>0<sp/>?<sp/>v<sp/>+<sp/>(<sp/>align<sp/>-<sp/>remainder<sp/>)<sp/>:<sp/>v<sp/>);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>PaAlsa_GetFramesPerHostBuffer(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>userFramesPerBuffer,<sp/><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1ae87de80b3b414a82eb74a4d0472d0092" kindref="member">suggestedLatency</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampleRate)</highlight></codeline>
<codeline lineno="2254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frames<sp/>=<sp/>userFramesPerBuffer<sp/>+<sp/><ref refid="pa__unix__util_8h_1a4bc529f0326c76adbfea99f629a119bf" kindref="member">PA_MAX</ref>(<sp/>userFramesPerBuffer,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(<sp/>suggestedLatency<sp/>*<sp/>sampleRate<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frames;</highlight></codeline>
<codeline lineno="2257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStreamComponent_DetermineFramesPerBuffer(<sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref>*<sp/>params,</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesPerUserBuffer,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampleRate,<sp/>snd_pcm_hw_params_t*<sp/>hwParams,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>accurate<sp/>)</highlight></codeline>
<codeline lineno="2267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bufferSize,<sp/>framesPerHostBuffer;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>host<sp/>buffer<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferSize<sp/>=<sp/>PaAlsa_GetFramesPerHostBuffer(framesPerUserBuffer,<sp/>params-&gt;<ref refid="struct_pa_stream_parameters_1aa1e80ac0551162fd091db8936ccbe9a0" kindref="member">suggestedLatency</ref>,<sp/>sampleRate);</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Log<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>user-buffer<sp/>(frames)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%lu\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>framesPerUserBuffer<sp/>));</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>user-buffer<sp/>(sec)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/><sp/>__FUNCTION__,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(framesPerUserBuffer<sp/>/<sp/>sampleRate)<sp/>));</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>suggested<sp/>latency<sp/>(sec)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/><sp/>__FUNCTION__,<sp/>params-&gt;<ref refid="struct_pa_stream_parameters_1aa1e80ac0551162fd091db8936ccbe9a0" kindref="member">suggestedLatency</ref><sp/>));</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>suggested<sp/>host<sp/>buffer<sp/>(frames)<sp/>=<sp/>%lu\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>bufferSize<sp/>));</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>suggested<sp/>host<sp/>buffer<sp/>(sec)<sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/><sp/>__FUNCTION__,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(bufferSize<sp/>/<sp/>sampleRate)<sp/>));</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PA_ALSA_USE_OBSOLETE_HOST_BUFFER_CALC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerUserBuffer<sp/>!=<sp/><ref refid="portaudio_8h_1ac1e20b97c1858a59bc62823573c59f0b" kindref="member">paFramesPerBufferUnspecified</ref><sp/>)</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Preferably<sp/>the<sp/>host<sp/>buffer<sp/>size<sp/>should<sp/>be<sp/>a<sp/>multiple<sp/>of<sp/>the<sp/>user<sp/>buffer<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bufferSize<sp/>&gt;<sp/>framesPerUserBuffer<sp/>)</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/>remainder<sp/>=<sp/>bufferSize<sp/>%<sp/><ref refid="struct_pa_alsa_stream_1a02214e72205abdc3e8cc0564c2e5a8e6" kindref="member">framesPerUserBuffer</ref>;</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>remainder<sp/>&gt;<sp/>framesPerUserBuffer<sp/>/<sp/>2.<sp/>)</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferSize<sp/>+=<sp/>framesPerUserBuffer<sp/>-<sp/>remainder;</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferSize<sp/>-=<sp/>remainder;</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>bufferSize<sp/>%<sp/>framesPerUserBuffer<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerUserBuffer<sp/>%<sp/>bufferSize<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Find<sp/>a<sp/>good<sp/>compromise<sp/>between<sp/>user<sp/>specified<sp/>latency<sp/>and<sp/>buffer<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bufferSize<sp/>&gt;<sp/>framesPerUserBuffer<sp/>*<sp/>.75<sp/>)</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferSize<sp/>=<sp/><ref refid="struct_pa_alsa_stream_1a02214e72205abdc3e8cc0564c2e5a8e6" kindref="member">framesPerUserBuffer</ref>;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/>newSz<sp/>=<sp/><ref refid="struct_pa_alsa_stream_1a02214e72205abdc3e8cc0564c2e5a8e6" kindref="member">framesPerUserBuffer</ref>;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>newSz<sp/>/<sp/>2<sp/>&gt;=<sp/>bufferSize<sp/>)</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerUserBuffer<sp/>%<sp/>(newSz<sp/>/<sp/>2)<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>use<sp/>dividing<sp/>any<sp/>further<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSz<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferSize<sp/>=<sp/>newSz;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>framesPerUserBuffer<sp/>%<sp/>bufferSize<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>numPeriods<sp/>=<sp/>numPeriods_,<sp/>maxPeriods<sp/>=<sp/>0,<sp/>minPeriods<sp/>=<sp/>numPeriods_;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>may<sp/>be<sp/>that<sp/>the<sp/>device<sp/>only<sp/>supports<sp/>2<sp/>periods<sp/>for<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_periods_min(<sp/>hwParams,<sp/>&amp;minPeriods,<sp/>&amp;dir<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_periods_max(<sp/>hwParams,<sp/>&amp;maxPeriods,<sp/>&amp;dir<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>maxPeriods<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clamp<sp/>to<sp/>min/max<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numPeriods<sp/>=<sp/><ref refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" kindref="member">PA_MIN</ref>(maxPeriods,<sp/><ref refid="pa__unix__util_8h_1a4bc529f0326c76adbfea99f629a119bf" kindref="member">PA_MAX</ref>(minPeriods,<sp/>numPeriods));</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>periods<sp/>min<sp/>=<sp/>%lu,<sp/>max<sp/>=<sp/>%lu,<sp/>req<sp/>=<sp/>%lu<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>minPeriods,<sp/>maxPeriods,<sp/>numPeriods<sp/>));</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PA_ALSA_USE_OBSOLETE_HOST_BUFFER_CALC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>period<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>=<sp/>(bufferSize<sp/>/<sp/>numPeriods);</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>&amp;<sp/>test<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerUserBuffer<sp/>!=<sp/><ref refid="portaudio_8h_1ac1e20b97c1858a59bc62823573c59f0b" kindref="member">paFramesPerBufferUnspecified</ref><sp/>)</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>to<sp/>user<sp/>buffer<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>=<sp/>PaAlsa_AlignForward(framesPerHostBuffer,<sp/>framesPerUserBuffer);</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>(borrowed<sp/>from<sp/>older<sp/>implementation)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerHostBuffer<sp/>&lt;<sp/>framesPerUserBuffer<sp/>)</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>framesPerUserBuffer<sp/>%<sp/>framesPerHostBuffer<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;pcm,<sp/>hwParams,<sp/>framesPerHostBuffer,<sp/>0<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;pcm,<sp/>hwParams,<sp/>framesPerHostBuffer<sp/>*<sp/>2,<sp/>0<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;pcm,<sp/>hwParams,<sp/>framesPerHostBuffer<sp/>/<sp/>2,<sp/>0<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>framesPerHostBuffer<sp/>%<sp/>framesPerUserBuffer<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;pcm,<sp/>hwParams,<sp/>framesPerHostBuffer,<sp/>0<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;pcm,<sp/>hwParams,<sp/>framesPerHostBuffer<sp/>+<sp/>framesPerUserBuffer,<sp/>0<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>+=<sp/><ref refid="struct_pa_alsa_stream_1a02214e72205abdc3e8cc0564c2e5a8e6" kindref="member">framesPerUserBuffer</ref>;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;pcm,<sp/>hwParams,<sp/>framesPerHostBuffer<sp/>-<sp/>framesPerUserBuffer,<sp/>0<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>-=<sp/><ref refid="struct_pa_alsa_stream_1a02214e72205abdc3e8cc0564c2e5a8e6" kindref="member">framesPerUserBuffer</ref>;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PA_ALSA_USE_OBSOLETE_HOST_BUFFER_CALC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerUserBuffer<sp/>!=<sp/><ref refid="portaudio_8h_1ac1e20b97c1858a59bc62823573c59f0b" kindref="member">paFramesPerBufferUnspecified</ref><sp/>)</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>get<sp/>a<sp/>power-of-two<sp/>of<sp/>the<sp/>user<sp/>buffer<sp/>size.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>=<sp/><ref refid="struct_pa_alsa_stream_1a02214e72205abdc3e8cc0564c2e5a8e6" kindref="member">framesPerUserBuffer</ref>;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerHostBuffer<sp/>&lt;<sp/>bufferSize<sp/>)</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>bufferSize<sp/>/<sp/>framesPerHostBuffer<sp/>&gt;<sp/>numPeriods<sp/>)</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>One<sp/>extra<sp/>period<sp/>is<sp/>preferrable<sp/>to<sp/>one<sp/>less<sp/>(should<sp/>be<sp/>more<sp/>robust)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bufferSize<sp/>/<sp/>framesPerHostBuffer<sp/>&lt;<sp/>numPeriods<sp/>)</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>bufferSize<sp/>/<sp/>framesPerHostBuffer<sp/>&lt;<sp/>numPeriods<sp/>)</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerUserBuffer<sp/>%<sp/>(<sp/>framesPerHostBuffer<sp/>/<sp/>2<sp/>)<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Can&apos;t<sp/>be<sp/>divided<sp/>any<sp/>further<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerHostBuffer<sp/>&lt;<sp/>framesPerUserBuffer<sp/>)</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>framesPerUserBuffer<sp/>%<sp/>framesPerHostBuffer<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;pcm,<sp/>hwParams,<sp/>framesPerHostBuffer,<sp/>0<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;pcm,<sp/>hwParams,<sp/>framesPerHostBuffer<sp/>*<sp/>2,<sp/>0<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;pcm,<sp/>hwParams,<sp/>framesPerHostBuffer<sp/>/<sp/>2,<sp/>0<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>framesPerHostBuffer<sp/>%<sp/>framesPerUserBuffer<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;pcm,<sp/>hwParams,<sp/>framesPerHostBuffer,<sp/>0<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;pcm,<sp/>hwParams,<sp/>framesPerHostBuffer<sp/>+<sp/>framesPerUserBuffer,<sp/>0<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>+=<sp/><ref refid="struct_pa_alsa_stream_1a02214e72205abdc3e8cc0564c2e5a8e6" kindref="member">framesPerUserBuffer</ref>;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;pcm,<sp/>hwParams,<sp/>framesPerHostBuffer<sp/>-<sp/>framesPerUserBuffer,<sp/>0<sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>-=<sp/><ref refid="struct_pa_alsa_stream_1a02214e72205abdc3e8cc0564c2e5a8e6" kindref="member">framesPerUserBuffer</ref>;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>=<sp/>bufferSize<sp/>/<sp/>numPeriods;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>non-mmap<sp/>mode<sp/>needs<sp/>a<sp/>reasonably-sized<sp/>buffer<sp/>or<sp/>it&apos;ll<sp/>stutter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!self-&gt;canMmap<sp/>&amp;&amp;<sp/>framesPerHostBuffer<sp/>&lt;<sp/>2048<sp/>)</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>=<sp/>2048;</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>suggested<sp/>host<sp/>buffer<sp/>period<sp/><sp/><sp/>=<sp/>%lu<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>framesPerHostBuffer<sp/>));</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>min/max<sp/>period<sp/>sizes<sp/>and<sp/>adjust<sp/>our<sp/>chosen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref><sp/>=<sp/>0,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>=<sp/>0,<sp/>minmax_diff;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_period_size_min(<sp/>hwParams,<sp/>&amp;min,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_period_size_max(<sp/>hwParams,<sp/>&amp;<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minmax_diff<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>-<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerHostBuffer<sp/>&lt;<sp/>min<sp/>)</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>The<sp/>determined<sp/>period<sp/>size<sp/>(%lu)<sp/>is<sp/>less<sp/>than<sp/>minimum<sp/>(%lu)\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>framesPerHostBuffer,<sp/>min<sp/>));</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>=<sp/>((<sp/>minmax_diff<sp/>==<sp/>2<sp/>)<sp/>?<sp/>min<sp/>+<sp/>1<sp/>:<sp/>min<sp/>);</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerHostBuffer<sp/>&gt;<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>)</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>The<sp/>determined<sp/>period<sp/>size<sp/>(%lu)<sp/>is<sp/>greater<sp/>than<sp/>maximum<sp/>(%lu)\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>framesPerHostBuffer,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>));</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>=<sp/>((<sp/>minmax_diff<sp/>==<sp/>2<sp/>)<sp/>?<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>-<sp/>1<sp/>:<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>);</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>device<sp/>period<sp/>minimum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%lu\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>min<sp/>));</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>device<sp/>period<sp/>maximum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%lu\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>));</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>host<sp/>buffer<sp/>period<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%lu\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>framesPerHostBuffer<sp/>));</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>host<sp/>buffer<sp/>period<sp/>latency<sp/><sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(<sp/>framesPerHostBuffer<sp/>/<sp/>sampleRate<sp/>)<sp/>));</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>setting<sp/>period<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_period_size_near(<sp/>self-&gt;pcm,<sp/>hwParams,<sp/>&amp;framesPerHostBuffer,<sp/>&amp;dir<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dir<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>The<sp/>configured<sp/>period<sp/>size<sp/>is<sp/>non-integer.\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>dir<sp/>));</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*accurate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;framesPerPeriod<sp/>=<sp/>framesPerHostBuffer;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>to<sp/>determine<sp/>how<sp/>many<sp/>frames<sp/>per<sp/>host<sp/>buffer<sp/>(period)<sp/>to<sp/>use.<sp/><sp/>Our</highlight></codeline>
<codeline lineno="2484"><highlight class="comment"><sp/>*<sp/>goals<sp/>are<sp/>to<sp/>provide<sp/>the<sp/>best<sp/>possible<sp/>performance,<sp/>but<sp/>also<sp/>to</highlight></codeline>
<codeline lineno="2485"><highlight class="comment"><sp/>*<sp/>honor<sp/>the<sp/>requested<sp/>latency<sp/>settings<sp/>as<sp/>closely<sp/>as<sp/>we<sp/>can.<sp/>Therefore<sp/>this</highlight></codeline>
<codeline lineno="2486"><highlight class="comment"><sp/>*<sp/>decision<sp/>is<sp/>based<sp/>on:</highlight></codeline>
<codeline lineno="2487"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2488"><highlight class="comment"><sp/>*<sp/><sp/><sp/>-<sp/>the<sp/>period<sp/>sizes<sp/>that<sp/>playback<sp/>and/or<sp/>capture<sp/>support.<sp/><sp/>The</highlight></codeline>
<codeline lineno="2489"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>host<sp/>buffer<sp/>size<sp/>has<sp/>to<sp/>be<sp/>one<sp/>of<sp/>these.</highlight></codeline>
<codeline lineno="2490"><highlight class="comment"><sp/>*<sp/><sp/><sp/>-<sp/>the<sp/>number<sp/>of<sp/>periods<sp/>that<sp/>playback<sp/>and/or<sp/>capture<sp/>support.</highlight></codeline>
<codeline lineno="2491"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2492"><highlight class="comment"><sp/>*<sp/>We<sp/>want<sp/>to<sp/>make<sp/>period_size*(num_periods-1)<sp/>to<sp/>be<sp/>as<sp/>close<sp/>as<sp/>possible</highlight></codeline>
<codeline lineno="2493"><highlight class="comment"><sp/>*<sp/>to<sp/>latency*rate<sp/>for<sp/>both<sp/>playback<sp/>and<sp/>capture.</highlight></codeline>
<codeline lineno="2494"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2495"><highlight class="comment"><sp/>*<sp/>This<sp/>method<sp/>will<sp/>determine<sp/>suitable<sp/>period<sp/>sizes<sp/>for<sp/>capture<sp/>and<sp/>playback<sp/>handles,<sp/>and<sp/>report<sp/>the<sp/>maximum<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="2496"><highlight class="comment"><sp/>*<sp/>frames<sp/>per<sp/>host<sp/>buffer.<sp/>The<sp/>latter<sp/>is<sp/>relevant,<sp/>in<sp/>case<sp/>we<sp/>should<sp/>be<sp/>so<sp/>unfortunate<sp/>that<sp/>the<sp/>period<sp/>size<sp/>differs</highlight></codeline>
<codeline lineno="2497"><highlight class="comment"><sp/>*<sp/>between<sp/>capture<sp/>and<sp/>playback.<sp/>If<sp/>this<sp/>should<sp/>happen,<sp/>the<sp/>stream&apos;s<sp/>hostBufferSizeMode<sp/>attribute<sp/>will<sp/>be<sp/>set<sp/>to</highlight></codeline>
<codeline lineno="2498"><highlight class="comment"><sp/>*<sp/>paUtilBoundedHostBufferSize,<sp/>because<sp/>the<sp/>best<sp/>we<sp/>can<sp/>do<sp/>is<sp/>limit<sp/>the<sp/>size<sp/>of<sp/>individual<sp/>host<sp/>buffers<sp/>to<sp/>the<sp/>upper</highlight></codeline>
<codeline lineno="2499"><highlight class="comment"><sp/>*<sp/>bound.<sp/>The<sp/>size<sp/>of<sp/>host<sp/>buffers<sp/>scheduled<sp/>for<sp/>processing<sp/>should<sp/>only<sp/>matter<sp/>if<sp/>the<sp/>user<sp/>has<sp/>specified<sp/>a<sp/>buffer<sp/>size,</highlight></codeline>
<codeline lineno="2500"><highlight class="comment"><sp/>*<sp/>but<sp/>when<sp/>he/she<sp/>does<sp/>we<sp/>must<sp/>strive<sp/>for<sp/>an<sp/>optimal<sp/>configuration.<sp/>By<sp/>default<sp/>we&apos;ll<sp/>opt<sp/>for<sp/>a<sp/>fixed<sp/>host<sp/>buffer<sp/>size,</highlight></codeline>
<codeline lineno="2501"><highlight class="comment"><sp/>*<sp/>which<sp/>should<sp/>be<sp/>fine<sp/>if<sp/>the<sp/>period<sp/>size<sp/>is<sp/>the<sp/>same<sp/>for<sp/>capture<sp/>and<sp/>playback.<sp/>In<sp/>general,<sp/>if<sp/>there<sp/>is<sp/>a<sp/>specified<sp/>user</highlight></codeline>
<codeline lineno="2502"><highlight class="comment"><sp/>*<sp/>buffer<sp/>size,<sp/>this<sp/>method<sp/>tries<sp/>it<sp/>best<sp/>to<sp/>determine<sp/>a<sp/>period<sp/>size<sp/>which<sp/>is<sp/>a<sp/>multiple<sp/>of<sp/>the<sp/>user<sp/>buffer<sp/>size.</highlight></codeline>
<codeline lineno="2503"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2504"><highlight class="comment"><sp/>*<sp/>The<sp/>framesPerPeriod<sp/>attributes<sp/>of<sp/>the<sp/>individual<sp/>capture<sp/>and<sp/>playback<sp/>components<sp/>of<sp/>the<sp/>stream<sp/>are<sp/>set<sp/>to<sp/>corresponding</highlight></codeline>
<codeline lineno="2505"><highlight class="comment"><sp/>*<sp/>values<sp/>determined<sp/>here.<sp/>Since<sp/>these<sp/>should<sp/>be<sp/>reported<sp/>as</highlight></codeline>
<codeline lineno="2506"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2507"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>one<sp/>of<sp/>those<sp/>blocks<sp/>of<sp/>code<sp/>that<sp/>will<sp/>just<sp/>take<sp/>a<sp/>lot<sp/>of</highlight></codeline>
<codeline lineno="2508"><highlight class="comment"><sp/>*<sp/>refinement<sp/>to<sp/>be<sp/>any<sp/>good.</highlight></codeline>
<codeline lineno="2509"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2510"><highlight class="comment"><sp/>*<sp/>In<sp/>the<sp/>full-duplex<sp/>case<sp/>it<sp/>is<sp/>possible<sp/>that<sp/>the<sp/>routine<sp/>was<sp/>unable</highlight></codeline>
<codeline lineno="2511"><highlight class="comment"><sp/>*<sp/>to<sp/>find<sp/>a<sp/>number<sp/>of<sp/>frames<sp/>per<sp/>buffer<sp/>acceptable<sp/>to<sp/>both<sp/>devices</highlight></codeline>
<codeline lineno="2512"><highlight class="comment"><sp/>*<sp/>TODO:<sp/>Implement<sp/>an<sp/>algorithm<sp/>to<sp/>find<sp/>the<sp/>value<sp/>closest<sp/>to<sp/>acceptance</highlight></codeline>
<codeline lineno="2513"><highlight class="comment"><sp/>*<sp/>by<sp/>both<sp/>devices,<sp/>to<sp/>minimize<sp/>difference<sp/>between<sp/>period<sp/>sizes?</highlight></codeline>
<codeline lineno="2514"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2515"><highlight class="comment"><sp/>*<sp/>@param<sp/>determinedFramesPerHostBuffer:<sp/>The<sp/>determined<sp/>host<sp/>buffer<sp/>size.</highlight></codeline>
<codeline lineno="2516"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStream_DetermineFramesPerBuffer(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampleRate,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref>*<sp/>inputParameters,</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref>*<sp/>outputParameters,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesPerUserBuffer,<sp/>snd_pcm_hw_params_t*<sp/>hwParamsCapture,</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_hw_params_t*<sp/>hwParamsPlayback,<sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484f" kindref="member">PaUtilHostBufferSizeMode</ref>*<sp/>hostBufferSizeMode<sp/>)</highlight></codeline>
<codeline lineno="2520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesPerHostBuffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>accurate<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>numPeriods<sp/>=<sp/>numPeriods_;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.pcm<sp/>&amp;&amp;<sp/>self-&gt;playback.pcm<sp/>)</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerUserBuffer<sp/>==<sp/><ref refid="portaudio_8h_1ac1e20b97c1858a59bc62823573c59f0b" kindref="member">paFramesPerBufferUnspecified</ref><sp/>)</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Come<sp/>up<sp/>with<sp/>a<sp/>common<sp/>desired<sp/>latency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/>desiredBufSz,<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>,<sp/>minPeriodSize,<sp/>maxPeriodSize,<sp/>optimalPeriodSize,<sp/>periodSize,</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minCapture,<sp/>minPlayback,<sp/>maxCapture,<sp/>maxPlayback;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_period_size_min(<sp/>hwParamsCapture,<sp/>&amp;minCapture,<sp/>&amp;dir<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_period_size_min(<sp/>hwParamsPlayback,<sp/>&amp;minPlayback,<sp/>&amp;dir<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_period_size_max(<sp/>hwParamsCapture,<sp/>&amp;maxCapture,<sp/>&amp;dir<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_period_size_max(<sp/>hwParamsPlayback,<sp/>&amp;maxPlayback,<sp/>&amp;dir<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minPeriodSize<sp/>=<sp/><ref refid="pa__unix__util_8h_1a4bc529f0326c76adbfea99f629a119bf" kindref="member">PA_MAX</ref>(<sp/>minPlayback,<sp/>minCapture<sp/>);</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxPeriodSize<sp/>=<sp/><ref refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" kindref="member">PA_MIN</ref>(<sp/>maxPlayback,<sp/>maxCapture<sp/>);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>minPeriodSize<sp/>&lt;=<sp/>maxPeriodSize,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a795db60c291d92362b87edbc0bdb56cc" kindref="member">paBadIODeviceCombination</ref><sp/>);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desiredBufSz<sp/>=<sp/>(snd_pcm_uframes_t)(<sp/><ref refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" kindref="member">PA_MIN</ref>(<sp/>outputParameters-&gt;<ref refid="struct_pa_stream_parameters_1aa1e80ac0551162fd091db8936ccbe9a0" kindref="member">suggestedLatency</ref>,<sp/>inputParameters-&gt;<ref refid="struct_pa_stream_parameters_1aa1e80ac0551162fd091db8936ccbe9a0" kindref="member">suggestedLatency</ref><sp/>)</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>);</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clamp<sp/>desiredBufSz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/>maxBufferSize;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/>maxBufferSizeCapture,<sp/>maxBufferSizePlayback;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_buffer_size_max(<sp/>hwParamsCapture,<sp/>&amp;maxBufferSizeCapture<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_buffer_size_max(<sp/>hwParamsPlayback,<sp/>&amp;maxBufferSizePlayback<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxBufferSize<sp/>=<sp/><ref refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" kindref="member">PA_MIN</ref>(<sp/>maxBufferSizeCapture,<sp/>maxBufferSizePlayback<sp/>);</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desiredBufSz<sp/>=<sp/><ref refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" kindref="member">PA_MIN</ref>(<sp/>desiredBufSz,<sp/>maxBufferSize<sp/>);</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>closest<sp/>power<sp/>of<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>ilogb(<sp/>minPeriodSize<sp/>);</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>minPeriodSize<sp/>&amp;<sp/>(<sp/>minPeriodSize<sp/>-<sp/>1<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>periodSize<sp/>=<sp/>(snd_pcm_uframes_t)pow(<sp/>2,<sp/>e<sp/>);</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>periodSize<sp/>&lt;=<sp/>maxPeriodSize<sp/>)</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;playback.pcm,<sp/>hwParamsPlayback,<sp/>periodSize,<sp/>0<sp/>)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;capture.pcm,<sp/>hwParamsCapture,<sp/>periodSize,<sp/>0<sp/>)<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OK!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>periodSize<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimalPeriodSize<sp/>=<sp/><ref refid="pa__unix__util_8h_1a4bc529f0326c76adbfea99f629a119bf" kindref="member">PA_MAX</ref>(<sp/>desiredBufSz<sp/>/<sp/>numPeriods,<sp/>minPeriodSize<sp/>);</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimalPeriodSize<sp/>=<sp/><ref refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" kindref="member">PA_MIN</ref>(<sp/>optimalPeriodSize,<sp/>maxPeriodSize<sp/>);</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>closest<sp/>power<sp/>of<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>ilogb(<sp/>optimalPeriodSize<sp/>);</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>optimalPeriodSize<sp/>&amp;<sp/>(optimalPeriodSize<sp/>-<sp/>1)<sp/>)</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimalPeriodSize<sp/>=<sp/>(snd_pcm_uframes_t)pow(<sp/>2,<sp/>e<sp/>);</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>optimalPeriodSize<sp/>&gt;=<sp/>periodSize<sp/>)</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;capture.pcm,<sp/>hwParamsCapture,<sp/>optimalPeriodSize,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>alsa_snd_pcm_hw_params_test_period_size(<sp/>self-&gt;playback.pcm,<sp/>hwParamsPlayback,</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimalPeriodSize,<sp/>0<sp/>)<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimalPeriodSize<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>optimalPeriodSize<sp/>&gt;<sp/>periodSize<sp/>)</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>periodSize<sp/>=<sp/>optimalPeriodSize;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>periodSize<sp/>&lt;=<sp/>maxPeriodSize<sp/>)</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Looks<sp/>good,<sp/>the<sp/>periodSize<sp/>_should_<sp/>be<sp/>acceptable<sp/>by<sp/>both<sp/>devices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_period_size(<sp/>self-&gt;capture.pcm,<sp/>hwParamsCapture,<sp/>periodSize,<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_period_size(<sp/>self-&gt;playback.pcm,<sp/>hwParamsPlayback,<sp/>periodSize,<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;capture.framesPerPeriod<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;playback.framesPerPeriod<sp/>=<sp/>periodSize;</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>=<sp/>periodSize;</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unable<sp/>to<sp/>find<sp/>a<sp/>common<sp/>period<sp/>size,<sp/>oh<sp/>well<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimalPeriodSize<sp/>=<sp/><ref refid="pa__unix__util_8h_1a4bc529f0326c76adbfea99f629a119bf" kindref="member">PA_MAX</ref>(<sp/>desiredBufSz<sp/>/<sp/>numPeriods,<sp/>minPeriodSize<sp/>);</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimalPeriodSize<sp/>=<sp/><ref refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" kindref="member">PA_MIN</ref>(<sp/>optimalPeriodSize,<sp/>maxPeriodSize<sp/>);</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;capture.framesPerPeriod<sp/>=<sp/>optimalPeriodSize;</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_period_size_near(<sp/>self-&gt;capture.pcm,<sp/>hwParamsCapture,<sp/>&amp;self-&gt;capture.framesPerPeriod,<sp/>&amp;dir<sp/>),</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;playback.framesPerPeriod<sp/>=<sp/>optimalPeriodSize;</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_period_size_near(<sp/>self-&gt;playback.pcm,<sp/>hwParamsPlayback,<sp/>&amp;self-&gt;playback.framesPerPeriod,<sp/>&amp;dir<sp/>),</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>=<sp/><ref refid="pa__unix__util_8h_1a4bc529f0326c76adbfea99f629a119bf" kindref="member">PA_MAX</ref>(<sp/>self-&gt;capture.framesPerPeriod,<sp/>self-&gt;playback.framesPerPeriod<sp/>);</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*hostBufferSizeMode<sp/>=<sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa2e97156fbdf5444b7bcc53b60f368d8b" kindref="member">paUtilBoundedHostBufferSize</ref>;</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>choose<sp/>the<sp/>simple<sp/>route<sp/>and<sp/>determine<sp/>a<sp/>suitable<sp/>number<sp/>of<sp/>frames<sp/>per<sp/>buffer<sp/>for<sp/>one<sp/>component<sp/>of</highlight></codeline>
<codeline lineno="2632"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>stream,<sp/>then<sp/>we<sp/>hope<sp/>that<sp/>this<sp/>will<sp/>work<sp/>for<sp/>the<sp/>other<sp/>component<sp/>too<sp/>(it<sp/>should!).</highlight></codeline>
<codeline lineno="2633"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>maxPeriods<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref>*<sp/>first<sp/>=<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;capture,<sp/>*<sp/>second<sp/>=<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;playback;</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref>*<sp/>firstStreamParams<sp/>=<sp/>inputParameters;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_hw_params_t*<sp/>firstHwParams<sp/>=<sp/>hwParamsCapture,<sp/>*<sp/>secondHwParams<sp/>=<sp/>hwParamsPlayback;</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_periods_max(<sp/>hwParamsPlayback,<sp/>&amp;maxPeriods,<sp/>&amp;dir<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>maxPeriods<sp/>&lt;<sp/>numPeriods<sp/>)</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>playback<sp/>component<sp/>is<sp/>trickier<sp/>to<sp/>get<sp/>right,<sp/>try<sp/>that<sp/>first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;playback;</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second<sp/>=<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;capture;</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstStreamParams<sp/>=<sp/>outputParameters;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstHwParams<sp/>=<sp/>hwParamsPlayback;</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secondHwParams<sp/>=<sp/>hwParamsCapture;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_DetermineFramesPerBuffer(<sp/>first,<sp/>firstStreamParams,<sp/>framesPerUserBuffer,</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampleRate,<sp/>firstHwParams,<sp/>&amp;accurate<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second-&gt;framesPerPeriod<sp/>=<sp/>first-&gt;<ref refid="struct_pa_alsa_stream_component_1adf73ee5aacd35d2068cf7b0316d8cec5" kindref="member">framesPerPeriod</ref>;</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_period_size_near(<sp/>second-&gt;pcm,<sp/>secondHwParams,<sp/>&amp;second-&gt;framesPerPeriod,<sp/>&amp;dir<sp/>),</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.framesPerPeriod<sp/>==<sp/>self-&gt;playback.framesPerPeriod<sp/>)</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;capture.framesPerPeriod;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>=<sp/><ref refid="pa__unix__util_8h_1a4bc529f0326c76adbfea99f629a119bf" kindref="member">PA_MAX</ref>(<sp/>self-&gt;capture.framesPerPeriod,<sp/>self-&gt;playback.framesPerPeriod<sp/>);</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*hostBufferSizeMode<sp/>=<sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa2e97156fbdf5444b7bcc53b60f368d8b" kindref="member">paUtilBoundedHostBufferSize</ref>;</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>half-duplex<sp/>is<sp/>a<sp/>slightly<sp/>simpler<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.pcm<sp/>)</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_DetermineFramesPerBuffer(<sp/>&amp;self-&gt;capture,<sp/>inputParameters,<sp/>framesPerUserBuffer,</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampleRate,<sp/>hwParamsCapture,<sp/>&amp;accurate)<sp/>);</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;capture.framesPerPeriod;</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>self-&gt;playback.pcm<sp/>);</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_DetermineFramesPerBuffer(<sp/>&amp;self-&gt;playback,<sp/>outputParameters,<sp/>framesPerUserBuffer,</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampleRate,<sp/>hwParamsPlayback,<sp/>&amp;accurate<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerHostBuffer<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;playback.framesPerPeriod;</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>framesPerHostBuffer<sp/>!=<sp/>0,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a4851f9f753cdad3e7a89380d6589816c" kindref="member">paInternalError</ref><sp/>);</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;maxFramesPerHostBuffer<sp/>=<sp/>framesPerHostBuffer;</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!self-&gt;playback.canMmap<sp/>||<sp/>!accurate<sp/>)</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>know<sp/>the<sp/>exact<sp/>size<sp/>per<sp/>host<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*hostBufferSizeMode<sp/>=<sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa2e97156fbdf5444b7bcc53b60f368d8b" kindref="member">paUtilBoundedHostBufferSize</ref>;</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Raise<sp/>upper<sp/>bound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!accurate<sp/>)</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;maxFramesPerHostBuffer;</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStream_Configure(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*inParams,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref>*</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outParams,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampleRate,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesPerUserBuffer,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>inputLatency,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>outputLatency,</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484f" kindref="member">PaUtilHostBufferSizeMode</ref>*<sp/>hostBufferSizeMode<sp/>)</highlight></codeline>
<codeline lineno="2709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>realSr<sp/>=<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_hw_params_t*<sp/>hwParamsCapture,<sp/>*<sp/>hwParamsPlayback;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1aa154c2bb63aa4b6f8aad17e8c828396c" kindref="member">alsa_snd_pcm_hw_params_alloca</ref>(<sp/>&amp;hwParamsCapture<sp/>);</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1aa154c2bb63aa4b6f8aad17e8c828396c" kindref="member">alsa_snd_pcm_hw_params_alloca</ref>(<sp/>&amp;hwParamsPlayback<sp/>);</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.pcm<sp/>)</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_InitialConfigure(<sp/>&amp;self-&gt;capture,<sp/>inParams,<sp/>self-&gt;primeBuffers,<sp/>hwParamsCapture,</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;realSr<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;playback.pcm<sp/>)</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_InitialConfigure(<sp/>&amp;self-&gt;playback,<sp/>outParams,<sp/>self-&gt;primeBuffers,<sp/>hwParamsPlayback,</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;realSr<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_DetermineFramesPerBuffer(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>realSr,<sp/>inParams,<sp/>outParams,<sp/>framesPerUserBuffer,</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwParamsCapture,<sp/>hwParamsPlayback,<sp/>hostBufferSizeMode<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.pcm<sp/>)</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>self-&gt;capture.framesPerPeriod<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_FinishConfigure(<sp/>&amp;self-&gt;capture,<sp/>hwParamsCapture,<sp/>inParams,<sp/>self-&gt;primeBuffers,<sp/>realSr,</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputLatency<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Capture<sp/>period<sp/>size:<sp/>%lu,<sp/>latency:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>self-&gt;capture.framesPerPeriod,<sp/>*inputLatency<sp/>));</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;playback.pcm<sp/>)</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>self-&gt;playback.framesPerPeriod<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_FinishConfigure(<sp/>&amp;self-&gt;playback,<sp/>hwParamsPlayback,<sp/>outParams,<sp/>self-&gt;primeBuffers,<sp/>realSr,</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputLatency<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Playback<sp/>period<sp/>size:<sp/>%lu,<sp/>latency:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>self-&gt;playback.framesPerPeriod,<sp/>*outputLatency<sp/>));</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Should<sp/>be<sp/>exact<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;streamRepresentation.streamInfo.sampleRate<sp/>=<sp/>realSr;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>will<sp/>cause<sp/>the<sp/>two<sp/>streams<sp/>to<sp/>automatically<sp/>start/stop/prepare<sp/>in<sp/>sync.</highlight></codeline>
<codeline lineno="2746"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>only<sp/>need<sp/>to<sp/>execute<sp/>these<sp/>operations<sp/>on<sp/>one<sp/>of<sp/>the<sp/>pair.</highlight></codeline>
<codeline lineno="2747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>A:<sp/>We<sp/>don&apos;t<sp/>want<sp/>to<sp/>do<sp/>this<sp/>on<sp/>a<sp/>blocking<sp/>stream.</highlight></codeline>
<codeline lineno="2748"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;callbackMode<sp/>&amp;&amp;<sp/>self-&gt;capture.pcm<sp/>&amp;&amp;<sp/>self-&gt;playback.pcm<sp/>)</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>alsa_snd_pcm_link(<sp/>self-&gt;capture.pcm,<sp/>self-&gt;playback.pcm<sp/>);</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;pcmsSynced<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Unable<sp/>to<sp/>sync<sp/>pcms:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>alsa_snd_strerror(<sp/>err<sp/>)<sp/>));</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"></highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>minFramesPerHostBuffer<sp/>=<sp/><ref refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" kindref="member">PA_MIN</ref>(<sp/>self-&gt;capture.pcm<sp/>?<sp/>self-&gt;capture.framesPerPeriod<sp/>:<sp/>ULONG_MAX,</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;playback.pcm<sp/>?<sp/>self-&gt;playback.framesPerPeriod<sp/>:<sp/>ULONG_MAX<sp/>);</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;pollTimeout<sp/>=<sp/>CalculatePollTimeout(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>minFramesPerHostBuffer<sp/>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Period<sp/>in<sp/>msecs,<sp/>rounded<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Time<sp/>before<sp/>watchdog<sp/>unthrottles<sp/>realtime<sp/>thread<sp/>==<sp/>1/4<sp/>of<sp/>period<sp/>time<sp/>in<sp/>msecs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>self-&gt;threading.throttledSleepTime<sp/>=<sp/>(unsigned<sp/>long)<sp/>(minFramesPerHostBuffer<sp/>/<sp/>sampleRate<sp/>/<sp/>4<sp/>*<sp/>1000);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;callbackMode<sp/>)</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>user<sp/>expects<sp/>a<sp/>certain<sp/>number<sp/>of<sp/>frames<sp/>per<sp/>callback<sp/>we<sp/>will<sp/>either<sp/>have<sp/>to<sp/>rely<sp/>on<sp/>block<sp/>adaption</highlight></codeline>
<codeline lineno="2770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(framesPerHostBuffer<sp/>is<sp/>not<sp/>an<sp/>integer<sp/>multiple<sp/>of<sp/>framesPerPeriod)<sp/>or<sp/>we<sp/>can<sp/>simply<sp/>align<sp/>the<sp/>number</highlight></codeline>
<codeline lineno="2771"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>host<sp/>buffer<sp/>frames<sp/>with<sp/>what<sp/>the<sp/>user<sp/>specified<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;framesPerUserBuffer<sp/>!=<sp/><ref refid="portaudio_8h_1ac1e20b97c1858a59bc62823573c59f0b" kindref="member">paFramesPerBufferUnspecified</ref><sp/>)</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>self-&gt;alignFrames<sp/>=<sp/>1;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"></highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unless<sp/>the<sp/>ratio<sp/>between<sp/>number<sp/>of<sp/>host<sp/>and<sp/>user<sp/>buffer<sp/>frames<sp/>is<sp/>an<sp/>integer<sp/>we<sp/>will<sp/>have<sp/>to<sp/>rely</highlight></codeline>
<codeline lineno="2777"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>on<sp/>block<sp/>adaption<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2779"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>framesPerHostBuffer<sp/>%<sp/>framesPerPeriod<sp/>!=<sp/>0<sp/>||<sp/>(self-&gt;capture.pcm<sp/>&amp;&amp;<sp/>self-&gt;playback.pcm<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2780"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;capture.framesPerPeriod<sp/>!=<sp/>self-&gt;playback.framesPerPeriod)<sp/>)</highlight></codeline>
<codeline lineno="2781"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;useBlockAdaption<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2782"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="2783"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;alignFrames<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2784"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>OpenStream(<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref><sp/>*hostApi,</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>**<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*inputParameters,</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*outputParameters,</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampleRate,</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesPerBuffer,</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a37c7ac3ace7d2dd1430f40ecdee4ebb6" kindref="member">PaStreamFlags</ref><sp/>streamFlags,</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a8a60fb2a5ec9cbade3f54a9c978e2710" kindref="member">PaStreamCallback</ref>*<sp/>callback,</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userData<sp/>)</highlight></codeline>
<codeline lineno="2801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref><sp/>*alsaHostApi<sp/>=<sp/>(<ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref>*)hostApi;</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>hostInputSampleFormat<sp/>=<sp/>0,<sp/>hostOutputSampleFormat<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>inputSampleFormat<sp/>=<sp/>0,<sp/>outputSampleFormat<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numInputChannels<sp/>=<sp/>0,<sp/>numOutputChannels<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref><sp/>inputLatency,<sp/>outputLatency;</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Operate<sp/>with<sp/>fixed<sp/>host<sp/>buffer<sp/>size<sp/>by<sp/>default,<sp/>since<sp/>other<sp/>modes<sp/>will<sp/>invariably<sp/>lead<sp/>to<sp/>block<sp/>adaption<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>Use<sp/>Bounded<sp/>by<sp/>default?<sp/>Output<sp/>tends<sp/>to<sp/>get<sp/>stuttery<sp/>with<sp/>Fixed<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484f" kindref="member">PaUtilHostBufferSizeMode</ref><sp/>hostBufferSizeMode<sp/>=<sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa5e79e1ea4d8f114cfe83caa9b08610d8" kindref="member">paUtilFixedHostBufferSize</ref>;</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>streamFlags<sp/>&amp;<sp/><ref refid="portaudio_8h_1a8522957e1bf814b9782d3a0e314c8b51" kindref="member">paPlatformSpecificFlags</ref><sp/>)<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aa5e7d0d9ea49ef845a93c89a3d138294" kindref="member">paInvalidFlag</ref>;</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>inputParameters<sp/>)</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>ValidateParameters(<sp/>inputParameters,<sp/>hostApi,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numInputChannels<sp/>=<sp/>inputParameters-&gt;<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref>;</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputSampleFormat<sp/>=<sp/>inputParameters-&gt;<ref refid="struct_pa_stream_parameters_1ad8d2d3063757b812f9e5f8709f41052b" kindref="member">sampleFormat</ref>;</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>outputParameters<sp/>)</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>ValidateParameters(<sp/>outputParameters,<sp/>hostApi,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64ae177efd435a0afd9a45c4efc3b63b229" kindref="member">StreamDirection_Out</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numOutputChannels<sp/>=<sp/>outputParameters-&gt;<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref>;</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputSampleFormat<sp/>=<sp/>outputParameters-&gt;<ref refid="struct_pa_stream_parameters_1ad8d2d3063757b812f9e5f8709f41052b" kindref="member">sampleFormat</ref>;</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>Why<sp/>do<sp/>we<sp/>support<sp/>this<sp/>anyway?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerBuffer<sp/>==<sp/><ref refid="portaudio_8h_1ac1e20b97c1858a59bc62823573c59f0b" kindref="member">paFramesPerBufferUnspecified</ref><sp/>&amp;&amp;<sp/><ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PA_ALSA_PERIODSIZE&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Getting<sp/>framesPerBuffer<sp/>(Alsa<sp/>period-size)<sp/>from<sp/>environment\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerBuffer<sp/>=<sp/>atoi(<sp/><ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(</highlight><highlight class="stringliteral">&quot;PA_ALSA_PERIODSIZE&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*)<ref refid="pa__util_8h_1aa614f193aff12744a6ab90a9eb3128f0" kindref="member">PaUtil_AllocateMemory</ref>(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>)<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref><sp/>);</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_Initialize(<sp/>stream,<sp/>alsaHostApi,<sp/>inputParameters,<sp/>outputParameters,<sp/>sampleRate,</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerBuffer,<sp/>callback,<sp/>streamFlags,<sp/>userData<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_Configure(<sp/>stream,<sp/>inputParameters,<sp/>outputParameters,<sp/>sampleRate,<sp/>framesPerBuffer,</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;inputLatency,<sp/>&amp;outputLatency,<sp/>&amp;hostBufferSizeMode<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/>hostInputSampleFormat<sp/>=<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a1fc676cfdb28a43f9ee7d941b7ac94f8" kindref="member">hostSampleFormat</ref><sp/>|<sp/>(!stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1aaa329e397c4b1afd453a1652f572363c" kindref="member">hostInterleaved</ref><sp/>?<sp/><ref refid="portaudio_8h_1a1d79f0b88812cef5364b276dbbc898b5" kindref="member">paNonInterleaved</ref><sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/>hostOutputSampleFormat<sp/>=<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a1fc676cfdb28a43f9ee7d941b7ac94f8" kindref="member">hostSampleFormat</ref><sp/>|<sp/>(!stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1aaa329e397c4b1afd453a1652f572363c" kindref="member">hostInterleaved</ref><sp/>?<sp/><ref refid="portaudio_8h_1a1d79f0b88812cef5364b276dbbc898b5" kindref="member">paNonInterleaved</ref><sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"></highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="pa__process_8c_1aaae7001566f528cf2d3cd453bf05c5d5" kindref="member">PaUtil_InitializeBufferProcessor</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1acd44698cd6e3508f0d41c877ba5b436a" kindref="member">bufferProcessor</ref>,</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numInputChannels,<sp/>inputSampleFormat,<sp/>hostInputSampleFormat,</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numOutputChannels,<sp/>outputSampleFormat,<sp/>hostOutputSampleFormat,</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampleRate,<sp/>streamFlags,<sp/>framesPerBuffer,<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a975c6b88b478a9408d81e84de435369f" kindref="member">maxFramesPerHostBuffer</ref>,</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostBufferSizeMode,<sp/>callback,<sp/>userData<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"></highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ok,<sp/>buffer<sp/>processor<sp/>is<sp/>initialized,<sp/>now<sp/>we<sp/>can<sp/>deduce<sp/>it&apos;s<sp/>latency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>numInputChannels<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1addaeac8fe364c5ff592d34c51102490f" kindref="member">streamRepresentation</ref>.<ref refid="struct_pa_util_stream_representation_1a13c2b5318f73dde9a11fd9d874763d4a" kindref="member">streamInfo</ref>.<ref refid="struct_pa_stream_info_1a1f5339e0fef75cea66d9153235698399" kindref="member">inputLatency</ref><sp/>=<sp/>inputLatency<sp/>+<sp/>(<ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref>)(</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1ae5a4104d7132396436e179825e2a3847" kindref="member">PaUtil_GetBufferProcessorInputLatencyFrames</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1acd44698cd6e3508f0d41c877ba5b436a" kindref="member">bufferProcessor</ref><sp/>)<sp/>/<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>);</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>numOutputChannels<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1addaeac8fe364c5ff592d34c51102490f" kindref="member">streamRepresentation</ref>.<ref refid="struct_pa_util_stream_representation_1a13c2b5318f73dde9a11fd9d874763d4a" kindref="member">streamInfo</ref>.<ref refid="struct_pa_stream_info_1a372a81f39d90a85ae62225e9f57a7840" kindref="member">outputLatency</ref><sp/>=<sp/>outputLatency<sp/>+<sp/>(<ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref>)(</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1a853a8cd0e8d214406aa83ef3ef3d1102" kindref="member">PaUtil_GetBufferProcessorOutputLatencyFrames</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1acd44698cd6e3508f0d41c877ba5b436a" kindref="member">bufferProcessor</ref><sp/>)<sp/>/<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>);</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Stream:<sp/>framesPerBuffer<sp/>=<sp/>%lu,<sp/>maxFramesPerHostBuffer<sp/>=<sp/>%lu,<sp/>latency<sp/>i=%f,<sp/>o=%f\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>framesPerBuffer,<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a975c6b88b478a9408d81e84de435369f" kindref="member">maxFramesPerHostBuffer</ref>,<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1addaeac8fe364c5ff592d34c51102490f" kindref="member">streamRepresentation</ref>.<ref refid="struct_pa_util_stream_representation_1a13c2b5318f73dde9a11fd9d874763d4a" kindref="member">streamInfo</ref>.<ref refid="struct_pa_stream_info_1a1f5339e0fef75cea66d9153235698399" kindref="member">inputLatency</ref>,<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1addaeac8fe364c5ff592d34c51102490f" kindref="member">streamRepresentation</ref>.<ref refid="struct_pa_util_stream_representation_1a13c2b5318f73dde9a11fd9d874763d4a" kindref="member">streamInfo</ref>.<ref refid="struct_pa_stream_info_1a372a81f39d90a85ae62225e9f57a7840" kindref="member">outputLatency</ref>));</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/>*s<sp/>=<sp/>(<ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*)stream;</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"></highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream<sp/>)</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Stream<sp/>in<sp/>error,<sp/>terminating\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaAlsaStream_Terminate(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"></highlight></codeline>
<codeline lineno="2877"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>CloseStream(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/>s<sp/>)</highlight></codeline>
<codeline lineno="2878"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*)s;</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1acf4e607f9c25ec2db5efd02ef1adb188" kindref="member">PaUtil_TerminateBufferProcessor</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1acd44698cd6e3508f0d41c877ba5b436a" kindref="member">bufferProcessor</ref><sp/>);</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__stream_8c_1ac30f6c0d3138ef52c63c94fd1a53ea86" kindref="member">PaUtil_TerminateStreamRepresentation</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1addaeac8fe364c5ff592d34c51102490f" kindref="member">streamRepresentation</ref><sp/>);</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/>PaAlsaStream_Terminate(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SilenceBuffer(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>)</highlight></codeline>
<codeline lineno="2891"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snd_pcm_channel_area_t<sp/>*areas;</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/>frames<sp/>=<sp/>(snd_pcm_uframes_t)alsa_snd_pcm_avail_update(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>),<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_snd_pcm_mmap_begin(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref>,<sp/>&amp;areas,<sp/>&amp;<ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,<sp/>&amp;frames<sp/>);</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_snd_pcm_areas_silence(<sp/>areas,<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1ac7a139db0deff683430298928f20a341" kindref="member">numHostChannels</ref>,<sp/>frames,<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a3cc7e53dfa502ec320c1e870a9c02dd2" kindref="member">nativeFormat</ref><sp/>);</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_snd_pcm_mmap_commit(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref>,<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,<sp/>frames<sp/>);</highlight></codeline>
<codeline lineno="2898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>AlsaStart(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priming<sp/>)</highlight></codeline>
<codeline lineno="2910"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad122ee597668cb143bc79be9712f382e" kindref="member">callbackMode</ref><sp/>)</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!priming<sp/>)</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Buffer<sp/>isn&apos;t<sp/>primed,<sp/>so<sp/>prepare<sp/>and<sp/>silence<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_prepare(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a95ddfb65dc825b91524f7d6b5f0fe004" kindref="member">canMmap</ref><sp/>)</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SilenceBuffer(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a95ddfb65dc825b91524f7d6b5f0fe004" kindref="member">canMmap</ref><sp/>)</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_start(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_prepare(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>&amp;&amp;<sp/>!stream-&gt;<ref refid="struct_pa_alsa_stream_1a07464a14e43b11c9e5de064ed33fae70" kindref="member">pcmsSynced</ref><sp/>)</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_prepare(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>a<sp/>blocking<sp/>stream<sp/>we<sp/>want<sp/>to<sp/>start<sp/>capture<sp/>as<sp/>well,<sp/>since<sp/>nothing<sp/>will<sp/>happen<sp/>otherwise<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_start(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"></highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IsRunning(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>)</highlight></codeline>
<codeline lineno="2948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="pa__unix__util_8c_1a254077b3b33653765a397e41fa59a4d1" kindref="member">PaUnixMutex_Lock</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1aba5481778876188e52785adf8e0ce793" kindref="member">stateMtx</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_state_t<sp/>capture_state<sp/>=<sp/>alsa_snd_pcm_state(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>);</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>capture_state<sp/>==<sp/>SND_PCM_STATE_RUNNING<sp/>||<sp/>capture_state<sp/>==<sp/>SND_PCM_STATE_XRUN</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>capture_state<sp/>==<sp/>SND_PCM_STATE_DRAINING<sp/>)</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_state_t<sp/>playback_state<sp/>=<sp/>alsa_snd_pcm_state(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>);</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>playback_state<sp/>==<sp/>SND_PCM_STATE_RUNNING<sp/>||<sp/>playback_state<sp/>==<sp/>SND_PCM_STATE_XRUN</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>playback_state<sp/>==<sp/>SND_PCM_STATE_DRAINING<sp/>)</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1adfe580bff275a80ee5935113c053d30d" kindref="member">ASSERT_CALL_</ref>(<sp/><ref refid="pa__unix__util_8c_1a32dd4f5abd53fb23a2f5349fa5c63d5e" kindref="member">PaUnixMutex_Unlock</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1aba5481778876188e52785adf8e0ce793" kindref="member">stateMtx</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>);</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="2981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2983"><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>StartStream(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*s<sp/>)</highlight></codeline>
<codeline lineno="2985"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*<sp/>stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*)s;</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>streamStarted<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>So<sp/>we<sp/>can<sp/>know<sp/>whether<sp/>we<sp/>need<sp/>to<sp/>take<sp/>the<sp/>stream<sp/>down<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ready<sp/>the<sp/>processor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1a454635d7cd026eec37f3ab3d27afc38e" kindref="member">PaUtil_ResetBufferProcessor</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1acd44698cd6e3508f0d41c877ba5b436a" kindref="member">bufferProcessor</ref><sp/>);</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"></highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>now,<sp/>so<sp/>we<sp/>can<sp/>test<sp/>for<sp/>activity<sp/>further<sp/>down<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a6bd474f11d49f98eb08f0558b17b5cd3" kindref="member">isActive</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad122ee597668cb143bc79be9712f382e" kindref="member">callbackMode</ref><sp/>)</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="pa__unix__util_8c_1a1ea876bbbde993a851b1081065e4d5d8" kindref="member">PaUnixThread_New</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1a78a3ab135792aa210042183dabab28ca" kindref="member">thread</ref>,<sp/>&amp;CallbackThreadFunc,<sp/>stream,<sp/>1.,<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a950d643d1442448a51072e83debc40be" kindref="member">rtSched</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>AlsaStart(<sp/>stream,<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streamStarted<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"></highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>streamStarted<sp/>)</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AbortStream(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a6bd474f11d49f98eb08f0558b17b5cd3" kindref="member">isActive</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="3016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight></codeline>
<codeline lineno="3020"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>AlsaStop(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>abort<sp/>)</highlight></codeline>
<codeline lineno="3021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>alsa_snd_pcm_drain<sp/>tends<sp/>to<sp/>lock<sp/>up,<sp/>avoid<sp/>it<sp/>until<sp/>we<sp/>find<sp/>out<sp/>more<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/>abort<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3026"><highlight class="comment"><sp/><sp/><sp/><sp/>if(<sp/>stream-&gt;capture.pcm<sp/>&amp;&amp;<sp/>!strcmp(<sp/>Pa_GetDeviceInfo(<sp/>stream-&gt;capture.device<sp/>)-&gt;name,</highlight></codeline>
<codeline lineno="3027"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;dmix&quot;<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="3028"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3029"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abort<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3030"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3031"><highlight class="comment"><sp/><sp/><sp/><sp/>else<sp/>if(<sp/>stream-&gt;playback.pcm<sp/>&amp;&amp;<sp/>!strcmp(<sp/>Pa_GetDeviceInfo(<sp/>stream-&gt;playback.device<sp/>)-&gt;name,</highlight></codeline>
<codeline lineno="3032"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;dmix&quot;<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="3033"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3034"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abort<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3035"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3036"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3037"><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>abort<sp/>)</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_drop(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>&amp;&amp;<sp/>!stream-&gt;<ref refid="struct_pa_alsa_stream_1a07464a14e43b11c9e5de064ed33fae70" kindref="member">pcmsSynced</ref><sp/>)</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_drop(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"></highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Dropped<sp/>frames\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_nonblock(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref>,<sp/>0<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_drain(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Draining<sp/>playback<sp/>handle<sp/>failed!\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>&amp;&amp;<sp/>!stream-&gt;<ref refid="struct_pa_alsa_stream_1a07464a14e43b11c9e5de064ed33fae70" kindref="member">pcmsSynced</ref><sp/>)</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>don&apos;t<sp/>need<sp/>to<sp/>retrieve<sp/>any<sp/>remaining<sp/>frames<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_drain(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Draining<sp/>capture<sp/>handle<sp/>failed!\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="3075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>RealStop(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>abort<sp/>)</highlight></codeline>
<codeline lineno="3087"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"></highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>deal<sp/>with<sp/>the<sp/>callback<sp/>thread,<sp/>cancelling<sp/>and/or<sp/>joining</highlight></codeline>
<codeline lineno="3091"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>it<sp/>if<sp/>necessary</highlight></codeline>
<codeline lineno="3092"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad122ee597668cb143bc79be9712f382e" kindref="member">callbackMode</ref><sp/>)</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>threadRes;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ab572de6c0a951967b3a47713427858d3" kindref="member">callbackAbort</ref><sp/>=<sp/>abort;</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!abort<sp/>)</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;Stopping<sp/>callback\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="pa__unix__util_8c_1a2f251ad2c037e1a573c1a5cb564b1afe" kindref="member">PaUnixThread_Terminate</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1a78a3ab135792aa210042183dabab28ca" kindref="member">thread</ref>,<sp/>!abort,<sp/>&amp;threadRes<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>threadRes<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>thread<sp/>returned:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>threadRes<sp/>));</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>watchdogRes<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;Watchdog<sp/>thread<sp/>returned:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>watchdogRes<sp/>));</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3111"><highlight class="normal"></highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a118a04f7270ac45c669d5cec7a410119" kindref="member">callback_finished</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>AlsaStop(<sp/>stream,<sp/>abort<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a6bd474f11d49f98eb08f0558b17b5cd3" kindref="member">isActive</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"></highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="3126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>StopStream(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*s<sp/>)</highlight></codeline>
<codeline lineno="3129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RealStop(<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*)<sp/>s,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="3131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"></highlight></codeline>
<codeline lineno="3133"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>AbortStream(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*s<sp/>)</highlight></codeline>
<codeline lineno="3134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RealStop(<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*<sp/>)<sp/>s,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="3136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"></highlight></codeline>
<codeline lineno="3142"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>IsStreamStopped(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*s<sp/>)</highlight></codeline>
<codeline lineno="3143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*)s;</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"></highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>callback_finished<sp/>indicates<sp/>we<sp/>need<sp/>to<sp/>join<sp/>callback<sp/>thread<sp/>(ie.<sp/>in<sp/>Abort/StopStream)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!IsStreamActive(<sp/>s<sp/>)<sp/>&amp;&amp;<sp/>!stream-&gt;<ref refid="struct_pa_alsa_stream_1a118a04f7270ac45c669d5cec7a410119" kindref="member">callback_finished</ref>;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"></highlight></codeline>
<codeline lineno="3150"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>IsStreamActive(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*s<sp/>)</highlight></codeline>
<codeline lineno="3151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*)s;</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a6bd474f11d49f98eb08f0558b17b5cd3" kindref="member">isActive</ref>;</highlight></codeline>
<codeline lineno="3154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref><sp/>GetStreamTime(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*s<sp/>)</highlight></codeline>
<codeline lineno="3157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*)s;</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"></highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_timestamp_t<sp/>timestamp;</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_status_t*<sp/><ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a52087bf8ca51ff0145dd1ed1a7fa6650" kindref="member">alsa_snd_pcm_status_alloca</ref>(<sp/>&amp;status<sp/>);</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"></highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>what<sp/>if<sp/>we<sp/>have<sp/>both?<sp/><sp/>does<sp/>it<sp/>really<sp/>matter?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>if<sp/>running<sp/>in<sp/>callback<sp/>mode,<sp/>this<sp/>will<sp/>mean</highlight></codeline>
<codeline lineno="3167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>libasound<sp/>routines<sp/>are<sp/>being<sp/>called<sp/>from<sp/>multiple<sp/>threads.</highlight></codeline>
<codeline lineno="3168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>need<sp/>to<sp/>verify<sp/>that<sp/>libasound<sp/>is<sp/>thread-safe.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3169"><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_status(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref>,<sp/>status<sp/>);</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_status(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref>,<sp/>status<sp/>);</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"></highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_snd_pcm_status_get_tstamp(<sp/>status,<sp/>&amp;timestamp<sp/>);</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timestamp.tv_sec<sp/>+<sp/>(<ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref>)timestamp.tv_usec<sp/>/<sp/>1e6;</highlight></codeline>
<codeline lineno="3181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetStreamCpuLoad(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/>s<sp/>)</highlight></codeline>
<codeline lineno="3184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*)s;</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="pa__cpuload_8c_1af7bff59bbfe46a388e21633bf49ea0d6" kindref="member">PaUtil_GetCpuLoad</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1a29f7550cda202836040ec8d6dd0d6aea" kindref="member">cpuLoadMeasurer</ref><sp/>);</highlight></codeline>
<codeline lineno="3188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"></highlight></codeline>
<codeline lineno="3190"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>stream<sp/>sample<sp/>rate<sp/>to<sp/>a<sp/>nominal<sp/>value<sp/>requested;<sp/>allow<sp/>only<sp/>a<sp/>defined<sp/>tolerance<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3191"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SetApproximateSampleRate(<sp/>snd_pcm_t<sp/>*pcm,<sp/>snd_pcm_hw_params_t<sp/>*hwParams,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampleRate<sp/>)</highlight></codeline>
<codeline lineno="3192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reqRate,<sp/>setRate,<sp/>deviation;</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"></highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>pcm<sp/>&amp;&amp;<sp/>hwParams<sp/>);</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>Alsa<sp/>sample<sp/>rate<sp/>is<sp/>set<sp/>by<sp/>integer<sp/>value;<sp/>also<sp/>the<sp/>actual<sp/>rate<sp/>may<sp/>differ<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/>reqRate<sp/>=<sp/>setRate<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>sampleRate;</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_set_rate_near(<sp/>pcm,<sp/>hwParams,<sp/>&amp;setRate,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>value<sp/>actually<sp/>set<sp/>will<sp/>be<sp/>put<sp/>in<sp/>&apos;setRate&apos;<sp/>(may<sp/>be<sp/>way<sp/>off);<sp/>check<sp/>the<sp/>deviation<sp/>as<sp/>a<sp/>proportion</highlight></codeline>
<codeline lineno="3203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>the<sp/>requested-rate<sp/>with<sp/>reference<sp/>to<sp/>the<sp/>max-deviate-ratio<sp/>(larger<sp/>values<sp/>allow<sp/>less<sp/>deviation)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/>deviation<sp/>=<sp/>abs(<sp/>setRate<sp/>-<sp/>reqRate<sp/>);</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>deviation<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>deviation<sp/>*<sp/><ref refid="pa__linux__alsa_8c_1af59870a8b44c748c2933363c8d96b296" kindref="member">RATE_MAX_DEVIATE_RATIO</ref><sp/>&gt;<sp/>reqRate<sp/>)</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a30a98097c3b6d9789077b72c26ae7c24" kindref="member">paInvalidSampleRate</ref>;</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"></highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"></highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Log<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_min<sp/>=<sp/>0,<sp/>_max<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_dir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_rate_min(<sp/>hwParams,<sp/>&amp;_min,<sp/>&amp;_dir<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_hw_params_get_rate_max(<sp/>hwParams,<sp/>&amp;_max,<sp/>&amp;_dir<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>SR<sp/>min<sp/>=<sp/>%u,<sp/>max<sp/>=<sp/>%u,<sp/>req<sp/>=<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>_min,<sp/>_max,<sp/>reqRate<sp/>));</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="3221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"></highlight></codeline>
<codeline lineno="3223"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>exact<sp/>sample<sp/>rate<sp/>in<sp/>param<sp/>sampleRate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetExactSampleRate(<sp/>snd_pcm_hw_params_t<sp/>*hwParams,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*sampleRate<sp/>)</highlight></codeline>
<codeline lineno="3225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/>den<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>hwParams<sp/>);</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>alsa_snd_pcm_hw_params_get_rate_numden(<sp/>hwParams,<sp/>&amp;num,<sp/>&amp;den<sp/>);</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/>*sampleRate<sp/>=<sp/>(double)<sp/>num<sp/>/<sp/>den;</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"></highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="3235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"></highlight></codeline>
<codeline lineno="3237"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Utility<sp/>functions<sp/>for<sp/>blocking/callback<sp/>interfaces<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3238"><highlight class="normal"></highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Atomic<sp/>restart<sp/>of<sp/>stream<sp/>(we<sp/>don&apos;t<sp/>want<sp/>the<sp/>intermediate<sp/>state<sp/>visible)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>AlsaRestart(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>)</highlight></codeline>
<codeline lineno="3241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="pa__unix__util_8c_1a254077b3b33653765a397e41fa59a4d1" kindref="member">PaUnixMutex_Lock</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1aba5481778876188e52785adf8e0ce793" kindref="member">stateMtx</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>AlsaStop(<sp/>stream,<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>AlsaStart(<sp/>stream,<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"></highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Restarted<sp/>audio\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="pa__unix__util_8c_1a32dd4f5abd53fb23a2f5349fa5c63d5e" kindref="member">PaUnixMutex_Unlock</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1aba5481778876188e52785adf8e0ce793" kindref="member">stateMtx</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"></highlight></codeline>
<codeline lineno="3259"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStream_HandleXrun(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="3260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_status_t<sp/>*st;</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref><sp/>now<sp/>=<sp/><ref refid="pa__util_8h_1a9598384d28d22d589f607ca1069cc04c" kindref="member">PaUtil_GetTime</ref>();</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_timestamp_t<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>restartAlsa<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>not<sp/>restart<sp/>Alsa<sp/>by<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3266"><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a52087bf8ca51ff0145dd1ed1a7fa6650" kindref="member">alsa_snd_pcm_status_alloca</ref>(<sp/>&amp;st<sp/>);</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"></highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;playback.pcm<sp/>)</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_status(<sp/>self-&gt;playback.pcm,<sp/>st<sp/>);</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_status_get_state(<sp/>st<sp/>)<sp/>==<sp/>SND_PCM_STATE_XRUN<sp/>)</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_status_get_trigger_tstamp(<sp/>st,<sp/>&amp;t<sp/>);</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;underrun<sp/>=<sp/>now<sp/>*<sp/>1000<sp/>-<sp/>(<sp/>(<ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref>)t.tv_sec<sp/>*<sp/>1000<sp/>+<sp/>(<ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref>)t.tv_usec<sp/>/<sp/>1000<sp/>);</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!self-&gt;playback.canMmap<sp/>)</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_recover(<sp/>self-&gt;playback.pcm,<sp/>-EPIPE,<sp/>0<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>[playback]<sp/>non-MMAP-PCM<sp/>failed<sp/>recovering<sp/>from<sp/>XRUN,<sp/>will<sp/>restart<sp/>Alsa\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<sp/>restartAlsa;<sp/></highlight><highlight class="comment">/*<sp/>did<sp/>not<sp/>manage<sp/>to<sp/>recover<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<sp/>restartAlsa;<sp/></highlight><highlight class="comment">/*<sp/>always<sp/>restart<sp/>MMAPed<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.pcm<sp/>)</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_status(<sp/>self-&gt;capture.pcm,<sp/>st<sp/>);</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_status_get_state(<sp/>st<sp/>)<sp/>==<sp/>SND_PCM_STATE_XRUN<sp/>)</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_status_get_trigger_tstamp(<sp/>st,<sp/>&amp;t<sp/>);</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;overrun<sp/>=<sp/>now<sp/>*<sp/>1000<sp/>-<sp/>((<ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref>)<sp/>t.tv_sec<sp/>*<sp/>1000<sp/>+<sp/>(<ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref>)<sp/>t.tv_usec<sp/>/<sp/>1000);</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!self-&gt;capture.canMmap)</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alsa_snd_pcm_recover(<sp/>self-&gt;capture.pcm,<sp/>-EPIPE,<sp/>0<sp/>)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>[capture]<sp/>non-MMAP-PCM<sp/>failed<sp/>recovering<sp/>from<sp/>XRUN,<sp/>will<sp/>restart<sp/>Alsa\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<sp/>restartAlsa;<sp/></highlight><highlight class="comment">/*<sp/>did<sp/>not<sp/>manage<sp/>to<sp/>recover<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<sp/>restartAlsa;<sp/></highlight><highlight class="comment">/*<sp/>always<sp/>restart<sp/>MMAPed<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>restartAlsa<sp/>)</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>restarting<sp/>Alsa<sp/>to<sp/>recover<sp/>from<sp/>XRUN\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>AlsaRestart(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"></highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="3320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"></highlight></codeline>
<codeline lineno="3325"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>ContinuePoll(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64" kindref="member">StreamDirection</ref><sp/>streamDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="struct_pa_alsa_stream_1afd9058a227a6b8d8eae41f033c7955ae" kindref="member">pollTimeout</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*continuePoll<sp/>)</highlight></codeline>
<codeline lineno="3326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_sframes_t<sp/>delay,<sp/>margin;</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref><sp/>*component<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>*otherComponent<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"></highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/>*continuePoll<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref><sp/>==<sp/>streamDir<sp/>)</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component<sp/>=<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>;</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherComponent<sp/>=<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>;</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component<sp/>=<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>;</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherComponent<sp/>=<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>;</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"></highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ALSA<sp/>docs<sp/>say<sp/>that<sp/>negative<sp/>delay<sp/>should<sp/>indicate<sp/>xrun,<sp/>but<sp/>in<sp/>my<sp/>experience<sp/>alsa_snd_pcm_delay<sp/>returns<sp/>-EPIPE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>err<sp/>=<sp/>alsa_snd_pcm_delay(<sp/>otherComponent-&gt;pcm,<sp/>&amp;delay<sp/>)<sp/>)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>==<sp/>-EPIPE<sp/>)</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Xrun<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*continuePoll<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"></highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>err,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"></highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64ae177efd435a0afd9a45c4efc3b63b229" kindref="member">StreamDirection_Out</ref><sp/>==<sp/>streamDir<sp/>)</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>eligible<sp/>frames<sp/>before<sp/>capture<sp/>overrun<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay<sp/>=<sp/>otherComponent-&gt;alsaBufferSize<sp/>-<sp/>delay;</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/>margin<sp/>=<sp/>delay<sp/>-<sp/>otherComponent-&gt;framesPerPeriod<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"></highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>margin<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Stopping<sp/>poll<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref><sp/>==<sp/>streamDir<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;capture&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;playback&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*continuePoll<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>margin<sp/>&lt;<sp/>otherComponent-&gt;framesPerPeriod<sp/>)</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pollTimeout<sp/>=<sp/>CalculatePollTimeout(<sp/>stream,<sp/>margin<sp/>);</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Trying<sp/>to<sp/>poll<sp/>again<sp/>for<sp/>%s<sp/>frames,<sp/>pollTimeout:<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref><sp/>==<sp/>streamDir<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;capture&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;playback&quot;</highlight><highlight class="normal">,<sp/>*pollTimeout<sp/>));</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"></highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Callback<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"></highlight></codeline>
<codeline lineno="3383"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_menus_8h_1aedcd0979dd6860e7f1a9ce54ecdd18ba" kindref="member">OnExit</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>)</highlight></codeline>
<codeline lineno="3384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*)<sp/>data;</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"></highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__cpuload_8c_1a31e622efc7504297b2191c3fe616b2ee" kindref="member">PaUtil_ResetCpuLoadMeasurer</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1a29f7550cda202836040ec8d6dd0d6aea" kindref="member">cpuLoadMeasurer</ref><sp/>);</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a118a04f7270ac45c669d5cec7a410119" kindref="member">callback_finished</ref><sp/>=<sp/>1;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Let<sp/>the<sp/>outside<sp/>world<sp/>know<sp/>stream<sp/>was<sp/>stopped<sp/>in<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Stopping<sp/>ALSA<sp/>handles\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/>AlsaStop(<sp/>stream,<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ab572de6c0a951967b3a47713427858d3" kindref="member">callbackAbort</ref><sp/>);</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"></highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Stoppage\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Eventually<sp/>notify<sp/>user<sp/>all<sp/>buffers<sp/>have<sp/>played<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1addaeac8fe364c5ff592d34c51102490f" kindref="member">streamRepresentation</ref>.<ref refid="struct_pa_util_stream_representation_1a9132c3be1600907f747c38d64f4a4a3e" kindref="member">streamFinishedCallback</ref><sp/>)</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1addaeac8fe364c5ff592d34c51102490f" kindref="member">streamRepresentation</ref>.<ref refid="struct_pa_util_stream_representation_1a9132c3be1600907f747c38d64f4a4a3e" kindref="member">streamFinishedCallback</ref>(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1addaeac8fe364c5ff592d34c51102490f" kindref="member">streamRepresentation</ref>.<ref refid="struct_pa_util_stream_representation_1a5d47c8cae02066d877bc7c670adb61ad" kindref="member">userData</ref><sp/>);</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a6bd474f11d49f98eb08f0558b17b5cd3" kindref="member">isActive</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalculateTimeInfo(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream,<sp/><ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref><sp/>*timeInfo<sp/>)</highlight></codeline>
<codeline lineno="3406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_status_t<sp/>*capture_status,<sp/>*playback_status;</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_timestamp_t<sp/>capture_timestamp,<sp/>playback_timestamp;</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref><sp/>capture_time<sp/>=<sp/>0.,<sp/>playback_time<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a52087bf8ca51ff0145dd1ed1a7fa6650" kindref="member">alsa_snd_pcm_status_alloca</ref>(<sp/>&amp;capture_status<sp/>);</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a52087bf8ca51ff0145dd1ed1a7fa6650" kindref="member">alsa_snd_pcm_status_alloca</ref>(<sp/>&amp;playback_status<sp/>);</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"></highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_sframes_t<sp/>capture_delay;</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"></highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_status(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref>,<sp/>capture_status<sp/>);</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_status_get_tstamp(<sp/>capture_status,<sp/>&amp;capture_timestamp<sp/>);</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"></highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capture_time<sp/>=<sp/>capture_timestamp.tv_sec<sp/>+</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref>)capture_timestamp.tv_usec<sp/>/<sp/>1000000.0<sp/>);</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeInfo-&gt;<ref refid="struct_pa_stream_callback_time_info_1af21eb5482cadb212dae38fdbbd9bebfb" kindref="member">currentTime</ref><sp/>=<sp/>capture_time;</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capture_delay<sp/>=<sp/>alsa_snd_pcm_status_get_delay(<sp/>capture_status<sp/>);</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeInfo-&gt;<ref refid="struct_pa_stream_callback_time_info_1ad114a6d5e1cf2cdd75837c33c1c8bb4c" kindref="member">inputBufferAdcTime</ref><sp/>=<sp/>timeInfo-&gt;<ref refid="struct_pa_stream_callback_time_info_1af21eb5482cadb212dae38fdbbd9bebfb" kindref="member">currentTime</ref><sp/>-</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref>)capture_delay<sp/>/<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1addaeac8fe364c5ff592d34c51102490f" kindref="member">streamRepresentation</ref>.<ref refid="struct_pa_util_stream_representation_1a13c2b5318f73dde9a11fd9d874763d4a" kindref="member">streamInfo</ref>.<ref refid="struct_pa_stream_info_1a9200fdee790d9155bc35d03be51ee2dd" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_sframes_t<sp/>playback_delay;</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"></highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_status(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref>,<sp/>playback_status<sp/>);</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_status_get_tstamp(<sp/>playback_status,<sp/>&amp;playback_timestamp<sp/>);</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"></highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playback_time<sp/>=<sp/>playback_timestamp.tv_sec<sp/>+</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref>)playback_timestamp.tv_usec<sp/>/<sp/>1000000.0);</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"></highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)<sp/></highlight><highlight class="comment">/*<sp/>Full<sp/>duplex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hmm,<sp/>we<sp/>have<sp/>both<sp/>a<sp/>playback<sp/>and<sp/>a<sp/>capture<sp/>timestamp.</highlight></codeline>
<codeline lineno="3442"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Hopefully<sp/>they<sp/>are<sp/>the<sp/>same...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(<sp/>capture_time<sp/>-<sp/>playback_time<sp/>)<sp/>&gt;<sp/>0.01<sp/>)</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;Capture<sp/>time<sp/>and<sp/>playback<sp/>time<sp/>differ<sp/>by<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>fabs(<sp/>capture_time-playback_time<sp/>)<sp/>));</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeInfo-&gt;<ref refid="struct_pa_stream_callback_time_info_1af21eb5482cadb212dae38fdbbd9bebfb" kindref="member">currentTime</ref><sp/>=<sp/>playback_time;</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"></highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playback_delay<sp/>=<sp/>alsa_snd_pcm_status_get_delay(<sp/>playback_status<sp/>);</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeInfo-&gt;<ref refid="struct_pa_stream_callback_time_info_1aa2052c42394fca748e83517fc8942609" kindref="member">outputBufferDacTime</ref><sp/>=<sp/>timeInfo-&gt;<ref refid="struct_pa_stream_callback_time_info_1af21eb5482cadb212dae38fdbbd9bebfb" kindref="member">currentTime</ref><sp/>+</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref>)playback_delay<sp/>/<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1addaeac8fe364c5ff592d34c51102490f" kindref="member">streamRepresentation</ref>.<ref refid="struct_pa_util_stream_representation_1a13c2b5318f73dde9a11fd9d874763d4a" kindref="member">streamInfo</ref>.<ref refid="struct_pa_stream_info_1a9200fdee790d9155bc35d03be51ee2dd" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"></highlight></codeline>
<codeline lineno="3462"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStreamComponent_EndProcessing(<sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>numFrames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xrun<sp/>)</highlight></codeline>
<codeline lineno="3463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@concern<sp/>FullDuplex<sp/>It<sp/>is<sp/>possible<sp/>that<sp/>only<sp/>one<sp/>direction<sp/>is<sp/>marked<sp/>ready<sp/>after<sp/>polling,<sp/>and<sp/>processed</highlight></codeline>
<codeline lineno="3468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>afterwards</highlight></codeline>
<codeline lineno="3469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!self-&gt;ready<sp/>)</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"></highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!self-&gt;canMmap<sp/>&amp;&amp;<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64ae177efd435a0afd9a45c4efc3b63b229" kindref="member">StreamDirection_Out</ref><sp/>==<sp/>self-&gt;streamDir<sp/>)</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Play<sp/>sound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;hostInterleaved<sp/>)</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>alsa_snd_pcm_writei(<sp/>self-&gt;pcm,<sp/>self-&gt;nonMmapBuffer,<sp/>numFrames<sp/>);</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*bufs[</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numHostChannels];</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufsize<sp/>=<sp/>alsa_snd_pcm_format_size(<sp/>self-&gt;nativeFormat,<sp/>self-&gt;framesPerPeriod<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;nonMmapBuffer;</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numHostChannels;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>bufsize;</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>alsa_snd_pcm_writen(<sp/>self-&gt;pcm,<sp/>bufs,<sp/>numFrames<sp/>);</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"></highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;canMmap<sp/>)</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>alsa_snd_pcm_mmap_commit(<sp/>self-&gt;pcm,<sp/>self-&gt;offset,<sp/>numFrames<sp/>);</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"></highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>res<sp/>==<sp/>-EPIPE<sp/>||<sp/>res<sp/>==<sp/>-ESTRPIPE<sp/>)</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xrun<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>res,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"></highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Extract<sp/>buffer<sp/>from<sp/>channel<sp/>area<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3511"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ExtractAddress(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snd_pcm_channel_area_t<sp/>*area,<sp/>snd_pcm_uframes_t<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref><sp/>)</highlight></codeline>
<codeline lineno="3512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>area-&gt;addr<sp/>+<sp/>(<sp/>area-&gt;first<sp/>+<sp/>offset<sp/>*<sp/>area-&gt;step<sp/>)<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"></highlight></codeline>
<codeline lineno="3521"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStreamComponent_DoChannelAdaption(<sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref><sp/>*bp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames<sp/>)</highlight></codeline>
<codeline lineno="3522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unusedChans<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numHostChannels<sp/>-<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numUserChannels;</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/>*dst;</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>convertMono<sp/>=<sp/>(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numHostChannels<sp/>%<sp/>2<sp/>)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>(<sp/>self-&gt;numUserChannels<sp/>%<sp/>2<sp/>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64ae177efd435a0afd9a45c4efc3b63b229" kindref="member">StreamDirection_Out</ref><sp/>==<sp/>self-&gt;streamDir<sp/>);</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;hostInterleaved<sp/>)</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swidth<sp/>=<sp/>alsa_snd_pcm_format_size(<sp/>self-&gt;nativeFormat,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;canMmap<sp/>?<sp/>ExtractAddress(<sp/>self-&gt;channelAreas,<sp/>self-&gt;offset<sp/>)<sp/>:<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;nonMmapBuffer;</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>after<sp/>the<sp/>last<sp/>user<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>buffer<sp/>+<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numUserChannels<sp/>*<sp/>swidth;</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>convertMono<sp/>)</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>the<sp/>last<sp/>user<sp/>channel<sp/>into<sp/>stereo<sp/>pair<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>=<sp/>buffer<sp/>+<sp/>(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numUserChannels<sp/>-<sp/>1<sp/>)<sp/>*<sp/>swidth;</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numFrames;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>src<sp/>+<sp/>swidth;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>dst,<sp/>src,<sp/>swidth<sp/>);</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>+=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numHostChannels<sp/>*<sp/>swidth;</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>touch<sp/>the<sp/>channel<sp/>we<sp/>just<sp/>wrote<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>swidth;</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--unusedChans;</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>unusedChans<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Silence<sp/>unused<sp/>output<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numFrames;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>p,<sp/>0,<sp/>swidth<sp/>*<sp/>unusedChans<sp/>);</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numHostChannels<sp/>*<sp/>swidth;</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>extract<sp/>the<sp/>last<sp/>user<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>convertMono<sp/>)</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_area_copy(<sp/>self-&gt;channelAreas<sp/>+<sp/>self-&gt;numUserChannels,<sp/>self-&gt;offset,<sp/>self-&gt;channelAreas<sp/>+</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>self-&gt;numUserChannels<sp/>-<sp/>1<sp/>),<sp/>self-&gt;offset,<sp/>numFrames,<sp/>self-&gt;nativeFormat<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--unusedChans;</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>unusedChans<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_snd_pcm_areas_silence(<sp/>self-&gt;channelAreas<sp/>+<sp/>(<sp/>self-&gt;numHostChannels<sp/>-<sp/>unusedChans<sp/>),<sp/>self-&gt;offset,<sp/>unusedChans,<sp/>numFrames,</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;nativeFormat<sp/>);</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"></highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStream_EndProcessing(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>numFrames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xrunOccurred<sp/>)</highlight></codeline>
<codeline lineno="3587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xrun<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"></highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.pcm<sp/>)</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_EndProcessing(<sp/>&amp;self-&gt;capture,<sp/>numFrames,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;playback.pcm<sp/>)</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;playback.numHostChannels<sp/>&gt;<sp/>self-&gt;playback.numUserChannels<sp/>)</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_DoChannelAdaption(<sp/>&amp;self-&gt;playback,<sp/>&amp;self-&gt;bufferProcessor,<sp/>numFrames<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_EndProcessing(<sp/>&amp;self-&gt;playback,<sp/>numFrames,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"></highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/>*xrunOccurred<sp/>=<sp/>xrun;</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"></highlight></codeline>
<codeline lineno="3612"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStreamComponent_GetAvailableFrames(<sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*numFrames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xrunOccurred<sp/>)</highlight></codeline>
<codeline lineno="3613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_sframes_t<sp/>framesAvail<sp/>=<sp/>alsa_snd_pcm_avail_update(<sp/>self-&gt;pcm<sp/>);</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/>*xrunOccurred<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"></highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>-EPIPE<sp/>==<sp/>framesAvail<sp/>)</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xrunOccurred<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesAvail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>framesAvail,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"></highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/>*numFrames<sp/>=<sp/>framesAvail;</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"></highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight></codeline>
<codeline lineno="3636"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStreamComponent_BeginPolling(<sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>pollfd*<sp/><ref refid="struct_pa_alsa_stream_1aa2e24a0415a19cf1e2f95dd69af76e4c" kindref="member">pfds</ref><sp/>)</highlight></codeline>
<codeline lineno="3637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>alsa_snd_pcm_poll_descriptors(<sp/>self-&gt;pcm,<sp/>pfds,<sp/>self-&gt;nfds<sp/>);</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)ret;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>variable<sp/>warning<sp/>if<sp/>asserts<sp/>are<sp/>turned<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>ret<sp/>==<sp/>self-&gt;nfds<sp/>);</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;ready<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"></highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"></highlight></codeline>
<codeline lineno="3654"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStreamComponent_EndPolling(<sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>pollfd*<sp/>pfds,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>shouldPoll,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>xrun<sp/>)</highlight></codeline>
<codeline lineno="3655"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>revents;</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_poll_descriptors_revents(<sp/>self-&gt;pcm,<sp/>pfds,<sp/>self-&gt;nfds,<sp/>&amp;revents<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>revents<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>revents<sp/>&amp;<sp/>POLLERR<sp/>)</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xrun<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>revents<sp/>&amp;<sp/>POLLHUP<sp/>)</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xrun<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>revents<sp/>has<sp/>POLLHUP,<sp/>processing<sp/>as<sp/>XRUN\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;ready<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"></highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*shouldPoll<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>(A<sp/>zero<sp/>revent<sp/>occurred)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Work<sp/>around<sp/>an<sp/>issue<sp/>with<sp/>Alsa<sp/>older<sp/>than<sp/>1.0.16<sp/>using<sp/>some<sp/>plugins<sp/>(eg<sp/>default<sp/>with<sp/>plug<sp/>+<sp/>dmix)<sp/>where</highlight></codeline>
<codeline lineno="3678"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>POLLIN<sp/>or<sp/>POLLOUT<sp/>are<sp/>zeroed<sp/>by<sp/>Alsa-lib<sp/>if<sp/>_mmap_avail()<sp/>is<sp/>a<sp/>few<sp/>frames<sp/>short<sp/>of<sp/>avail_min<sp/>at<sp/>period</highlight></codeline>
<codeline lineno="3679"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>boundary,<sp/>possibly<sp/>due<sp/>to<sp/>erratic<sp/>dma<sp/>interrupts<sp/>at<sp/>period<sp/>boundary?<sp/><sp/>Treat<sp/>as<sp/>a<sp/>valid<sp/>event.</highlight></codeline>
<codeline lineno="3680"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;useReventFix<sp/>)</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;ready<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*shouldPoll<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"></highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"></highlight></codeline>
<codeline lineno="3701"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStream_GetAvailableFrames(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>queryCapture,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>queryPlayback,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*available,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xrunOccurred<sp/>)</highlight></codeline>
<codeline lineno="3703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>captureFrames,<sp/>playbackFrames;</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/>*xrunOccurred<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"></highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>queryCapture<sp/>||<sp/>queryPlayback<sp/>);</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"></highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>queryCapture<sp/>)</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>self-&gt;capture.pcm<sp/>);</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_GetAvailableFrames(<sp/>&amp;self-&gt;capture,<sp/>&amp;captureFrames,<sp/>xrunOccurred<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*xrunOccurred<sp/>)</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>queryPlayback<sp/>)</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>self-&gt;playback.pcm<sp/>);</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_GetAvailableFrames(<sp/>&amp;self-&gt;playback,<sp/>&amp;playbackFrames,<sp/>xrunOccurred<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*xrunOccurred<sp/>)</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"></highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>queryCapture<sp/>&amp;&amp;<sp/>queryPlayback<sp/>)</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*available<sp/>=<sp/><ref refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" kindref="member">PA_MIN</ref>(<sp/>captureFrames,<sp/>playbackFrames<sp/>);</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*PA_DEBUG((&quot;capture:<sp/>%lu,<sp/>playback:<sp/>%lu,<sp/>combined:<sp/>%lu\n&quot;,<sp/>captureFrames,<sp/>playbackFrames,<sp/>*available));*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>queryCapture<sp/>)</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*available<sp/>=<sp/>captureFrames;</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*available<sp/>=<sp/>playbackFrames;</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"></highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"></highlight></codeline>
<codeline lineno="3758"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStream_WaitForFrames(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*framesAvail,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*xrunOccurred<sp/>)</highlight></codeline>
<codeline lineno="3759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pollPlayback<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;playback.pcm<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>pollCapture<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;capture.pcm<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pollTimeout<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;pollTimeout;</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xrun<sp/>=<sp/>0,<sp/>timeouts<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pollResults;</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>framesAvail<sp/>);</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"></highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!self-&gt;callbackMode<sp/>)</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>blocking<sp/>mode<sp/>we<sp/>will<sp/>only<sp/>wait<sp/>if<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_GetAvailableFrames(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>self-&gt;capture.pcm<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>self-&gt;playback.pcm<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesAvail,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xrun<sp/>)</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*framesAvail<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mark<sp/>pcms<sp/>ready<sp/>from<sp/>poll<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.pcm<sp/>)</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;capture.ready<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;playback.pcm<sp/>)</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;playback.ready<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"></highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"></highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>pollPlayback<sp/>||<sp/>pollCapture<sp/>)</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalFds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">pollfd<sp/>*capturePfds<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>*playbackPfds<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PTHREAD_CANCELED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_testcancel();</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pollCapture<sp/>)</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capturePfds<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;pfds;</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_BeginPolling(<sp/>&amp;self-&gt;capture,<sp/>capturePfds<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalFds<sp/>+=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;capture.nfds;</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pollPlayback<sp/>)</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>self-&gt;pfds<sp/>is<sp/>in<sp/>effect<sp/>an<sp/>array<sp/>of<sp/>fds;<sp/>if<sp/>necessary,<sp/>index<sp/>past<sp/>the<sp/>capture<sp/>fds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playbackPfds<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;pfds<sp/>+<sp/>(pollCapture<sp/>?<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;capture.nfds<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_BeginPolling(<sp/>&amp;self-&gt;playback,<sp/>playbackPfds<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalFds<sp/>+=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;playback.nfds;</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"></highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pollResults<sp/>=<sp/>poll(<sp/>self-&gt;pfds,<sp/>totalFds,<sp/>pollTimeout<sp/>);</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pollResults<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>XXX:<sp/>Depend<sp/>on<sp/>preprocessor<sp/>condition?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>errno<sp/>==<sp/>EINTR<sp/>)</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>gdb<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a1b3c20044c9401c42add29475636e83d" kindref="member">Pa_Sleep</ref>(<sp/>1<sp/>);<sp/></highlight><highlight class="comment">/*<sp/>avoid<sp/>hot<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"></highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>Add<sp/>macro<sp/>for<sp/>checking<sp/>system<sp/>calls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a4851f9f753cdad3e7a89380d6589816c" kindref="member">paInternalError</ref><sp/>);</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pollResults<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Suspended,<sp/>paused<sp/>or<sp/>failed<sp/>device<sp/>can<sp/>provide<sp/>0<sp/>poll<sp/>results.<sp/>To<sp/>avoid<sp/>deadloop<sp/>in<sp/>such<sp/>situation</highlight></codeline>
<codeline lineno="3831"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>simply<sp/>run<sp/>counter<sp/>&apos;timeouts&apos;<sp/>which<sp/>detects<sp/>0<sp/>poll<sp/>result<sp/>and<sp/>accumulates.<sp/>As<sp/>soon<sp/>as<sp/>2048<sp/>timouts<sp/>(around<sp/>2<sp/>seconds)</highlight></codeline>
<codeline lineno="3832"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>achieved<sp/>we<sp/>simply<sp/>fail<sp/>function<sp/>with<sp/>paTimedOut<sp/>to<sp/>notify<sp/>waiting<sp/>methods<sp/>that<sp/>device<sp/>is<sp/>not<sp/>capable</highlight></codeline>
<codeline lineno="3833"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>providing<sp/>audio<sp/>data<sp/>anymore<sp/>and<sp/>needs<sp/>some<sp/>corresponding<sp/>recovery<sp/>action.</highlight></codeline>
<codeline lineno="3834"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Note<sp/>that<sp/>&apos;timeouts&apos;<sp/>is<sp/>reset<sp/>to<sp/>0<sp/>if<sp/>poll()<sp/>managed<sp/>to<sp/>return<sp/>non<sp/>0<sp/>results.</highlight></codeline>
<codeline lineno="3835"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3836"><highlight class="normal"></highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*PA_DEBUG((<sp/>&quot;%s:<sp/>poll<sp/>==<sp/>0<sp/>results,<sp/>timed<sp/>out,<sp/>%d<sp/>times<sp/>left\n&quot;,<sp/>__FUNCTION__,<sp/>2048<sp/>-<sp/>timeouts<sp/>));*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<sp/>timeouts;</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>timeouts<sp/>&gt;<sp/>1<sp/>)<sp/></highlight><highlight class="comment">/*<sp/>sometimes<sp/>device<sp/>times<sp/>out,<sp/>but<sp/>normally<sp/>once,<sp/>so<sp/>we<sp/>do<sp/>not<sp/>sleep<sp/>any<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a1b3c20044c9401c42add29475636e83d" kindref="member">Pa_Sleep</ref>(<sp/>1<sp/>);<sp/></highlight><highlight class="comment">/*<sp/>avoid<sp/>hot<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>else<sp/>!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>timeouts<sp/>&gt;=<sp/>2048<sp/>)<sp/></highlight><highlight class="comment">/*<sp/>audio<sp/>device<sp/>not<sp/>working,<sp/>shall<sp/>return<sp/>error<sp/>to<sp/>notify<sp/>waiters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*framesAvail<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>frames<sp/>available<sp/>for<sp/>processing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xrun<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>try<sp/>recovering<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3848"><highlight class="normal"></highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>poll<sp/>timed<sp/>out\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>timeouts<sp/>));</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight><highlight class="comment">/*PA_ENSURE(<sp/>paTimedOut<sp/>);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pollResults<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>timouts<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeouts<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"></highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>return<sp/>status<sp/>of<sp/>our<sp/>pfds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pollCapture<sp/>)</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_EndPolling(<sp/>&amp;self-&gt;capture,<sp/>capturePfds,<sp/>&amp;pollCapture,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pollPlayback<sp/>)</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_EndPolling(<sp/>&amp;self-&gt;playback,<sp/>playbackPfds,<sp/>&amp;pollPlayback,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xrun<sp/>)</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"></highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@concern<sp/>FullDuplex<sp/>If<sp/>only<sp/>one<sp/>of<sp/>two<sp/>pcms<sp/>is<sp/>ready<sp/>we<sp/>may<sp/>want<sp/>to<sp/>compromise<sp/>between<sp/>the<sp/>two.</highlight></codeline>
<codeline lineno="3874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>there<sp/>is<sp/>less<sp/>than<sp/>half<sp/>a<sp/>period&apos;s<sp/>worth<sp/>of<sp/>samples<sp/>left<sp/>of<sp/>frames<sp/>in<sp/>the<sp/>other<sp/>pcm&apos;s<sp/>buffer<sp/>we<sp/>will</highlight></codeline>
<codeline lineno="3875"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>stop<sp/>polling.</highlight></codeline>
<codeline lineno="3876"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.pcm<sp/>&amp;&amp;<sp/>self-&gt;playback.pcm<sp/>)</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pollCapture<sp/>&amp;&amp;<sp/>!pollPlayback<sp/>)</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>ContinuePoll(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref>,<sp/>&amp;pollTimeout,<sp/>&amp;pollCapture<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pollPlayback<sp/>&amp;&amp;<sp/>!pollCapture<sp/>)</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>ContinuePoll(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64ae177efd435a0afd9a45c4efc3b63b229" kindref="member">StreamDirection_Out</ref>,<sp/>&amp;pollTimeout,<sp/>&amp;pollPlayback<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"></highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!xrun<sp/>)</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>number<sp/>of<sp/>available<sp/>frames<sp/>for<sp/>the<sp/>pcms<sp/>that<sp/>are<sp/>marked<sp/>ready.</highlight></codeline>
<codeline lineno="3893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@concern<sp/>FullDuplex<sp/>If<sp/>only<sp/>one<sp/>direction<sp/>is<sp/>marked<sp/>ready<sp/>(from<sp/>poll),<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>available<sp/>for</highlight></codeline>
<codeline lineno="3894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>other<sp/>direction<sp/>is<sp/>returned.<sp/>Output<sp/>is<sp/>normally<sp/>preferred<sp/>over<sp/>capture<sp/>however,<sp/>so<sp/>capture<sp/>frames<sp/>may<sp/>be</highlight></codeline>
<codeline lineno="3895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>discarded<sp/>to<sp/>avoid<sp/>overrun<sp/>unless<sp/>paNeverDropInput<sp/>is<sp/>specified.</highlight></codeline>
<codeline lineno="3896"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>captureReady<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;capture.pcm<sp/>?<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;capture.ready<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playbackReady<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;playback.pcm<sp/>?<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;playback.ready<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_GetAvailableFrames(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>captureReady,<sp/>playbackReady,<sp/>framesAvail,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"></highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.pcm<sp/>&amp;&amp;<sp/>self-&gt;playback.pcm<sp/>)</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!self-&gt;playback.ready<sp/>&amp;&amp;<sp/>!self-&gt;neverDropInput<sp/>)</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Drop<sp/>input,<sp/>a<sp/>period&apos;s<sp/>worth<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>self-&gt;capture.ready<sp/>);</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaAlsaStreamComponent_EndProcessing(<sp/>&amp;self-&gt;capture,<sp/><ref refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" kindref="member">PA_MIN</ref>(<sp/>self-&gt;capture.framesPerPeriod,</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*framesAvail<sp/>),<sp/>&amp;xrun<sp/>);</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*framesAvail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;capture.ready<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.pcm<sp/>)</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>self-&gt;capture.ready<sp/>);</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>self-&gt;playback.ready<sp/>);</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"></highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xrun<sp/>)</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recover<sp/>from<sp/>the<sp/>xrun<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_HandleXrun(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*framesAvail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>0<sp/>!=<sp/>*framesAvail<sp/>)</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we&apos;re<sp/>reporting<sp/>frames<sp/>eligible<sp/>for<sp/>processing,<sp/>one<sp/>of<sp/>the<sp/>handles<sp/>better<sp/>be<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>self-&gt;capture.ready<sp/>||<sp/>self-&gt;playback.ready,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a4851f9f753cdad3e7a89380d6589816c" kindref="member">paInternalError</ref><sp/>);</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/>*xrunOccurred<sp/>=<sp/>xrun;</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"></highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"></highlight></codeline>
<codeline lineno="3947"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStreamComponent_RegisterChannels(<sp/><ref refid="struct_pa_alsa_stream_component" kindref="compound">PaAlsaStreamComponent</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>numFrames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>xrun<sp/>)</highlight></codeline>
<codeline lineno="3949"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>snd_pcm_channel_area_t<sp/>*areas,<sp/>*area;</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*setChannel)(<ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>=</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref><sp/>==<sp/>self-&gt;streamDir<sp/>?<sp/><ref refid="pa__process_8c_1a4f955cb25ee2e3fc515fa69b9e6decb3" kindref="member">PaUtil_SetInputChannel</ref><sp/>:<sp/><ref refid="pa__process_8c_1a0ba1528b3182674480658aeda9de3f12" kindref="member">PaUtil_SetOutputChannel</ref>;</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesAvail;</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>_must_<sp/>be<sp/>called<sp/>before<sp/>mmap_begin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_GetAvailableFrames(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>&amp;framesAvail,<sp/>xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*xrun<sp/>)</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*numFrames<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"></highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;canMmap<sp/>)</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_mmap_begin(<sp/>self-&gt;pcm,<sp/>&amp;areas,<sp/>&amp;self-&gt;offset,<sp/>numFrames<sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@concern<sp/>ChannelAdaption<sp/>Buffer<sp/>address<sp/>is<sp/>recorded<sp/>so<sp/>we<sp/>can<sp/>do<sp/>some<sp/>channel<sp/>adaption<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;channelAreas<sp/>=<sp/>(snd_pcm_channel_area_t<sp/>*)areas;</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufferSize<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numHostChannels<sp/>*<sp/>alsa_snd_pcm_format_size(<sp/>self-&gt;nativeFormat,<sp/>*numFrames<sp/>);</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bufferSize<sp/>&gt;<sp/>self-&gt;nonMmapBufferSize<sp/>)</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;nonMmapBuffer<sp/>=<sp/>realloc(<sp/>self-&gt;nonMmapBuffer,<sp/>(<sp/>self-&gt;nonMmapBufferSize<sp/>=<sp/>bufferSize<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!self-&gt;nonMmapBuffer<sp/>)</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;hostInterleaved<sp/>)</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swidth<sp/>=<sp/>alsa_snd_pcm_format_size(<sp/>self-&gt;nativeFormat,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"></highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/>buffer<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;canMmap<sp/>?<sp/>ExtractAddress(<sp/>areas,<sp/>self-&gt;offset<sp/>)<sp/>:<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;nonMmapBuffer;</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numUserChannels;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>setting<sp/>the<sp/>channels<sp/>up<sp/>to<sp/>userChannels,<sp/>but<sp/>the<sp/>stride<sp/>will<sp/>be<sp/>hostChannels<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setChannel(<sp/>bp,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/>self-&gt;numHostChannels<sp/>);</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>+=<sp/>swidth;</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;canMmap<sp/>)</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numUserChannels;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/>areas<sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>ExtractAddress(<sp/>area,<sp/>self-&gt;offset<sp/>);</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setChannel(<sp/>bp,<sp/>i,<sp/>buffer,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_per_ch_size<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;nonMmapBufferSize<sp/>/<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numHostChannels;</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;nonMmapBuffer;</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numUserChannels;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setChannel(<sp/>bp,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>buffer,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>buf_per_ch_size;</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!self-&gt;canMmap<sp/>&amp;&amp;<sp/><ref refid="pa__linux__alsa_8c_1a72f714624a59d5421dc6b234893a0c64aa262f813f93316ac1bf9e9cd12b09385" kindref="member">StreamDirection_In</ref><sp/>==<sp/>self-&gt;streamDir<sp/>)</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>sound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;hostInterleaved<sp/>)</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>alsa_snd_pcm_readi(<sp/>self-&gt;pcm,<sp/>self-&gt;nonMmapBuffer,<sp/>*numFrames<sp/>);</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*bufs[</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numHostChannels];</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_per_ch_size<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;nonMmapBufferSize<sp/>/<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numHostChannels;</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;nonMmapBuffer;</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numHostChannels;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>buf_per_ch_size;</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>alsa_snd_pcm_readn(<sp/>self-&gt;pcm,<sp/>bufs,<sp/>*numFrames<sp/>);</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>res<sp/>==<sp/>-EPIPE<sp/>||<sp/>res<sp/>==<sp/>-ESTRPIPE<sp/>)</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xrun<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*numFrames<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"></highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"></highlight></codeline>
<codeline lineno="4062"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>PaAlsaStream_SetUpBuffers(<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>numFrames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>xrunOccurred<sp/>)</highlight></codeline>
<codeline lineno="4063"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>captureFrames<sp/>=<sp/>ULONG_MAX,<sp/>playbackFrames<sp/>=<sp/>ULONG_MAX,<sp/>commonFrames<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xrun<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"></highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*xrunOccurred<sp/>)</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*numFrames<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>got<sp/>here<sp/>at<sp/>least<sp/>one<sp/>of<sp/>the<sp/>pcm&apos;s<sp/>should<sp/>be<sp/>marked<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>self-&gt;capture.ready<sp/>||<sp/>self-&gt;playback.ready,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a4851f9f753cdad3e7a89380d6589816c" kindref="member">paInternalError</ref><sp/>);</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"></highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Extract<sp/>per-channel<sp/>ALSA<sp/>buffer<sp/>pointers<sp/>and<sp/>register<sp/>them<sp/>with<sp/>the<sp/>buffer<sp/>processor.</highlight></codeline>
<codeline lineno="4077"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>It<sp/>is<sp/>possible<sp/>that<sp/>a<sp/>direction<sp/>is<sp/>not<sp/>marked<sp/>ready<sp/>however,<sp/>because<sp/>it<sp/>is<sp/>out<sp/>of<sp/>sync<sp/>with<sp/>the<sp/>other.</highlight></codeline>
<codeline lineno="4078"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.pcm<sp/>&amp;&amp;<sp/>self-&gt;capture.ready<sp/>)</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>captureFrames<sp/>=<sp/>*numFrames;</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_RegisterChannels(<sp/>&amp;self-&gt;capture,<sp/>&amp;self-&gt;bufferProcessor,<sp/>&amp;captureFrames,</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;playback.pcm<sp/>&amp;&amp;<sp/>self-&gt;playback.ready<sp/>)</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playbackFrames<sp/>=<sp/>*numFrames;</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_RegisterChannels(<sp/>&amp;self-&gt;playback,<sp/>&amp;self-&gt;bufferProcessor,<sp/>&amp;playbackFrames,</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xrun<sp/>)</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>more<sp/>to<sp/>do<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>0<sp/>==<sp/>commonFrames<sp/>);</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"></highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/>commonFrames<sp/>=<sp/><ref refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" kindref="member">PA_MIN</ref>(<sp/>captureFrames,<sp/>playbackFrames<sp/>);</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>assert(<sp/>commonFrames<sp/>&lt;=<sp/>*numFrames<sp/>);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>commonFrames<sp/>&gt;<sp/>*numFrames<sp/>)</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hmmm<sp/>...<sp/>how<sp/>come<sp/>there<sp/>are<sp/>more<sp/>frames<sp/>available<sp/>than<sp/>we<sp/>requested!?<sp/>Blah.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Common<sp/>available<sp/>frames<sp/>are<sp/>reported<sp/>to<sp/>be<sp/>more<sp/>than<sp/>number<sp/>requested:<sp/>%lu,<sp/>%lu,<sp/>callbackMode:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commonFrames,<sp/>*numFrames,<sp/>self-&gt;callbackMode<sp/>));</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.pcm<sp/>)</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>captureFrames:<sp/>%lu,<sp/>capture.ready:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>captureFrames,<sp/>self-&gt;capture.ready<sp/>));</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;playback.pcm<sp/>)</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>playbackFrames:<sp/>%lu,<sp/>playback.ready:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>playbackFrames,<sp/>self-&gt;playback.ready<sp/>));</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"></highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commonFrames<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"></highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Inform<sp/>PortAudio<sp/>of<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>we<sp/>got.</highlight></codeline>
<codeline lineno="4119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@concern<sp/>FullDuplex<sp/>We<sp/>might<sp/>be<sp/>experiencing<sp/>underflow<sp/>in<sp/>either<sp/>end;<sp/>if<sp/>its<sp/>an<sp/>input<sp/>underflow,<sp/>we<sp/>go<sp/>on</highlight></codeline>
<codeline lineno="4120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>with<sp/>output.<sp/>If<sp/>its<sp/>output<sp/>underflow<sp/>however,<sp/>depending<sp/>on<sp/>the<sp/>paNeverDropInput<sp/>flag,<sp/>we<sp/>may<sp/>want<sp/>to<sp/>simply</highlight></codeline>
<codeline lineno="4121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>discard<sp/>the<sp/>excess<sp/>input<sp/>or<sp/>call<sp/>the<sp/>callback<sp/>with<sp/>paOutputOverflow<sp/>flagged.</highlight></codeline>
<codeline lineno="4122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.pcm<sp/>)</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;capture.ready<sp/>)</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1a0f0a94dec2b29ecb9843deb00a889bea" kindref="member">PaUtil_SetInputFrameCount</ref>(<sp/>&amp;self-&gt;bufferProcessor,<sp/>commonFrames<sp/>);</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>input<sp/>underflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1a3d34489fac9940436629e312524d9f94" kindref="member">PaUtil_SetNoInput</ref>(<sp/>&amp;self-&gt;bufferProcessor<sp/>);</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;playback.pcm<sp/>)</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>self-&gt;playback.ready<sp/>)</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1a1dc65eb1e69dd6739e4dad4d74bf3785" kindref="member">PaUtil_SetOutputFrameCount</ref>(<sp/>&amp;self-&gt;bufferProcessor,<sp/>commonFrames<sp/>);</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>output<sp/>underflow,<sp/>but<sp/>keeping<sp/>input<sp/>data<sp/>(paNeverDropInput)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>self-&gt;neverDropInput<sp/>);</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>self-&gt;capture.pcm<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Setting<sp/>output<sp/>buffers<sp/>to<sp/>NULL\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1ad8300bdb4ebf2aaad4b0bf8813af5695" kindref="member">PaUtil_SetNoOutput</ref>(<sp/>&amp;self-&gt;bufferProcessor<sp/>);</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"></highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/>*numFrames<sp/>=<sp/>commonFrames;</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xrun<sp/>)</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_HandleXrun(<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*numFrames<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/>*xrunOccurred<sp/>=<sp/>xrun;</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"></highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"></highlight></codeline>
<codeline lineno="4172"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*CallbackThreadFunc(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userData<sp/>)</highlight></codeline>
<codeline lineno="4173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*)<sp/>userData;</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref><sp/>timeInfo<sp/>=<sp/>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_sframes_t<sp/>startThreshold<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>callbackResult<sp/>=<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acba49cbf0e3bf605bb3deecef3b4fce3" kindref="member">paContinue</ref>;</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref><sp/>cbFlags<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>might<sp/>want<sp/>to<sp/>keep<sp/>state<sp/>across<sp/>iterations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>streamStarted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"></highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"></highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Execute<sp/>OnExit<sp/>when<sp/>exiting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cleanup_push(<sp/>&amp;<ref refid="_menus_8h_1aedcd0979dd6860e7f1a9ce54ecdd18ba" kindref="member">OnExit</ref>,<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"></highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>implemented<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>!stream-&gt;<ref refid="struct_pa_alsa_stream_1a6977d63a92f8a3e044a8c6f5e1a2cc31" kindref="member">primeBuffers</ref><sp/>);</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"></highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@concern<sp/>StreamStart<sp/>If<sp/>the<sp/>output<sp/>is<sp/>being<sp/>primed<sp/>the<sp/>output<sp/>pcm<sp/>needs<sp/>to<sp/>be<sp/>prepared,<sp/>otherwise<sp/>the</highlight></codeline>
<codeline lineno="4191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>stream<sp/>is<sp/>started<sp/>immediately.<sp/>The<sp/>latter<sp/>involves<sp/>signaling<sp/>the<sp/>waiting<sp/>main<sp/>thread.</highlight></codeline>
<codeline lineno="4192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a6977d63a92f8a3e044a8c6f5e1a2cc31" kindref="member">primeBuffers</ref><sp/>)</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_sframes_t<sp/>avail;</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"></highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_prepare(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>&amp;&amp;<sp/>!stream-&gt;<ref refid="struct_pa_alsa_stream_1a07464a14e43b11c9e5de064ed33fae70" kindref="member">pcmsSynced</ref><sp/>)</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_prepare(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"></highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>can&apos;t<sp/>be<sp/>certain<sp/>that<sp/>the<sp/>whole<sp/>ring<sp/>buffer<sp/>is<sp/>available<sp/>for<sp/>priming,<sp/>but<sp/>there<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="4203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>at<sp/>least<sp/>one<sp/>period<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avail<sp/>=<sp/>alsa_snd_pcm_avail_update(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>);</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startThreshold<sp/>=<sp/>avail<sp/>-<sp/>(avail<sp/>%<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1adf73ee5aacd35d2068cf7b0316d8cec5" kindref="member">framesPerPeriod</ref>);</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>startThreshold<sp/>&gt;=<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1adf73ee5aacd35d2068cf7b0316d8cec5" kindref="member">framesPerPeriod</ref><sp/>);</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="pa__unix__util_8c_1ab4ffae4c3e89df03d105effda5f29434" kindref="member">PaUnixThread_PrepareNotify</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1a78a3ab135792aa210042183dabab28ca" kindref="member">thread</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Buffer<sp/>will<sp/>be<sp/>zeroed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>AlsaStart(<sp/>stream,<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="pa__unix__util_8c_1a75d9c22a1e8e18d99cb532a5cf3da8d0" kindref="member">PaUnixThread_NotifyParent</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1a78a3ab135792aa210042183dabab28ca" kindref="member">thread</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"></highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streamStarted<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"></highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesAvail,<sp/>framesGot;</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xrun<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"></highlight></codeline>
<codeline lineno="4223"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PTHREAD_CANCELED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_testcancel();</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4226"><highlight class="normal"></highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@concern<sp/>StreamStop<sp/>if<sp/>the<sp/>main<sp/>thread<sp/>has<sp/>requested<sp/>a<sp/>stop<sp/>and<sp/>the<sp/>stream<sp/>has<sp/>not<sp/>been<sp/>effectively</highlight></codeline>
<codeline lineno="4228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>stopped<sp/>we<sp/>signal<sp/>this<sp/>condition<sp/>by<sp/>modifying<sp/>callbackResult<sp/>(we&apos;ll<sp/>want<sp/>to<sp/>flush<sp/>buffered<sp/>output).</highlight></codeline>
<codeline lineno="4229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="pa__unix__util_8c_1a80a12f3ba5d557f3b16177737817ae19" kindref="member">PaUnixThread_StopRequested</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1a78a3ab135792aa210042183dabab28ca" kindref="member">thread</ref><sp/>)<sp/>&amp;&amp;<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acba49cbf0e3bf605bb3deecef3b4fce3" kindref="member">paContinue</ref><sp/>==<sp/>callbackResult<sp/>)</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>callbackResult<sp/>to<sp/>paComplete\n&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callbackResult<sp/>=<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32aa01800db52ead393d8b0016f63d76650" kindref="member">paComplete</ref>;</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"></highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acba49cbf0e3bf605bb3deecef3b4fce3" kindref="member">paContinue</ref><sp/>!=<sp/>callbackResult<sp/>)</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ab572de6c0a951967b3a47713427858d3" kindref="member">callbackAbort</ref><sp/>=<sp/>(<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acaf141eb5d71420ffb4474da1dbd8de2" kindref="member">paAbort</ref><sp/>==<sp/>callbackResult<sp/>);</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ab572de6c0a951967b3a47713427858d3" kindref="member">callbackAbort</ref><sp/>||</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1aa718d784f39b7daad2cc4775677c2e84" kindref="member">PaUtil_IsBufferProcessorOutputEmpty</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1acd44698cd6e3508f0d41c877ba5b436a" kindref="member">bufferProcessor</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Flushing<sp/>buffer<sp/>processor\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>is<sp/>still<sp/>buffered<sp/>output<sp/>that<sp/>needs<sp/>to<sp/>be<sp/>processed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"></highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>data<sp/>to<sp/>become<sp/>available,<sp/>this<sp/>comes<sp/>down<sp/>to<sp/>polling<sp/>the<sp/>ALSA<sp/>file<sp/>descriptors<sp/>untill<sp/>we<sp/>have</highlight></codeline>
<codeline lineno="4251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>number<sp/>of<sp/>available<sp/>frames.</highlight></codeline>
<codeline lineno="4252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_WaitForFrames(<sp/>stream,<sp/>&amp;framesAvail,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xrun<sp/>)</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>0<sp/>==<sp/>framesAvail<sp/>);</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"></highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>Report<sp/>xruns<sp/>to<sp/>the<sp/>user?<sp/>A<sp/>situation<sp/>is<sp/>conceivable<sp/>where<sp/>the<sp/>callback<sp/>is<sp/>never<sp/>invoked<sp/>due</highlight></codeline>
<codeline lineno="4260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>constant<sp/>xruns,<sp/>it<sp/>might<sp/>be<sp/>desirable<sp/>to<sp/>notify<sp/>the<sp/>user<sp/>of<sp/>this.</highlight></codeline>
<codeline lineno="4261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Consume<sp/>buffer<sp/>space.<sp/>Once<sp/>we<sp/>have<sp/>a<sp/>number<sp/>of<sp/>frames<sp/>available<sp/>for<sp/>consumption<sp/>we<sp/>must<sp/>retrieve<sp/>the</highlight></codeline>
<codeline lineno="4265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>mmapped<sp/>buffers<sp/>from<sp/>ALSA,<sp/>this<sp/>is<sp/>contiguously<sp/>accessible<sp/>memory<sp/>however,<sp/>so<sp/>we<sp/>may<sp/>receive<sp/>smaller</highlight></codeline>
<codeline lineno="4266"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>portions<sp/>at<sp/>a<sp/>time<sp/>than<sp/>is<sp/>available<sp/>as<sp/>a<sp/>whole.<sp/>Therefore<sp/>we<sp/>should<sp/>be<sp/>prepared<sp/>to<sp/>process<sp/>several</highlight></codeline>
<codeline lineno="4267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>chunks<sp/>successively.<sp/>The<sp/>buffers<sp/>are<sp/>passed<sp/>to<sp/>the<sp/>PA<sp/>buffer<sp/>processor.</highlight></codeline>
<codeline lineno="4268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>framesAvail<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xrun<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PTHREAD_CANCELED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_testcancel();</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4276"><highlight class="normal"></highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a1158444fe763d7def459e7e7d99bedb1" kindref="member">underrun</ref><sp/>&gt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbFlags<sp/>|=<sp/><ref refid="portaudio_8h_1aa17c91c859b12ebbf53a1440def53c89" kindref="member">paOutputUnderflow</ref>;</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a1158444fe763d7def459e7e7d99bedb1" kindref="member">underrun</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a3a8accd426fdfb836f6e692648ced93e" kindref="member">overrun</ref><sp/>&gt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbFlags<sp/>|=<sp/><ref refid="portaudio_8h_1aea144f0edaf02d0ac8b113f41fb95c47" kindref="member">paInputOverflow</ref>;</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a3a8accd426fdfb836f6e692648ced93e" kindref="member">overrun</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>&amp;&amp;<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1af0dc1dc7181a8e310995efd0c4f1d44c" kindref="member">ready</ref><sp/>)</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbFlags<sp/>|=<sp/><ref refid="portaudio_8h_1a57d1879f52406bdedfdda8f79f458e15" kindref="member">paInputUnderflow</ref>;</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Input<sp/>underflow\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1af0dc1dc7181a8e310995efd0c4f1d44c" kindref="member">ready</ref><sp/>)</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbFlags<sp/>|=<sp/><ref refid="portaudio_8h_1ac22bb260d47b348bd3aab8813fd45462" kindref="member">paOutputOverflow</ref>;</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Output<sp/>overflow\n&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__<sp/>));</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"></highlight></codeline>
<codeline lineno="4304"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallbackUpdate(<sp/>&amp;stream-&gt;threading<sp/>);</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CalculateTimeInfo(<sp/>stream,<sp/>&amp;timeInfo<sp/>);</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1a1388263b1c5b765797abe767af6dbe80" kindref="member">PaUtil_BeginBufferProcessing</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1acd44698cd6e3508f0d41c877ba5b436a" kindref="member">bufferProcessor</ref>,<sp/>&amp;timeInfo,<sp/>cbFlags<sp/>);</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"></highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CPU<sp/>load<sp/>measurement<sp/>should<sp/>include<sp/>processing<sp/>activivity<sp/>external<sp/>to<sp/>the<sp/>stream<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__cpuload_8c_1a83fdceefb7dff41725ba4f1f13a80f79" kindref="member">PaUtil_BeginCpuLoadMeasurement</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1a29f7550cda202836040ec8d6dd0d6aea" kindref="member">cpuLoadMeasurer</ref><sp/>);</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"></highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesGot<sp/>=<sp/>framesAvail;</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa5e79e1ea4d8f114cfe83caa9b08610d8" kindref="member">paUtilFixedHostBufferSize</ref><sp/>==<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1acd44698cd6e3508f0d41c877ba5b436a" kindref="member">bufferProcessor</ref>.<ref refid="struct_pa_util_buffer_processor_1a71c934464b2671889ec3e20192e6e8d9" kindref="member">hostBufferSizeMode</ref><sp/>)</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;ve<sp/>committed<sp/>to<sp/>a<sp/>fixed<sp/>host<sp/>buffer<sp/>size,<sp/>stick<sp/>to<sp/>that<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesGot<sp/>=<sp/>framesGot<sp/>&gt;=<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a975c6b88b478a9408d81e84de435369f" kindref="member">maxFramesPerHostBuffer</ref><sp/>?<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a975c6b88b478a9408d81e84de435369f" kindref="member">maxFramesPerHostBuffer</ref><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;ve<sp/>committed<sp/>to<sp/>an<sp/>upper<sp/>bound<sp/>on<sp/>the<sp/>size<sp/>of<sp/>host<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa2e97156fbdf5444b7bcc53b60f368d8b" kindref="member">paUtilBoundedHostBufferSize</ref><sp/>==<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1acd44698cd6e3508f0d41c877ba5b436a" kindref="member">bufferProcessor</ref>.<ref refid="struct_pa_util_buffer_processor_1a71c934464b2671889ec3e20192e6e8d9" kindref="member">hostBufferSizeMode</ref><sp/>);</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesGot<sp/>=<sp/><ref refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" kindref="member">PA_MIN</ref>(<sp/>framesGot,<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a975c6b88b478a9408d81e84de435369f" kindref="member">maxFramesPerHostBuffer</ref><sp/>);</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_SetUpBuffers(<sp/>stream,<sp/>&amp;framesGot,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>host<sp/>buffer<sp/>size<sp/>against<sp/>the<sp/>buffer<sp/>processor<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesAvail<sp/>-=<sp/>framesGot;</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"></highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesGot<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>!xrun<sp/>);</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1a2bce3edf65753593f4f4005e917ad9e4" kindref="member">PaUtil_EndBufferProcessing</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1acd44698cd6e3508f0d41c877ba5b436a" kindref="member">bufferProcessor</ref>,<sp/>&amp;callbackResult<sp/>);</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_EndProcessing(<sp/>stream,<sp/>framesGot,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__cpuload_8c_1a8c29cc1cf3b6fd9bf18a2c3fc9f0ef2a" kindref="member">PaUtil_EndCpuLoadMeasurement</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1a29f7550cda202836040ec8d6dd0d6aea" kindref="member">cpuLoadMeasurer</ref>,<sp/>framesGot<sp/>);</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"></highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>0<sp/>==<sp/>framesGot<sp/>)</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Go<sp/>back<sp/>to<sp/>polling<sp/>for<sp/>more<sp/>frames<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"></highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"></highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acba49cbf0e3bf605bb3deecef3b4fce3" kindref="member">paContinue</ref><sp/>!=<sp/>callbackResult<sp/>)</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"></highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">/*<sp/>Hack<sp/>to<sp/>fix<sp/>&quot;label<sp/>at<sp/>end<sp/>of<sp/>compound<sp/>statement&quot;<sp/>error<sp/>caused<sp/>by<sp/>pthread_cleanup_pop(1)<sp/>macro.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Match<sp/>pthread_cleanup_push<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cleanup_pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"></highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Thread<sp/>%d<sp/>exiting\n<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>pthread_self()<sp/>));</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a055995dcdc8dc582299a32f56500f0e1" kindref="member">PaUnixThreading_EXIT</ref>(<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"></highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Thread<sp/>%d<sp/>is<sp/>canceled<sp/>due<sp/>to<sp/>error<sp/>%d\n<sp/>&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>pthread_self(),<sp/>result<sp/>));</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="4361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"></highlight></codeline>
<codeline lineno="4363"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Blocking<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4364"><highlight class="normal"></highlight></codeline>
<codeline lineno="4365"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>ReadStream(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/>s,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frames<sp/>)</highlight></codeline>
<codeline lineno="4366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*)s;</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesGot,<sp/>framesAvail;</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userBuffer;</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_t<sp/>*save<sp/>=<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref>;</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"></highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"></highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref>,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a4a708b0414ebca1a78f9084671bd0a0c" kindref="member">paCanNotReadFromAnOutputOnlyStream</ref><sp/>);</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"></highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disregard<sp/>playback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"></highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a3a8accd426fdfb836f6e692648ced93e" kindref="member">overrun</ref><sp/>&gt;<sp/>0.<sp/>)</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a25d517e59ea2e846119d972d5f1c53bb" kindref="member">paInputOverflowed</ref>;</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a3a8accd426fdfb836f6e692648ced93e" kindref="member">overrun</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"></highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1aae34cf96e56f05ce576baa7df06d5045" kindref="member">userInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userBuffer<sp/>=<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>channels<sp/>into<sp/>local<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userBuffer<sp/>=<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a0c248f3409a0a73fbd641e1be0d71277" kindref="member">userBuffers</ref>;</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>userBuffer,<sp/>buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>*<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a0e902bdf00aa3f7e9adc258c434ee99c" kindref="member">numUserChannels</ref><sp/>);</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"></highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>stream<sp/>if<sp/>in<sp/>prepared<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_state(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)<sp/>==<sp/>SND_PCM_STATE_PREPARED<sp/>)</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_start(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"></highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>frames<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xrun<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_WaitForFrames(<sp/>stream,<sp/>&amp;framesAvail,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesGot<sp/>=<sp/><ref refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" kindref="member">PA_MIN</ref>(<sp/>framesAvail,<sp/>frames<sp/>);</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"></highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_SetUpBuffers(<sp/>stream,<sp/>&amp;framesGot,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesGot<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesGot<sp/>=<sp/><ref refid="pa__process_8c_1ad0eca03235f47de0591865f8097df4d0" kindref="member">PaUtil_CopyInput</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1acd44698cd6e3508f0d41c877ba5b436a" kindref="member">bufferProcessor</ref>,<sp/>&amp;userBuffer,<sp/>framesGot<sp/>);</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_EndProcessing(<sp/>stream,<sp/>framesGot,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frames<sp/>-=<sp/>framesGot;</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"></highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>=<sp/>save;</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="4423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"></highlight></codeline>
<codeline lineno="4425"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>WriteStream(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frames<sp/>)</highlight></codeline>
<codeline lineno="4426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*)s;</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/>framesGot,<sp/>framesAvail;</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userBuffer;</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_t<sp/>*save<sp/>=<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref>;</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"></highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"></highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref>,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7af718bcda33019db4a3b9ec6bdefc6e9d" kindref="member">paCanNotWriteToAnInputOnlyStream</ref><sp/>);</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"></highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disregard<sp/>capture<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"></highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a1158444fe763d7def459e7e7d99bedb1" kindref="member">underrun</ref><sp/>&gt;<sp/>0.<sp/>)</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a77657d34c5e91a2962e7df7730441eee" kindref="member">paOutputUnderflowed</ref>;</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a1158444fe763d7def459e7e7d99bedb1" kindref="member">underrun</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"></highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1aae34cf96e56f05ce576baa7df06d5045" kindref="member">userInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userBuffer<sp/>=<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>channels<sp/>into<sp/>local<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userBuffer<sp/>=<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a0c248f3409a0a73fbd641e1be0d71277" kindref="member">userBuffers</ref>;</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)userBuffer,<sp/>buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>*<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a0e902bdf00aa3f7e9adc258c434ee99c" kindref="member">numUserChannels</ref><sp/>);</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"></highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>frames<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xrun<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_uframes_t<sp/>hwAvail;</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"></highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_WaitForFrames(<sp/>stream,<sp/>&amp;framesAvail,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesGot<sp/>=<sp/><ref refid="pa__unix__util_8h_1aea604351950df064043e9512ef7a222f" kindref="member">PA_MIN</ref>(<sp/>framesAvail,<sp/>frames<sp/>);</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"></highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_SetUpBuffers(<sp/>stream,<sp/>&amp;framesGot,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesGot<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesGot<sp/>=<sp/><ref refid="pa__process_8c_1a61859778b9d4997a6be1de038136fcf4" kindref="member">PaUtil_CopyOutput</ref>(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1acd44698cd6e3508f0d41c877ba5b436a" kindref="member">bufferProcessor</ref>,<sp/>&amp;userBuffer,<sp/>framesGot<sp/>);</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_EndProcessing(<sp/>stream,<sp/>framesGot,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frames<sp/>-=<sp/>framesGot;</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"></highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>stream<sp/>after<sp/>one<sp/>period<sp/>of<sp/>samples<sp/>worth<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4472"><highlight class="normal"></highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Frames<sp/>residing<sp/>in<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>err<sp/>=<sp/>GetStreamWriteAvailable(<sp/>stream<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesAvail<sp/>=<sp/>err;</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwAvail<sp/>=<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a0334d25b231900ea7d291dd7b7149dbb" kindref="member">alsaBufferSize</ref><sp/>-<sp/>framesAvail;</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"></highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>alsa_snd_pcm_state(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>)<sp/>==<sp/>SND_PCM_STATE_PREPARED<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwAvail<sp/>&gt;=<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1adf73ee5aacd35d2068cf7b0316d8cec5" kindref="member">framesPerPeriod</ref><sp/>)</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>alsa_snd_pcm_start(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>),<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"></highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>:</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>=<sp/>save;</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="4490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"></highlight></codeline>
<codeline lineno="4492"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>frames<sp/>available<sp/>for<sp/>reading.<sp/>In<sp/>the<sp/>event<sp/>of<sp/>an<sp/>overflow,<sp/>the<sp/>capture<sp/>pcm<sp/>will<sp/>be<sp/>restarted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4493"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>GetStreamReadAvailable(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/>s<sp/>)</highlight></codeline>
<codeline lineno="4494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*)s;</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>avail;</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xrun;</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"></highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_GetAvailableFrames(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>,<sp/>&amp;avail,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xrun<sp/>)</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_HandleXrun(<sp/>stream<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_GetAvailableFrames(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>,<sp/>&amp;avail,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xrun<sp/>)</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a25d517e59ea2e846119d972d5f1c53bb" kindref="member">paInputOverflowed</ref><sp/>);</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"></highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)avail;</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"></highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"></highlight></codeline>
<codeline lineno="4515"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>GetStreamWriteAvailable(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/>s<sp/>)</highlight></codeline>
<codeline lineno="4516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*)s;</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>avail;</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xrun;</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"></highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStreamComponent_GetAvailableFrames(<sp/>&amp;stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>,<sp/>&amp;avail,<sp/>&amp;xrun<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xrun<sp/>)</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_pcm_sframes_t<sp/>savail;</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"></highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>PaAlsaStream_HandleXrun(<sp/>stream<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savail<sp/>=<sp/>alsa_snd_pcm_avail_update(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref><sp/>);</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"></highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>savail<sp/>should<sp/>not<sp/>contain<sp/>-EPIPE<sp/>now,<sp/>since<sp/>PaAlsaStream_HandleXrun<sp/>will<sp/>only<sp/>prepare<sp/>the<sp/>pcm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__linux__alsa_8c_1af6598be0b460d5228f0c6f386d9bf306" kindref="member">ENSURE_</ref>(<sp/>savail,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>);</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"></highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avail<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)<sp/>savail;</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"></highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)avail;</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"></highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"></highlight></codeline>
<codeline lineno="4542"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Extensions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4543"><highlight class="normal"></highlight></codeline>
<codeline lineno="4544" refid="pa__linux__alsa_8c_1ac33a394742540a3b6666d77698a72e82" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__linux__alsa_8c_1ac33a394742540a3b6666d77698a72e82" kindref="member">PaAlsa_InitializeStreamInfo</ref>(<sp/><ref refid="struct_pa_alsa_stream_info" kindref="compound">PaAlsaStreamInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>)</highlight></codeline>
<codeline lineno="4545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;<ref refid="struct_pa_alsa_stream_info_1aef7d7bcb7ebeb75d78496cc4821bbb85" kindref="member">size</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="pa__linux__alsa_8h_1a8d6a70937ff5ede403e3bdefadb6485d" kindref="member">PaAlsaStreamInfo</ref>);</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;<ref refid="struct_pa_alsa_stream_info_1a57cc8d7a4f599b88c1d05e974f3d3db8" kindref="member">hostApiType</ref><sp/>=<sp/><ref refid="portaudio_8h_1a8eaebe3d39c5ea45598da8f86dc2e5aea5fb23d8b2cf3e2e714298de5ab1b83e1" kindref="member">paALSA</ref>;</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;<ref refid="struct_pa_alsa_stream_info_1afb13c4ff1d97547735d7b19c1006b65c" kindref="member">version</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;<ref refid="struct_pa_alsa_stream_info_1a442fbbb635cda0cece4e7af397d453f9" kindref="member">deviceString</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"></highlight></codeline>
<codeline lineno="4552" refid="pa__linux__alsa_8c_1accc41e7fd89dc0a6163d54a4f25fb242" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__linux__alsa_8c_1accc41e7fd89dc0a6163d54a4f25fb242" kindref="member">PaAlsa_EnableRealtimeScheduling</ref>(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enable<sp/>)</highlight></codeline>
<codeline lineno="4553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*)<sp/>s;</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a950d643d1442448a51072e83debc40be" kindref="member">rtSched</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="4556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"></highlight></codeline>
<codeline lineno="4558"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4559"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PaAlsa_EnableWatchdog(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enable<sp/>)</highlight></codeline>
<codeline lineno="4560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*)<sp/>s;</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a78a3ab135792aa210042183dabab28ca" kindref="member">thread</ref>.useWatchdog<sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="4563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4565"><highlight class="normal"></highlight></codeline>
<codeline lineno="4566"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>GetAlsaStreamPointer(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/>s,<sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>**<sp/>stream<sp/>)</highlight></codeline>
<codeline lineno="4567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_host_api_representation" kindref="compound">PaUtilHostApiRepresentation</ref>*<sp/>hostApi;</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref>*<sp/>alsaHostApi;</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"></highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="pa__front_8c_1a6958b8b8dd9875d1fbe143ed1a9c939a" kindref="member">PaUtil_ValidateStreamPointer</ref>(<sp/>s<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/><ref refid="pa__front_8c_1a41956cda7a9cc69dd178425551a44cbe" kindref="member">PaUtil_GetHostApiRepresentation</ref>(<sp/>&amp;hostApi,<sp/><ref refid="portaudio_8h_1a8eaebe3d39c5ea45598da8f86dc2e5aea5fb23d8b2cf3e2e714298de5ab1b83e1" kindref="member">paALSA</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/>alsaHostApi<sp/>=<sp/>(<ref refid="struct_pa_alsa_host_api_representation" kindref="compound">PaAlsaHostApiRepresentation</ref>*)hostApi;</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"></highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/><ref refid="pa__stream_8h_1ab8cd87e28ea91aa529605bc0064d1f00" kindref="member">PA_STREAM_REP</ref>(<sp/>s<sp/>)-&gt;streamInterface<sp/>==<sp/>&amp;alsaHostApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1a7460a29aab991224df3e958f068ad1cd" kindref="member">callbackStreamInterface</ref></highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="pa__stream_8h_1ab8cd87e28ea91aa529605bc0064d1f00" kindref="member">PA_STREAM_REP</ref>(<sp/>s<sp/>)-&gt;streamInterface<sp/>==<sp/>&amp;alsaHostApi-&gt;<ref refid="struct_pa_alsa_host_api_representation_1ad6a68540d8914bef7af546594c701634" kindref="member">blockingStreamInterface</ref>,</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a82f2e0e1c05189caf15b5f6c016edac6" kindref="member">paIncompatibleStreamHostApi</ref><sp/>);</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"></highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/>*stream<sp/>=<sp/>(<ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref>*)s;</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="4583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"></highlight></codeline>
<codeline lineno="4585" refid="pa__linux__alsa_8c_1ac31edeb99ef568fc89418d77bd4ca624" refkind="member"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__linux__alsa_8c_1ac31edeb99ef568fc89418d77bd4ca624" kindref="member">PaAlsa_GetStreamInputCard</ref>(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>card<sp/>)</highlight></codeline>
<codeline lineno="4586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream;</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_info_t*<sp/>pcmInfo;</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"></highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>GetAlsaStreamPointer(<sp/>s,<sp/>&amp;stream<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"></highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>More<sp/>descriptive<sp/>error?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref>,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a467dac712e45745d8b0d8cd429fd1a01" kindref="member">paDeviceUnavailable</ref><sp/>);</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"></highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/>*card<sp/>=<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1aaa548d6dfb327ddcc6f1b2b5d9a9be18" kindref="member">card</ref>;</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"></highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"></highlight></codeline>
<codeline lineno="4602" refid="pa__linux__alsa_8c_1a04d7cd7252120eadf0ab3141ba5a7d93" refkind="member"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__linux__alsa_8c_1a04d7cd7252120eadf0ab3141ba5a7d93" kindref="member">PaAlsa_GetStreamOutputCard</ref>(<sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref>*<sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>card<sp/>)</highlight></codeline>
<codeline lineno="4603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_alsa_stream" kindref="compound">PaAlsaStream</ref><sp/>*stream;</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_pcm_info_t*<sp/>pcmInfo;</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"></highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1a2b87696eb7e08bcdbf3abc631780fa74" kindref="member">PA_ENSURE</ref>(<sp/>GetAlsaStreamPointer(<sp/>s,<sp/>&amp;stream<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"></highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>More<sp/>descriptive<sp/>error?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__unix__util_8h_1adaa396943350072fdd811837f9bead54" kindref="member">PA_UNLESS</ref>(<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1a82ea139e41016b139932dbf649c30741" kindref="member">playback</ref>.<ref refid="struct_pa_alsa_stream_component_1a64644ed14e011db9e821182698acd969" kindref="member">pcm</ref>,<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a467dac712e45745d8b0d8cd429fd1a01" kindref="member">paDeviceUnavailable</ref><sp/>);</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"></highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/>*card<sp/>=<sp/>stream-&gt;<ref refid="struct_pa_alsa_stream_1ad8d739f23295022c802125ef47c142cd" kindref="member">capture</ref>.<ref refid="struct_pa_alsa_stream_component_1aaa548d6dfb327ddcc6f1b2b5d9a9be18" kindref="member">card</ref>;</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"></highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"></highlight></codeline>
<codeline lineno="4619" refid="pa__linux__alsa_8c_1a2992cf7c30de5aaea222ec762fc56ad1" refkind="member"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__linux__alsa_8c_1a2992cf7c30de5aaea222ec762fc56ad1" kindref="member">PaAlsa_SetRetriesBusy</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retries<sp/>)</highlight></codeline>
<codeline lineno="4620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/>busyRetries_<sp/>=<sp/>retries;</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="4623"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c"/>
  </compounddef>
</doxygen>
