<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sratom_8h" kind="file" language="C++">
    <compoundname>sratom.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes refid="urid_8h" local="yes">lv2/lv2plug.in/ns/ext/urid/urid.h</includes>
    <includes refid="atom_8h" local="yes">lv2/lv2plug.in/ns/ext/atom/atom.h</includes>
    <includes refid="forge_8h" local="yes">lv2/lv2plug.in/ns/ext/atom/forge.h</includes>
    <includes refid="serd_8h" local="yes">serd/serd.h</includes>
    <includes refid="sord_8h" local="yes">sord/sord.h</includes>
    <includedby refid="state_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/state.c</includedby>
    <includedby refid="sratom_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c</includedby>
    <includedby refid="sratom__test_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c</includedby>
    <incdepgraph>
      <node id="27405">
        <label>stdbool.h</label>
      </node>
      <node id="27403">
        <label>stdarg.h</label>
      </node>
      <node id="27400">
        <label>lv2/lv2plug.in/ns/ext/atom/forge.h</label>
        <link refid="forge_8h"/>
        <childnode refid="27401" relation="include">
        </childnode>
        <childnode refid="27398" relation="include">
        </childnode>
        <childnode refid="27402" relation="include">
        </childnode>
        <childnode refid="27397" relation="include">
        </childnode>
        <childnode refid="27405" relation="include">
        </childnode>
      </node>
      <node id="27396">
        <label>stdint.h</label>
      </node>
      <node id="27395">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h</label>
        <link refid="sratom.h"/>
        <childnode refid="27396" relation="include">
        </childnode>
        <childnode refid="27397" relation="include">
        </childnode>
        <childnode refid="27398" relation="include">
        </childnode>
        <childnode refid="27400" relation="include">
        </childnode>
        <childnode refid="27406" relation="include">
        </childnode>
        <childnode refid="27408" relation="include">
        </childnode>
      </node>
      <node id="27406">
        <label>serd/serd.h</label>
        <link refid="serd_8h"/>
        <childnode refid="27403" relation="include">
        </childnode>
        <childnode refid="27399" relation="include">
        </childnode>
        <childnode refid="27396" relation="include">
        </childnode>
        <childnode refid="27407" relation="include">
        </childnode>
        <childnode refid="27405" relation="include">
        </childnode>
      </node>
      <node id="27399">
        <label>stddef.h</label>
      </node>
      <node id="27401">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="27408">
        <label>sord/sord.h</label>
        <link refid="sord_8h"/>
        <childnode refid="27399" relation="include">
        </childnode>
        <childnode refid="27396" relation="include">
        </childnode>
        <childnode refid="27407" relation="include">
        </childnode>
        <childnode refid="27406" relation="include">
        </childnode>
        <childnode refid="27405" relation="include">
        </childnode>
      </node>
      <node id="27397">
        <label>lv2/lv2plug.in/ns/ext/urid/urid.h</label>
        <link refid="urid_8h"/>
        <childnode refid="27396" relation="include">
        </childnode>
      </node>
      <node id="27404">
        <label>string.h</label>
      </node>
      <node id="27402">
        <label>lv2/lv2plug.in/ns/ext/atom/util.h</label>
        <link refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2atom_2util_8h"/>
        <childnode refid="27403" relation="include">
        </childnode>
        <childnode refid="27396" relation="include">
        </childnode>
        <childnode refid="27404" relation="include">
        </childnode>
        <childnode refid="27398" relation="include">
        </childnode>
        <childnode refid="27405" relation="include">
        </childnode>
      </node>
      <node id="27398">
        <label>lv2/lv2plug.in/ns/ext/atom/atom.h</label>
        <link refid="atom_8h"/>
        <childnode refid="27396" relation="include">
        </childnode>
        <childnode refid="27399" relation="include">
        </childnode>
      </node>
      <node id="27407">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="27411">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c</label>
        <link refid="sratom_8c"/>
      </node>
      <node id="27409">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h</label>
        <link refid="sratom.h"/>
        <childnode refid="27410" relation="include">
        </childnode>
        <childnode refid="27411" relation="include">
        </childnode>
        <childnode refid="27412" relation="include">
        </childnode>
      </node>
      <node id="27412">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c</label>
        <link refid="sratom__test_8c"/>
      </node>
      <node id="27410">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/state.c</label>
        <link refid="state_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" prot="public" static="no">
        <name>SRATOM_API</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="46" column="14" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__sratom_1gaf476c91b166a55d78e4aa7fc2213182f" prot="public" static="no">
        <name>SratomObjectMode</name>
        <enumvalue id="group__sratom_1ggaf476c91b166a55d78e4aa7fc2213182fa7f47b603d2cd7da31469a0dce3828739" prot="public">
          <name>SRATOM_OBJECT_MODE_BLANK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Read blank nodes as Objects, and named resources as <ref refid="struct_u_r_is" kindref="compound">URIs</ref>. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sratom_1ggaf476c91b166a55d78e4aa7fc2213182fa50e9f133f13abf4063480d1f546b854c" prot="public">
          <name>SRATOM_OBJECT_MODE_BLANK_SUBJECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Read blank nodes and the main subject as Objects, and any other named resources as <ref refid="struct_u_r_is" kindref="compound">URIs</ref>. The &quot;main subject&quot; is the subject parameter passed to <ref refid="group__sratom_1gafe78e0e2f6ce3c69b90ae4af7d153f68" kindref="member">sratom_read()</ref>; if this is a resource it will be read as an Object, but all other named resources encountered will be read as <ref refid="struct_u_r_is" kindref="compound">URIs</ref>. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mode for reading resources to LV2 Objects.</para><para>This affects how resources (which are either blank nodes or have <ref refid="struct_u_r_is" kindref="compound">URIs</ref>) are read by <ref refid="group__sratom_1gafe78e0e2f6ce3c69b90ae4af7d153f68" kindref="member">sratom_read()</ref>, since they may be read as simple references (a URI or blank node ID) or a complete description (an atom &quot;Object&quot;).</para><para>Currently, blank nodes are always read as Objects, but support for reading blank node IDs may be added in the future. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" bodystart="74" bodyend="87"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" prot="public" static="no">
        <type>struct <ref refid="struct_sratom_impl" kindref="compound">SratomImpl</ref></type>
        <definition>typedef struct SratomImpl Sratom</definition>
        <argsstring></argsstring>
        <name>Sratom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Atom serialiser. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="137" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__sratom_1ga6ca41eacfb303961a39e4b8c18f728df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
        <definition>SRATOM_API Sratom* sratom_new</definition>
        <argsstring>(LV2_URID_Map *map)</argsstring>
        <name>sratom_new</name>
        <param>
          <type><ref refid="urid_8h_1afefb42cd271f750506a8739f73c098c5" kindref="member">LV2_URID_Map</ref> *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new Atom serialiser. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="94" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="75" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1ga4d805918e1d89ce8cc30005c3d6a08e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SRATOM_API void sratom_free</definition>
        <argsstring>(Sratom *sratom)</argsstring>
        <name>sratom_free</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free an Atom serialisation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="101" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1ga657cee72c5d1916da976c108bef687c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SRATOM_API void sratom_set_sink</definition>
        <argsstring>(Sratom *sratom, const char *base_uri, SerdStatementSink sink, SerdEndSink end_sink, void *handle)</argsstring>
        <name>sratom_set_sink</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>base_uri</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga9cd6dc709f738ed9770d0d2cd1195bd4" kindref="member">SerdStatementSink</ref></type>
          <declname>sink</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gae67888543462e4127e6a4f6af047026b" kindref="member">SerdEndSink</ref></type>
          <declname>end_sink</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the sink(s) where sratom will write its output.</para><para>This must be called before calling <ref refid="group__sratom_1ga2c8efd0cc16686de0cabc19ca3f0effc" kindref="member">sratom_write()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="110" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="100" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1ga0d93ebb102d9d1e033ed826c5119d2ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SRATOM_API void sratom_set_pretty_numbers</definition>
        <argsstring>(Sratom *sratom, bool pretty_numbers)</argsstring>
        <name>sratom_set_pretty_numbers</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>pretty_numbers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write pretty numeric literals.</para><para>If <computeroutput>pretty_numbers</computeroutput> is true, numbers will be written as pretty Turtle literals, rather than string literals with precise types. The cost of this is that the types might get fudged on a round-trip to RDF and back. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="125" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="118" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1gad4f459e8c541f9bf303e105aea323198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SRATOM_API void sratom_set_object_mode</definition>
        <argsstring>(Sratom *sratom, SratomObjectMode object_mode)</argsstring>
        <name>sratom_set_object_mode</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <param>
          <type><ref refid="group__sratom_1gaf476c91b166a55d78e4aa7fc2213182f" kindref="member">SratomObjectMode</ref></type>
          <declname>object_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure how resources will be read to form LV2 Objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="133" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="126" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1ga2c8efd0cc16686de0cabc19ca3f0effc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>SRATOM_API int sratom_write</definition>
        <argsstring>(Sratom *sratom, LV2_URID_Unmap *unmap, uint32_t flags, const SerdNode *subject, const SerdNode *predicate, uint32_t type, uint32_t size, const void *body)</argsstring>
        <name>sratom_write</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <param>
          <type><ref refid="urid_8h_1a23cd7da781ba055d6a1362a320c1d451" kindref="member">LV2_URID_Unmap</ref> *</type>
          <declname>unmap</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write an Atom to RDF. The serialised atom is written to the sink set by <ref refid="group__sratom_1ga657cee72c5d1916da976c108bef687c7" kindref="member">sratom_set_sink()</ref>. <simplesect kind="return"><para>0 on success, or a non-zero error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="143" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="213" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1gafe78e0e2f6ce3c69b90ae4af7d153f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SRATOM_API void sratom_read</definition>
        <argsstring>(Sratom *sratom, LV2_Atom_Forge *forge, SordWorld *world, SordModel *model, const SordNode *subject)</argsstring>
        <name>sratom_read</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <param>
          <type><ref refid="struct_l_v2___atom___forge" kindref="compound">LV2_Atom_Forge</ref> *</type>
          <declname>forge</declname>
        </param>
        <param>
          <type><ref refid="group__sord_1ga133d918ec58f829198b2cf65f250ed69" kindref="member">SordWorld</ref> *</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="group__sord_1gaea018cfebfedd10280b1d8dd6d650a28" kindref="member">SordModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>subject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read an Atom from RDF. The resulting atom will be written to <computeroutput>forge</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="158" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="705" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1ga65fa0a468f17b55de2169012fef8d7f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> char *</type>
        <definition>SRATOM_API char* sratom_to_turtle</definition>
        <argsstring>(Sratom *sratom, LV2_URID_Unmap *unmap, const char *base_uri, const SerdNode *subject, const SerdNode *predicate, uint32_t type, uint32_t size, const void *body)</argsstring>
        <name>sratom_to_turtle</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <param>
          <type><ref refid="urid_8h_1a23cd7da781ba055d6a1362a320c1d451" kindref="member">LV2_URID_Unmap</ref> *</type>
          <declname>unmap</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>base_uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serialise an Atom to a Turtle string. The returned string must be free()&apos;d by the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="170" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="448" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1gabb8be4254715e569531159e21cf27c17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="struct_l_v2___atom" kindref="compound">LV2_Atom</ref> *</type>
        <definition>SRATOM_API LV2_Atom* sratom_from_turtle</definition>
        <argsstring>(Sratom *sratom, const char *base_uri, const SerdNode *subject, const SerdNode *predicate, const char *str)</argsstring>
        <name>sratom_from_turtle</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>base_uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read an Atom from a Turtle string. The returned atom must be free()&apos;d by the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="185" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="754" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1ga81b7aa6812793fd2f905432ac90eb27b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="forge_8h_1a272218ba2d84c66ec458cf7069933ea9" kindref="member">LV2_Atom_Forge_Ref</ref></type>
        <definition>SRATOM_API LV2_Atom_Forge_Ref sratom_forge_sink</definition>
        <argsstring>(LV2_Atom_Forge_Sink_Handle handle, const void *buf, uint32_t size)</argsstring>
        <name>sratom_forge_sink</name>
        <param>
          <type><ref refid="forge_8h_1a19874fcf063508aa5069ee22fd494676" kindref="member">LV2_Atom_Forge_Sink_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A convenient resizing sink for <ref refid="struct_l_v2___atom___forge" kindref="compound">LV2_Atom_Forge</ref>. The handle must point to an initialized <ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="197" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="734" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1gaf2e397c53d1ca4eed848986d733d300b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="struct_l_v2___atom" kindref="compound">LV2_Atom</ref> *</type>
        <definition>SRATOM_API LV2_Atom* sratom_forge_deref</definition>
        <argsstring>(LV2_Atom_Forge_Sink_Handle handle, LV2_Atom_Forge_Ref ref)</argsstring>
        <name>sratom_forge_deref</name>
        <param>
          <type><ref refid="forge_8h_1a19874fcf063508aa5069ee22fd494676" kindref="member">LV2_Atom_Forge_Sink_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="forge_8h_1a272218ba2d84c66ec458cf7069933ea9" kindref="member">LV2_Atom_Forge_Ref</ref></type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The corresponding deref function for sratom_forge_sink. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="206" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="746" bodyend="750"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>API for Sratom, an LV2 Atom RDF serialisation library. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2012<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor">#ifndef<sp/>SRATOM_SRATOM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SRATOM_SRATOM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="urid_8h" kindref="compound">lv2/lv2plug.in/ns/ext/urid/urid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="atom_8h" kindref="compound">lv2/lv2plug.in/ns/ext/atom/atom.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="forge_8h" kindref="compound">lv2/lv2plug.in/ns/ext/atom/forge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serd_8h" kindref="compound">serd/serd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sord_8h" kindref="compound">sord/sord.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SRATOM_SHARED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>SRATOM_LIB_IMPORT<sp/>__declspec(dllimport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>SRATOM_LIB_EXPORT<sp/>__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>SRATOM_LIB_IMPORT<sp/>__attribute__((visibility(&quot;default&quot;)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>SRATOM_LIB_EXPORT<sp/>__attribute__((visibility(&quot;default&quot;)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifdef<sp/>SRATOM_INTERNAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>SRATOM_API<sp/>SRATOM_LIB_EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>SRATOM_API<sp/>SRATOM_LIB_IMPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SRATOM_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sratom_impl" kindref="compound">SratomImpl</ref><sp/><ref refid="struct_sratom_impl" kindref="compound">Sratom</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="group__sratom_1gaf476c91b166a55d78e4aa7fc2213182f" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78" refid="group__sratom_1ggaf476c91b166a55d78e4aa7fc2213182fa7f47b603d2cd7da31469a0dce3828739" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sratom_1ggaf476c91b166a55d78e4aa7fc2213182fa7f47b603d2cd7da31469a0dce3828739" kindref="member">SRATOM_OBJECT_MODE_BLANK</ref>,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="group__sratom_1ggaf476c91b166a55d78e4aa7fc2213182fa50e9f133f13abf4063480d1f546b854c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sratom_1ggaf476c91b166a55d78e4aa7fc2213182fa50e9f133f13abf4063480d1f546b854c" kindref="member">SRATOM_OBJECT_MODE_BLANK_SUBJECT</ref>,</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}<sp/><ref refid="group__sratom_1gaf476c91b166a55d78e4aa7fc2213182f" kindref="member">SratomObjectMode</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="struct_sratom_impl" kindref="compound">Sratom</ref>*</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><ref refid="group__sratom_1ga6ca41eacfb303961a39e4b8c18f728df" kindref="member">sratom_new</ref>(<ref refid="struct___l_v2___u_r_i_d___map" kindref="compound">LV2_URID_Map</ref>*<sp/><ref refid="structmap" kindref="compound">map</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="group__sratom_1ga4d805918e1d89ce8cc30005c3d6a08e5" kindref="member">sratom_free</ref>(<ref refid="struct_sratom_impl" kindref="compound">Sratom</ref>*<sp/>sratom);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="group__sratom_1ga657cee72c5d1916da976c108bef687c7" kindref="member">sratom_set_sink</ref>(<ref refid="struct_sratom_impl" kindref="compound">Sratom</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sratom,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sratom_impl_1a559728865a5c92b3ce3cf1c1139ab2f6" kindref="member">base_uri</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga9cd6dc709f738ed9770d0d2cd1195bd4" kindref="member">SerdStatementSink</ref><sp/>sink,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1gae67888543462e4127e6a4f6af047026b" kindref="member">SerdEndSink</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_sink,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sratom_impl_1ae086890e70ea8b6c9fbd395cac361eac" kindref="member">handle</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="group__sratom_1ga0d93ebb102d9d1e033ed826c5119d2ca" kindref="member">sratom_set_pretty_numbers</ref>(<ref refid="struct_sratom_impl" kindref="compound">Sratom</ref>*<sp/>sratom,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sratom_impl_1a5c1a8e516e8bf31d70d19a0b5c2cfb3b" kindref="member">pretty_numbers</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="group__sratom_1gad4f459e8c541f9bf303e105aea323198" kindref="member">sratom_set_object_mode</ref>(<ref refid="struct_sratom_impl" kindref="compound">Sratom</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sratom,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SratomObjectMode<sp/><ref refid="struct_sratom_impl_1a237e667ea1256a4dcbfb361af086c367" kindref="member">object_mode</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="group__sratom_1ga2c8efd0cc16686de0cabc19ca3f0effc" kindref="member">sratom_write</ref>(<ref refid="struct_sratom_impl" kindref="compound">Sratom</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sratom,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___u_r_i_d___unmap" kindref="compound">LV2_URID_Unmap</ref>*<sp/>unmap,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>subject,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="xlmath_8c_1a767c5fa064d0a1e1f8b447769f1a890b" kindref="member">predicate</ref>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/>body);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="group__sratom_1gafe78e0e2f6ce3c69b90ae4af7d153f68" kindref="member">sratom_read</ref>(<ref refid="struct_sratom_impl" kindref="compound">Sratom</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sratom,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_l_v2___atom___forge" kindref="compound">LV2_Atom_Forge</ref>*<sp/><ref refid="struct_sratom_impl_1af56a9a1fff79b6fddcfc67d138d1a0e6" kindref="member">forge</ref>,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_world_impl" kindref="compound">SordWorld</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_model_impl" kindref="compound">SordModel</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1ac517f0c27408fbd365e7dd34e032faca" kindref="member">model</ref>,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>subject);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="group__sratom_1ga65fa0a468f17b55de2169012fef8d7f2" kindref="member">sratom_to_turtle</ref>(<ref refid="struct_sratom_impl" kindref="compound">Sratom</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sratom,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___u_r_i_d___unmap" kindref="compound">LV2_URID_Unmap</ref>*<sp/>unmap,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><ref refid="struct_sratom_impl_1a559728865a5c92b3ce3cf1c1139ab2f6" kindref="member">base_uri</ref>,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>subject,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="xlmath_8c_1a767c5fa064d0a1e1f8b447769f1a890b" kindref="member">predicate</ref>,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/>body);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="struct_l_v2___atom" kindref="compound">LV2_Atom</ref>*</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><ref refid="group__sratom_1gabb8be4254715e569531159e21cf27c17" kindref="member">sratom_from_turtle</ref>(<ref refid="struct_sratom_impl" kindref="compound">Sratom</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sratom,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><ref refid="struct_sratom_impl_1a559728865a5c92b3ce3cf1c1139ab2f6" kindref="member">base_uri</ref>,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>subject,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="xlmath_8c_1a767c5fa064d0a1e1f8b447769f1a890b" kindref="member">predicate</ref>,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="forge_8h_1a272218ba2d84c66ec458cf7069933ea9" kindref="member">LV2_Atom_Forge_Ref</ref></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="group__sratom_1ga81b7aa6812793fd2f905432ac90eb27b" kindref="member">sratom_forge_sink</ref>(<ref refid="forge_8h_1a19874fcf063508aa5069ee22fd494676" kindref="member">LV2_Atom_Forge_Sink_Handle</ref><sp/><ref refid="struct_sratom_impl_1ae086890e70ea8b6c9fbd395cac361eac" kindref="member">handle</ref>,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="struct_l_v2___atom" kindref="compound">LV2_Atom</ref>*</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><ref refid="group__sratom_1gaf2e397c53d1ca4eed848986d733d300b" kindref="member">sratom_forge_deref</ref>(<ref refid="forge_8h_1a19874fcf063508aa5069ee22fd494676" kindref="member">LV2_Atom_Forge_Sink_Handle</ref><sp/><ref refid="struct_sratom_impl_1ae086890e70ea8b6c9fbd395cac361eac" kindref="member">handle</ref>,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="forge_8h_1a272218ba2d84c66ec458cf7069933ea9" kindref="member">LV2_Atom_Forge_Ref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>SRATOM_SRATOM_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h"/>
  </compounddef>
</doxygen>
