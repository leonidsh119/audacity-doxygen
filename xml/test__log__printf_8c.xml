<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="test__log__printf_8c" kind="file" language="C++">
    <compoundname>test_log_printf.c</compoundname>
    <includes refid="sfconfig_8h" local="yes">sfconfig.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">errno.h</includes>
    <includes refid="libsndfile_2src_2common_8h" local="yes">common.h</includes>
    <includes refid="test__main_8h" local="yes">test_main.h</includes>
    <incdepgraph>
      <node id="20352">
        <label>stdarg.h</label>
      </node>
      <node id="20350">
        <label>stdlib.h</label>
      </node>
      <node id="20353">
        <label>errno.h</label>
      </node>
      <node id="20346">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c</label>
        <link refid="test_log_printf.c"/>
        <childnode refid="20347" relation="include">
        </childnode>
        <childnode refid="20349" relation="include">
        </childnode>
        <childnode refid="20350" relation="include">
        </childnode>
        <childnode refid="20351" relation="include">
        </childnode>
        <childnode refid="20352" relation="include">
        </childnode>
        <childnode refid="20353" relation="include">
        </childnode>
        <childnode refid="20354" relation="include">
        </childnode>
        <childnode refid="20356" relation="include">
        </childnode>
      </node>
      <node id="20355">
        <label>sndfile.h</label>
      </node>
      <node id="20351">
        <label>string.h</label>
      </node>
      <node id="20347">
        <label>sfconfig.h</label>
        <link refid="sfconfig_8h"/>
        <childnode refid="20348" relation="include">
        </childnode>
      </node>
      <node id="20354">
        <label>common.h</label>
        <link refid="libsndfile_2src_2common_8h"/>
        <childnode refid="20347" relation="include">
        </childnode>
        <childnode refid="20350" relation="include">
        </childnode>
        <childnode refid="20351" relation="include">
        </childnode>
        <childnode refid="20355" relation="include">
        </childnode>
      </node>
      <node id="20356">
        <label>test_main.h</label>
        <link refid="test__main_8h"/>
      </node>
      <node id="20348">
        <label>config.h</label>
      </node>
      <node id="20349">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="test__log__printf_8c_1ad27a42eea821f94ee3472c00401b9b69" prot="public" static="no">
        <name>CMP_0_ARGS</name>
        <param><defname>line</defname></param>
        <param><defname>err</defname></param>
        <param><defname>fmt</defname></param>
        <initializer>{	psf-&gt;logindex = 0 ;			\
		<ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref> (<ref refid="structbuffer" kindref="compound">buffer</ref>, sizeof (<ref refid="structbuffer" kindref="compound">buffer</ref>), (fmt)) ;	\
		<ref refid="libsndfile_2src_2common_8h_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref> (psf, (fmt)) ;				\
		err += compare_strings_or_die (<ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>, fmt, <ref refid="structbuffer" kindref="compound">buffer</ref>, psf-&gt;logbuffer) ;	\
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c" line="31" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__log__printf_8c_1ada58a2d09bad2b4149c350fdaadd9512" prot="public" static="no">
        <name>CMP_2_ARGS</name>
        <param><defname>line</defname></param>
        <param><defname>err</defname></param>
        <param><defname>fmt</defname></param>
        <param><defname>a</defname></param>
        <initializer>{	psf-&gt;logindex = 0 ;			\
		<ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref> (<ref refid="structbuffer" kindref="compound">buffer</ref>, sizeof (<ref refid="structbuffer" kindref="compound">buffer</ref>), (fmt), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)) ;	\
		<ref refid="libsndfile_2src_2common_8h_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref> (psf, (fmt), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)) ;					\
		err += compare_strings_or_die (<ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>, fmt, <ref refid="structbuffer" kindref="compound">buffer</ref>, psf-&gt;logbuffer) ;	\
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c" line="38" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__log__printf_8c_1a7003b3fe2c8c6401fb69599fb74ceb5e" prot="public" static="no">
        <name>CMP_4_ARGS</name>
        <param><defname>line</defname></param>
        <param><defname>err</defname></param>
        <param><defname>fmt</defname></param>
        <param><defname>a</defname></param>
        <initializer>{	psf-&gt;logindex = 0 ;			\
		<ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref> (<ref refid="structbuffer" kindref="compound">buffer</ref>, sizeof (<ref refid="structbuffer" kindref="compound">buffer</ref>), (fmt), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)) ;	\
		<ref refid="libsndfile_2src_2common_8h_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref> (psf, (fmt), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)) ;				\
		err += compare_strings_or_die (<ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>, fmt, <ref refid="structbuffer" kindref="compound">buffer</ref>, psf-&gt;logbuffer) ;	\
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c" line="45" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__log__printf_8c_1aabe6bb6c913859f577446545c5347632" prot="public" static="no">
        <name>CMP_5_ARGS</name>
        <param><defname>line</defname></param>
        <param><defname>err</defname></param>
        <param><defname>fmt</defname></param>
        <param><defname>a</defname></param>
        <initializer>{	psf-&gt;logindex = 0 ;			\
		<ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref> (<ref refid="structbuffer" kindref="compound">buffer</ref>, sizeof (<ref refid="structbuffer" kindref="compound">buffer</ref>), (fmt), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)) ;	\
		<ref refid="libsndfile_2src_2common_8h_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref> (psf, (fmt), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)) ;					\
		err += compare_strings_or_die (<ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>, fmt, <ref refid="structbuffer" kindref="compound">buffer</ref>, psf-&gt;logbuffer) ;		\
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c" line="52" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__log__printf_8c_1a354bba17eaf3f78e3568d4b984ba4a62" prot="public" static="no">
        <name>CMP_6_ARGS</name>
        <param><defname>line</defname></param>
        <param><defname>err</defname></param>
        <param><defname>fmt</defname></param>
        <param><defname>a</defname></param>
        <initializer>{	psf-&gt;logindex = 0 ;			\
		<ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref> (<ref refid="structbuffer" kindref="compound">buffer</ref>, sizeof (<ref refid="structbuffer" kindref="compound">buffer</ref>), (fmt), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)) ;	\
		<ref refid="libsndfile_2src_2common_8h_1a79339bae8c0e3af5468b507d261922a5" kindref="member">psf_log_printf</ref> (psf, (fmt), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>), (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)) ;					\
		err += compare_strings_or_die (<ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>, fmt, <ref refid="structbuffer" kindref="compound">buffer</ref>, psf-&gt;logbuffer) ;			\
		}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c" line="59" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__log__printf_8c_1a799367713bb74d6e6382a31c246f7f48" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int compare_strings_or_die</definition>
        <argsstring>(int linenum, const char *fmt, const char *s1, const char *s2)</argsstring>
        <name>compare_strings_or_die</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linenum</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c" line="67" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c" bodystart="67" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="test__log__printf_8c_1a50dc7bb53796d77d89d301d62da56c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void test_log_printf</definition>
        <argsstring>(void)</argsstring>
        <name>test_log_printf</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c" line="82" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c" bodystart="82" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2003-2011<sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo<sp/>&lt;erikd@mega-nerd.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sfconfig_8h" kindref="compound">sfconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libsndfile_2src_2common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="test__main_8h" kindref="compound">test_main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="test__log__printf_8c_1ad27a42eea821f94ee3472c00401b9b69" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMP_0_ARGS(line,err,fmt)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;logindex<sp/>=<sp/>0<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(buffer,<sp/>sizeof<sp/>(buffer),<sp/>(fmt))<sp/>;<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf_log_printf<sp/>(psf,<sp/>(fmt))<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>+=<sp/>compare_strings_or_die<sp/>(line,<sp/>fmt,<sp/>buffer,<sp/>psf-&gt;logbuffer)<sp/>;<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="test__log__printf_8c_1ada58a2d09bad2b4149c350fdaadd9512" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMP_2_ARGS(line,err,fmt,a)<sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;logindex<sp/>=<sp/>0<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(buffer,<sp/>sizeof<sp/>(buffer),<sp/>(fmt),<sp/>(a),<sp/>(a))<sp/>;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf_log_printf<sp/>(psf,<sp/>(fmt),<sp/>(a),<sp/>(a))<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>+=<sp/>compare_strings_or_die<sp/>(line,<sp/>fmt,<sp/>buffer,<sp/>psf-&gt;logbuffer)<sp/>;<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="test__log__printf_8c_1a7003b3fe2c8c6401fb69599fb74ceb5e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMP_4_ARGS(line,err,fmt,a)<sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;logindex<sp/>=<sp/>0<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(buffer,<sp/>sizeof<sp/>(buffer),<sp/>(fmt),<sp/>(a),<sp/>(a),<sp/>(a),<sp/>(a))<sp/>;<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf_log_printf<sp/>(psf,<sp/>(fmt),<sp/>(a),<sp/>(a),<sp/>(a),<sp/>(a))<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>+=<sp/>compare_strings_or_die<sp/>(line,<sp/>fmt,<sp/>buffer,<sp/>psf-&gt;logbuffer)<sp/>;<sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="test__log__printf_8c_1aabe6bb6c913859f577446545c5347632" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMP_5_ARGS(line,err,fmt,a)<sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;logindex<sp/>=<sp/>0<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(buffer,<sp/>sizeof<sp/>(buffer),<sp/>(fmt),<sp/>(a),<sp/>(a),<sp/>(a),<sp/>(a),<sp/>(a))<sp/>;<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf_log_printf<sp/>(psf,<sp/>(fmt),<sp/>(a),<sp/>(a),<sp/>(a),<sp/>(a),<sp/>(a))<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>+=<sp/>compare_strings_or_die<sp/>(line,<sp/>fmt,<sp/>buffer,<sp/>psf-&gt;logbuffer)<sp/>;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="test__log__printf_8c_1a354bba17eaf3f78e3568d4b984ba4a62" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMP_6_ARGS(line,err,fmt,a)<sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psf-&gt;logindex<sp/>=<sp/>0<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(buffer,<sp/>sizeof<sp/>(buffer),<sp/>(fmt),<sp/>(a),<sp/>(a),<sp/>(a),<sp/>(a),<sp/>(a),<sp/>(a))<sp/>;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psf_log_printf<sp/>(psf,<sp/>(fmt),<sp/>(a),<sp/>(a),<sp/>(a),<sp/>(a),<sp/>(a),<sp/>(a))<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>+=<sp/>compare_strings_or_die<sp/>(line,<sp/>fmt,<sp/>buffer,<sp/>psf-&gt;logbuffer)<sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">compare_strings_or_die<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linenum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s2)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacebinheader__writef__check_1a3700fcaac2e0c84a48e53bc42184e068" kindref="member">errors</ref><sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*-puts<sp/>(s1)<sp/>;puts<sp/>(s2)<sp/>;-*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(s1,<sp/>s2)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>string<sp/>compare<sp/>mismatch:\n\t&quot;</highlight><highlight class="normal">,<sp/>linenum)<sp/>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fmt)<sp/>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\t\&quot;%s\&quot;\n\t\&quot;%s\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>s1,<sp/>s2)<sp/>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacebinheader__writef__check_1a3700fcaac2e0c84a48e53bc42184e068" kindref="member">errors</ref><sp/>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>compare_strings_or_die<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="test__main_8h_1a50dc7bb53796d77d89d301d62da56c47" refkind="member"><highlight class="normal"><ref refid="test__log__printf_8c_1a50dc7bb53796d77d89d301d62da56c47" kindref="member">test_log_printf</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>[2048]<sp/>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/><sp/>sf_private,<sp/>*psf<sp/>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/><ref refid="namespacebinheader__writef__check_1a3700fcaac2e0c84a48e53bc42184e068" kindref="member">errors</ref><sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_values<sp/>[]<sp/>=<sp/>{<sp/>0,<sp/>1,<sp/>12,<sp/>123,<sp/>1234,<sp/>123456,<sp/>-1,<sp/>-12,<sp/>-123,<sp/>-1234,<sp/>-123456<sp/>}<sp/>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetest-sndfile-metadata-set_1a7eadfb659f8e3c097dcb1bbc6525dd4d" kindref="member">print_test_name</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>psf_log_printf&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>psf<sp/>=<sp/>&amp;sf_private<sp/>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(psf,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(sf_private))<sp/>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__log__printf_8c_1ad27a42eea821f94ee3472c00401b9b69" kindref="member">CMP_0_ARGS</ref><sp/>(__LINE__,<sp/>errors,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-&gt;%%&lt;-<sp/>&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>printing<sp/>of<sp/>ints.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(int_values)<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__log__printf_8c_1a354bba17eaf3f78e3568d4b984ba4a62" kindref="member">CMP_6_ARGS</ref><sp/>(__LINE__,<sp/>errors,<sp/></highlight><highlight class="stringliteral">&quot;int<sp/>A<sp/>:<sp/>%d,<sp/>%<sp/>d,<sp/>%4d,<sp/>%<sp/>4d,<sp/>%04d,<sp/>%<sp/>04d&quot;</highlight><highlight class="normal">,<sp/>int_values<sp/>[k])<sp/>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(int_values)<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__log__printf_8c_1aabe6bb6c913859f577446545c5347632" kindref="member">CMP_5_ARGS</ref><sp/>(__LINE__,<sp/>errors,<sp/></highlight><highlight class="stringliteral">&quot;int<sp/>B<sp/>:<sp/>%+d,<sp/>%+4d,<sp/>%+04d,<sp/>%-d,<sp/>%-4d&quot;</highlight><highlight class="normal">,<sp/>int_values<sp/>[k])<sp/>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(int_values)<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__log__printf_8c_1ada58a2d09bad2b4149c350fdaadd9512" kindref="member">CMP_2_ARGS</ref><sp/>(__LINE__,<sp/>errors,<sp/></highlight><highlight class="stringliteral">&quot;int<sp/>C<sp/>:<sp/>%-<sp/>d,<sp/>%-<sp/>4d&quot;</highlight><highlight class="normal">,<sp/>int_values<sp/>[k])<sp/>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>printing<sp/>of<sp/>unsigned<sp/>ints.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(int_values)<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__log__printf_8c_1a7003b3fe2c8c6401fb69599fb74ceb5e" kindref="member">CMP_4_ARGS</ref><sp/>(__LINE__,<sp/>errors,<sp/></highlight><highlight class="stringliteral">&quot;D<sp/>:<sp/>%u,<sp/>%4u,<sp/>%04u,<sp/>%0u&quot;</highlight><highlight class="normal">,<sp/>int_values<sp/>[k])<sp/>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>printing<sp/>of<sp/>hex<sp/>ints.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(int_values)<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__log__printf_8c_1a7003b3fe2c8c6401fb69599fb74ceb5e" kindref="member">CMP_4_ARGS</ref><sp/>(__LINE__,<sp/>errors,<sp/></highlight><highlight class="stringliteral">&quot;E<sp/>:<sp/>%X,<sp/>%4X,<sp/>%04X,<sp/>%0X&quot;</highlight><highlight class="normal">,<sp/>int_values<sp/>[k])<sp/>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>printing<sp/>of<sp/>strings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__log__printf_8c_1a7003b3fe2c8c6401fb69599fb74ceb5e" kindref="member">CMP_4_ARGS</ref><sp/>(__LINE__,<sp/>errors,<sp/></highlight><highlight class="stringliteral">&quot;B<sp/>%s,<sp/>%3s,<sp/>%8s,<sp/>%-8s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;str&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errors)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;\nExiting<sp/>due<sp/>to<sp/>errors.\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>test_log_printf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_log_printf.c"/>
  </compounddef>
</doxygen>
