<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sfprocess_8c" kind="file" language="C++">
    <compoundname>sfprocess.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">sndfile.h</includes>
    <incdepgraph>
      <node id="19261">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/examples/sfprocess.c</label>
        <link refid="sfprocess.c"/>
        <childnode refid="19262" relation="include">
        </childnode>
        <childnode refid="19263" relation="include">
        </childnode>
      </node>
      <node id="19263">
        <label>sndfile.h</label>
      </node>
      <node id="19262">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sfprocess_8c_1a46130dc86f2322714bba26960b64e7bb" prot="public" static="no">
        <name>BUFFER_LEN</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/examples/sfprocess.c" line="41" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/examples/sfprocess.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sfprocess_8c_1ac69ee46f4a51ed14f0d68628c2dec71d" prot="public" static="no">
        <name>MAX_CHANNELS</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/examples/sfprocess.c" line="44" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/examples/sfprocess.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sfprocess_8c_1a768532ee3290cca722da649fd43bb10c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void process_data</definition>
        <argsstring>(double *data, int count, int channels)</argsstring>
        <name>process_data</name>
        <param>
          <type>double *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/examples/sfprocess.c" line="47" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/examples/sfprocess.c" bodystart="121" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="sfprocess_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/examples/sfprocess.c" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/examples/sfprocess.c" bodystart="51" bodyend="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2001-2011<sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo<sp/>&lt;erikd@mega-nerd.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>author<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>any<sp/>contributors<sp/>may<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="17"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="18"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment">**</highlight></codeline>
<codeline lineno="20"><highlight class="comment">**<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="21"><highlight class="comment">**<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED</highlight></codeline>
<codeline lineno="22"><highlight class="comment">**<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment">**<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment">**<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment">**<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment">**<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">**<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">**<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment">**<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF</highlight></codeline>
<codeline lineno="30"><highlight class="comment">**<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Include<sp/>this<sp/>header<sp/>file<sp/>to<sp/>use<sp/>functions<sp/>from<sp/>libsndfile.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/>&lt;sndfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>will<sp/>be<sp/>the<sp/>length<sp/>of<sp/>the<sp/>buffer<sp/>used<sp/>to<sp/>hold.frames<sp/>while</highlight></codeline>
<codeline lineno="39"><highlight class="comment">**<sp/><sp/><sp/><sp/>we<sp/>process<sp/>them.</highlight></codeline>
<codeline lineno="40"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="sfprocess_8c_1a46130dc86f2322714bba26960b64e7bb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>BUFFER_LEN<sp/><sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>libsndfile<sp/>can<sp/>handle<sp/>more<sp/>than<sp/>6<sp/>channels<sp/>but<sp/>we&apos;ll<sp/>restrict<sp/>it<sp/>to<sp/>6.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="sfprocess_8c_1ac69ee46f4a51ed14f0d68628c2dec71d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>MAX_CHANNELS<sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>prototype.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>process_data<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels)<sp/>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="sfprocess_8c_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="normal"><ref refid="sfprocess_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>buffer<sp/>of<sp/>double<sp/>precision<sp/>floating<sp/>point<sp/>values</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>which<sp/>will<sp/>hold<sp/>our<sp/>data<sp/>while<sp/>we<sp/>process<sp/>it.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>[<ref refid="sfprocess_8c_1a46130dc86f2322714bba26960b64e7bb" kindref="member">BUFFER_LEN</ref>]<sp/>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>SNDFILE<sp/>is<sp/>very<sp/>much<sp/>like<sp/>a<sp/>FILE<sp/>in<sp/>the<sp/>Standard<sp/>C<sp/>library.<sp/>The</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>sf_open<sp/>function<sp/>return<sp/>an<sp/>SNDFILE*<sp/>pointer<sp/>when<sp/>they<sp/>sucessfully</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>open<sp/>the<sp/>specified<sp/>file.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac14209bc83d532b06a8cdf9ade6d544a" kindref="member">SNDFILE</ref><sp/><sp/><sp/><sp/><sp/><sp/>*infile,<sp/>*outfile<sp/>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>pointer<sp/>to<sp/>an<sp/>SF_INFO<sp/>stutct<sp/>is<sp/>passed<sp/>to<sp/>sf_open.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>On<sp/>read,<sp/>the<sp/>library<sp/>fills<sp/>this<sp/>struct<sp/>with<sp/>information<sp/>about<sp/>the<sp/>file.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>On<sp/>write,<sp/>the<sp/>struct<sp/>must<sp/>be<sp/>filled<sp/>in<sp/>before<sp/>calling<sp/>sf_open.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_f___i_n_f_o" kindref="compound">SF_INFO</ref><sp/><sp/><sp/><sp/><sp/><ref refid="frontend_8c_1a6993a4314b1f21cc6aa5614009106c94" kindref="member">sfinfo</ref><sp/>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readcount<sp/>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*infilename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;input.wav&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*outfilename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;output.wav&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Here&apos;s<sp/>where<sp/>we<sp/>open<sp/>the<sp/>input<sp/>file.<sp/>We<sp/>pass<sp/>sf_open<sp/>the<sp/>file<sp/>name<sp/>and</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>a<sp/>pointer<sp/>to<sp/>an<sp/>SF_INFO<sp/>struct.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>On<sp/>successful<sp/>open,<sp/>sf_open<sp/>returns<sp/>a<sp/>SNDFILE*<sp/>pointer<sp/>which<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>for<sp/>all<sp/>subsequent<sp/>operations<sp/>on<sp/>that<sp/>file.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>If<sp/>an<sp/>error<sp/>occurs<sp/>during<sp/>sf_open,<sp/>the<sp/>function<sp/>returns<sp/>a<sp/>NULL<sp/>pointer.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>If<sp/>you<sp/>are<sp/>trying<sp/>to<sp/>open<sp/>a<sp/>raw<sp/>headerless<sp/>file<sp/>you<sp/>will<sp/>need<sp/>to<sp/>set<sp/>the</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>format<sp/>and<sp/>channels<sp/>fields<sp/>of<sp/>sfinfo<sp/>before<sp/>calling<sp/>sf_open().<sp/>For</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>instance<sp/>to<sp/>open<sp/>a<sp/>raw<sp/>16<sp/>bit<sp/>stereo<sp/>PCM<sp/>file<sp/>you<sp/>would<sp/>need<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>two<sp/>lines:</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>sfinfo.format<sp/><sp/><sp/>=<sp/>SF_FORMAT_RAW<sp/>|<sp/>SF_FORMAT_PCM_16<sp/>;</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/>sfinfo.channels<sp/>=<sp/>2<sp/>;</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(infile<sp/>=<sp/><ref refid="sndfile_8c_1a61bb810d2581bc860cd8884e22d6c7d2" kindref="member">sf_open</ref><sp/>(infilename,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a125531fe9c895237bccd35736370e815" kindref="member">SFM_READ</ref>,<sp/>&amp;sfinfo)))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>failed<sp/>so<sp/>print<sp/>an<sp/>error<sp/>message.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Not<sp/>able<sp/>to<sp/>open<sp/>input<sp/>file<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>infilename)<sp/>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>the<sp/>error<sp/>message<sp/>from<sp/>libsndfile.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts<sp/>(<ref refid="sndfile_8c_1a219fb20afbf20adbfa32c4a60721d8c0" kindref="member">sf_strerror</ref><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))<sp/>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>1<sp/>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sfinfo.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref><sp/>&gt;<sp/><ref refid="sfprocess_8c_1ac69ee46f4a51ed14f0d68628c2dec71d" kindref="member">MAX_CHANNELS</ref>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Not<sp/>able<sp/>to<sp/>process<sp/>more<sp/>than<sp/>%d<sp/>channels\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="sfprocess_8c_1ac69ee46f4a51ed14f0d68628c2dec71d" kindref="member">MAX_CHANNELS</ref>)<sp/>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>1<sp/>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>the<sp/>output<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(outfile<sp/>=<sp/><ref refid="sndfile_8c_1a61bb810d2581bc860cd8884e22d6c7d2" kindref="member">sf_open</ref><sp/>(outfilename,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a449991ce14cb1b9715cf444ffdb9e4a0" kindref="member">SFM_WRITE</ref>,<sp/>&amp;sfinfo)))</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Not<sp/>able<sp/>to<sp/>open<sp/>output<sp/>file<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>outfilename)<sp/>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts<sp/>(<ref refid="sndfile_8c_1a219fb20afbf20adbfa32c4a60721d8c0" kindref="member">sf_strerror</ref><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))<sp/>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>1<sp/>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>While<sp/>there<sp/>are.frames<sp/>in<sp/>the<sp/>input<sp/>file,<sp/>read<sp/>them,<sp/>process</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>them<sp/>and<sp/>write<sp/>them<sp/>to<sp/>the<sp/>output<sp/>file.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((readcount<sp/>=<sp/><ref refid="sndfile_8c_1a6e9d55e1e9bc13a445f5f98887811423" kindref="member">sf_read_double</ref><sp/>(infile,<sp/>data,<sp/><ref refid="sfprocess_8c_1a46130dc86f2322714bba26960b64e7bb" kindref="member">BUFFER_LEN</ref>)))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>process_data<sp/>(data,<sp/>readcount,<sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref>)<sp/>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a45580dcb4de2f9db0d3cd521a0810cc0" kindref="member">sf_write_double</ref><sp/>(outfile,<sp/>data,<sp/>readcount)<sp/>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>input<sp/>and<sp/>output<sp/>files.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a276b87553823c937c62492206f0ed81e" kindref="member">sf_close</ref><sp/>(infile)<sp/>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a276b87553823c937c62492206f0ed81e" kindref="member">sf_close</ref><sp/>(outfile)<sp/>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">process_data<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>channel_gain<sp/>[<ref refid="sfprocess_8c_1ac69ee46f4a51ed14f0d68628c2dec71d" kindref="member">MAX_CHANNELS</ref>]<sp/>=<sp/>{<sp/>0.5,<sp/>0.8,<sp/>0.1,<sp/>0.4,<sp/>0.4,<sp/>0.9<sp/>}<sp/>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>chan<sp/>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>the<sp/>data<sp/>here.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>If<sp/>the<sp/>soundfile<sp/>contains<sp/>more<sp/>then<sp/>1<sp/>channel<sp/>you<sp/>need<sp/>to<sp/>take<sp/>care<sp/>of</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>the<sp/>data<sp/>interleaving<sp/>youself.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Current<sp/>we<sp/>just<sp/>apply<sp/>a<sp/>channel<sp/>dependant<sp/>gain.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(chan<sp/>=<sp/>0<sp/>;<sp/>chan<sp/>&lt;<sp/>channels<sp/>;<sp/>chan<sp/>++)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>chan<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>;<sp/>k+=<sp/>channels)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>[k]<sp/>*=<sp/>channel_gain<sp/>[chan]<sp/>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>process_data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/examples/sfprocess.c"/>
  </compounddef>
</doxygen>
