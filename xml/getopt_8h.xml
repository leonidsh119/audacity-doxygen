<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="getopt_8h" kind="file" language="C++">
    <compoundname>getopt.h</compoundname>
    <includedby refid="src_2flac_2main_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/main.c</includedby>
    <includedby refid="libflac_2src_2metaflac_2options_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.h</includedby>
    <includedby refid="getopt_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/getopt/getopt.c</includedby>
    <includedby refid="getopt1_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/getopt/getopt1.c</includedby>
    <includedby refid="frontend_8c" local="no">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/frontend/frontend.c</includedby>
    <invincdepgraph>
      <node id="7122">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h</label>
        <link refid="getopt.h"/>
        <childnode refid="7123" relation="include">
        </childnode>
        <childnode refid="7124" relation="include">
        </childnode>
        <childnode refid="7135" relation="include">
        </childnode>
        <childnode refid="7136" relation="include">
        </childnode>
        <childnode refid="7137" relation="include">
        </childnode>
      </node>
      <node id="7127">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/operations.c</label>
        <link refid="operations_8c"/>
      </node>
      <node id="7125">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/operations.h</label>
        <link refid="operations_8h"/>
        <childnode refid="7126" relation="include">
        </childnode>
        <childnode refid="7127" relation="include">
        </childnode>
      </node>
      <node id="7126">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/main.c</label>
        <link refid="src_2metaflac_2main_8c"/>
      </node>
      <node id="7123">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/flac/main.c</label>
        <link refid="src_2flac_2main_8c"/>
      </node>
      <node id="7132">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/operations_shorthand_streaminfo.c</label>
        <link refid="operations__shorthand__streaminfo_8c"/>
      </node>
      <node id="7137">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/frontend/frontend.c</label>
        <link refid="frontend_8c"/>
      </node>
      <node id="7128">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/operations_shorthand.h</label>
        <link refid="operations__shorthand_8h"/>
        <childnode refid="7127" relation="include">
        </childnode>
        <childnode refid="7129" relation="include">
        </childnode>
        <childnode refid="7130" relation="include">
        </childnode>
        <childnode refid="7131" relation="include">
        </childnode>
        <childnode refid="7132" relation="include">
        </childnode>
        <childnode refid="7133" relation="include">
        </childnode>
      </node>
      <node id="7129">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/operations_shorthand_cuesheet.c</label>
        <link refid="operations__shorthand__cuesheet_8c"/>
      </node>
      <node id="7131">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/operations_shorthand_seektable.c</label>
        <link refid="operations__shorthand__seektable_8c"/>
      </node>
      <node id="7130">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/operations_shorthand_picture.c</label>
        <link refid="operations__shorthand__picture_8c"/>
      </node>
      <node id="7136">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/getopt/getopt1.c</label>
        <link refid="getopt1_8c"/>
      </node>
      <node id="7135">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/getopt/getopt.c</label>
        <link refid="getopt_8c"/>
      </node>
      <node id="7133">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/operations_shorthand_vorbiscomment.c</label>
        <link refid="operations__shorthand__vorbiscomment_8c"/>
      </node>
      <node id="7134">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c</label>
        <link refid="options_8c"/>
      </node>
      <node id="7124">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.h</label>
        <link refid="libflac_2src_2metaflac_2options_8h"/>
        <childnode refid="7125" relation="include">
        </childnode>
        <childnode refid="7126" relation="include">
        </childnode>
        <childnode refid="7128" relation="include">
        </childnode>
        <childnode refid="7129" relation="include">
        </childnode>
        <childnode refid="7130" relation="include">
        </childnode>
        <childnode refid="7132" relation="include">
        </childnode>
        <childnode refid="7133" relation="include">
        </childnode>
        <childnode refid="7134" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structshare____option" prot="public">share__option</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="getopt_8h_1a5d9a989a1458bcf0fef4d2e8fb0cbcf0" prot="public" static="no">
        <name>share__no_argument</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h" line="114" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="getopt_8h_1a2799f699be855c0655042cf3305cdeb2" prot="public" static="no">
        <name>share__required_argument</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h" line="115" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="getopt_8h_1a7fda4934e42ebaf4dfefba7873fb7ca1" prot="public" static="no">
        <name>share__optional_argument</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h" line="116" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="getopt_8h_1a1adcd0d222eabcaf6c02755cebd1890d" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* share__optarg</definition>
        <argsstring></argsstring>
        <name>share__optarg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/getopt/getopt.c" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="getopt_8h_1ad0f6c5231556f30b87456f3ee3ba89bf" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int share__optind</definition>
        <argsstring></argsstring>
        <name>share__optind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/getopt/getopt.c" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="getopt_8h_1a3ed4661d875b3ace69785b700c550f1e" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int share__opterr</definition>
        <argsstring></argsstring>
        <name>share__opterr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/getopt/getopt.c" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="getopt_8h_1a4d953cc44665e20729d285c17b38f15d" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int share__optopt</definition>
        <argsstring></argsstring>
        <name>share__optopt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/getopt/getopt.c" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="getopt_8h_1a0f090d3c76ed6295ae40612685d7a187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int share__getopt</definition>
        <argsstring>(int argc, char *const *argv, const char *shortopts)</argsstring>
        <name>share__getopt</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>argv</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>shortopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h" line="149" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/getopt/getopt.c" bodystart="980" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="getopt_8h_1a72af96d7d2b939d1b12870598da90d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int share__getopt_long</definition>
        <argsstring>(int argc, char *const *argv, const char *shortopts, const struct share__option *longopts, int *longind)</argsstring>
        <name>share__getopt_long</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>argv</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>shortopts</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> struct <ref refid="structshare____option" kindref="compound">share__option</ref> *</type>
          <declname>longopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>longind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h" line="155" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/getopt/getopt1.c" bodystart="83" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="getopt_8h_1afae7515282da295db76207e2d383c28c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int share__getopt_long_only</definition>
        <argsstring>(int argc, char *const *argv, const char *shortopts, const struct share__option *longopts, int *longind)</argsstring>
        <name>share__getopt_long_only</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>argv</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>shortopts</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> struct <ref refid="structshare____option" kindref="compound">share__option</ref> *</type>
          <declname>longopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>longind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h" line="157" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/getopt/getopt1.c" bodystart="99" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="getopt_8h_1a9e6dbb263e98db9c68a7f008fb856adc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int share___getopt_internal</definition>
        <argsstring>(int argc, char *const *argv, const char *shortopts, const struct share__option *longopts, int *longind, int long_only)</argsstring>
        <name>share___getopt_internal</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>argv</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>shortopts</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> struct <ref refid="structshare____option" kindref="compound">share__option</ref> *</type>
          <declname>longopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>longind</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>long_only</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h" line="162" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/getopt/getopt.c" bodystart="524" bodyend="977"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>NOTE:</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>I<sp/>cannot<sp/>get<sp/>the<sp/>vanilla<sp/>getopt<sp/>code<sp/>to<sp/>work<sp/>(i.e.<sp/>compile<sp/>only<sp/>what</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>needed<sp/>and<sp/>not<sp/>duplicate<sp/>symbols<sp/>found<sp/>in<sp/>the<sp/>standard<sp/>library)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>on<sp/>all<sp/>the<sp/>platforms<sp/>that<sp/>FLAC<sp/>supports.<sp/><sp/>In<sp/>particular<sp/>the<sp/>gating</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>code<sp/>with<sp/>the<sp/>ELIDE_CODE<sp/>#define<sp/>is<sp/>not<sp/>accurate<sp/>enough<sp/>on<sp/>systems</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>that<sp/>are<sp/>POSIX<sp/>but<sp/>not<sp/>glibc.<sp/><sp/>If<sp/>someone<sp/>has<sp/>a<sp/>patch<sp/>that<sp/>works<sp/>on</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU/Linux,<sp/>Darwin,<sp/>AND<sp/>Solaris<sp/>please<sp/>submit<sp/>it<sp/>on<sp/>the<sp/>project<sp/>page:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://sourceforge.net/p/flac/patches/</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>In<sp/>the<sp/>meantime<sp/>I<sp/>have<sp/>munged<sp/>the<sp/>global<sp/>symbols<sp/>and<sp/>removed<sp/>gates</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>around<sp/>code,<sp/>while<sp/>at<sp/>the<sp/>same<sp/>time<sp/>trying<sp/>to<sp/>touch<sp/>the<sp/>original<sp/>as</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>little<sp/>as<sp/>possible.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Declarations<sp/>for<sp/>getopt.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>1989,90,91,92,93,94,96,97,98<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>GNU<sp/>C<sp/>Library.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>The<sp/>GNU<sp/>C<sp/>Library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/>The<sp/>GNU<sp/>C<sp/>Library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>the<sp/>GNU<sp/>C<sp/>Library;<sp/>see<sp/>the<sp/>file<sp/>COPYING.LIB.<sp/><sp/>If<sp/>not,</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SHARE__GETOPT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHARE__GETOPT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#ifndef<sp/>__need_getopt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#<sp/>define<sp/>_GETOPT_H<sp/>1*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#endif*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>For<sp/>communication<sp/>from<sp/>`share__getopt&apos;<sp/>to<sp/>the<sp/>caller.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/>When<sp/>`share__getopt&apos;<sp/>finds<sp/>an<sp/>option<sp/>that<sp/>takes<sp/>an<sp/>argument,</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/>the<sp/>argument<sp/>value<sp/>is<sp/>returned<sp/>here.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/>Also,<sp/>when<sp/>`ordering&apos;<sp/>is<sp/>RETURN_IN_ORDER,</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>each<sp/>non-option<sp/>ARGV-element<sp/>is<sp/>returned<sp/>here.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="getopt_8h_1a1adcd0d222eabcaf6c02755cebd1890d" kindref="member">share__optarg</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Index<sp/>in<sp/>ARGV<sp/>of<sp/>the<sp/>next<sp/>element<sp/>to<sp/>be<sp/>scanned.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/>This<sp/>is<sp/>used<sp/>for<sp/>communication<sp/>to<sp/>and<sp/>from<sp/>the<sp/>caller</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/>and<sp/>for<sp/>communication<sp/>between<sp/>successive<sp/>calls<sp/>to<sp/>`share__getopt&apos;.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/>On<sp/>entry<sp/>to<sp/>`share__getopt&apos;,<sp/>zero<sp/>means<sp/>this<sp/>is<sp/>the<sp/>first<sp/>call;<sp/>initialize.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/>When<sp/>`share__getopt&apos;<sp/>returns<sp/>-1,<sp/>this<sp/>is<sp/>the<sp/>index<sp/>of<sp/>the<sp/>first<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/>non-option<sp/>elements<sp/>that<sp/>the<sp/>caller<sp/>should<sp/>itself<sp/>scan.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/>Otherwise,<sp/>`share__optind&apos;<sp/>communicates<sp/>from<sp/>one<sp/>call<sp/>to<sp/>the<sp/>next</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/>how<sp/>much<sp/>of<sp/>ARGV<sp/>has<sp/>been<sp/>scanned<sp/>so<sp/>far.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="getopt_8h_1ad0f6c5231556f30b87456f3ee3ba89bf" kindref="member">share__optind</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Callers<sp/>store<sp/>zero<sp/>here<sp/>to<sp/>inhibit<sp/>the<sp/>error<sp/>message<sp/>`share__getopt&apos;<sp/>prints</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/>for<sp/>unrecognized<sp/>options.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="getopt_8h_1a3ed4661d875b3ace69785b700c550f1e" kindref="member">share__opterr</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>to<sp/>an<sp/>option<sp/>character<sp/>which<sp/>was<sp/>unrecognized.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="getopt_8h_1a4d953cc44665e20729d285c17b38f15d" kindref="member">share__optopt</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#ifndef<sp/>__need_getopt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Describe<sp/>the<sp/>long-named<sp/>options<sp/>requested<sp/>by<sp/>the<sp/>application.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/>The<sp/>LONG_OPTIONS<sp/>argument<sp/>to<sp/>share__getopt_long<sp/>or<sp/>share__getopt_long_only<sp/>is<sp/>a<sp/>vector</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/>of<sp/>`struct<sp/>share__option&apos;<sp/>terminated<sp/>by<sp/>an<sp/>element<sp/>containing<sp/>a<sp/>name<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/>zero.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/>The<sp/>field<sp/>`has_arg&apos;<sp/>is:</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/>share__no_argument<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(or<sp/>0)<sp/>if<sp/>the<sp/>option<sp/>does<sp/>not<sp/>take<sp/>an<sp/>argument,</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/>share__required_argument<sp/>(or<sp/>1)<sp/>if<sp/>the<sp/>option<sp/>requires<sp/>an<sp/>argument,</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/>share__optional_argument<sp/><sp/><sp/><sp/><sp/>(or<sp/>2)<sp/>if<sp/>the<sp/>option<sp/>takes<sp/>an<sp/>optional<sp/>argument.</highlight></codeline>
<codeline lineno="86"><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/>If<sp/>the<sp/>field<sp/>`flag&apos;<sp/>is<sp/>not<sp/>NULL,<sp/>it<sp/>points<sp/>to<sp/>a<sp/>variable<sp/>that<sp/>is<sp/>set</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/>to<sp/>the<sp/>value<sp/>given<sp/>in<sp/>the<sp/>field<sp/>`val&apos;<sp/>when<sp/>the<sp/>option<sp/>is<sp/>found,<sp/>but</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/>left<sp/>unchanged<sp/>if<sp/>the<sp/>option<sp/>is<sp/>not<sp/>found.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/>To<sp/>have<sp/>a<sp/>long-named<sp/>option<sp/>do<sp/>something<sp/>other<sp/>than<sp/>set<sp/>an<sp/>`int&apos;<sp/>to</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/>a<sp/>compiled-in<sp/>constant,<sp/>such<sp/>as<sp/>set<sp/>a<sp/>value<sp/>from<sp/>`share__optarg&apos;,<sp/>set<sp/>the</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/>option&apos;s<sp/>`flag&apos;<sp/>field<sp/>to<sp/>zero<sp/>and<sp/>its<sp/>`val&apos;<sp/>field<sp/>to<sp/>a<sp/>nonzero</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/>value<sp/>(the<sp/>equivalent<sp/>single-letter<sp/>option<sp/>character,<sp/>if<sp/>there<sp/>is</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/>one).<sp/><sp/>For<sp/>long<sp/>options<sp/>that<sp/>have<sp/>a<sp/>zero<sp/>`flag&apos;<sp/>field,<sp/>`share__getopt&apos;</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/>returns<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>`val&apos;<sp/>field.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="structshare____option" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshare____option" kindref="compound">share__option</ref></highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined<sp/>__STDC__<sp/>&amp;&amp;<sp/>__STDC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structshare____option_1aa2ac1f332cd44329a9cec91813ba70bd" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="structshare____option_1aa2ac1f332cd44329a9cec91813ba70bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structshare____option_1aa2ac1f332cd44329a9cec91813ba70bd" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>has_arg<sp/>can&apos;t<sp/>be<sp/>an<sp/>enum<sp/>because<sp/>some<sp/>compilers<sp/>complain<sp/>about</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>type<sp/>mismatches<sp/>in<sp/>all<sp/>the<sp/>code<sp/>that<sp/>assumes<sp/>it<sp/>is<sp/>an<sp/>int.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="structshare____option_1a8f5933942ecba67c80ed113c7ba12725" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structshare____option_1a8f5933942ecba67c80ed113c7ba12725" kindref="member">has_arg</ref>;</highlight></codeline>
<codeline lineno="108" refid="structshare____option_1abd332dad563f98ab159f4cced7b3113e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="structshare____option_1abd332dad563f98ab159f4cced7b3113e" kindref="member">flag</ref>;</highlight></codeline>
<codeline lineno="109" refid="structshare____option_1af06fa702ffc81a9bf193cea62277e25a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structshare____option_1af06fa702ffc81a9bf193cea62277e25a" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Names<sp/>for<sp/>the<sp/>values<sp/>of<sp/>the<sp/>`has_arg&apos;<sp/>field<sp/>of<sp/>`struct<sp/>share__option&apos;.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="getopt_8h_1a5d9a989a1458bcf0fef4d2e8fb0cbcf0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>share__no_argument<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="getopt_8h_1a2799f699be855c0655042cf3305cdeb2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>share__required_argument<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="getopt_8h_1a7fda4934e42ebaf4dfefba7873fb7ca1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>share__optional_argument<sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#endif*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>need<sp/>getopt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>definitions<sp/>and<sp/>prototypes<sp/>for<sp/>functions<sp/>to<sp/>process<sp/>the</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/>arguments<sp/>in<sp/>ARGV<sp/>(ARGC<sp/>of<sp/>them,<sp/>minus<sp/>the<sp/>program<sp/>name)<sp/>for</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/>options<sp/>given<sp/>in<sp/>OPTS.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/>Return<sp/>the<sp/>option<sp/>character<sp/>from<sp/>OPTS<sp/>just<sp/>read.<sp/><sp/>Return<sp/>-1<sp/>when</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/>there<sp/>are<sp/>no<sp/>more<sp/>options.<sp/><sp/>For<sp/>unrecognized<sp/>options,<sp/>or<sp/>options</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/>missing<sp/>arguments,<sp/>`share__optopt&apos;<sp/>is<sp/>set<sp/>to<sp/>the<sp/>option<sp/>letter,<sp/>and<sp/>&apos;?&apos;<sp/>is</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/>returned.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"></highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/>The<sp/>OPTS<sp/>string<sp/>is<sp/>a<sp/>list<sp/>of<sp/>characters<sp/>which<sp/>are<sp/>recognized<sp/>option</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/>letters,<sp/>optionally<sp/>followed<sp/>by<sp/>colons,<sp/>specifying<sp/>that<sp/>that<sp/>letter</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/>takes<sp/>an<sp/>argument,<sp/>to<sp/>be<sp/>placed<sp/>in<sp/>`share__optarg&apos;.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"></highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/>If<sp/>a<sp/>letter<sp/>in<sp/>OPTS<sp/>is<sp/>followed<sp/>by<sp/>two<sp/>colons,<sp/>its<sp/>argument<sp/>is</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/>optional.<sp/><sp/>This<sp/>behavior<sp/>is<sp/>specific<sp/>to<sp/>the<sp/>GNU<sp/>`share__getopt&apos;.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"></highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/>The<sp/>argument<sp/>`--&apos;<sp/>causes<sp/>premature<sp/>termination<sp/>of<sp/>argument</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/>scanning,<sp/>explicitly<sp/>telling<sp/>`share__getopt&apos;<sp/>that<sp/>there<sp/>are<sp/>no<sp/>more</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/>options.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/>If<sp/>OPTS<sp/>begins<sp/>with<sp/>`--&apos;,<sp/>then<sp/>non-option<sp/>arguments<sp/>are<sp/>treated<sp/>as</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/>arguments<sp/>to<sp/>the<sp/>option<sp/>&apos;\0&apos;.<sp/><sp/>This<sp/>behavior<sp/>is<sp/>specific<sp/>to<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/>`share__getopt&apos;.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#if<sp/>defined<sp/>__STDC__<sp/>&amp;&amp;<sp/>__STDC__*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#<sp/>ifdef<sp/>__GNU_LIBRARY__*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Many<sp/>other<sp/>libraries<sp/>have<sp/>conflicting<sp/>prototypes<sp/>for<sp/>getopt,<sp/>with</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/>differences<sp/>in<sp/>the<sp/>consts,<sp/>in<sp/>stdlib.h.<sp/><sp/>To<sp/>avoid<sp/>compilation</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/>errors,<sp/>only<sp/>prototype<sp/>getopt<sp/>for<sp/>the<sp/>GNU<sp/>C<sp/>library.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="getopt_8h_1a0f090d3c76ed6295ae40612685d7a187" kindref="member">share__getopt</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*shortopts);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#<sp/>else*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>__GNU_LIBRARY__<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:extern<sp/>int<sp/>getopt<sp/>();*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#<sp/>endif*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>__GNU_LIBRARY__<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#<sp/>ifndef<sp/>__need_getopt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="getopt_8h_1a72af96d7d2b939d1b12870598da90d2e" kindref="member">share__getopt_long</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*shortopts,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structshare____option" kindref="compound">share__option</ref><sp/>*longopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*longind);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="getopt_8h_1afae7515282da295db76207e2d383c28c" kindref="member">share__getopt_long_only</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*shortopts,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structshare____option" kindref="compound">share__option</ref><sp/>*longopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*longind);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Internal<sp/>only.<sp/><sp/>Users<sp/>should<sp/>not<sp/>call<sp/>this<sp/>directly.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="getopt_8h_1a9e6dbb263e98db9c68a7f008fb856adc" kindref="member">share___getopt_internal</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*shortopts,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structshare____option" kindref="compound">share__option</ref><sp/>*longopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*longind,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>long_only);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#<sp/>endif*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#else*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>__STDC__<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:extern<sp/>int<sp/>getopt<sp/>();*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#<sp/>ifndef<sp/>__need_getopt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:extern<sp/>int<sp/>getopt_long<sp/>();*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:extern<sp/>int<sp/>getopt_long_only<sp/>();*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:extern<sp/>int<sp/>_getopt_internal<sp/>();*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#<sp/>endif*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#endif*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>__STDC__<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>we<sp/>later<sp/>can<sp/>get<sp/>all<sp/>the<sp/>definitions<sp/>and<sp/>declarations.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">/*[JEC]<sp/>was:#undef<sp/>__need_getopt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>getopt.h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/include/share/getopt.h"/>
  </compounddef>
</doxygen>
