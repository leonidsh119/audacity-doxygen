<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="syntax_8c" kind="file" language="C++">
    <compoundname>syntax.c</compoundname>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="serd_8h" local="yes">serd/serd.h</includes>
    <includes local="yes">sord_config.h</includes>
    <includes refid="sord__internal_8h" local="yes">sord_internal.h</includes>
    <incdepgraph>
      <node id="27366">
        <label>stdbool.h</label>
      </node>
      <node id="27362">
        <label>stdarg.h</label>
      </node>
      <node id="27357">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c</label>
        <link refid="syntax.c"/>
        <childnode refid="27358" relation="include">
        </childnode>
        <childnode refid="27359" relation="include">
        </childnode>
        <childnode refid="27360" relation="include">
        </childnode>
        <childnode refid="27361" relation="include">
        </childnode>
        <childnode refid="27367" relation="include">
        </childnode>
        <childnode refid="27368" relation="include">
        </childnode>
      </node>
      <node id="27368">
        <label>sord_internal.h</label>
        <link refid="sord__internal_8h"/>
        <childnode refid="27363" relation="include">
        </childnode>
        <childnode refid="27364" relation="include">
        </childnode>
        <childnode refid="27369" relation="include">
        </childnode>
      </node>
      <node id="27364">
        <label>stdint.h</label>
      </node>
      <node id="27359">
        <label>stdlib.h</label>
      </node>
      <node id="27361">
        <label>serd/serd.h</label>
        <link refid="serd_8h"/>
        <childnode refid="27362" relation="include">
        </childnode>
        <childnode refid="27363" relation="include">
        </childnode>
        <childnode refid="27364" relation="include">
        </childnode>
        <childnode refid="27365" relation="include">
        </childnode>
        <childnode refid="27366" relation="include">
        </childnode>
      </node>
      <node id="27363">
        <label>stddef.h</label>
      </node>
      <node id="27358">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="27369">
        <label>sord/sord.h</label>
        <link refid="sord_8h"/>
        <childnode refid="27363" relation="include">
        </childnode>
        <childnode refid="27364" relation="include">
        </childnode>
        <childnode refid="27365" relation="include">
        </childnode>
        <childnode refid="27361" relation="include">
        </childnode>
        <childnode refid="27366" relation="include">
        </childnode>
      </node>
      <node id="27360">
        <label>string.h</label>
      </node>
      <node id="27367">
        <label>sord_config.h</label>
      </node>
      <node id="27365">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_sord_inserter_impl" prot="public">SordInserterImpl</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__sord_1gabc6475c35efee1928bf84be7ba248b69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__sord_1ga766743eaebfadb5a5a5d94af6226eb75" kindref="member">SordInserter</ref> *</type>
        <definition>SordInserter* sord_inserter_new</definition>
        <argsstring>(SordModel *model, SerdEnv *env)</argsstring>
        <name>sord_inserter_new</name>
        <param>
          <type><ref refid="group__sord_1gaea018cfebfedd10280b1d8dd6d650a28" kindref="member">SordModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an inserter for writing statements to a model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" line="32" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" bodystart="32" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="group__sord_1gaeb4b9a6c189853b1ca4f589933014744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sord_inserter_free</definition>
        <argsstring>(SordInserter *inserter)</argsstring>
        <name>sord_inserter_free</name>
        <param>
          <type><ref refid="group__sord_1ga766743eaebfadb5a5a5d94af6226eb75" kindref="member">SordInserter</ref> *</type>
          <declname>inserter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free an inserter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="group__sord_1gaf319ea2490efb4721170e544791d130f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SerdStatus sord_inserter_set_base_uri</definition>
        <argsstring>(SordInserter *inserter, const SerdNode *uri_node)</argsstring>
        <name>sord_inserter_set_base_uri</name>
        <param>
          <type><ref refid="group__sord_1ga766743eaebfadb5a5a5d94af6226eb75" kindref="member">SordInserter</ref> *</type>
          <declname>inserter</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>uri</declname>
          <defname>uri_node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the current base URI for writing to the model.</para><para>Note this function can be safely casted to SerdBaseSink. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="group__sord_1ga0123e49d8644f57361fcd95f7ee0f178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SerdStatus sord_inserter_set_prefix</definition>
        <argsstring>(SordInserter *inserter, const SerdNode *name, const SerdNode *uri_node)</argsstring>
        <name>sord_inserter_set_prefix</name>
        <param>
          <type><ref refid="group__sord_1ga766743eaebfadb5a5a5d94af6226eb75" kindref="member">SordInserter</ref> *</type>
          <declname>inserter</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>uri</declname>
          <defname>uri_node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a namespace prefix for writing to the model.</para><para>Note this function can be safely casted to SerdPrefixSink. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" line="55" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="group__sord_1ga9fb240d01d6516ba071b7217d792ef68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SerdStatus sord_inserter_write_statement</definition>
        <argsstring>(SordInserter *inserter, SerdStatementFlags flags, const SerdNode *graph, const SerdNode *subject, const SerdNode *predicate, const SerdNode *object, const SerdNode *object_datatype, const SerdNode *object_lang)</argsstring>
        <name>sord_inserter_write_statement</name>
        <param>
          <type><ref refid="group__sord_1ga766743eaebfadb5a5a5d94af6226eb75" kindref="member">SordInserter</ref> *</type>
          <declname>inserter</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>graph</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>object_datatype</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>object_lang</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a statement to the model.</para><para>Note this function can be safely casted to SerdStatementSink. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" line="63" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" bodystart="63" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="group__sord_1gad18f6cefc887a7fdcd4a0a02f9c382e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sord_8h_1a1a2e27663366eb6ff41e062a0a880f48" kindref="member">SORD_API</ref> <ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
        <definition>SORD_API SerdReader* sord_new_reader</definition>
        <argsstring>(SordModel *model, SerdEnv *env, SerdSyntax syntax, SordNode *graph)</argsstring>
        <name>sord_new_reader</name>
        <param>
          <type><ref refid="group__sord_1gaea018cfebfedd10280b1d8dd6d650a28" kindref="member">SordModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref></type>
          <declname>syntax</declname>
        </param>
        <param>
          <type><ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a reader that will read into <computeroutput>model</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" line="94" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" bodystart="94" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="syntax_8c_1a4333aff296161e86441c28fd23112dcc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void write_statement</definition>
        <argsstring>(SordModel *sord, SerdWriter *writer, SordQuad tup, SerdStatementFlags flags)</argsstring>
        <name>write_statement</name>
        <param>
          <type><ref refid="group__sord_1gaea018cfebfedd10280b1d8dd6d650a28" kindref="member">SordModel</ref> *</type>
          <declname>sord</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="group__sord_1gac79773a042527877d00158c75a41bab2" kindref="member">SordQuad</ref></type>
          <declname>tup</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" line="116" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" bodystart="116" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group__sord_1ga0f18c2f00df8b705db63df1058296a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool sord_write</definition>
        <argsstring>(SordModel *model, SerdWriter *writer, SordNode *graph)</argsstring>
        <name>sord_write</name>
        <param>
          <type><ref refid="group__sord_1gaea018cfebfedd10280b1d8dd6d650a28" kindref="member">SordModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a model to a writer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" line="180" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" bodystart="180" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="group__sord_1gab77fdaf578d114d670e4823a366aa039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool sord_write_iter</definition>
        <argsstring>(SordIter *iter, SerdWriter *writer)</argsstring>
        <name>sord_write_iter</name>
        <param>
          <type><ref refid="group__sord_1ga59314650e0ab9b1cdeebc0bf7a0419fa" kindref="member">SordIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a range to a writer.</para><para>This increments <computeroutput>iter</computeroutput> to its end, then frees it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" line="190" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c" bodystart="190" bodyend="205"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2011-2012<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serd_8h" kindref="compound">serd/serd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sord_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sord__internal_8h" kindref="compound">sord_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="struct_sord_inserter_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sord_inserter_impl" kindref="compound">SordInserterImpl</ref><sp/>{</highlight></codeline>
<codeline lineno="27" refid="struct_sord_inserter_impl_1a1197cef195f916f6bd58e54bc3c484ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_model_impl" kindref="compound">SordModel</ref>*<sp/><ref refid="struct_sord_inserter_impl_1a1197cef195f916f6bd58e54bc3c484ca" kindref="member">model</ref>;</highlight></codeline>
<codeline lineno="28" refid="struct_sord_inserter_impl_1ae3c8d7741d63412edf1ea010bec734f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><sp/><ref refid="struct_sord_inserter_impl_1ae3c8d7741d63412edf1ea010bec734f6" kindref="member">env</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="struct_sord_inserter_impl" kindref="compound">SordInserter</ref>*</highlight></codeline>
<codeline lineno="32" refid="group__sord_1gabc6475c35efee1928bf84be7ba248b69" refkind="member"><highlight class="normal"><ref refid="group__sord_1gabc6475c35efee1928bf84be7ba248b69" kindref="member">sord_inserter_new</ref>(<ref refid="struct_sord_model_impl" kindref="compound">SordModel</ref>*<sp/><ref refid="lib_2expat_8h_1ac517f0c27408fbd365e7dd34e032faca" kindref="member">model</ref>,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><sp/><ref refid="struct_sord_inserter_impl_1ae3c8d7741d63412edf1ea010bec734f6" kindref="member">env</ref>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_inserter_impl" kindref="compound">SordInserter</ref>*<sp/>inserter<sp/>=<sp/>(<ref refid="struct_sord_inserter_impl" kindref="compound">SordInserter</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_sord_inserter_impl" kindref="compound">SordInserter</ref>));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>inserter-&gt;<ref refid="struct_sord_inserter_impl_1a1197cef195f916f6bd58e54bc3c484ca" kindref="member">model</ref><sp/>=<sp/><ref refid="struct_sord_inserter_impl_1a1197cef195f916f6bd58e54bc3c484ca" kindref="member">model</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>inserter-&gt;<ref refid="struct_sord_inserter_impl_1ae3c8d7741d63412edf1ea010bec734f6" kindref="member">env</ref><sp/><sp/><sp/>=<sp/><ref refid="struct_sord_inserter_impl_1ae3c8d7741d63412edf1ea010bec734f6" kindref="member">env</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inserter;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="group__sord_1gaeb4b9a6c189853b1ca4f589933014744" refkind="member"><highlight class="normal"><ref refid="group__sord_1gaeb4b9a6c189853b1ca4f589933014744" kindref="member">sord_inserter_free</ref>(<ref refid="struct_sord_inserter_impl" kindref="compound">SordInserter</ref>*<sp/>inserter)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>free(inserter);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="48" refid="group__sord_1gaf319ea2490efb4721170e544791d130f" refkind="member"><highlight class="normal"><ref refid="group__sord_1gaf319ea2490efb4721170e544791d130f" kindref="member">sord_inserter_set_base_uri</ref>(<ref refid="struct_sord_inserter_impl" kindref="compound">SordInserter</ref>*<sp/><sp/><sp/>inserter,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>uri_node)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gaddd2dd19cd0a36ce4ea39ade113eab62" kindref="member">serd_env_set_base_uri</ref>(inserter-&gt;<ref refid="struct_sord_inserter_impl_1ae3c8d7741d63412edf1ea010bec734f6" kindref="member">env</ref>,<sp/>uri_node);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="55" refid="group__sord_1ga0123e49d8644f57361fcd95f7ee0f178" refkind="member"><highlight class="normal"><ref refid="group__sord_1ga0123e49d8644f57361fcd95f7ee0f178" kindref="member">sord_inserter_set_prefix</ref>(<ref refid="struct_sord_inserter_impl" kindref="compound">SordInserter</ref>*<sp/><sp/><sp/>inserter,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>uri_node)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gafd42745aa586531608eb4a23c560cef2" kindref="member">serd_env_set_prefix</ref>(inserter-&gt;<ref refid="struct_sord_inserter_impl_1ae3c8d7741d63412edf1ea010bec734f6" kindref="member">env</ref>,<sp/>name,<sp/>uri_node);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="63" refid="group__sord_1ga9fb240d01d6516ba071b7217d792ef68" refkind="member"><highlight class="normal"><ref refid="group__sord_1ga9fb240d01d6516ba071b7217d792ef68" kindref="member">sord_inserter_write_statement</ref>(<ref refid="struct_sord_inserter_impl" kindref="compound">SordInserter</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>inserter,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref><sp/>flags,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>graph,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>subject,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/><ref refid="xlmath_8c_1a767c5fa064d0a1e1f8b447769f1a890b" kindref="member">predicate</ref>,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>object_datatype,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>object_lang)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_world_impl" kindref="compound">SordWorld</ref>*<sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref><sp/>=<sp/><ref refid="group__sord_1ga27a0540b02602c5aeb3db056f903e6af" kindref="member">sord_get_world</ref>(inserter-&gt;<ref refid="struct_sord_inserter_impl_1a1197cef195f916f6bd58e54bc3c484ca" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><sp/><ref refid="struct_sord_inserter_impl_1ae3c8d7741d63412edf1ea010bec734f6" kindref="member">env</ref><sp/><sp/><sp/>=<sp/>inserter-&gt;<ref refid="struct_sord_inserter_impl_1ae3c8d7741d63412edf1ea010bec734f6" kindref="member">env</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>g<sp/>=<sp/><ref refid="group__sord_1ga9367640305491801ab3bed714aeb5448" kindref="member">sord_node_from_serd_node</ref>(world,<sp/>env,<sp/>graph,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/><ref refid="group__sord_1ga9367640305491801ab3bed714aeb5448" kindref="member">sord_node_from_serd_node</ref>(world,<sp/>env,<sp/>subject,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/><ref refid="group__sord_1ga9367640305491801ab3bed714aeb5448" kindref="member">sord_node_from_serd_node</ref>(world,<sp/>env,<sp/>predicate,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref><sp/>=<sp/><ref refid="group__sord_1ga9367640305491801ab3bed714aeb5448" kindref="member">sord_node_from_serd_node</ref>(world,<sp/>env,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_datatype,<sp/>object_lang);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__sord_1gac79773a042527877d00158c75a41bab2" kindref="member">SordQuad</ref><sp/>tup<sp/>=<sp/>{<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/>g<sp/>};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaf302459de8a5474600b6f3e0eb4ea3b4" kindref="member">sord_add</ref>(inserter-&gt;<ref refid="struct_sord_inserter_impl_1a1197cef195f916f6bd58e54bc3c484ca" kindref="member">model</ref>,<sp/>tup);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga89d2f20cde1d09361a73f596ba45b57f" kindref="member">sord_node_free</ref>(world,<sp/>o);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga89d2f20cde1d09361a73f596ba45b57f" kindref="member">sord_node_free</ref>(world,<sp/>p);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga89d2f20cde1d09361a73f596ba45b57f" kindref="member">sord_node_free</ref>(world,<sp/>s);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga89d2f20cde1d09361a73f596ba45b57f" kindref="member">sord_node_free</ref>(world,<sp/>g);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="sord_8h_1a1a2e27663366eb6ff41e062a0a880f48" kindref="member">SORD_API</ref></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*</highlight></codeline>
<codeline lineno="94" refid="group__sord_1gad18f6cefc887a7fdcd4a0a02f9c382e6" refkind="member"><highlight class="normal"><ref refid="group__sord_1gad18f6cefc887a7fdcd4a0a02f9c382e6" kindref="member">sord_new_reader</ref>(<ref refid="struct_sord_model_impl" kindref="compound">SordModel</ref>*<sp/><ref refid="lib_2expat_8h_1ac517f0c27408fbd365e7dd34e032faca" kindref="member">model</ref>,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><sp/><ref refid="struct_sord_inserter_impl_1ae3c8d7741d63412edf1ea010bec734f6" kindref="member">env</ref>,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref><sp/><ref refid="cmdline_8c_1a9aea52a77da0039230114dcf40c98aa6" kindref="member">syntax</ref>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><sp/>graph)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_inserter_impl" kindref="compound">SordInserter</ref>*<sp/>inserter<sp/>=<sp/><ref refid="group__sord_1gabc6475c35efee1928bf84be7ba248b69" kindref="member">sord_inserter_new</ref>(model,<sp/>env);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader<sp/>=<sp/><ref refid="group__serd_1ga99a5f1ae546409bcb9a56d89e68902bf" kindref="member">serd_reader_new</ref>(</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syntax,<sp/>inserter,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*))<ref refid="group__sord_1gaeb4b9a6c189853b1ca4f589933014744" kindref="member">sord_inserter_free</ref>,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__serd_1ga9f1652e78562130337b519f309dd5125" kindref="member">SerdBaseSink</ref>)<ref refid="group__sord_1gaf319ea2490efb4721170e544791d130f" kindref="member">sord_inserter_set_base_uri</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__serd_1ga692f0bbdf5e2576191ee3556ecde7d55" kindref="member">SerdPrefixSink</ref>)<ref refid="group__sord_1ga0123e49d8644f57361fcd95f7ee0f178" kindref="member">sord_inserter_set_prefix</ref>,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__serd_1ga9cd6dc709f738ed9770d0d2cd1195bd4" kindref="member">SerdStatementSink</ref>)<ref refid="group__sord_1ga9fb240d01d6516ba071b7217d792ef68" kindref="member">sord_inserter_write_statement</ref>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga7f5f4f5a6b224b0f04df3c078f9e3eaf" kindref="member">serd_reader_set_default_graph</ref>(reader,<sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(graph));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reader;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">write_statement(<ref refid="struct_sord_model_impl" kindref="compound">SordModel</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sord,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gac79773a042527877d00158c75a41bab2" kindref="member">SordQuad</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tup,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref><sp/>flags)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/><sp/>=<sp/>tup[<ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a7329717c7624be0d208bdc20c236e33d" kindref="member">SORD_SUBJECT</ref>];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/><sp/>=<sp/>tup[<ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a0df0a36753303d1d8a55487296a050bb" kindref="member">SORD_PREDICATE</ref>];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref><sp/><sp/>=<sp/>tup[<ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/><sp/>=<sp/><ref refid="group__sord_1gaa6fd74ff5079ab6d60d174eedc373b13" kindref="member">sord_node_get_datatype</ref>(o);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>ss<sp/>=<sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(s);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>sp<sp/>=<sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(p);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>so<sp/>=<sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(o);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>sd<sp/>=<sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(d);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lang_str<sp/>=<sp/><ref refid="group__sord_1ga0f0d52d14ece45c5b8b4c28e0d885798" kindref="member">sord_node_get_language</ref>(o);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lang_len<sp/>=<sp/>lang_str<sp/>?<sp/>strlen(lang_str)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/><sp/><sp/><sp/>language<sp/>=<sp/>SERD_NODE_NULL;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lang_str)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>language.<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaa661a7e84228e32f0b979839658bf4c6" kindref="member">SERD_LITERAL</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>language.<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref><sp/>=<sp/>lang_len;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>language.<ref refid="struct_serd_node_1ad4816721933bbd19f904ff67d3beb40e" kindref="member">n_chars</ref><sp/>=<sp/>lang_len;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>language.<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)lang_str;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Subject<sp/>abbreviation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1gae686e38224ff87bd0946b21e84fef1c4" kindref="member">sord_node_is_inline_object</ref>(s)<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647ac4825dca7b59b50762a87174fc4148b2" kindref="member">SERD_ANON_CONT</ref>))<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref><sp/>st<sp/>=<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1gae686e38224ff87bd0946b21e84fef1c4" kindref="member">sord_node_is_inline_object</ref>(o))<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gac79773a042527877d00158c75a41bab2" kindref="member">SordQuad</ref><sp/><sp/>sub_pat<sp/><sp/>=<sp/>{<sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>sub_iter<sp/>=<sp/><ref refid="group__sord_1ga76e5cc69be0fb45c8cdfb4c9a2450fa5" kindref="member">sord_find</ref>(sord,<sp/>sub_pat);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref><sp/>start_flags<sp/>=<sp/>flags</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((sub_iter)<sp/>?<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647aae52aa2d821bdd02e828cfcf07692978" kindref="member">SERD_ANON_O_BEGIN</ref><sp/>:<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a392894ad449f66514ac9395708bf7a2e" kindref="member">SERD_EMPTY_O</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st<sp/>=<sp/><ref refid="group__serd_1ga0c055816f6eb769e55128701402e68b4" kindref="member">serd_writer_write_statement</ref>(</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,<sp/>start_flags,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>ss,<sp/>sp,<sp/>so,<sp/>sd,<sp/>&amp;language);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!st<sp/>&amp;&amp;<sp/>sub_iter)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647ac4825dca7b59b50762a87174fc4148b2" kindref="member">SERD_ANON_CONT</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>!<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(sub_iter);<sp/><ref refid="group__sord_1ga9e505568184171df51514d436bff4a52" kindref="member">sord_iter_next</ref>(sub_iter))<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gac79773a042527877d00158c75a41bab2" kindref="member">SordQuad</ref><sp/>sub_tup;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga87ae8158572802b02a1d3f81fb20e54a" kindref="member">sord_iter_get</ref>(sub_iter,<sp/>sub_tup);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_statement(sord,<sp/>writer,<sp/>sub_tup,<sp/>flags);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(sub_iter);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga2452df8462454202657ecad76bb26812" kindref="member">serd_writer_end_anon</ref>(writer,<sp/>so);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st<sp/>=<sp/><ref refid="group__serd_1ga0c055816f6eb769e55128701402e68b4" kindref="member">serd_writer_write_statement</ref>(</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,<sp/>flags,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>ss,<sp/>sp,<sp/>so,<sp/>sd,<sp/>&amp;language);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>write<sp/>statement<sp/>(%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1gac0743f37f7890c255a2960dbe30ff25d" kindref="member">serd_strerror</ref>(st));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="group__sord_1ga0f18c2f00df8b705db63df1058296a61" refkind="member"><highlight class="normal"><ref refid="group__sord_1ga0f18c2f00df8b705db63df1058296a61" kindref="member">sord_write</ref>(<ref refid="struct_sord_model_impl" kindref="compound">SordModel</ref>*<sp/><sp/><ref refid="lib_2expat_8h_1ac517f0c27408fbd365e7dd34e032faca" kindref="member">model</ref>,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><sp/><sp/>graph)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1gac79773a042527877d00158c75a41bab2" kindref="member">SordQuad</ref><sp/><sp/>pat<sp/><sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>graph<sp/>};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>iter<sp/>=<sp/><ref refid="group__sord_1ga76e5cc69be0fb45c8cdfb4c9a2450fa5" kindref="member">sord_find</ref>(model,<sp/>pat);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__sord_1gab77fdaf578d114d670e4823a366aa039" kindref="member">sord_write_iter</ref>(iter,<sp/>writer);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="group__sord_1gab77fdaf578d114d670e4823a366aa039" refkind="member"><highlight class="normal"><ref refid="group__sord_1gab77fdaf578d114d670e4823a366aa039" kindref="member">sord_write_iter</ref>(<ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/><sp/><sp/>iter,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iter)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_model_impl" kindref="compound">SordModel</ref>*<sp/><ref refid="lib_2expat_8h_1ac517f0c27408fbd365e7dd34e032faca" kindref="member">model</ref><sp/>=<sp/>(<ref refid="struct_sord_model_impl" kindref="compound">SordModel</ref>*)<ref refid="group__sord_1gae1b0324b3bda64356fd9c351035d53b8" kindref="member">sord_iter_get_model</ref>(iter);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>!<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(iter);<sp/><ref refid="group__sord_1ga9e505568184171df51514d436bff4a52" kindref="member">sord_iter_next</ref>(iter))<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gac79773a042527877d00158c75a41bab2" kindref="member">SordQuad</ref><sp/>tup;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga87ae8158572802b02a1d3f81fb20e54a" kindref="member">sord_iter_get</ref>(iter,<sp/>tup);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_statement(model,<sp/>writer,<sp/>tup,<sp/>0);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(iter);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c"/>
  </compounddef>
</doxygen>
