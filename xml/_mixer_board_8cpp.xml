<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_mixer_board_8cpp" kind="file" language="C++">
    <compoundname>MixerBoard.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">Audacity.h</includes>
    <includes refid="_experimental_8h" local="yes">Experimental.h</includes>
    <includes refid="_mixer_board_8h" local="yes">MixerBoard.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">wx/dcmemory.h</includes>
    <includes local="no">wx/arrimpl.cpp</includes>
    <includes local="no">wx/icon.h</includes>
    <includes local="no">wx/settings.h</includes>
    <includes refid="_a_color_8h" local="yes">AColor.h</includes>
    <includes refid="_audio_i_o_8h" local="yes">AudioIO.h</includes>
    <includes refid="_project_8h" local="yes">Project.h</includes>
    <includes refid="_track_panel_8h" local="yes">TrackPanel.h</includes>
    <includes refid="_undo_manager_8h" local="yes">UndoManager.h</includes>
    <includes refid="_wave_track_8h" local="yes">WaveTrack.h</includes>
    <includes refid="_meter_8h" local="yes">widgets/Meter.h</includes>
    <includes refid="_musical_instruments_8h" local="yes">../images/MusicalInstruments.h</includes>
    <includes local="yes">../images/AudacityLogo48x48.xpm</includes>
    <incdepgraph>
      <node id="49038">
        <label>wx/dir.h</label>
      </node>
      <node id="49045">
        <label>wx/choice.h</label>
      </node>
      <node id="49084">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="48978" relation="include">
        </childnode>
        <childnode refid="49016" relation="include">
        </childnode>
        <childnode refid="49067" relation="include">
        </childnode>
        <childnode refid="49047" relation="include">
        </childnode>
        <childnode refid="49024" relation="include">
        </childnode>
        <childnode refid="48979" relation="include">
        </childnode>
        <childnode refid="49085" relation="include">
        </childnode>
        <childnode refid="49081" relation="include">
        </childnode>
        <childnode refid="49066" relation="include">
        </childnode>
        <childnode refid="49021" relation="include">
        </childnode>
        <childnode refid="49086" relation="include">
        </childnode>
        <childnode refid="48993" relation="include">
        </childnode>
      </node>
      <node id="48984">
        <label>wx/hashmap.h</label>
      </node>
      <node id="48977">
        <label>C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp</label>
        <link refid="MixerBoard.cpp"/>
        <childnode refid="48978" relation="include">
        </childnode>
        <childnode refid="48979" relation="include">
        </childnode>
        <childnode refid="48981" relation="include">
        </childnode>
        <childnode refid="49003" relation="include">
        </childnode>
        <childnode refid="49004" relation="include">
        </childnode>
        <childnode refid="49005" relation="include">
        </childnode>
        <childnode refid="49006" relation="include">
        </childnode>
        <childnode refid="49007" relation="include">
        </childnode>
        <childnode refid="49008" relation="include">
        </childnode>
        <childnode refid="49011" relation="include">
        </childnode>
        <childnode refid="49019" relation="include">
        </childnode>
        <childnode refid="49075" relation="include">
        </childnode>
        <childnode refid="49082" relation="include">
        </childnode>
        <childnode refid="49083" relation="include">
        </childnode>
        <childnode refid="49087" relation="include">
        </childnode>
        <childnode refid="49091" relation="include">
        </childnode>
        <childnode refid="49114" relation="include">
        </childnode>
      </node>
      <node id="49070">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="49099">
        <label>MusicalInstruments/electric_piano_pno_key.xpm</label>
      </node>
      <node id="49069">
        <label>wx/gauge.h</label>
      </node>
      <node id="49027">
        <label>wx/ffile.h</label>
      </node>
      <node id="49013">
        <label>wx/event.h</label>
      </node>
      <node id="49090">
        <label>wx/font.h</label>
      </node>
      <node id="49059">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="49017" relation="include">
        </childnode>
        <childnode refid="49051" relation="include">
        </childnode>
        <childnode refid="49060" relation="include">
        </childnode>
      </node>
      <node id="48997">
        <label>wx/dcclient.h</label>
      </node>
      <node id="49037">
        <label>wx/cmdline.h</label>
      </node>
      <node id="48995">
        <label>ImageRoll.h</label>
        <link refid="_image_roll_8h"/>
        <childnode refid="48996" relation="include">
        </childnode>
        <childnode refid="48997" relation="include">
        </childnode>
        <childnode refid="48980" relation="include">
        </childnode>
        <childnode refid="48998" relation="include">
        </childnode>
        <childnode refid="48986" relation="include">
        </childnode>
        <childnode refid="48999" relation="include">
        </childnode>
      </node>
      <node id="49011">
        <label>AudioIO.h</label>
        <link refid="_audio_i_o_8h"/>
        <childnode refid="49012" relation="include">
        </childnode>
        <childnode refid="48978" relation="include">
        </childnode>
        <childnode refid="48979" relation="include">
        </childnode>
        <childnode refid="49013" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="49015" relation="include">
        </childnode>
        <childnode refid="49016" relation="include">
        </childnode>
      </node>
      <node id="49050">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="49017" relation="include">
        </childnode>
        <childnode refid="49051" relation="include">
        </childnode>
        <childnode refid="49052" relation="include">
        </childnode>
        <childnode refid="49053" relation="include">
        </childnode>
        <childnode refid="49001" relation="include">
        </childnode>
      </node>
      <node id="49107">
        <label>MusicalInstruments/synth.xpm</label>
      </node>
      <node id="49104">
        <label>MusicalInstruments/sax.xpm</label>
      </node>
      <node id="49087">
        <label>widgets/Meter.h</label>
        <link refid="_meter_8h"/>
        <childnode refid="48980" relation="include">
        </childnode>
        <childnode refid="48986" relation="include">
        </childnode>
        <childnode refid="49002" relation="include">
        </childnode>
        <childnode refid="49016" relation="include">
        </childnode>
        <childnode refid="49088" relation="include">
        </childnode>
      </node>
      <node id="49094">
        <label>MusicalInstruments/back_vocal_bg_vox.xpm</label>
      </node>
      <node id="49065">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="49018" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="49066" relation="include">
        </childnode>
      </node>
      <node id="49075">
        <label>TrackPanel.h</label>
        <link refid="_track_panel_8h"/>
        <childnode refid="48991" relation="include">
        </childnode>
        <childnode refid="48993" relation="include">
        </childnode>
        <childnode refid="49004" relation="include">
        </childnode>
        <childnode refid="48986" relation="include">
        </childnode>
        <childnode refid="49002" relation="include">
        </childnode>
        <childnode refid="48994" relation="include">
        </childnode>
        <childnode refid="48979" relation="include">
        </childnode>
        <childnode refid="49017" relation="include">
        </childnode>
        <childnode refid="49076" relation="include">
        </childnode>
        <childnode refid="49029" relation="include">
        </childnode>
        <childnode refid="49078" relation="include">
        </childnode>
        <childnode refid="49079" relation="include">
        </childnode>
        <childnode refid="49080" relation="include">
        </childnode>
      </node>
      <node id="49024">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="48978" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="49025" relation="include">
        </childnode>
        <childnode refid="49026" relation="include">
        </childnode>
      </node>
      <node id="49095">
        <label>MusicalInstruments/clap.xpm</label>
      </node>
      <node id="49031">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="49030">
        <label>wx/wxchar.h</label>
      </node>
      <node id="48985">
        <label>wx/image.h</label>
      </node>
      <node id="49010">
        <label>wx/pen.h</label>
      </node>
      <node id="48982">
        <label>wx/frame.h</label>
      </node>
      <node id="49047">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="49015" relation="include">
        </childnode>
        <childnode refid="48978" relation="include">
        </childnode>
      </node>
      <node id="49052">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="49017" relation="include">
        </childnode>
      </node>
      <node id="49109">
        <label>MusicalInstruments/trumpet_horn.xpm</label>
      </node>
      <node id="49023">
        <label>wx/utils.h</label>
      </node>
      <node id="49091">
        <label>../images/MusicalInstruments.h</label>
        <link refid="_musical_instruments_8h"/>
        <childnode refid="49092" relation="include">
        </childnode>
        <childnode refid="49093" relation="include">
        </childnode>
        <childnode refid="49094" relation="include">
        </childnode>
        <childnode refid="49095" relation="include">
        </childnode>
        <childnode refid="49096" relation="include">
        </childnode>
        <childnode refid="49097" relation="include">
        </childnode>
        <childnode refid="49098" relation="include">
        </childnode>
        <childnode refid="49099" relation="include">
        </childnode>
        <childnode refid="49100" relation="include">
        </childnode>
        <childnode refid="49101" relation="include">
        </childnode>
        <childnode refid="49102" relation="include">
        </childnode>
        <childnode refid="49103" relation="include">
        </childnode>
        <childnode refid="49104" relation="include">
        </childnode>
        <childnode refid="49105" relation="include">
        </childnode>
        <childnode refid="49106" relation="include">
        </childnode>
        <childnode refid="49107" relation="include">
        </childnode>
        <childnode refid="49108" relation="include">
        </childnode>
        <childnode refid="49109" relation="include">
        </childnode>
        <childnode refid="49110" relation="include">
        </childnode>
        <childnode refid="49111" relation="include">
        </childnode>
        <childnode refid="49112" relation="include">
        </childnode>
        <childnode refid="49113" relation="include">
        </childnode>
      </node>
      <node id="49111">
        <label>MusicalInstruments/vibraphone_vibes.xpm</label>
      </node>
      <node id="49068">
        <label>wx/evtloop.h</label>
      </node>
      <node id="48979">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="48980" relation="include">
        </childnode>
      </node>
      <node id="49002">
        <label>wx/timer.h</label>
      </node>
      <node id="49081">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="49028">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="48993" relation="include">
        </childnode>
        <childnode refid="49029" relation="include">
        </childnode>
      </node>
      <node id="49064">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="49055">
        <label>wx/fileconf.h</label>
      </node>
      <node id="49057">
        <label>map</label>
      </node>
      <node id="49078">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="49060">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="49017" relation="include">
        </childnode>
        <childnode refid="49052" relation="include">
        </childnode>
        <childnode refid="49050" relation="include">
        </childnode>
        <childnode refid="49051" relation="include">
        </childnode>
        <childnode refid="49058" relation="include">
        </childnode>
        <childnode refid="49059" relation="include">
        </childnode>
      </node>
      <node id="48996">
        <label>wx/dc.h</label>
      </node>
      <node id="49085">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="48979" relation="include">
        </childnode>
      </node>
      <node id="49071">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="48978" relation="include">
        </childnode>
      </node>
      <node id="48989">
        <label>wx/stattext.h</label>
      </node>
      <node id="49043">
        <label>wx/socket.h</label>
      </node>
      <node id="49073">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="49051">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="49017" relation="include">
        </childnode>
      </node>
      <node id="49007">
        <label>wx/settings.h</label>
      </node>
      <node id="49021">
        <label>wx/list.h</label>
      </node>
      <node id="49034">
        <label>wx/menu.h</label>
      </node>
      <node id="49092">
        <label>MusicalInstruments/acoustic_guitar_gtr.xpm</label>
      </node>
      <node id="48980">
        <label>wx/defs.h</label>
      </node>
      <node id="48994">
        <label>wx/window.h</label>
      </node>
      <node id="49103">
        <label>MusicalInstruments/perc.xpm</label>
      </node>
      <node id="49040">
        <label>wx/intl.h</label>
      </node>
      <node id="49067">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="48978" relation="include">
        </childnode>
        <childnode refid="48980" relation="include">
        </childnode>
        <childnode refid="49001" relation="include">
        </childnode>
        <childnode refid="49068" relation="include">
        </childnode>
        <childnode refid="49069" relation="include">
        </childnode>
        <childnode refid="48989" relation="include">
        </childnode>
        <childnode refid="49023" relation="include">
        </childnode>
      </node>
      <node id="49114">
        <label>../images/AudacityLogo48x48.xpm</label>
      </node>
      <node id="48983">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="49017">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="49018" relation="include">
        </childnode>
      </node>
      <node id="49000">
        <label>widgets/ASlider.h</label>
        <link refid="_a_slider_8h"/>
        <childnode refid="48979" relation="include">
        </childnode>
        <childnode refid="48980" relation="include">
        </childnode>
        <childnode refid="48994" relation="include">
        </childnode>
        <childnode refid="49001" relation="include">
        </childnode>
        <childnode refid="48986" relation="include">
        </childnode>
        <childnode refid="49002" relation="include">
        </childnode>
      </node>
      <node id="49056">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="48980" relation="include">
        </childnode>
        <childnode refid="48998" relation="include">
        </childnode>
        <childnode refid="49055" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="49057" relation="include">
        </childnode>
        <childnode refid="49050" relation="include">
        </childnode>
        <childnode refid="49058" relation="include">
        </childnode>
        <childnode refid="49059" relation="include">
        </childnode>
        <childnode refid="49060" relation="include">
        </childnode>
      </node>
      <node id="49001">
        <label>wx/dialog.h</label>
      </node>
      <node id="48990">
        <label>widgets/AButton.h</label>
        <link refid="_a_button_8h"/>
        <childnode refid="48991" relation="include">
        </childnode>
        <childnode refid="48993" relation="include">
        </childnode>
        <childnode refid="48985" relation="include">
        </childnode>
        <childnode refid="48994" relation="include">
        </childnode>
        <childnode refid="48995" relation="include">
        </childnode>
      </node>
      <node id="49022">
        <label>wx/filename.h</label>
      </node>
      <node id="49048">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="48979" relation="include">
        </childnode>
        <childnode refid="49045" relation="include">
        </childnode>
        <childnode refid="49001" relation="include">
        </childnode>
        <childnode refid="49013" relation="include">
        </childnode>
        <childnode refid="49049" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="49050" relation="include">
        </childnode>
        <childnode refid="49056" relation="include">
        </childnode>
        <childnode refid="49061" relation="include">
        </childnode>
      </node>
      <node id="49079">
        <label>Snap.h</label>
        <link refid="_snap_8h"/>
        <childnode refid="48993" relation="include">
        </childnode>
        <childnode refid="48980" relation="include">
        </childnode>
        <childnode refid="48998" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="49076" relation="include">
        </childnode>
      </node>
      <node id="49076">
        <label>widgets/NumericTextCtrl.h</label>
        <link refid="_numeric_text_ctrl_8h"/>
        <childnode refid="48980" relation="include">
        </childnode>
        <childnode refid="48998" relation="include">
        </childnode>
        <childnode refid="49013" relation="include">
        </childnode>
        <childnode refid="48986" relation="include">
        </childnode>
        <childnode refid="48989" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="49077" relation="include">
        </childnode>
        <childnode refid="48978" relation="include">
        </childnode>
      </node>
      <node id="49053">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="49054" relation="include">
        </childnode>
        <childnode refid="49037" relation="include">
        </childnode>
        <childnode refid="49055" relation="include">
        </childnode>
        <childnode refid="49040" relation="include">
        </childnode>
      </node>
      <node id="49112">
        <label>MusicalInstruments/vocal_vox.xpm</label>
      </node>
      <node id="49009">
        <label>wx/brush.h</label>
      </node>
      <node id="49096">
        <label>MusicalInstruments/drums_dr.xpm</label>
      </node>
      <node id="49033">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="48979" relation="include">
        </childnode>
        <childnode refid="48991" relation="include">
        </childnode>
        <childnode refid="48993" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="48998" relation="include">
        </childnode>
        <childnode refid="49034" relation="include">
        </childnode>
        <childnode refid="48984" relation="include">
        </childnode>
        <childnode refid="49035" relation="include">
        </childnode>
        <childnode refid="49024" relation="include">
        </childnode>
        <childnode refid="49017" relation="include">
        </childnode>
      </node>
      <node id="49113">
        <label>MusicalInstruments/_default_instrument.xpm</label>
      </node>
      <node id="48978">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="49046">
        <label>wx/grid.h</label>
      </node>
      <node id="49101">
        <label>MusicalInstruments/loop.xpm</label>
      </node>
      <node id="48987">
        <label>wx/scrolwin.h</label>
      </node>
      <node id="48993">
        <label>vector</label>
      </node>
      <node id="49093">
        <label>MusicalInstruments/acoustic_piano_pno.xpm</label>
      </node>
      <node id="49061">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="48978" relation="include">
        </childnode>
        <childnode refid="48991" relation="include">
        </childnode>
        <childnode refid="49062" relation="include">
        </childnode>
        <childnode refid="48983" relation="include">
        </childnode>
        <childnode refid="48998" relation="include">
        </childnode>
        <childnode refid="49040" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="49063" relation="include">
        </childnode>
        <childnode refid="49052" relation="include">
        </childnode>
        <childnode refid="49050" relation="include">
        </childnode>
        <childnode refid="48979" relation="include">
        </childnode>
        <childnode refid="49029" relation="include">
        </childnode>
        <childnode refid="49064" relation="include">
        </childnode>
        <childnode refid="49065" relation="include">
        </childnode>
        <childnode refid="49067" relation="include">
        </childnode>
      </node>
      <node id="48998">
        <label>wx/dynarray.h</label>
      </node>
      <node id="49100">
        <label>MusicalInstruments/kick.xpm</label>
      </node>
      <node id="49019">
        <label>Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="48978" relation="include">
        </childnode>
        <childnode refid="48979" relation="include">
        </childnode>
        <childnode refid="49020" relation="include">
        </childnode>
        <childnode refid="49028" relation="include">
        </childnode>
        <childnode refid="49031" relation="include">
        </childnode>
        <childnode refid="49032" relation="include">
        </childnode>
        <childnode refid="49033" relation="include">
        </childnode>
        <childnode refid="49048" relation="include">
        </childnode>
        <childnode refid="49024" relation="include">
        </childnode>
        <childnode refid="49070" relation="include">
        </childnode>
        <childnode refid="49071" relation="include">
        </childnode>
        <childnode refid="48980" relation="include">
        </childnode>
        <childnode refid="49013" relation="include">
        </childnode>
        <childnode refid="49042" relation="include">
        </childnode>
        <childnode refid="49072" relation="include">
        </childnode>
        <childnode refid="49073" relation="include">
        </childnode>
        <childnode refid="48982" relation="include">
        </childnode>
        <childnode refid="49040" relation="include">
        </childnode>
        <childnode refid="48997" relation="include">
        </childnode>
        <childnode refid="49074" relation="include">
        </childnode>
      </node>
      <node id="49110">
        <label>MusicalInstruments/turntable.xpm</label>
      </node>
      <node id="49058">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="49017" relation="include">
        </childnode>
        <childnode refid="49052" relation="include">
        </childnode>
        <childnode refid="49051" relation="include">
        </childnode>
      </node>
      <node id="49102">
        <label>MusicalInstruments/organ_org.xpm</label>
      </node>
      <node id="49008">
        <label>AColor.h</label>
        <link refid="_a_color_8h"/>
        <childnode refid="49009" relation="include">
        </childnode>
        <childnode refid="49010" relation="include">
        </childnode>
      </node>
      <node id="49014">
        <label>wx/string.h</label>
      </node>
      <node id="49105">
        <label>MusicalInstruments/snare.xpm</label>
      </node>
      <node id="49035">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="48978" relation="include">
        </childnode>
        <childnode refid="49036" relation="include">
        </childnode>
        <childnode refid="49037" relation="include">
        </childnode>
        <childnode refid="49038" relation="include">
        </childnode>
        <childnode refid="49013" relation="include">
        </childnode>
        <childnode refid="49039" relation="include">
        </childnode>
        <childnode refid="49040" relation="include">
        </childnode>
        <childnode refid="49041" relation="include">
        </childnode>
        <childnode refid="49042" relation="include">
        </childnode>
        <childnode refid="49043" relation="include">
        </childnode>
        <childnode refid="49002" relation="include">
        </childnode>
        <childnode refid="49044" relation="include">
        </childnode>
        <childnode refid="49047" relation="include">
        </childnode>
        <childnode refid="48979" relation="include">
        </childnode>
      </node>
      <node id="49049">
        <label>wx/listbox.h</label>
      </node>
      <node id="49086">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="49012">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="49042">
        <label>wx/log.h</label>
      </node>
      <node id="49003">
        <label>math.h</label>
      </node>
      <node id="48981">
        <label>MixerBoard.h</label>
        <link refid="_mixer_board_8h"/>
        <childnode refid="48979" relation="include">
        </childnode>
        <childnode refid="48982" relation="include">
        </childnode>
        <childnode refid="48983" relation="include">
        </childnode>
        <childnode refid="48984" relation="include">
        </childnode>
        <childnode refid="48985" relation="include">
        </childnode>
        <childnode refid="48986" relation="include">
        </childnode>
        <childnode refid="48987" relation="include">
        </childnode>
        <childnode refid="48988" relation="include">
        </childnode>
        <childnode refid="48989" relation="include">
        </childnode>
        <childnode refid="48990" relation="include">
        </childnode>
        <childnode refid="49000" relation="include">
        </childnode>
      </node>
      <node id="49020">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="49021" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="49022" relation="include">
        </childnode>
        <childnode refid="48984" relation="include">
        </childnode>
        <childnode refid="49023" relation="include">
        </childnode>
        <childnode refid="49017" relation="include">
        </childnode>
        <childnode refid="49024" relation="include">
        </childnode>
      </node>
      <node id="49029">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="48978" relation="include">
        </childnode>
        <childnode refid="48979" relation="include">
        </childnode>
        <childnode refid="48980" relation="include">
        </childnode>
        <childnode refid="49030" relation="include">
        </childnode>
        <childnode refid="49003" relation="include">
        </childnode>
      </node>
      <node id="49018">
        <label>wx/arrstr.h</label>
      </node>
      <node id="49041">
        <label>wx/snglinst.h</label>
      </node>
      <node id="49080">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="48978" relation="include">
        </childnode>
        <childnode refid="48991" relation="include">
        </childnode>
        <childnode refid="48993" relation="include">
        </childnode>
        <childnode refid="48998" relation="include">
        </childnode>
        <childnode refid="49013" relation="include">
        </childnode>
        <childnode refid="49081" relation="include">
        </childnode>
        <childnode refid="49066" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="48979" relation="include">
        </childnode>
        <childnode refid="49016" relation="include">
        </childnode>
        <childnode refid="49024" relation="include">
        </childnode>
      </node>
      <node id="49015">
        <label>wx/thread.h</label>
      </node>
      <node id="49072">
        <label>wx/dragimag.h</label>
      </node>
      <node id="49097">
        <label>MusicalInstruments/electric_bass_guitar_bs_gtr.xpm</label>
      </node>
      <node id="48988">
        <label>wx/statbmp.h</label>
      </node>
      <node id="49063">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="49106">
        <label>MusicalInstruments/string_violin_cello.xpm</label>
      </node>
      <node id="48991">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="48992" relation="include">
        </childnode>
      </node>
      <node id="49044">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="48980" relation="include">
        </childnode>
        <childnode refid="49045" relation="include">
        </childnode>
        <childnode refid="48998" relation="include">
        </childnode>
        <childnode refid="49013" relation="include">
        </childnode>
        <childnode refid="49046" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="48994" relation="include">
        </childnode>
      </node>
      <node id="49062">
        <label>set</label>
      </node>
      <node id="49074">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="48979" relation="include">
        </childnode>
      </node>
      <node id="49036">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="49066">
        <label>wx/longlong.h</label>
      </node>
      <node id="48986">
        <label>wx/panel.h</label>
      </node>
      <node id="49083">
        <label>WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="49080" relation="include">
        </childnode>
        <childnode refid="49016" relation="include">
        </childnode>
        <childnode refid="49084" relation="include">
        </childnode>
        <childnode refid="48979" relation="include">
        </childnode>
        <childnode refid="49067" relation="include">
        </childnode>
        <childnode refid="48993" relation="include">
        </childnode>
        <childnode refid="49081" relation="include">
        </childnode>
        <childnode refid="49066" relation="include">
        </childnode>
        <childnode refid="49015" relation="include">
        </childnode>
        <childnode refid="49078" relation="include">
        </childnode>
      </node>
      <node id="49089">
        <label>wx/bitmap.h</label>
      </node>
      <node id="49082">
        <label>UndoManager.h</label>
        <link refid="_undo_manager_8h"/>
        <childnode refid="48991" relation="include">
        </childnode>
        <childnode refid="48993" relation="include">
        </childnode>
        <childnode refid="49014" relation="include">
        </childnode>
        <childnode refid="49047" relation="include">
        </childnode>
        <childnode refid="49029" relation="include">
        </childnode>
      </node>
      <node id="49006">
        <label>wx/icon.h</label>
      </node>
      <node id="49025">
        <label>stdio.h</label>
      </node>
      <node id="48999">
        <label>wx/version.h</label>
      </node>
      <node id="49077">
        <label>wx/textctrl.h</label>
      </node>
      <node id="49016">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="48978" relation="include">
        </childnode>
        <childnode refid="48980" relation="include">
        </childnode>
        <childnode refid="49017" relation="include">
        </childnode>
      </node>
      <node id="49054">
        <label>locale.h</label>
      </node>
      <node id="49039">
        <label>wx/docview.h</label>
      </node>
      <node id="49108">
        <label>MusicalInstruments/tambo.xpm</label>
      </node>
      <node id="49004">
        <label>wx/dcmemory.h</label>
      </node>
      <node id="49005">
        <label>wx/arrimpl.cpp</label>
      </node>
      <node id="49088">
        <label>Ruler.h</label>
        <link refid="_ruler_8h"/>
        <childnode refid="49089" relation="include">
        </childnode>
        <childnode refid="48996" relation="include">
        </childnode>
        <childnode refid="49004" relation="include">
        </childnode>
        <childnode refid="49013" relation="include">
        </childnode>
        <childnode refid="49090" relation="include">
        </childnode>
        <childnode refid="48986" relation="include">
        </childnode>
        <childnode refid="48994" relation="include">
        </childnode>
        <childnode refid="48979" relation="include">
        </childnode>
      </node>
      <node id="48992">
        <label>memory</label>
      </node>
      <node id="49098">
        <label>MusicalInstruments/electric_guitar_gtr.xpm</label>
      </node>
      <node id="49026">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="49018" relation="include">
        </childnode>
        <childnode refid="48998" relation="include">
        </childnode>
        <childnode refid="49027" relation="include">
        </childnode>
      </node>
      <node id="49032">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="49014" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" prot="public" static="no">
        <name>kInset</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="121" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" prot="public" static="no">
        <name>kDoubleInset</name>
        <initializer>(2 * <ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="122" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_mixer_board_8cpp_1a5ee887524017859f5b59932f6df8dc15" prot="public" static="no">
        <name>kTripleInset</name>
        <initializer>(3 * <ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="123" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_mixer_board_8cpp_1a02682053e334a2556fde39183dd0bcf9" prot="public" static="no">
        <name>kQuadrupleInset</name>
        <initializer>(4 * <ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="124" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_mixer_board_8cpp_1a7979342a76cff74c0a0bc43cd5b14b34" prot="public" static="no">
        <name>TRACK_NAME_HEIGHT</name>
        <initializer>18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="126" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_mixer_board_8cpp_1acf44c071d292940c7e2422171e885ee2" prot="public" static="no">
        <name>MUSICAL_INSTRUMENT_HEIGHT_AND_WIDTH</name>
        <initializer>48</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="127" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_mixer_board_8cpp_1a97057d4174bc585c7b47f4989329d587" prot="public" static="no">
        <name>MUTE_SOLO_HEIGHT</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="128" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_mixer_board_8cpp_1af8e3432e29e214665cc49da898f42b19" prot="public" static="no">
        <name>PAN_HEIGHT</name>
        <initializer>24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="129" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_mixer_board_8cpp_1af17f9b4dfab635972964e336e6125e81" prot="public" static="no">
        <name>kLeftSideStackWidth</name>
        <initializer><ref refid="_mixer_board_8cpp_1acf44c071d292940c7e2422171e885ee2" kindref="member">MUSICAL_INSTRUMENT_HEIGHT_AND_WIDTH</ref> - <ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="131" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_mixer_board_8cpp_1a1c91fbcdb121fbb4fe77ddd86564271a" prot="public" static="no">
        <name>kRightSideStackWidth</name>
        <initializer><ref refid="_mixer_board_8cpp_1acf44c071d292940c7e2422171e885ee2" kindref="member">MUSICAL_INSTRUMENT_HEIGHT_AND_WIDTH</ref> + <ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="132" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_mixer_board_8cpp_1ae56daa3eceb1236d74b531740c913ae1" prot="public" static="no">
        <name>kMixerTrackClusterWidth</name>
        <initializer><ref refid="_mixer_board_8cpp_1af17f9b4dfab635972964e336e6125e81" kindref="member">kLeftSideStackWidth</ref> + <ref refid="_mixer_board_8cpp_1a1c91fbcdb121fbb4fe77ddd86564271a" kindref="member">kRightSideStackWidth</ref> + <ref refid="_mixer_board_8cpp_1a02682053e334a2556fde39183dd0bcf9" kindref="member">kQuadrupleInset</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="133" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_mixer_board_8cpp_1ab809deb2f3b3489b22ac0408e8a4c57b" prot="public" static="no">
        <name>MIXER_BOARD_MIN_HEIGHT</name>
        <initializer>460</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="951" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="951" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_mixer_board_8cpp_1aadf033a3fa7629f599603473c50d82d1" prot="public" static="no">
        <name>MIXER_BOARD_MIN_WIDTH</name>
        <initializer><ref refid="_mixer_board_8cpp_1a5ee887524017859f5b59932f6df8dc15" kindref="member">kTripleInset</ref> + <ref refid="_mixer_board_8cpp_1ae56daa3eceb1236d74b531740c913ae1" kindref="member">kMixerTrackClusterWidth</ref> + <ref refid="_mixer_board_8cpp_1a5ee887524017859f5b59932f6df8dc15" kindref="member">kTripleInset</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="954" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="954" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70" prot="public" static="no">
        <name>@314</name>
        <enumvalue id="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70a1e9f768681302d1fdd68f6b1100f1d44" prot="public">
          <name>ID_BITMAPBUTTON_MUSICAL_INSTRUMENT</name>
          <initializer>= 13000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70a4d7fb6a4a33dc6b7e443a00623e1e902" prot="public">
          <name>ID_SLIDER_PAN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70a9d857fc99e3a2544f7fed64322cc8f74" prot="public">
          <name>ID_SLIDER_GAIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70aaa087c8f4f7af1fd0abe38e46f8a7dcd" prot="public">
          <name>ID_TOGGLEBUTTON_MUTE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70acd61beb65928b919cc463b10a01a6a16" prot="public">
          <name>ID_TOGGLEBUTTON_SOLO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="135" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="135" bodyend="141"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_mixer_board_8cpp_1ac704a08bc6ba65f1818dd1b7f27e4050" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxSize</type>
        <definition>const wxSize kDefaultSize</definition>
        <argsstring></argsstring>
        <name>kDefaultSize</name>
        <initializer>=
   wxSize(<ref refid="_mixer_board_8cpp_1aadf033a3fa7629f599603473c50d82d1" kindref="member">MIXER_BOARD_MIN_WIDTH</ref>, <ref refid="_mixer_board_8cpp_1ab809deb2f3b3489b22ac0408e8a4c57b" kindref="member">MIXER_BOARD_MIN_HEIGHT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="1744" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" bodystart="1744" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_mixer_board_8cpp_1a264c80382eba8379056bfe599ee5ded4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WX_DEFINE_OBJARRAY</definition>
        <argsstring>(MusicalInstrumentArray)</argsstring>
        <name>WX_DEFINE_OBJARRAY</name>
        <param>
          <type>MusicalInstrumentArray</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp" line="907" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>MixerBoard.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Vaughan<sp/>Johnson,<sp/>January<sp/>2007</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_8h" kindref="compound">Audacity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_experimental_8h" kindref="compound">Experimental.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mixer_board_8h" kindref="compound">MixerBoard.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcmemory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/arrimpl.cpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/icon.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/settings.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>wxSystemSettings::GetColour<sp/>and<sp/>wxSystemSettings::GetMetric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_color_8h" kindref="compound">AColor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audio_i_o_8h" kindref="compound">AudioIO.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&quot;<ref refid="_note_track_8h" kindref="compound">NoteTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_project_8h" kindref="compound">Project.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_track_panel_8h" kindref="compound">TrackPanel.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>EVT_TRACK_PANEL_TIMER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_undo_manager_8h" kindref="compound">UndoManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wave_track_8h" kindref="compound">WaveTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_meter_8h" kindref="compound">widgets/Meter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../images/MusicalInstruments.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WXMSW__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&quot;../images/AudacityLogo.xpm&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&quot;../images/AudacityLogo48x48.xpm&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>MixerTrackSlider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_mixer_track_slider" kindref="compound">MixerTrackSlider</ref>,<sp/><ref refid="class_a_slider" kindref="compound">ASlider</ref>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>EVT_MOUSE_EVENTS(<ref refid="class_mixer_track_slider" kindref="compound">MixerTrackSlider</ref>::OnMouseEvent)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>EVT_SET_FOCUS(<ref refid="class_mixer_track_slider" kindref="compound">MixerTrackSlider</ref>::OnFocus)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>EVT_KILL_FOCUS(<ref refid="class_mixer_track_slider" kindref="compound">MixerTrackSlider</ref>::OnFocus)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>EVT_COMMAND(wxID_ANY,<sp/>EVT_CAPTURE_KEY,<sp/><ref refid="class_mixer_track_slider" kindref="compound">MixerTrackSlider</ref>::OnCaptureKey)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_mixer_track_slider_1aec023bfee16e071fb17d039cd533d7ff" refkind="member"><highlight class="normal"><ref refid="class_mixer_track_slider" kindref="compound">MixerTrackSlider</ref>::<ref refid="class_mixer_track_slider" kindref="compound">MixerTrackSlider</ref>(wxWindow<sp/>*<sp/>parent,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxString<sp/>&amp;<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxPoint<sp/>&amp;<sp/>pos,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxSize<sp/>&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a5a176513c7f83ab7518d32ef1dba5b81" kindref="member">style</ref><sp/></highlight><highlight class="comment">/*=<sp/>FRAC_SLIDER*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>popup<sp/></highlight><highlight class="comment">/*=<sp/>true*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>canUseShift<sp/></highlight><highlight class="comment">/*=<sp/>true*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stepValue<sp/></highlight><highlight class="comment">/*=<sp/>STEP_CONTINUOUS*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orientation<sp/></highlight><highlight class="comment">/*=<sp/>wxHORIZONTAL*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">:<sp/><ref refid="class_a_slider" kindref="compound">ASlider</ref>(parent,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>name,<sp/>pos,<sp/>size,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>style,<sp/>popup,<sp/>canUseShift,<sp/>stepValue,<sp/>orientation)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_mixer_track_slider_1a5e71baffeee50a9895247d0cb41bfc8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_slider_1a5e71baffeee50a9895247d0cb41bfc8b" kindref="member">MixerTrackSlider::OnMouseEvent</ref>(wxMouseEvent<sp/>&amp;event)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_slider_1ab405ec3d285db010b6083a25044260f4" kindref="member">ASlider::OnMouseEvent</ref>(event);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.ButtonUp())</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>*<sp/>pMixerTrackCluster<sp/>=<sp/>(<ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>*)(this-&gt;GetParent());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_a_slider_1a4fbd041793a160628540d5866b885f32" kindref="member">mStyle</ref>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_a_slider_8h_1a1c4be6cf196868391b902a0d55cd0610" kindref="member">DB_SLIDER</ref>:<sp/>pMixerTrackCluster-&gt;<ref refid="class_mixer_track_cluster_1a35f7c0a5591debf3af6330129a44a7ac" kindref="member">HandleSliderGain</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_a_slider_8h_1a8940cfa7fb646d61bdb06f5c72ad9674" kindref="member">PAN_SLIDER</ref>:<sp/>pMixerTrackCluster-&gt;<ref refid="class_mixer_track_cluster_1af43ffa2b18afd972a5a10e09fab6ab61" kindref="member">HandleSliderPan</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>no-op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_mixer_track_slider_1a502e8e5b4c95c81d912060fa43df2a14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_slider_1a502e8e5b4c95c81d912060fa43df2a14" kindref="member">MixerTrackSlider::OnFocus</ref>(wxFocusEvent<sp/>&amp;event)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.GetEventType()<sp/>==<sp/>wxEVT_KILL_FOCUS)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project_1a6565795f4dde7aa65c854044d81d03ea" kindref="member">AudacityProject::ReleaseKeyboard</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project_1aa01e7e07556ae3ebb90b060dcd4395b1" kindref="member">AudacityProject::CaptureKeyboard</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_mixer_track_slider_1a1e7e042331bae4d04dab95f1b72d3841" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_slider_1a1e7e042331bae4d04dab95f1b72d3841" kindref="member">MixerTrackSlider::OnCaptureKey</ref>(wxCommandEvent<sp/>&amp;event)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>wxKeyEvent<sp/>*kevent<sp/>=<sp/>(wxKeyEvent<sp/>*)event.GetEventObject();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyCode<sp/>=<sp/>kevent-&gt;GetKeyCode();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>LEFT/RIGHT/UP/DOWN/PAGEUP/PAGEDOWN<sp/>through<sp/>for<sp/>input/output<sp/>sliders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyCode<sp/>==<sp/>WXK_LEFT<sp/>||<sp/>keyCode<sp/>==<sp/>WXK_RIGHT<sp/>||</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyCode<sp/>==<sp/>WXK_UP<sp/>||<sp/>keyCode<sp/>==<sp/>WXK_DOWN<sp/>||</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyCode<sp/>==<sp/>WXK_PAGEUP<sp/>||<sp/>keyCode<sp/>==<sp/>WXK_PAGEDOWN)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>MixerTrackCluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>kInset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>kDoubleInset<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2<sp/>*<sp/>kInset)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="_mixer_board_8cpp_1a5ee887524017859f5b59932f6df8dc15" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>kTripleInset<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(3<sp/>*<sp/>kInset)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="_mixer_board_8cpp_1a02682053e334a2556fde39183dd0bcf9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>kQuadrupleInset<sp/><sp/><sp/><sp/>(4<sp/>*<sp/>kInset)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="_mixer_board_8cpp_1a7979342a76cff74c0a0bc43cd5b14b34" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACK_NAME_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="_mixer_board_8cpp_1acf44c071d292940c7e2422171e885ee2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MUSICAL_INSTRUMENT_HEIGHT_AND_WIDTH<sp/><sp/>48</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="_mixer_board_8cpp_1a97057d4174bc585c7b47f4989329d587" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MUTE_SOLO_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="_mixer_board_8cpp_1af8e3432e29e214665cc49da898f42b19" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAN_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="_mixer_board_8cpp_1af17f9b4dfab635972964e336e6125e81" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>kLeftSideStackWidth<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MUSICAL_INSTRUMENT_HEIGHT_AND_WIDTH<sp/>-<sp/>kDoubleInset<sp/>//vvv<sp/>Change<sp/>when<sp/>numbers<sp/>shown<sp/>on<sp/>slider<sp/>scale.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="_mixer_board_8cpp_1a1c91fbcdb121fbb4fe77ddd86564271a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>kRightSideStackWidth<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MUSICAL_INSTRUMENT_HEIGHT_AND_WIDTH<sp/>+<sp/>kDoubleInset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="_mixer_board_8cpp_1ae56daa3eceb1236d74b531740c913ae1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>kMixerTrackClusterWidth<sp/><sp/><sp/><sp/><sp/>kLeftSideStackWidth<sp/>+<sp/>kRightSideStackWidth<sp/>+<sp/>kQuadrupleInset<sp/>//<sp/>kDoubleInset<sp/>margin<sp/>on<sp/>both<sp/>sides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="136" refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70a1e9f768681302d1fdd68f6b1100f1d44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70a1e9f768681302d1fdd68f6b1100f1d44" kindref="member">ID_BITMAPBUTTON_MUSICAL_INSTRUMENT</ref><sp/>=<sp/>13000,</highlight></codeline>
<codeline lineno="137" refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70a4d7fb6a4a33dc6b7e443a00623e1e902" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70a4d7fb6a4a33dc6b7e443a00623e1e902" kindref="member">ID_SLIDER_PAN</ref>,</highlight></codeline>
<codeline lineno="138" refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70a9d857fc99e3a2544f7fed64322cc8f74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70a9d857fc99e3a2544f7fed64322cc8f74" kindref="member">ID_SLIDER_GAIN</ref>,</highlight></codeline>
<codeline lineno="139" refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70aaa087c8f4f7af1fd0abe38e46f8a7dcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70aaa087c8f4f7af1fd0abe38e46f8a7dcd" kindref="member">ID_TOGGLEBUTTON_MUTE</ref>,</highlight></codeline>
<codeline lineno="140" refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70acd61beb65928b919cc463b10a01a6a16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70acd61beb65928b919cc463b10a01a6a16" kindref="member">ID_TOGGLEBUTTON_SOLO</ref>,</highlight></codeline>
<codeline lineno="141"><highlight class="normal">};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>,<sp/>wxPanel)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>EVT_MOUSE_EVENTS(<ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>::<ref refid="class_mixer_track_slider_1a5e71baffeee50a9895247d0cb41bfc8b" kindref="member">OnMouseEvent</ref>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>EVT_PAINT(<ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>::<ref refid="class_a_slider_1acecc5d52dc168694be614be386e17850" kindref="member">OnPaint</ref>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<ref refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70a1e9f768681302d1fdd68f6b1100f1d44" kindref="member">ID_BITMAPBUTTON_MUSICAL_INSTRUMENT</ref>,<sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>::OnButton_MusicalInstrument)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>EVT_SLIDER(<ref refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70a4d7fb6a4a33dc6b7e443a00623e1e902" kindref="member">ID_SLIDER_PAN</ref>,<sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>::OnSlider_Pan)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>EVT_SLIDER(<ref refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70a9d857fc99e3a2544f7fed64322cc8f74" kindref="member">ID_SLIDER_GAIN</ref>,<sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>::OnSlider_Gain)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//v<sp/>EVT_COMMAND_SCROLL(ID_SLIDER_GAIN,<sp/>MixerTrackCluster::OnSliderScroll_Gain)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>EVT_COMMAND(<ref refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70aaa087c8f4f7af1fd0abe38e46f8a7dcd" kindref="member">ID_TOGGLEBUTTON_MUTE</ref>,<sp/>wxEVT_COMMAND_BUTTON_CLICKED,<sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>::OnButton_Mute)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>EVT_COMMAND(<ref refid="_mixer_board_8cpp_1acf031a18714fab9c47677ce9eba30e70acd61beb65928b919cc463b10a01a6a16" kindref="member">ID_TOGGLEBUTTON_SOLO</ref>,<sp/>wxEVT_COMMAND_BUTTON_CLICKED,<sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>::OnButton_Solo)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class_mixer_track_cluster_1a8afe056ea42bf3ea1f051e641f69f691" refkind="member"><highlight class="normal"><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>::<ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>(wxWindow*<sp/>parent,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mixer_board" kindref="compound">MixerBoard</ref>*<sp/>grandParent,<sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>*<sp/>project,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pLeftTrack,<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pRightTrack<sp/></highlight><highlight class="comment">/*=<sp/>NULL*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxPoint&amp;<sp/>pos<sp/></highlight><highlight class="comment">/*=<sp/>wxDefaultPosition*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxSize&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/></highlight><highlight class="comment">/*=<sp/>wxDefaultSize*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">:<sp/>wxPanel(parent,<sp/>-1,<sp/>pos,<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/>mMixerBoard<sp/>=<sp/>grandParent;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>mProject<sp/>=<sp/>project;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pLeftTrack-&gt;GetKind()<sp/>==<sp/>Track::Note)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLeftTrack<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mNoteTrack<sp/>=<sp/>(<ref refid="class_note_track" kindref="compound">NoteTrack</ref>*)<sp/>pLeftTrack;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrack<sp/>=<sp/>pLeftTrack;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(pLeftTrack-&gt;GetKind()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrack<sp/>=<sp/>mLeftTrack<sp/>=<sp/>pLeftTrack;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mNoteTrack<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(pLeftTrack-&gt;GetKind()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/>mLeftTrack<sp/>=<sp/>pLeftTrack;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>mRightTrack<sp/>=<sp/>pRightTrack;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>SetName(mLeftTrack-&gt;GetName());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/>this-&gt;SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_3DFACE));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>sure<sp/>why,<sp/>but<sp/>sizers<sp/>weren&apos;t<sp/>getting<sp/>offset<sp/>vertically,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>probably<sp/>because<sp/>not<sp/>using<sp/>wxDefaultPosition,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>positions<sp/>are<sp/>calculated<sp/>explicitly<sp/>below,<sp/>and<sp/>sizers<sp/>code<sp/>was<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Still<sp/>available<sp/>in<sp/>Audacity_UmixIt<sp/>branch<sp/>off<sp/>1.2.6.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>wxPoint<sp/>ctrlPos(<ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref>,<sp/><ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/>wxSize<sp/>ctrlSize(size.GetWidth()<sp/>-<sp/><ref refid="_mixer_board_8cpp_1a02682053e334a2556fde39183dd0bcf9" kindref="member">kQuadrupleInset</ref>,<sp/><ref refid="_mixer_board_8cpp_1a7979342a76cff74c0a0bc43cd5b14b34" kindref="member">TRACK_NAME_HEIGHT</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/>mStaticText_TrackName<sp/>=</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/>wxStaticText(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>-1,<sp/>mTrack-&gt;GetName(),<sp/>ctrlPos,<sp/>ctrlSize,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxALIGN_CENTRE<sp/>|<sp/>wxST_NO_AUTORESIZE<sp/>|<sp/>wxSUNKEN_BORDER);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/>wxStaticText(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>-1,<sp/>mLeftTrack-&gt;GetName(),<sp/>ctrlPos,<sp/>ctrlSize,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxALIGN_CENTRE<sp/>|<sp/>0x0001<sp/>|<sp/>wxBORDER_SUNKEN);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//v<sp/>Useful<sp/>when<sp/>different<sp/>tracks<sp/>are<sp/>different<sp/>colors,<sp/>but<sp/>not<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mStaticText_TrackName-&gt;SetBackgroundColour(this-&gt;GetTrackColor());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gain<sp/>slider<sp/>at<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>ctrlPos.x<sp/>=<sp/><ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>ctrlPos.y<sp/>+=<sp/><ref refid="_mixer_board_8cpp_1a7979342a76cff74c0a0bc43cd5b14b34" kindref="member">TRACK_NAME_HEIGHT</ref><sp/>+<sp/><ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGainSliderHeight<sp/>=</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size.GetHeight()<sp/>-<sp/>ctrlPos.y<sp/>-<sp/><ref refid="_mixer_board_8cpp_1a02682053e334a2556fde39183dd0bcf9" kindref="member">kQuadrupleInset</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>ctrlSize.Set(<ref refid="_mixer_board_8cpp_1af17f9b4dfab635972964e336e6125e81" kindref="member">kLeftSideStackWidth</ref><sp/>-<sp/><ref refid="_mixer_board_8cpp_1a02682053e334a2556fde39183dd0bcf9" kindref="member">kQuadrupleInset</ref>,<sp/>nGainSliderHeight);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mNoteTrack)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSlider_Gain<sp/>=</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_mixer_track_slider_1aec023bfee16e071fb17d039cd533d7ff" kindref="member">MixerTrackSlider</ref>(</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ID_SLIDER_GAIN,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>title<sp/>of<sp/>the<sp/>MIDI<sp/>Velocity<sp/>slider<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Velocity&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrlPos,<sp/>ctrlSize,<sp/>VEL_SLIDER,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>0.0,<sp/>wxVERTICAL);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>mSlider_Gain<sp/>=</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_mixer_track_slider_1aec023bfee16e071fb17d039cd533d7ff" kindref="member">MixerTrackSlider</ref>(</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ID_SLIDER_GAIN,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>title<sp/>of<sp/>the<sp/>Gain<sp/>slider,<sp/>used<sp/>to<sp/>adjust<sp/>the<sp/>volume<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Gain&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrlPos,<sp/>ctrlSize,<sp/><ref refid="_a_slider_8h_1a1c4be6cf196868391b902a0d55cd0610" kindref="member">DB_SLIDER</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>0.0,<sp/>wxVERTICAL);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/>mSlider_Gain-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Gain&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/>this-&gt;UpdateGain();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>controls<sp/>and<sp/>meter<sp/>at<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>musical<sp/>instrument<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/>ctrlPos.x<sp/>+=<sp/><ref refid="_mixer_board_8cpp_1af17f9b4dfab635972964e336e6125e81" kindref="member">kLeftSideStackWidth</ref><sp/>+<sp/><ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref>;<sp/></highlight><highlight class="comment">//<sp/>+<sp/>kInset<sp/>to<sp/>center<sp/>it<sp/>in<sp/>right<sp/>side<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/>ctrlSize.Set(<ref refid="_mixer_board_8cpp_1acf44c071d292940c7e2422171e885ee2" kindref="member">MUSICAL_INSTRUMENT_HEIGHT_AND_WIDTH</ref>,<sp/><ref refid="_mixer_board_8cpp_1acf44c071d292940c7e2422171e885ee2" kindref="member">MUSICAL_INSTRUMENT_HEIGHT_AND_WIDTH</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/>wxBitmap*<sp/>bitmap<sp/>=<sp/>mMixerBoard-&gt;GetMusicalInstrumentBitmap(mTrack-&gt;GetName());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/>wxBitmap*<sp/>bitmap<sp/>=<sp/>mMixerBoard-&gt;GetMusicalInstrumentBitmap(mLeftTrack);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(bitmap);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/>mBitmapButton_MusicalInstrument<sp/>=</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/>wxBitmapButton(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ID_BITMAPBUTTON_MUSICAL_INSTRUMENT,<sp/>*bitmap,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrlPos,<sp/>ctrlSize,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxBU_AUTODRAW,<sp/>wxDefaultValidator,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Musical<sp/>Instrument&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/>mBitmapButton_MusicalInstrument-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Musical<sp/>Instrument&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pan<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/>ctrlPos.x<sp/>-=<sp/><ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref>;<sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>inset<sp/>for<sp/>instrument,<sp/>so<sp/>Pan<sp/>is<sp/>at<sp/>leftmost<sp/>of<sp/>left<sp/>side<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>ctrlPos.y<sp/>+=<sp/><ref refid="_mixer_board_8cpp_1acf44c071d292940c7e2422171e885ee2" kindref="member">MUSICAL_INSTRUMENT_HEIGHT_AND_WIDTH</ref><sp/>+<sp/><ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/>ctrlSize.Set(<ref refid="_mixer_board_8cpp_1a1c91fbcdb121fbb4fe77ddd86564271a" kindref="member">kRightSideStackWidth</ref>,<sp/><ref refid="_mixer_board_8cpp_1af8e3432e29e214665cc49da898f42b19" kindref="member">PAN_HEIGHT</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>width<sp/>of<sp/>the<sp/>pan<sp/>slider<sp/>must<sp/>be<sp/>odd<sp/>(don&apos;t<sp/>ask).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(ctrlSize.x<sp/>&amp;<sp/>1))</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ctrlSize.x--;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/>mSlider_Pan<sp/>=</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_mixer_track_slider_1aec023bfee16e071fb17d039cd533d7ff" kindref="member">MixerTrackSlider</ref>(</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ID_SLIDER_PAN,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>Title<sp/>of<sp/>the<sp/>Pan<sp/>slider,<sp/>used<sp/>to<sp/>move<sp/>the<sp/>sound<sp/>left<sp/>or<sp/>right<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Pan&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrlPos,<sp/>ctrlSize,<sp/><ref refid="_a_slider_8h_1a8940cfa7fb646d61bdb06f5c72ad9674" kindref="member">PAN_SLIDER</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/>mSlider_Pan-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Pan&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/>this-&gt;UpdatePan();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mute/solo<sp/>buttons<sp/>stacked<sp/>below<sp/>Pan<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>ctrlPos.y<sp/>+=<sp/><ref refid="_mixer_board_8cpp_1af8e3432e29e214665cc49da898f42b19" kindref="member">PAN_HEIGHT</ref><sp/>+<sp/><ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>ctrlSize.Set(mMixerBoard-&gt;mMuteSoloWidth,<sp/><ref refid="_mixer_board_8cpp_1a97057d4174bc585c7b47f4989329d587" kindref="member">MUTE_SOLO_HEIGHT</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>mToggleButton_Mute<sp/>=</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_a_button" kindref="compound">AButton</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ID_TOGGLEBUTTON_MUTE,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrlPos,<sp/>ctrlSize,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(mMixerBoard-&gt;mImageMuteUp),<sp/>*(mMixerBoard-&gt;mImageMuteOver),</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(mMixerBoard-&gt;mImageMuteDown),<sp/>*(mMixerBoard-&gt;mImageMuteDisabled),</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>toggle<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/>mToggleButton_Mute-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Mute&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/>mToggleButton_Mute-&gt;SetAlternateImages(</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(mMixerBoard-&gt;mImageMuteUp),<sp/>*(mMixerBoard-&gt;mImageMuteOver),</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(mMixerBoard-&gt;mImageMuteDown),<sp/>*(mMixerBoard-&gt;mImageMuteDisabled));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/>this-&gt;UpdateMute();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>ctrlPos.y<sp/>+=<sp/><ref refid="_mixer_board_8cpp_1a97057d4174bc585c7b47f4989329d587" kindref="member">MUTE_SOLO_HEIGHT</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/>mToggleButton_Solo<sp/>=</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/>AButton(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ID_TOGGLEBUTTON_SOLO,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrlPos,<sp/>ctrlSize,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(mMixerBoard-&gt;mImageSoloUp),<sp/>*(mMixerBoard-&gt;mImageSoloOver),</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(mMixerBoard-&gt;mImageSoloDown),<sp/>*(mMixerBoard-&gt;mImageSoloDisabled),</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>toggle<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>mToggleButton_Solo-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Solo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>this-&gt;UpdateSolo();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSoloNone<sp/>=<sp/>mProject-&gt;IsSoloNone();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/>mToggleButton_Solo-&gt;Show(!bSoloNone);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>meter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/>ctrlPos.y<sp/>+=<sp/>(bSoloNone<sp/>?<sp/>0<sp/>:<sp/><ref refid="_mixer_board_8cpp_1a97057d4174bc585c7b47f4989329d587" kindref="member">MUTE_SOLO_HEIGHT</ref>)<sp/>+<sp/>kDoubleInset;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMeterHeight<sp/>=</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nGainSliderHeight<sp/>-</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="_mixer_board_8cpp_1acf44c071d292940c7e2422171e885ee2" kindref="member">MUSICAL_INSTRUMENT_HEIGHT_AND_WIDTH</ref><sp/>+<sp/><ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref>)<sp/>-</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="_mixer_board_8cpp_1af8e3432e29e214665cc49da898f42b19" kindref="member">PAN_HEIGHT</ref><sp/>+<sp/>kDoubleInset)<sp/>-</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="_mixer_board_8cpp_1a97057d4174bc585c7b47f4989329d587" kindref="member">MUTE_SOLO_HEIGHT</ref><sp/>+<sp/>(bSoloNone<sp/>?<sp/>0<sp/>:<sp/><ref refid="_mixer_board_8cpp_1a97057d4174bc585c7b47f4989329d587" kindref="member">MUTE_SOLO_HEIGHT</ref>)<sp/>+<sp/>kDoubleInset);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/>ctrlSize.Set(<ref refid="_mixer_board_8cpp_1a1c91fbcdb121fbb4fe77ddd86564271a" kindref="member">kRightSideStackWidth</ref>,<sp/>nMeterHeight);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLeftTrack)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>mMeter<sp/>=</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_meter" kindref="compound">Meter</ref>(<ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>(),<sp/></highlight><highlight class="comment">//<sp/>AudacityProject*<sp/>project,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>-1,<sp/></highlight><highlight class="comment">//<sp/>wxWindow*<sp/>parent,<sp/>wxWindowID<sp/>id,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>bool<sp/>isInput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrlPos,<sp/>ctrlSize,<sp/></highlight><highlight class="comment">//<sp/>const<sp/>wxPoint&amp;<sp/>pos<sp/>=<sp/>wxDefaultPosition,<sp/>const<sp/>wxSize&amp;<sp/>size<sp/>=<sp/>wxDefaultSize,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9a32a97b9333a5c48c9b0a1d923e03c6e6" kindref="member">Meter::MixerTrackCluster</ref>);<sp/></highlight><highlight class="comment">//<sp/>Style<sp/>style<sp/>=<sp/>HorizontalStereo,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/>mMeter-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Signal<sp/>Level<sp/>Meter&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMeter<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>wxUSE_TOOLTIPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mStaticText_TrackName-&gt;SetToolTip(mTrack-&gt;GetName());</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mStaticText_TrackName-&gt;SetToolTip(mLeftTrack-&gt;GetName());</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mToggleButton_Mute-&gt;SetToolTip(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Mute&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mToggleButton_Solo-&gt;SetToolTip(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Solo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLeftTrack)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMeter-&gt;SetToolTip(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Signal<sp/>Level<sp/>Meter&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif<sp/>//<sp/>wxUSE_TOOLTIPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>__WXMAC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxSizeEvent<sp/>event(GetSize(),<sp/>GetId());</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.SetEventObject(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetEventHandler()-&gt;ProcessEvent(event);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UpdateGain();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="class_mixer_track_cluster_1a98b201a8f3adc5ef5c747498c7e8f4cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_cluster_1a98b201a8f3adc5ef5c747498c7e8f4cb" kindref="member">MixerTrackCluster::UpdatePrefs</ref>()</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/>mMeter-&gt;UpdatePrefs();<sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>meter<sp/>range<sp/>has<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>HandleResize();<sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>prefs<sp/>&quot;/GUI/Solo&quot;<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="class_mixer_track_cluster_1a317d98ff2f4e68525a75bc5d7f20882b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_cluster_1a317d98ff2f4e68525a75bc5d7f20882b" kindref="member">MixerTrackCluster::HandleResize</ref>()<sp/></highlight><highlight class="comment">//<sp/>For<sp/>wxSizeEvents,<sp/>update<sp/>gain<sp/>slider<sp/>and<sp/>meter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>wxSize<sp/>scrolledWindowClientSize<sp/>=<sp/>this-&gt;GetParent()-&gt;GetClientSize();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newClusterHeight<sp/>=</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scrolledWindowClientSize.GetHeight()<sp/>-<sp/><ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref><sp/>-<sp/></highlight><highlight class="comment">//<sp/>nClusterHeight<sp/>from<sp/>MixerBoard::UpdateTrackClusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxSystemSettings::GetMetric(wxSYS_HSCROLL_Y)<sp/>+<sp/></highlight><highlight class="comment">//<sp/>wxScrolledWindow::GetClientSize<sp/>doesn&apos;t<sp/>account<sp/>for<sp/>its<sp/>scrollbar<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/>this-&gt;SetSize(-1,<sp/>newClusterHeight);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>only<sp/>the<sp/>heights<sp/>of<sp/>mSlider_Gain<sp/>and<sp/>mMeter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>update<sp/>shown<sp/>status<sp/>of<sp/>mToggleButton_Solo,<sp/>which<sp/>affects<sp/>top<sp/>of<sp/>mMeter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGainSliderHeight<sp/>=</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newClusterHeight<sp/>-</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref><sp/>+<sp/></highlight><highlight class="comment">//<sp/>margin<sp/>above<sp/>mStaticText_TrackName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1a7979342a76cff74c0a0bc43cd5b14b34" kindref="member">TRACK_NAME_HEIGHT</ref><sp/>+<sp/><ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref>)<sp/>-<sp/></highlight><highlight class="comment">//<sp/>mStaticText_TrackName<sp/>+<sp/>margin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1a02682053e334a2556fde39183dd0bcf9" kindref="member">kQuadrupleInset</ref>;<sp/></highlight><highlight class="comment">//<sp/>margin<sp/>below<sp/>gain<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/>mSlider_Gain-&gt;SetSize(-1,<sp/>nGainSliderHeight);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSoloNone<sp/>=<sp/>mProject-&gt;IsSoloNone();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/>mToggleButton_Solo-&gt;Show(!bSoloNone);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRequiredHeightAboveMeter<sp/>=</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1acf44c071d292940c7e2422171e885ee2" kindref="member">MUSICAL_INSTRUMENT_HEIGHT_AND_WIDTH</ref><sp/>+<sp/>kDoubleInset<sp/>+</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1af8e3432e29e214665cc49da898f42b19" kindref="member">PAN_HEIGHT</ref><sp/>+<sp/>kDoubleInset<sp/>+</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1a97057d4174bc585c7b47f4989329d587" kindref="member">MUTE_SOLO_HEIGHT</ref><sp/>+<sp/>(bSoloNone<sp/>?<sp/>0<sp/>:<sp/><ref refid="_mixer_board_8cpp_1a97057d4174bc585c7b47f4989329d587" kindref="member">MUTE_SOLO_HEIGHT</ref>)<sp/>+<sp/>kDoubleInset;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMeterY<sp/>=</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kDoubleInset<sp/>+<sp/></highlight><highlight class="comment">//<sp/>margin<sp/>at<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1a7979342a76cff74c0a0bc43cd5b14b34" kindref="member">TRACK_NAME_HEIGHT</ref><sp/>+<sp/>kDoubleInset<sp/>+</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nRequiredHeightAboveMeter;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMeterHeight<sp/>=<sp/>nGainSliderHeight<sp/>-<sp/>nRequiredHeightAboveMeter;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMeter)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/>mMeter-&gt;SetSize(-1,<sp/>nMeterY,<sp/>-1,<sp/>nMeterHeight);</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="class_mixer_track_cluster_1a35f7c0a5591debf3af6330129a44a7ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_cluster_1a35f7c0a5591debf3af6330129a44a7ac" kindref="member">MixerTrackCluster::HandleSliderGain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bWantPushState<sp/></highlight><highlight class="comment">/*=<sp/>false*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fValue<sp/>=<sp/>mSlider_Gain-&gt;Get();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLeftTrack)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLeftTrack-&gt;SetGain(fValue);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mNoteTrack-&gt;SetGain(fValue);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRightTrack)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRightTrack-&gt;SetGain(fValue);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>TrackPanel<sp/>correspondingly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/>mProject-&gt;RefreshTPTrack(mTrack);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/>mProject-&gt;RefreshTPTrack(mLeftTrack);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bWantPushState)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;TP_PushState(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Moved<sp/>gain<sp/>slider&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Gain&quot;</highlight><highlight class="normal">),<sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114acfa76b1aba6d15dde4a0f1ee1057481f" kindref="member">UndoPush::CONSOLIDATE</ref><sp/>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="class_mixer_track_cluster_1af43ffa2b18afd972a5a10e09fab6ab61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_cluster_1af43ffa2b18afd972a5a10e09fab6ab61" kindref="member">MixerTrackCluster::HandleSliderPan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bWantPushState<sp/></highlight><highlight class="comment">/*=<sp/>false*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fValue<sp/>=<sp/>mSlider_Pan-&gt;Get();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLeftTrack)<sp/></highlight><highlight class="comment">//<sp/>test<sp/>in<sp/>case<sp/>track<sp/>is<sp/>a<sp/>NoteTrack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLeftTrack-&gt;SetPan(fValue);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRightTrack)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRightTrack-&gt;SetPan(fValue);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>TrackPanel<sp/>correspondingly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/>mProject-&gt;RefreshTPTrack(mTrack);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/>mProject-&gt;RefreshTPTrack(mLeftTrack);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bWantPushState)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;TP_PushState(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Moved<sp/>pan<sp/>slider&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Pan&quot;</highlight><highlight class="normal">),<sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114acfa76b1aba6d15dde4a0f1ee1057481f" kindref="member">UndoPush::CONSOLIDATE</ref><sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="class_mixer_track_cluster_1a6ee897b910edd878eb6421b460e834d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_cluster_1a6ee897b910edd878eb6421b460e834d6" kindref="member">MixerTrackCluster::ResetMeter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bResetClipping)</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMeter)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMeter-&gt;Reset(mLeftTrack-&gt;GetRate(),<sp/>bResetClipping);</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>used<sp/>by<sp/>TrackPanel<sp/>for<sp/>synchronizing<sp/>control<sp/>states,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>controls<sp/>that<sp/>can<sp/>be<sp/>affected<sp/>by<sp/>state<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="class_mixer_track_cluster_1a451471fefb6f7cc5e2631ed3fcd6be68" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_cluster_1a451471fefb6f7cc5e2631ed3fcd6be68" kindref="member">MixerTrackCluster::UpdateForStateChange</ref>()</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/>this-&gt;UpdateName();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/>this-&gt;UpdatePan();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/>this-&gt;UpdateGain();</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="class_mixer_track_cluster_1a28a7140ddbadb6e7ae682154ec047bb3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_cluster_1a28a7140ddbadb6e7ae682154ec047bb3" kindref="member">MixerTrackCluster::UpdateName</ref>()</highlight></codeline>
<codeline lineno="451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>newName<sp/>=<sp/>mTrack-&gt;GetName();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>newName<sp/>=<sp/>mLeftTrack-&gt;GetName();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/>SetName(newName);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/>mStaticText_TrackName-&gt;SetLabel(newName);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>wxUSE_TOOLTIPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mStaticText_TrackName-&gt;SetToolTip(newName);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/>mBitmapButton_MusicalInstrument-&gt;SetBitmapLabel(</highlight></codeline>
<codeline lineno="463"><highlight class="normal">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(mMixerBoard-&gt;GetMusicalInstrumentBitmap(newName)));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(mMixerBoard-&gt;GetMusicalInstrumentBitmap(mLeftTrack)));</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="class_mixer_track_cluster_1ae7e14b27e6e8daf8230586b7d9061e1d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_cluster_1ae7e14b27e6e8daf8230586b7d9061e1d" kindref="member">MixerTrackCluster::UpdateMute</ref>()</highlight></codeline>
<codeline lineno="471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/>mToggleButton_Mute-&gt;SetAlternateIdx(mTrack-&gt;GetSolo()<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mTrack-&gt;GetMute())</highlight></codeline>
<codeline lineno="475"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/>mToggleButton_Mute-&gt;SetAlternateIdx(mLeftTrack-&gt;GetSolo()<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLeftTrack-&gt;GetMute())</highlight></codeline>
<codeline lineno="478"><highlight class="normal">#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mToggleButton_Mute-&gt;PushDown();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mToggleButton_Mute-&gt;PopUp();</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="class_mixer_track_cluster_1ab70aab06e6de51a697b6ebdd8b874b0f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_cluster_1ab70aab06e6de51a697b6ebdd8b874b0f" kindref="member">MixerTrackCluster::UpdateSolo</ref>()</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsSolo<sp/>=<sp/>mTrack-&gt;GetSolo();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsSolo<sp/>=<sp/>mLeftTrack-&gt;GetSolo();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bIsSolo)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mToggleButton_Solo-&gt;PushDown();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mToggleButton_Solo-&gt;PopUp();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/>mToggleButton_Mute-&gt;SetAlternateIdx(bIsSolo<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="class_mixer_track_cluster_1aea6f953aeba5268cc5dcb1e75264c645" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_cluster_1aea6f953aeba5268cc5dcb1e75264c645" kindref="member">MixerTrackCluster::UpdatePan</ref>()</highlight></codeline>
<codeline lineno="499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mNoteTrack)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSlider_Pan-&gt;Hide();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/>mSlider_Pan-&gt;Set(mLeftTrack-&gt;GetPan());</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="class_mixer_track_cluster_1ad44e54662318d39e14c24f6cb2bd8aa6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_cluster_1ad44e54662318d39e14c24f6cb2bd8aa6" kindref="member">MixerTrackCluster::UpdateGain</ref>()</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mNoteTrack)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSlider_Gain-&gt;SetStyle(VEL_SLIDER);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSlider_Gain-&gt;Set(mNoteTrack-&gt;GetGain());</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/>mSlider_Gain-&gt;SetStyle(<ref refid="_a_slider_8h_1a1c4be6cf196868391b902a0d55cd0610" kindref="member">DB_SLIDER</ref>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/>mSlider_Gain-&gt;Set(mLeftTrack-&gt;GetGain());</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="class_mixer_track_cluster_1a94fcfcb03f9125c9342ae35abe83f7f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_cluster_1a94fcfcb03f9125c9342ae35abe83f7f4" kindref="member">MixerTrackCluster::UpdateMeter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NoteTracks<sp/>do<sp/>not<sp/>(currently)<sp/>register<sp/>on<sp/>meters.<sp/>It<sp/>would<sp/>probably<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>good<sp/>idea<sp/>to<sp/>display<sp/>16<sp/>channel<sp/>&quot;active&quot;<sp/>lights<sp/>rather<sp/>than<sp/>a<sp/>meter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mLeftTrack)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(mLeftTrack<sp/>&amp;&amp;<sp/>(mLeftTrack-&gt;GetKind()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>));</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//vvv<sp/>Vaughan,<sp/>2010-11-27:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE<sp/>TO<sp/>ROGER<sp/>DANNENBERG:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>undid<sp/>the<sp/>mTrack<sp/>hack<sp/>in<sp/>this<sp/>conditional,<sp/>as<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>method<sp/>still<sp/>assumed<sp/>it&apos;s<sp/>a<sp/>wavetrack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>dereferencing<sp/>mLeftTrack<sp/>would<sp/>have<sp/>gotten<sp/>a<sp/>NULL<sp/>pointer<sp/>fault.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>really<sp/>think<sp/>MixerTrackCluster<sp/>should<sp/>be<sp/>factored<sp/>for<sp/>NoteTracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>REPLY:<sp/>I<sp/>think<sp/>bSuccess<sp/>prevents<sp/>dereferencing<sp/>mLeftTrack,<sp/>but<sp/>I<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check.<sp/>We<sp/>should<sp/>talk<sp/>about<sp/>whether<sp/>it&apos;s<sp/>better<sp/>to<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MixerTrackCluster<sp/>or<sp/>more<sp/>fully<sp/>hide<sp/>track<sp/>types<sp/>from<sp/>MixerTrackCluster.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>now,<sp/>out<sp/>change<sp/>plan<sp/>produced<sp/>the<sp/>following:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vaughan,<sp/>2011=10-15:<sp/>There&apos;s<sp/>no<sp/>bSuccess<sp/>here,<sp/>so<sp/>I<sp/>don&apos;t<sp/>know<sp/>what<sp/>you<sp/>mean.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>But<sp/>this<sp/>change<sp/>is<sp/>consistent<sp/>with<sp/>the<sp/>others<sp/>for<sp/>EXPERIMENTAL_MIDI_OUT,<sp/>so<sp/>I<sp/>accept<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((t0<sp/>&lt;<sp/>0.0)<sp/>||<sp/>(t1<sp/>&lt;<sp/>0.0)<sp/>||<sp/>(t0<sp/>&gt;=<sp/>t1)<sp/>||<sp/></highlight><highlight class="comment">//<sp/>bad<sp/>time<sp/>value<sp/>or<sp/>nothing<sp/>to<sp/>show</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((mMixerBoard-&gt;HasSolo()<sp/>||<sp/>mTrack-&gt;GetMute())<sp/>&amp;&amp;<sp/>!mTrack-&gt;GetSolo()))</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((mMixerBoard-&gt;HasSolo()<sp/>||<sp/>mLeftTrack-&gt;GetMute())<sp/>&amp;&amp;<sp/>!mLeftTrack-&gt;GetSolo()))</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//v<sp/>Vaughan,<sp/>2011-02-25:<sp/>Moved<sp/>the<sp/>update<sp/>back<sp/>to<sp/>TrackPanel::OnTimer()<sp/>as<sp/>it<sp/>helps<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>playback<sp/>issues<sp/>reported<sp/>by<sp/>Bill<sp/>and<sp/>noted<sp/>on<sp/>Bug<sp/>258,<sp/>so<sp/>no<sp/>assert.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vaughan,<sp/>2011-02-04:<sp/>Now<sp/>that<sp/>we&apos;re<sp/>updating<sp/>all<sp/>meters<sp/>from<sp/>audacityAudioCallback,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>this<sp/>causes<sp/>an<sp/>assert<sp/>if<sp/>you<sp/>click<sp/>Mute<sp/>while<sp/>playing,<sp/>because<sp/>ResetMeter()<sp/>resets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>timer,<sp/>and<sp/>wxTimerbase<sp/>says<sp/>that<sp/>can<sp/>only<sp/>be<sp/>done<sp/>from<sp/>main<sp/>thread<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>but<sp/>it<sp/>seems<sp/>to<sp/>work<sp/>fine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ResetMeter(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vaughan,<sp/>2010-11-27:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>commented<sp/>out<sp/>code<sp/>is<sp/>flawed.<sp/>Mistaken<sp/>understanding<sp/>of<sp/>&quot;frame&quot;<sp/>vs<sp/>&quot;window&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Caused<sp/>me<sp/>to<sp/>override<sp/>Meter::UpdateDisplay().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>I<sp/>think<sp/>it&apos;s<sp/>got<sp/>a<sp/>good<sp/>idea,<sp/>of<sp/>calling<sp/>WaveTracks&apos;<sp/>GetMinMax<sp/>and<sp/>GetRMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>instead<sp/>of<sp/>passing<sp/>in<sp/>all<sp/>the<sp/>data<sp/>and<sp/>asking<sp/>the<sp/>meter<sp/>to<sp/>derive<sp/>peak<sp/>and<sp/>rms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>May<sp/>be<sp/>worth<sp/>revisiting<sp/>as<sp/>I<sp/>think<sp/>it<sp/>should<sp/>perform<sp/>better,<sp/>because<sp/>it<sp/>uses<sp/>the<sp/>min/max/rms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stored<sp/>in<sp/>blockfiles,<sp/>rather<sp/>than<sp/>calculating<sp/>them,<sp/>but<sp/>for<sp/>now,<sp/>changing<sp/>it<sp/>to<sp/>use<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>original<sp/>Meter::UpdateDisplay().<sp/>New<sp/>code<sp/>is<sp/>below<sp/>the<sp/>previous<sp/>(now<sp/>commented<sp/>out).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>int<sp/>kFramesPerBuffer<sp/>=<sp/>4;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>min;<sp/>//<sp/>dummy,<sp/>since<sp/>it&apos;s<sp/>not<sp/>shown<sp/>in<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//float*<sp/>maxLeft<sp/>=<sp/>new<sp/>float[kFramesPerBuffer];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//float*<sp/>rmsLeft<sp/>=<sp/>new<sp/>float[kFramesPerBuffer];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//float*<sp/>maxRight<sp/>=<sp/>new<sp/>float[kFramesPerBuffer];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//float*<sp/>rmsRight<sp/>=<sp/>new<sp/>float[kFramesPerBuffer];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>bool<sp/>bSuccess<sp/>=<sp/>(mLeftTrack<sp/>!=<sp/>NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>bool<sp/>bSuccess<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>double<sp/>dFrameInterval<sp/>=<sp/>(t1<sp/>-<sp/>t0)<sp/>/<sp/>(double)kFramesPerBuffer;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>dFrameT0<sp/>=<sp/>t0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>dFrameT1<sp/>=<sp/>t0<sp/>+<sp/>dFrameInterval;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>i<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//while<sp/>(bSuccess<sp/>&amp;&amp;<sp/>(i<sp/>&lt;<sp/>kFramesPerBuffer))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>bSuccess<sp/>&amp;=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>mLeftTrack-&gt;GetMinMax(&amp;min,<sp/>&amp;(maxLeft[i]),<sp/>dFrameT0,<sp/>dFrameT1)<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>mLeftTrack-&gt;GetRMS(&amp;(rmsLeft[i]),<sp/>dFrameT0,<sp/>dFrameT1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(bSuccess<sp/>&amp;&amp;<sp/>mRightTrack)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>bSuccess<sp/>&amp;=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRightTrack-&gt;GetMinMax(&amp;min,<sp/>&amp;(maxRight[i]),<sp/>dFrameT0,<sp/>dFrameT1)<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRightTrack-&gt;GetRMS(&amp;(rmsRight[i]),<sp/>dFrameT0,<sp/>dFrameT1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Mono:<sp/>Start<sp/>with<sp/>raw<sp/>values<sp/>same<sp/>as<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>To<sp/>be<sp/>modified<sp/>by<sp/>bWantPostFadeValues<sp/>and<sp/>channel<sp/>pan/gain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>maxRight[i]<sp/>=<sp/>maxLeft[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>rmsRight[i]<sp/>=<sp/>rmsLeft[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>dFrameT0<sp/>+=<sp/>dFrameInterval;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>dFrameT1<sp/>+=<sp/>dFrameInterval;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>i++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>bool<sp/>bWantPostFadeValues<sp/>=<sp/>true;<sp/>//v<sp/>Turn<sp/>this<sp/>into<sp/>a<sp/>checkbox<sp/>on<sp/>MixerBoard?<sp/>For<sp/>now,<sp/>always<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(bSuccess<sp/>&amp;&amp;<sp/>bWantPostFadeValues)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(bSuccess)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kFramesPerBuffer;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>gain<sp/>=<sp/>mLeftTrack-&gt;GetChannelGain(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>maxLeft[i]<sp/>*=<sp/>gain;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>rmsLeft[i]<sp/>*=<sp/>gain;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(mRightTrack)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gain<sp/>=<sp/>mRightTrack-&gt;GetChannelGain(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>maxRight[i]<sp/>*=<sp/>gain;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>rmsRight[i]<sp/>*=<sp/>gain;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>mMeter-&gt;UpdateDisplay(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>//<sp/>If<sp/>mono,<sp/>show<sp/>left<sp/>track<sp/>values<sp/>in<sp/>both<sp/>meters,<sp/>as<sp/>in<sp/>MeterToolBar,<sp/>rather<sp/>than<sp/>kNumChannels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>kFramesPerBuffer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>maxLeft,<sp/>rmsLeft,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>maxRight,<sp/>rmsRight,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>mLeftTrack-&gt;TimeToLongSamples(t1<sp/>-<sp/>t0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//delete[]<sp/>maxLeft;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//delete[]<sp/>rmsLeft;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//delete[]<sp/>maxRight;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//delete[]<sp/>rmsRight;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>startSample<sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)((mLeftTrack-&gt;GetRate()<sp/>*<sp/>t0)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>nFrames<sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)((mLeftTrack-&gt;GetRate()<sp/>*<sp/>(t1<sp/>-<sp/>t0))<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>meterFloatsArray<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>tempFloatsArray<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[nFrames];</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSuccess<sp/>=<sp/>mLeftTrack-&gt;Get((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)tempFloatsArray,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>startSample,<sp/>nFrames);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bSuccess)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>always<sp/>pass<sp/>a<sp/>stereo<sp/>sample<sp/>array<sp/>to<sp/>the<sp/>meter,<sp/>as<sp/>it<sp/>shows<sp/>2<sp/>channels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mono<sp/>shows<sp/>same<sp/>in<sp/>both<sp/>meters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>we&apos;re<sp/>not<sp/>mixing,<sp/>need<sp/>to<sp/>duplicate<sp/>same<sp/>signal<sp/>for<sp/>&quot;right&quot;<sp/>channel<sp/>in<sp/>mono<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meterFloatsArray<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[2<sp/>*<sp/>nFrames];</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Interleave<sp/>for<sp/>stereo.<sp/>Left/mono<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>nFrames;<sp/>index++)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meterFloatsArray[2<sp/>*<sp/>index]<sp/>=<sp/>tempFloatsArray[index];</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRightTrack)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bSuccess<sp/>=<sp/>mRightTrack-&gt;Get((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)tempFloatsArray,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>startSample,<sp/>nFrames);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bSuccess)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Interleave<sp/>right<sp/>channel,<sp/>or<sp/>duplicate<sp/>same<sp/>signal<sp/>for<sp/>&quot;right&quot;<sp/>channel<sp/>in<sp/>mono<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>nFrames;<sp/>index++)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meterFloatsArray[(2<sp/>*<sp/>index)<sp/>+<sp/>1]<sp/>=<sp/>tempFloatsArray[index];</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>bool<sp/>bWantPostFadeValues<sp/>=<sp/>true;<sp/>//v<sp/>Turn<sp/>this<sp/>into<sp/>a<sp/>checkbox<sp/>on<sp/>MixerBoard?<sp/>For<sp/>now,<sp/>always<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(bSuccess<sp/>&amp;&amp;<sp/>bWantPostFadeValues)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bSuccess)</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vvv<sp/>Need<sp/>to<sp/>apply<sp/>envelope,<sp/>too?<sp/>See<sp/>Mixer::MixSameRate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gain<sp/>=<sp/>mLeftTrack-&gt;GetChannelGain(0);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gain<sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>nFrames;<sp/>index++)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meterFloatsArray[2<sp/>*<sp/>index]<sp/>*=<sp/>gain;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRightTrack)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gain<sp/>=<sp/>mRightTrack-&gt;GetChannelGain(1);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gain<sp/>=<sp/>mLeftTrack-&gt;GetChannelGain(1);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gain<sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>nFrames;<sp/>index++)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meterFloatsArray[(2<sp/>*<sp/>index)<sp/>+<sp/>1]<sp/>*=<sp/>gain;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>to<sp/>[-1.0,<sp/>1.0]<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>2<sp/>*<sp/>nFrames;<sp/>index++)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meterFloatsArray[index]<sp/>&lt;<sp/>-1.0)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meterFloatsArray[index]<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meterFloatsArray[index]<sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meterFloatsArray[index]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMeter-&gt;UpdateDisplay(2,<sp/>nFrames,<sp/>meterFloatsArray);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ResetMeter(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>meterFloatsArray;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>tempFloatsArray;</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="comment">//<sp/>private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal">wxColour<sp/>MixerTrackCluster::GetTrackColor()</highlight></codeline>
<codeline lineno="695"><highlight class="normal">{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxColour(102,<sp/>255,<sp/>102);<sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>Meter<sp/>playback<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="comment">//<sp/>event<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerTrackCluster::HandleSelect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bShiftDown)</highlight></codeline>
<codeline lineno="703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bShiftDown)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ShiftDown<sp/>=&gt;<sp/>Just<sp/>toggle<sp/>selection<sp/>on<sp/>this<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSelect<sp/>=<sp/>!mTrack-&gt;GetSelected();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrack-&gt;SetSelected(bSelect);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSelect<sp/>=<sp/>!mLeftTrack-&gt;GetSelected();</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLeftTrack-&gt;SetSelected(bSelect);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRightTrack)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRightTrack-&gt;SetSelected(bSelect);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Refresh<sp/>only<sp/>this<sp/>MixerTrackCluster<sp/>and<sp/>WaveTrack<sp/>in<sp/>TrackPanel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;Refresh(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;RefreshTPTrack(mTrack);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;RefreshTPTrack(mLeftTrack);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exclusive<sp/>select</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;SelectNone();</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrack-&gt;SetSelected(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLeftTrack-&gt;SetSelected(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRightTrack)</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRightTrack-&gt;SetSelected(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mProject-&gt;GetSel0()<sp/>&gt;=<sp/>mProject-&gt;GetSel1())</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>range<sp/>previously<sp/>selected,<sp/>so<sp/>use<sp/>the<sp/>range<sp/>of<sp/>this<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;mViewInfo.selectedRegion.setTimes(</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTrack-&gt;GetOffset(),<sp/>mTrack-&gt;GetEndTime());</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;mViewInfo.selectedRegion.setTimes(</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLeftTrack-&gt;GetOffset(),<sp/>mLeftTrack-&gt;GetEndTime());</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exclusive<sp/>select,<sp/>so<sp/>refresh<sp/>all<sp/>MixerTrackClusters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>This<sp/>could<sp/>just<sp/>be<sp/>a<sp/>call<sp/>to<sp/>wxWindow::Refresh,<sp/>but<sp/>this<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>more<sp/>efficient<sp/>and<sp/>when<sp/>ProjectLogo<sp/>is<sp/>shown<sp/>as<sp/>background,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>it&apos;s<sp/>necessary<sp/>to<sp/>prevent<sp/>blinking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerBoard-&gt;RefreshTrackClusters(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerTrackCluster::OnMouseEvent(wxMouseEvent&amp;<sp/>event)</highlight></codeline>
<codeline lineno="758"><highlight class="normal">{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.ButtonUp())</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;HandleSelect(event.ShiftDown());</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerTrackCluster::OnPaint(wxPaintEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/>wxPaintDC<sp/>dc(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>__WXMAC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>with<sp/>correct<sp/>color,<sp/>not<sp/>scroller<sp/>background.<sp/>Done<sp/>automatically<sp/>on<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a8fe72bc5f4c3e4ab13481740056eb549" kindref="member">AColor::Medium</ref>(&amp;dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(this-&gt;GetClientRect());</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/>wxSize<sp/>clusterSize<sp/>=<sp/>this-&gt;GetSize();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>bev(0,<sp/>0,<sp/>clusterSize.GetWidth()<sp/>-<sp/>1,<sp/>clusterSize.GetHeight()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mTrack-&gt;GetSelected())</highlight></codeline>
<codeline lineno="780"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLeftTrack-&gt;GetSelected())</highlight></codeline>
<codeline lineno="782"><highlight class="normal">#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>4;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/></highlight><highlight class="comment">//<sp/>4<sp/>gives<sp/>a<sp/>big<sp/>bevel,<sp/>but<sp/>there<sp/>were<sp/>complaints<sp/>about<sp/>visibility<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bev.Inflate(-1,<sp/>-1);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerTrackCluster::OnButton_MusicalInstrument(wxCommandEvent&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bShiftDown<sp/>=<sp/><ref refid="window_8cpp_1a6fb42677c51d509690e7062b9dadaa25" kindref="member">::wxGetMouseState</ref>().ShiftDown();</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/>this-&gt;HandleSelect(bShiftDown);</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerTrackCluster::OnSlider_Gain(wxCommandEvent&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/>this-&gt;HandleSliderGain();</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="comment">//v<sp/>void<sp/>MixerTrackCluster::OnSliderScroll_Gain(wxScrollEvent&amp;<sp/>WXUNUSED(event))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>sliderValue<sp/>=<sp/>(int)(mSlider_Gain-&gt;Get());<sp/>//v<sp/>mSlider_Gain-&gt;GetValue();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//#ifdef<sp/>__WXMSW__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>Negate<sp/>because<sp/>wxSlider<sp/>on<sp/>Windows<sp/>has<sp/>min<sp/>at<sp/>top,<sp/>max<sp/>at<sp/>bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>mSlider_Gain-&gt;GetValue()<sp/>is<sp/>in<sp/>[-6,36].<sp/>wxSlider<sp/>has<sp/>min<sp/>at<sp/>top,<sp/>so<sp/>this<sp/>is<sp/>[-36dB,6dB].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>sliderValue<sp/>=<sp/>-sliderValue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//wxString<sp/>str<sp/>=<sp/>_(&quot;Gain:<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(sliderValue<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>str<sp/>+=<sp/>&quot;+&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//str<sp/>+=<sp/>wxString::Format(&quot;%d<sp/>dB&quot;,<sp/>sliderValue);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//mSlider_Gain-&gt;SetToolTip(str);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerTrackCluster::OnSlider_Pan(wxCommandEvent&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/>this-&gt;HandleSliderPan();</highlight></codeline>
<codeline lineno="824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerTrackCluster::OnButton_Mute(wxCommandEvent&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="827"><highlight class="normal">{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/>mProject-&gt;HandleTrackMute(mTrack,<sp/>mToggleButton_Mute-&gt;WasShiftDown());</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/>mToggleButton_Mute-&gt;SetAlternateIdx(mTrack-&gt;GetSolo()<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/>mProject-&gt;HandleTrackMute(mLeftTrack,<sp/>mToggleButton_Mute-&gt;WasShiftDown());</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/>mToggleButton_Mute-&gt;SetAlternateIdx(mLeftTrack-&gt;GetSolo()<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>TrackPanel<sp/>correspondingly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mProject-&gt;IsSoloSimple())</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Have<sp/>to<sp/>refresh<sp/>all<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerBoard-&gt;UpdateSolo();</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;RedrawProject();</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>only<sp/>the<sp/>changed<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;RefreshTPTrack(mTrack);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;RefreshTPTrack(mLeftTrack);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerTrackCluster::OnButton_Solo(wxCommandEvent&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/>mProject-&gt;HandleTrackSolo(mTrack,<sp/>mToggleButton_Solo-&gt;WasShiftDown());</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsSolo<sp/>=<sp/>mTrack-&gt;GetSolo();</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/>mProject-&gt;HandleTrackSolo(mLeftTrack,<sp/>mToggleButton_Solo-&gt;WasShiftDown());</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsSolo<sp/>=<sp/>mLeftTrack-&gt;GetSolo();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/>mToggleButton_Mute-&gt;SetAlternateIdx(bIsSolo<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>TrackPanel<sp/>correspondingly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mProject-&gt;IsSoloSimple())</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Have<sp/>to<sp/>refresh<sp/>all<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerBoard-&gt;UpdateMute();</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerBoard-&gt;UpdateSolo();</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;RedrawProject();</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>only<sp/>the<sp/>changed<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;RefreshTPTrack(mTrack);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;RefreshTPTrack(mLeftTrack);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>MusicalInstrument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883" refid="class_musical_instrument_1a0e3bed530e9c3c0c93fb7916d65b42a8" refkind="member"><highlight class="normal"><ref refid="class_musical_instrument_1a0e3bed530e9c3c0c93fb7916d65b42a8" kindref="member">MusicalInstrument::MusicalInstrument</ref>(wxBitmap*<sp/>pBitmap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>strXPMfilename)</highlight></codeline>
<codeline lineno="884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/>mBitmap<sp/>=<sp/>pBitmap;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nUnderscoreIndex;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>strFilename<sp/>=<sp/>strXPMfilename;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/>strFilename.MakeLower();<sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure,<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>do<sp/>case<sp/>insensitive<sp/>comparison.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>strKeyword;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((nUnderscoreIndex<sp/>=<sp/>strFilename.Find(wxT(</highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">)))<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strKeyword<sp/>=<sp/>strFilename.Left(nUnderscoreIndex);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mKeywords.Add(strKeyword);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strFilename<sp/>=<sp/>strFilename.Mid(nUnderscoreIndex<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strFilename.IsEmpty())<sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>trailing<sp/>underscores.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mKeywords.Add(strFilename);<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>last<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901" refid="class_musical_instrument_1a1e2b23aae391fca9dfb83b7f36c1eab0" refkind="member"><highlight class="normal"><ref refid="class_musical_instrument_1a1e2b23aae391fca9dfb83b7f36c1eab0" kindref="member">MusicalInstrument::~MusicalInstrument</ref>()</highlight></codeline>
<codeline lineno="902"><highlight class="normal">{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mBitmap;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/>mKeywords.Clear();</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><ref refid="_mixer_board_8cpp_1a264c80382eba8379056bfe599ee5ded4" kindref="member">WX_DEFINE_OBJARRAY</ref>(MusicalInstrumentArray);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>MixerBoardScrolledWindow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="comment">//<sp/>wxScrolledWindow<sp/>ignores<sp/>mouse<sp/>clicks<sp/>in<sp/>client<sp/>area,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>they<sp/>don&apos;t<sp/>get<sp/>passed<sp/>to<sp/>Mixerboard.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>catch<sp/>them<sp/>to<sp/>deselect<sp/>all<sp/>track<sp/>clusters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_mixer_board_scrolled_window" kindref="compound">MixerBoardScrolledWindow</ref>,<sp/>wxScrolledWindow)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/>EVT_MOUSE_EVENTS(MixerBoardScrolledWindow::OnMouseEvent)</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920" refid="class_mixer_board_scrolled_window_1aaa81a24cc2ccffefc2374f813e3fdfc7" refkind="member"><highlight class="normal"><ref refid="class_mixer_board_scrolled_window" kindref="compound">MixerBoardScrolledWindow</ref>::<ref refid="class_mixer_board_scrolled_window" kindref="compound">MixerBoardScrolledWindow</ref>(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>*<sp/>project,</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mixer_board" kindref="compound">MixerBoard</ref>*<sp/>parent,<sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*=<sp/>-1*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxPoint&amp;<sp/>pos<sp/></highlight><highlight class="comment">/*=<sp/>wxDefaultPosition*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxSize&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/></highlight><highlight class="comment">/*=<sp/>wxDefaultSize*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a5a176513c7f83ab7518d32ef1dba5b81" kindref="member">style</ref><sp/></highlight><highlight class="comment">/*=<sp/>wxHSCROLL<sp/>|<sp/>wxVSCROLL*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="925"><highlight class="normal">:<sp/>wxScrolledWindow(parent,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos,<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,<sp/><ref refid="namespacelv2specgen_1a5a176513c7f83ab7518d32ef1dba5b81" kindref="member">style</ref>)</highlight></codeline>
<codeline lineno="926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/>mMixerBoard<sp/>=<sp/>parent;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/>mProject<sp/>=<sp/>project;</highlight></codeline>
<codeline lineno="929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931" refid="class_mixer_board_scrolled_window_1a6f3e326ed64536c710b3573a062afd77" refkind="member"><highlight class="normal"><ref refid="class_mixer_board_scrolled_window_1a6f3e326ed64536c710b3573a062afd77" kindref="member">MixerBoardScrolledWindow::~MixerBoardScrolledWindow</ref>()</highlight></codeline>
<codeline lineno="932"><highlight class="normal">{</highlight></codeline>
<codeline lineno="933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerBoardScrolledWindow::OnMouseEvent(wxMouseEvent&amp;<sp/>event)</highlight></codeline>
<codeline lineno="936"><highlight class="normal">{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.ButtonUp())</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//v<sp/>Even<sp/>when<sp/>I<sp/>implement<sp/>MixerBoard::OnMouseEvent<sp/>and<sp/>call<sp/>event.Skip()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here,<sp/>MixerBoard::OnMouseEvent<sp/>never<sp/>gets<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So,<sp/>added<sp/>mProject<sp/>to<sp/>MixerBoardScrolledWindow<sp/>and<sp/>just<sp/>directly<sp/>do<sp/>what&apos;s<sp/>needed<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;SelectNone();</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>MixerBoard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951" refid="_mixer_board_8cpp_1ab809deb2f3b3489b22ac0408e8a4c57b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIXER_BOARD_MIN_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/>460</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>width<sp/>is<sp/>one<sp/>cluster<sp/>wide,<sp/>plus<sp/>margins.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954" refid="_mixer_board_8cpp_1aadf033a3fa7629f599603473c50d82d1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIXER_BOARD_MIN_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/>kTripleInset<sp/>+<sp/>kMixerTrackClusterWidth<sp/>+<sp/>kTripleInset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_mixer_board" kindref="compound">MixerBoard</ref>,<sp/>wxWindow)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/>EVT_SIZE(<ref refid="class_mixer_board" kindref="compound">MixerBoard</ref>::<ref refid="class_a_slider_1afde0c2be13e76f74179a87b6ebaece5a" kindref="member">OnSize</ref>)</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961" refid="class_mixer_board_1aa28f54981ae36fd355d46cc56ee423e2" refkind="member"><highlight class="normal"><ref refid="class_mixer_board" kindref="compound">MixerBoard</ref>::<ref refid="class_mixer_board" kindref="compound">MixerBoard</ref>(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>*<sp/>pProject,</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFrame*<sp/>parent,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxPoint&amp;<sp/>pos<sp/></highlight><highlight class="comment">/*=<sp/>wxDefaultPosition*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxSize&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/></highlight><highlight class="comment">/*=<sp/>wxDefaultSize*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="965"><highlight class="normal">:<sp/>wxWindow(parent,<sp/>-1,<sp/>pos,<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>public<sp/>data<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mute<sp/>&amp;<sp/>solo<sp/>button<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>once<sp/>and<sp/>store<sp/>on<sp/>MixerBoard<sp/>for<sp/>use<sp/>in<sp/>all<sp/>MixerTrackClusters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/>mImageMuteUp<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/>mImageMuteOver<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/>mImageMuteDown<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/>mImageMuteDownWhileSolo<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/>mImageMuteDisabled<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/>mImageSoloUp<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/>mImageSoloOver<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/>mImageSoloDown<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/>mImageSoloDisabled<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/>mMuteSoloWidth<sp/>=<sp/><ref refid="_mixer_board_8cpp_1a1c91fbcdb121fbb4fe77ddd86564271a" kindref="member">kRightSideStackWidth</ref><sp/>-<sp/><ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref>;<sp/></highlight><highlight class="comment">//<sp/>correct<sp/>for<sp/>max<sp/>width,<sp/>but<sp/>really<sp/>set<sp/>in<sp/>MixerBoard::CreateMuteSoloImages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>data<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/>this-&gt;LoadMusicalInstruments();<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>mMusicalInstruments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/>mProject<sp/>=<sp/>pProject;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/>mScrolledWindow<sp/>=</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_mixer_board_scrolled_window" kindref="compound">MixerBoardScrolledWindow</ref>(</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProject,<sp/></highlight><highlight class="comment">//<sp/>AudacityProject*<sp/>project,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>-1,<sp/></highlight><highlight class="comment">//<sp/>wxWindow*<sp/>parent,<sp/>wxWindowID<sp/>id<sp/>=<sp/>-1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;GetClientAreaOrigin(),<sp/></highlight><highlight class="comment">//<sp/>const<sp/>wxPoint&amp;<sp/>pos<sp/>=<sp/>wxDefaultPosition,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size,<sp/></highlight><highlight class="comment">//<sp/>const<sp/>wxSize&amp;<sp/>size<sp/>=<sp/>wxDefaultSize,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxHSCROLL);<sp/></highlight><highlight class="comment">//<sp/>long<sp/>style<sp/>=<sp/>wxHSCROLL<sp/>|<sp/>wxVSCROLL,<sp/>const<sp/>wxString&amp;<sp/>name<sp/>=<sp/>&quot;scrolledWindow&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>background<sp/>color<sp/>to<sp/>same<sp/>as<sp/>TrackPanel<sp/>background.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>EXPERIMENTAL_THEMING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mScrolledWindow-&gt;SetBackgroundColour(this-&gt;GetParent()-&gt;GetBackgroundColour());</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mScrolledWindow-&gt;SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_3DSHADOW));</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/>mScrolledWindow-&gt;SetScrollRate(10,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>no<sp/>vertical<sp/>scroll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/>mScrolledWindow-&gt;SetVirtualSize(size);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>doesn&apos;t<sp/>work<sp/>to<sp/>make<sp/>the<sp/>mScrolledWindow<sp/>automatically<sp/>resize,<sp/>so<sp/>do<sp/>it<sp/>explicitly<sp/>in<sp/>OnSize.</highlight></codeline>
<codeline lineno="1006"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>pBoxSizer<sp/>=<sp/>std::make_unique&lt;wxBoxSizer&gt;(wxVERTICAL);</highlight></codeline>
<codeline lineno="1007"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBoxSizer-&gt;Add(mScrolledWindow,<sp/>0,<sp/>wxExpand,<sp/>0);</highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SetAutoLayout(true);</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SetSizer(pBoxSizer);</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBoxSizer-&gt;Fit(this);</highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBoxSizer-&gt;SetSizeHints(this);</highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/>mPrevT1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/>mTracks<sp/>=<sp/>mProject-&gt;GetTracks();</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Events<sp/>from<sp/>the<sp/>project<sp/>don&apos;t<sp/>propagate<sp/>directly<sp/>to<sp/>this<sp/>other<sp/>frame,<sp/>so...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/>mProject-&gt;Connect(EVT_TRACK_PANEL_TIMER,</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(MixerBoard::OnTimer),</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024" refid="class_mixer_board_1ac7a1eb4a789ad10234d293c2212bd885" refkind="member"><highlight class="normal"><ref refid="class_mixer_board_1ac7a1eb4a789ad10234d293c2212bd885" kindref="member">MixerBoard::~MixerBoard</ref>()</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>public<sp/>data<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mImageMuteUp;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mImageMuteOver;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mImageMuteDown;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mImageMuteDownWhileSolo;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mImageMuteDisabled;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mImageSoloUp;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mImageSoloOver;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mImageSoloDown;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mImageSoloDisabled;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>data<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Clear();</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/>mProject-&gt;Disconnect(EVT_TRACK_PANEL_TIMER,</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(MixerBoard::OnTimer),</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046" refid="class_mixer_board_1ae44f2d9650c4d7256bc63a20f83affd2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1ae44f2d9650c4d7256bc63a20f83affd2" kindref="member">MixerBoard::UpdatePrefs</ref>()</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nClusterIndex<sp/>=<sp/>0;<sp/>nClusterIndex<sp/>&lt;<sp/>mMixerTrackClusters.GetCount();<sp/>nClusterIndex++)</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nClusterIndex]-&gt;UpdatePrefs();</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reassign<sp/>mixer<sp/>input<sp/>strips<sp/>(MixerTrackClusters)<sp/>to<sp/>Track<sp/>Clusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="comment">//<sp/>both<sp/>have<sp/>the<sp/>same<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>EXPERIMENTAL_MIDI_OUT,<sp/>then<sp/>Note<sp/>Tracks<sp/>appear<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mixer,<sp/>and<sp/>we<sp/>must<sp/>be<sp/>able<sp/>to<sp/>convert<sp/>and<sp/>reuse<sp/>a<sp/>MixerTrackCluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>audio<sp/>to<sp/>midi<sp/>or<sp/>midi<sp/>to<sp/>audio.<sp/>This<sp/>task<sp/>is<sp/>handled<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="comment">//<sp/>UpdateForStateChange().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059" refid="class_mixer_board_1a84e9f17f3cfb9618fd70931fa6543aac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1a84e9f17f3cfb9618fd70931fa6543aac" kindref="member">MixerBoard::UpdateTrackClusters</ref>()</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mImageMuteUp)</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;CreateMuteSoloImages();</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nClusterHeight<sp/>=<sp/>mScrolledWindow-&gt;GetClientSize().GetHeight()<sp/>-<sp/><ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref>;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nClusterCount<sp/>=<sp/>mMixerTrackClusters.GetCount();</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nClusterIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iterTracks(mTracks);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>*<sp/>pMixerTrackCluster<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pLeftTrack;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pRightTrack;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/>pLeftTrack<sp/>=<sp/>iterTracks.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pLeftTrack)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pRightTrack<sp/>=<sp/>pLeftTrack-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>()<sp/>?<sp/>iterTracks.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>()<sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pLeftTrack-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>pLeftTrack-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/>Track::Note</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nClusterIndex<sp/>&lt;<sp/>nClusterCount)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Already<sp/>showing<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>clusters<sp/>are<sp/>maintained<sp/>in<sp/>the<sp/>same<sp/>order<sp/>as<sp/>the<sp/>WaveTracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>pointers<sp/>can<sp/>change<sp/>for<sp/>the<sp/>&quot;same&quot;<sp/>track<sp/>for<sp/>different<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>undo<sp/>stack,<sp/>so<sp/>update<sp/>the<sp/>pointers<sp/>and<sp/>display<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pLeftTrack-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/>Track::Note)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nClusterIndex]-&gt;mNoteTrack<sp/>=<sp/>(<ref refid="class_note_track" kindref="compound">NoteTrack</ref>*)pLeftTrack;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nClusterIndex]-&gt;mLeftTrack<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nClusterIndex]-&gt;mNoteTrack<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nClusterIndex]-&gt;mLeftTrack<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)pLeftTrack;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nClusterIndex]-&gt;mLeftTrack<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)pLeftTrack;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nClusterIndex]-&gt;mRightTrack<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)pRightTrack;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nClusterIndex]-&gt;UpdateForStateChange();</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>already<sp/>showing<sp/>it.<sp/>Add<sp/>a<sp/>NEW<sp/>MixerTrackCluster.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxPoint<sp/>clusterPos(</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref><sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extra<sp/>inset<sp/>to<sp/>left<sp/>for<sp/>first<sp/>one,<sp/>so<sp/>it&apos;s<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nClusterIndex<sp/>*</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref><sp/>+<sp/><ref refid="_mixer_board_8cpp_1ae56daa3eceb1236d74b531740c913ae1" kindref="member">kMixerTrackClusterWidth</ref>))<sp/>+<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>margin<sp/>and<sp/>width<sp/>for<sp/>each<sp/>to<sp/>its<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>plus<sp/>left<sp/>margin<sp/>for<sp/>NEW<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref>);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxSize<sp/>clusterSize(<ref refid="_mixer_board_8cpp_1ae56daa3eceb1236d74b531740c913ae1" kindref="member">kMixerTrackClusterWidth</ref>,<sp/>nClusterHeight);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMixerTrackCluster<sp/>=</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>(mScrolledWindow,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>mProject,</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)pLeftTrack,<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)pRightTrack,</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusterPos,<sp/>clusterSize);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMixerTrackCluster)</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters.Add(pMixerTrackCluster);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nClusterIndex++;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pLeftTrack<sp/>=<sp/>iterTracks.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMixerTrackCluster)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Added<sp/>at<sp/>least<sp/>one<sp/>MixerTrackCluster.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;UpdateWidth();</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ResizeTrackClusters();</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nClusterIndex<sp/>&lt;<sp/>nClusterCount)</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ve<sp/>got<sp/>too<sp/>many<sp/>clusters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>can<sp/>happen<sp/>only<sp/>on<sp/>things<sp/>like<sp/>Undo<sp/>New<sp/>Audio<sp/>Track<sp/>or<sp/>Undo<sp/>Import</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>don&apos;t<sp/>call<sp/>RemoveTrackCluster<sp/>explicitly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ve<sp/>already<sp/>updated<sp/>the<sp/>track<sp/>pointers<sp/>for<sp/>the<sp/>clusters<sp/>to<sp/>the<sp/>left,<sp/>so<sp/>just<sp/>remove<sp/>all<sp/>the<sp/>rest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>nClusterIndex<sp/>constant<sp/>and<sp/>successively<sp/>DELETE<sp/>from<sp/>left<sp/>to<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCounter<sp/>=<sp/>nClusterIndex;<sp/>nCounter<sp/>&lt;<sp/>nClusterCount;<sp/>nCounter++)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;RemoveTrackCluster(mMixerTrackClusters[nClusterIndex]-&gt;mTrack);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;RemoveTrackCluster(mMixerTrackClusters[nClusterIndex]-&gt;mLeftTrack);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146" refid="class_mixer_board_1ab692bfed91d635ac20de6771c59e696c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1ab692bfed91d635ac20de6771c59e696c" kindref="member">MixerBoard::GetTrackClustersWidth</ref>()</highlight></codeline>
<codeline lineno="1147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref><sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extra<sp/>margin<sp/>at<sp/>left<sp/>for<sp/>first<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(mMixerTrackClusters.GetCount()<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>tracks<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref><sp/>+<sp/><ref refid="_mixer_board_8cpp_1ae56daa3eceb1236d74b531740c913ae1" kindref="member">kMixerTrackClusterWidth</ref>))<sp/>+<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>margin<sp/>and<sp/>width<sp/>for<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>plus<sp/>final<sp/>right<sp/>margin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1ac1f50e2c959930a996d1db07fb2795fb" kindref="member">MixerBoard::MoveTrackCluster</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pTrack,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bUp)<sp/></highlight><highlight class="comment">//<sp/>Up<sp/>in<sp/>TrackPanel<sp/>is<sp/>left<sp/>in<sp/>MixerBoard.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159" refid="class_mixer_board_1ac1f50e2c959930a996d1db07fb2795fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1ac1f50e2c959930a996d1db07fb2795fb" kindref="member">MixerBoard::MoveTrackCluster</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pTrack,</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bUp)<sp/></highlight><highlight class="comment">//<sp/>Up<sp/>in<sp/>TrackPanel<sp/>is<sp/>left<sp/>in<sp/>MixerBoard.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>*<sp/>pMixerTrackCluster;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex<sp/>=<sp/>FindMixerTrackCluster(pTrack,<sp/>&amp;pMixerTrackCluster);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMixerTrackCluster<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Couldn&apos;t<sp/>find<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/>wxPoint<sp/>pos;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bUp)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>it<sp/>up<sp/>(left).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nIndex<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>already<sp/>first<sp/>(0),<sp/>or<sp/>not<sp/>found<sp/>(-1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>pMixerTrackCluster-&gt;GetPosition();</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nIndex]<sp/>=<sp/>mMixerTrackClusters[nIndex<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nIndex]-&gt;Move(pos);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nIndex<sp/>-<sp/>1]<sp/>=<sp/>pMixerTrackCluster;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMixerTrackCluster-&gt;Move(pos.x<sp/>-<sp/>(<ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref><sp/>+<sp/><ref refid="_mixer_board_8cpp_1ae56daa3eceb1236d74b531740c913ae1" kindref="member">kMixerTrackClusterWidth</ref>),<sp/>pos.y);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>it<sp/>down<sp/>(right).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)nIndex<sp/>+<sp/>1)<sp/>&gt;=<sp/>mMixerTrackClusters.GetCount())</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>already<sp/>last.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>pMixerTrackCluster-&gt;GetPosition();</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nIndex]<sp/>=<sp/>mMixerTrackClusters[nIndex<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nIndex]-&gt;Move(pos);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nIndex<sp/>+<sp/>1]<sp/>=<sp/>pMixerTrackCluster;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMixerTrackCluster-&gt;Move(pos.x<sp/>+<sp/>(<ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref><sp/>+<sp/><ref refid="_mixer_board_8cpp_1ae56daa3eceb1236d74b531740c913ae1" kindref="member">kMixerTrackClusterWidth</ref>),<sp/>pos.y);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1aeb48716b9845f75acadffea0682c8bb8" kindref="member">MixerBoard::RemoveTrackCluster</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pTrack)</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198" refid="class_mixer_board_1aeb48716b9845f75acadffea0682c8bb8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1aeb48716b9845f75acadffea0682c8bb8" kindref="member">MixerBoard::RemoveTrackCluster</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pTrack)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>and<sp/>destroy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>*<sp/>pMixerTrackCluster;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex<sp/>=<sp/>this-&gt;FindMixerTrackCluster(pTrack,<sp/>&amp;pMixerTrackCluster);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMixerTrackCluster<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Couldn&apos;t<sp/>find<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/>mMixerTrackClusters.RemoveAt(nIndex);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/>pMixerTrackCluster-&gt;Destroy();<sp/></highlight><highlight class="comment">//<sp/>DELETE<sp/>is<sp/>unsafe<sp/>on<sp/>wxWindow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>gap,<sp/>if<sp/>any.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/>wxPoint<sp/>pos;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>targetX;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>nIndex;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mMixerTrackClusters.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>mMixerTrackClusters[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;GetPosition();</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>targetX<sp/>=</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref><sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extra<sp/>inset<sp/>to<sp/>left<sp/>for<sp/>first<sp/>one,<sp/>so<sp/>it&apos;s<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>*<sp/>(<ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref><sp/>+<sp/><ref refid="_mixer_board_8cpp_1ae56daa3eceb1236d74b531740c913ae1" kindref="member">kMixerTrackClusterWidth</ref>))<sp/>+<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>margin<sp/>and<sp/>width<sp/>for<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>plus<sp/>left<sp/>margin<sp/>for<sp/>this<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos.x<sp/>!=<sp/>targetX)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;Move(targetX,<sp/>pos.y);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/>this-&gt;UpdateWidth();</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>check:<sp/>if<sp/>there<sp/>is<sp/>still<sp/>a<sp/>MixerTrackCluster<sp/>with<sp/>pTrack,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>deleted<sp/>the<sp/>first<sp/>but<sp/>should<sp/>have<sp/>deleted<sp/>the<sp/>last:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/>FindMixerTrackCluster(pTrack,<sp/>&amp;pMixerTrackCluster);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(pMixerTrackCluster<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal">wxBitmap*<sp/><ref refid="class_mixer_board_1a0f9baae7831c0001722a1a7adb8eaef1" kindref="member">MixerBoard::GetMusicalInstrumentBitmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238" refid="class_mixer_board_1a0f9baae7831c0001722a1a7adb8eaef1" refkind="member"><highlight class="normal">wxBitmap*<sp/><ref refid="class_mixer_board_1a0f9baae7831c0001722a1a7adb8eaef1" kindref="member">MixerBoard::GetMusicalInstrumentBitmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pLeftTrack)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMusicalInstruments.IsEmpty())</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>random<sp/>choice:<sp/><sp/><sp/><sp/>return<sp/>mMusicalInstruments[(int)pLeftTrack<sp/>%<sp/>mMusicalInstruments.GetCount()].mBitmap;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>strTrackName(name.MakeLower());</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>strTrackName(pLeftTrack-&gt;<ref refid="class_track_1a670b88686f99e151d6a305a709f130b1" kindref="member">GetName</ref>().MakeLower());</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nBestItemIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBestScore<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nInstrIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nKeywordIndex;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNumKeywords;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPointsPerMatch;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nScore;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(nInstrIndex<sp/>=<sp/>0;<sp/>nInstrIndex<sp/>&lt;<sp/>mMusicalInstruments.GetCount();<sp/>nInstrIndex++)</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nScore<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nNumKeywords<sp/>=<sp/>mMusicalInstruments[nInstrIndex].mKeywords.GetCount();</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nNumKeywords<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nPointsPerMatch<sp/>=<sp/>10<sp/>/<sp/>nNumKeywords;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(nKeywordIndex<sp/>=<sp/>0;<sp/>nKeywordIndex<sp/>&lt;<sp/>nNumKeywords;<sp/>nKeywordIndex++)</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strTrackName.Contains(mMusicalInstruments[nInstrIndex].mKeywords[nKeywordIndex]))</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nScore<sp/>+=</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nPointsPerMatch<sp/>+</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Longer<sp/>keywords<sp/>get<sp/>more<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2<sp/>*<sp/>mMusicalInstruments[nInstrIndex].mKeywords[nKeywordIndex].Length());</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>later<sp/>one<sp/>if<sp/>just<sp/>matching<sp/>nBestScore,<sp/>for<sp/>better<sp/>variety,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>so<sp/>default<sp/>works<sp/>as<sp/>last<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nScore<sp/>&gt;=<sp/>nBestScore)</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBestScore<sp/>=<sp/>nScore;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBestItemIndex<sp/>=<sp/>nInstrIndex;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMusicalInstruments[nBestItemIndex].mBitmap;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287" refid="class_mixer_board_1a86a3404334dd4ff3f2f7d117359abac7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1a86a3404334dd4ff3f2f7d117359abac7" kindref="member">MixerBoard::HasSolo</ref>()</highlight></codeline>
<codeline lineno="1288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iterTracks(mTracks);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pTrack;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pTrack<sp/>=<sp/>iterTracks.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();<sp/>pTrack;<sp/>pTrack<sp/>=<sp/>iterTracks.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>())</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTrack-&gt;<ref refid="class_track_1acd2518a3c8c5b82f2a5bd45ce074d781" kindref="member">GetSolo</ref>())</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1a2a833c223d1a03664223fde509065246" kindref="member">MixerBoard::RefreshTrackCluster</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pTrack,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEraseBackground<sp/></highlight><highlight class="comment">/*=<sp/>true*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300" refid="class_mixer_board_1a2a833c223d1a03664223fde509065246" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1a2a833c223d1a03664223fde509065246" kindref="member">MixerBoard::RefreshTrackCluster</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pTrack,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEraseBackground<sp/>)</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>*<sp/>pMixerTrackCluster;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/>this-&gt;FindMixerTrackCluster(pTrack,<sp/>&amp;pMixerTrackCluster);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMixerTrackCluster)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMixerTrackCluster-&gt;Refresh(bEraseBackground);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309" refid="class_mixer_board_1ad655c292c5d7c209cc141cd9bb8648db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1ad655c292c5d7c209cc141cd9bb8648db" kindref="member">MixerBoard::RefreshTrackClusters</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEraseBackground<sp/></highlight><highlight class="comment">/*=<sp/>true*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mMixerTrackClusters.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;Refresh(bEraseBackground);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315" refid="class_mixer_board_1a352434de1cd124c3c27fd14bc43d888d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1a352434de1cd124c3c27fd14bc43d888d" kindref="member">MixerBoard::ResizeTrackClusters</ref>()</highlight></codeline>
<codeline lineno="1316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nClusterIndex<sp/>=<sp/>0;<sp/>nClusterIndex<sp/>&lt;<sp/>mMixerTrackClusters.GetCount();<sp/>nClusterIndex++)</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[nClusterIndex]-&gt;HandleResize();</highlight></codeline>
<codeline lineno="1319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321" refid="class_mixer_board_1aa138049d2436706265f0541e2dcb7a50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1aa138049d2436706265f0541e2dcb7a50" kindref="member">MixerBoard::ResetMeters</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bResetClipping)</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/>mPrevT1<sp/>=<sp/><ref refid="_audio_i_o_8h_1a0fbe1353d40f1d79fd01271791cda3a6" kindref="member">BAD_STREAM_TIME</ref>;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;IsShown())</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mMixerTrackClusters.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;ResetMeter(bResetClipping);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1a266ac6ffd3752c43f51c556cd6f8fad6" kindref="member">MixerBoard::UpdateName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pTrack)</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335" refid="class_mixer_board_1a266ac6ffd3752c43f51c556cd6f8fad6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1a266ac6ffd3752c43f51c556cd6f8fad6" kindref="member">MixerBoard::UpdateName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pTrack)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>*<sp/>pMixerTrackCluster;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/>this-&gt;FindMixerTrackCluster(pTrack,<sp/>&amp;pMixerTrackCluster);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMixerTrackCluster)</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMixerTrackCluster-&gt;<ref refid="class_mixer_track_cluster_1a28a7140ddbadb6e7ae682154ec047bb3" kindref="member">UpdateName</ref>();</highlight></codeline>
<codeline lineno="1342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1ab2987906e2aa9836957fd6fc69f77ec5" kindref="member">MixerBoard::UpdateMute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pTrack<sp/></highlight><highlight class="comment">/*=<sp/>NULL*/</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>means<sp/>update<sp/>for<sp/>all<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347" refid="class_mixer_board_1ab2987906e2aa9836957fd6fc69f77ec5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1ab2987906e2aa9836957fd6fc69f77ec5" kindref="member">MixerBoard::UpdateMute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pTrack<sp/></highlight><highlight class="comment">/*=<sp/>NULL*/</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>means<sp/>update<sp/>for<sp/>all<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTrack<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mMixerTrackClusters.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;UpdateMute();</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>*<sp/>pMixerTrackCluster;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FindMixerTrackCluster(pTrack,<sp/>&amp;pMixerTrackCluster);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMixerTrackCluster)</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMixerTrackCluster-&gt;<ref refid="class_mixer_track_cluster_1ae7e14b27e6e8daf8230586b7d9061e1d" kindref="member">UpdateMute</ref>();</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1ad5f12f0ebc69817167f253213b046eb4" kindref="member">MixerBoard::UpdateSolo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pTrack<sp/></highlight><highlight class="comment">/*=<sp/>NULL*/</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>means<sp/>update<sp/>for<sp/>all<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367" refid="class_mixer_board_1ad5f12f0ebc69817167f253213b046eb4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1ad5f12f0ebc69817167f253213b046eb4" kindref="member">MixerBoard::UpdateSolo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pTrack<sp/></highlight><highlight class="comment">/*=<sp/>NULL*/</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>means<sp/>update<sp/>for<sp/>all<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTrack<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mMixerTrackClusters.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;UpdateSolo();</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>*<sp/>pMixerTrackCluster;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FindMixerTrackCluster(pTrack,<sp/>&amp;pMixerTrackCluster);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMixerTrackCluster)</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMixerTrackCluster-&gt;<ref refid="class_mixer_track_cluster_1ab70aab06e6de51a697b6ebdd8b874b0f" kindref="member">UpdateSolo</ref>();</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1a6386969f2b363e1ae510191e8e05182c" kindref="member">MixerBoard::UpdatePan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pTrack)</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387" refid="class_mixer_board_1a6386969f2b363e1ae510191e8e05182c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1a6386969f2b363e1ae510191e8e05182c" kindref="member">MixerBoard::UpdatePan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pTrack)</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>*<sp/>pMixerTrackCluster;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/>FindMixerTrackCluster(pTrack,<sp/>&amp;pMixerTrackCluster);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMixerTrackCluster)</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMixerTrackCluster-&gt;<ref refid="class_mixer_track_cluster_1aea6f953aeba5268cc5dcb1e75264c645" kindref="member">UpdatePan</ref>();</highlight></codeline>
<codeline lineno="1394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1a407ee5df1166fa5de4689299fcf2969a" kindref="member">MixerBoard::UpdateGain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pTrack)</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399" refid="class_mixer_board_1a407ee5df1166fa5de4689299fcf2969a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1a407ee5df1166fa5de4689299fcf2969a" kindref="member">MixerBoard::UpdateGain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pTrack)</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>*<sp/>pMixerTrackCluster;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/>FindMixerTrackCluster(pTrack,<sp/>&amp;pMixerTrackCluster);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMixerTrackCluster)</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMixerTrackCluster-&gt;<ref refid="class_mixer_track_cluster_1ad44e54662318d39e14c24f6cb2bd8aa6" kindref="member">UpdateGain</ref>();</highlight></codeline>
<codeline lineno="1406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408" refid="class_mixer_board_1a4188ea7c4d6bb4e02250325ae8dffb32" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1a4188ea7c4d6bb4e02250325ae8dffb32" kindref="member">MixerBoard::UpdateMeters</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bLoopedPlay)</highlight></codeline>
<codeline lineno="1409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;IsShown()<sp/>||<sp/>(t1<sp/>==<sp/><ref refid="_audio_i_o_8h_1a0fbe1353d40f1d79fd01271791cda3a6" kindref="member">BAD_STREAM_TIME</ref>))</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mPrevT1<sp/>==<sp/><ref refid="_audio_i_o_8h_1a0fbe1353d40f1d79fd01271791cda3a6" kindref="member">BAD_STREAM_TIME</ref>)</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPrevT1<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>loopedPlay<sp/>mode,<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>loop,<sp/>mPrevT1<sp/>is<sp/>set<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>selection<sp/>end,<sp/>so<sp/>the<sp/>next<sp/>t1<sp/>will<sp/>be<sp/>less,<sp/>but<sp/>we<sp/>do<sp/>want<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>updating<sp/>the<sp/>meters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&lt;=<sp/>mPrevT1)</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bLoopedPlay)</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPrevT1<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mMixerTrackClusters.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerTrackClusters[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;UpdateMeter(mPrevT1,<sp/>t1);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/>mPrevT1<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436" refid="class_mixer_board_1a2a3bd9bd262657b993d49dd3e41a28ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mixer_board_1a2a3bd9bd262657b993d49dd3e41a28ca" kindref="member">MixerBoard::UpdateWidth</ref>()</highlight></codeline>
<codeline lineno="1437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newWidth<sp/>=<sp/>this-&gt;GetTrackClustersWidth();</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Min<sp/>width<sp/>is<sp/>one<sp/>cluster<sp/>wide,<sp/>plus<sp/>margins.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newWidth<sp/>&lt;<sp/><ref refid="_mixer_board_8cpp_1aadf033a3fa7629f599603473c50d82d1" kindref="member">MIXER_BOARD_MIN_WIDTH</ref>)</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newWidth<sp/>=<sp/><ref refid="_mixer_board_8cpp_1aadf033a3fa7629f599603473c50d82d1" kindref="member">MIXER_BOARD_MIN_WIDTH</ref>;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/>mScrolledWindow-&gt;SetVirtualSize(newWidth,<sp/>-1);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/>this-&gt;GetParent()-&gt;SetSize(newWidth<sp/>+<sp/><ref refid="_mixer_board_8cpp_1ae2a40501fe96047e38ea6dcb0e024629" kindref="member">kDoubleInset</ref>,<sp/>-1);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight><highlight class="comment">//<sp/>private<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerBoard::CreateMuteSoloImages()</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Much<sp/>of<sp/>this<sp/>is<sp/>taken<sp/>from<sp/>TrackLabel::DrawMuteSolo.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/>wxMemoryDC<sp/>dc;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref><sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Mute&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textWidth,<sp/>textHeight;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontSize<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>__WXMSW__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fontSize<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/>wxFont<sp/>font(fontSize,<sp/>wxSWISS,<sp/>wxNORMAL,<sp/>wxNORMAL);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/>this-&gt;GetTextExtent(str,<sp/>&amp;textWidth,<sp/>&amp;textHeight,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;font);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/>mMuteSoloWidth<sp/>=<sp/>textWidth<sp/>+<sp/><ref refid="_mixer_board_8cpp_1a02682053e334a2556fde39183dd0bcf9" kindref="member">kQuadrupleInset</ref>;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMuteSoloWidth<sp/>&lt;<sp/><ref refid="_mixer_board_8cpp_1a1c91fbcdb121fbb4fe77ddd86564271a" kindref="member">kRightSideStackWidth</ref><sp/>-<sp/><ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref>)</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMuteSoloWidth<sp/>=<sp/><ref refid="_mixer_board_8cpp_1a1c91fbcdb121fbb4fe77ddd86564271a" kindref="member">kRightSideStackWidth</ref><sp/>-<sp/><ref refid="_mixer_board_8cpp_1a394480c11287401db62b4343878cc2c2" kindref="member">kInset</ref>;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/>wxBitmap<sp/>bitmap(mMuteSoloWidth,<sp/><ref refid="_mixer_board_8cpp_1a97057d4174bc585c7b47f4989329d587" kindref="member">MUTE_SOLO_HEIGHT</ref>);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(bitmap);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>bev(0,<sp/>0,<sp/>mMuteSoloWidth<sp/>-<sp/>1,<sp/><ref refid="_mixer_board_8cpp_1a97057d4174bc585c7b47f4989329d587" kindref="member">MUTE_SOLO_HEIGHT</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mute<sp/>button<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a33a36b46eb216a2fa74748d9825593c0" kindref="member">AColor::Mute</ref>(&amp;dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/>dc.DrawRectangle(bev);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/>wxCoord<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>bev.x<sp/>+<sp/>(bev.width<sp/>-<sp/>textWidth)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/>wxCoord<sp/>y<sp/>=<sp/>bev.y<sp/>+<sp/>(bev.height<sp/>-<sp/>textHeight)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/>dc.SetFont(font);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/>dc.DrawText(str,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/>mImageMuteUp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxImage(bitmap.ConvertToImage());</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/>mImageMuteOver<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxImage(bitmap.ConvertToImage());<sp/></highlight><highlight class="comment">//<sp/>Same<sp/>as<sp/>up,<sp/>for<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a33a36b46eb216a2fa74748d9825593c0" kindref="member">AColor::Mute</ref>(&amp;dc,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/>dc.DrawRectangle(bev);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/>dc.DrawText(str,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/>mImageMuteDown<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxImage(bitmap.ConvertToImage());</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a33a36b46eb216a2fa74748d9825593c0" kindref="member">AColor::Mute</ref>(&amp;dc,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/>dc.DrawRectangle(bev);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/>dc.DrawText(str,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/>mImageMuteDownWhileSolo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxImage(bitmap.ConvertToImage());</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/>mImageMuteDisabled<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxImage(mMuteSoloWidth,<sp/><ref refid="_mixer_board_8cpp_1a97057d4174bc585c7b47f4989329d587" kindref="member">MUTE_SOLO_HEIGHT</ref>);<sp/></highlight><highlight class="comment">//<sp/>Leave<sp/>empty<sp/>because<sp/>unused.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solo<sp/>button<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a0c7fa9099e48359c8c32f723363a73d8" kindref="member">AColor::Solo</ref>(&amp;dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/>dc.DrawRectangle(bev);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Solo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/>dc.GetTextExtent(str,<sp/>&amp;textWidth,<sp/>&amp;textHeight);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/>x<sp/>=<sp/>bev.x<sp/>+<sp/>(bev.width<sp/>-<sp/>textWidth)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/>y<sp/>=<sp/>bev.y<sp/>+<sp/>(bev.height<sp/>-<sp/>textHeight)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/>dc.DrawText(str,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/>mImageSoloUp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxImage(bitmap.ConvertToImage());</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/>mImageSoloOver<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxImage(bitmap.ConvertToImage());<sp/></highlight><highlight class="comment">//<sp/>Same<sp/>as<sp/>up,<sp/>for<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a0c7fa9099e48359c8c32f723363a73d8" kindref="member">AColor::Solo</ref>(&amp;dc,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/>dc.DrawRectangle(bev);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/>dc.DrawText(str,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/>mImageSoloDown<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxImage(bitmap.ConvertToImage());</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/>mImageSoloDisabled<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxImage(mMuteSoloWidth,<sp/><ref refid="_mixer_board_8cpp_1a97057d4174bc585c7b47f4989329d587" kindref="member">MUTE_SOLO_HEIGHT</ref>);<sp/></highlight><highlight class="comment">//<sp/>Leave<sp/>empty<sp/>because<sp/>unused.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MixerBoard::FindMixerTrackCluster(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pTrack,</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>**<sp/>hMixerTrackCluster)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MixerBoard::FindMixerTrackCluster(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pLeftTrack,</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>**<sp/>hMixerTrackCluster)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/>*hMixerTrackCluster<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mMixerTrackClusters.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMixerTrackClusters[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;mTrack<sp/>==<sp/>pTrack)</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMixerTrackClusters[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;mLeftTrack<sp/>==<sp/>pLeftTrack)</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*hMixerTrackCluster<sp/>=<sp/>mMixerTrackClusters[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerBoard::LoadMusicalInstruments()</highlight></codeline>
<codeline lineno="1551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>bev(1,<sp/>1,<sp/><ref refid="_mixer_board_8cpp_1acf44c071d292940c7e2422171e885ee2" kindref="member">MUSICAL_INSTRUMENT_HEIGHT_AND_WIDTH</ref><sp/>-<sp/>2,<sp/><ref refid="_mixer_board_8cpp_1acf44c071d292940c7e2422171e885ee2" kindref="member">MUSICAL_INSTRUMENT_HEIGHT_AND_WIDTH</ref><sp/>-<sp/>2);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/>wxBitmap*<sp/>bitmap;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/>wxMemoryDC<sp/>dc;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>*<sp/>pMusicalInstrument;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)acoustic_guitar_gtr_xpm);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;acoustic_guitar_gtr&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)acoustic_piano_pno_xpm);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;acoustic_piano_pno&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)back_vocal_bg_vox_xpm);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;back_vocal_bg_vox&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)clap_xpm);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;clap&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)drums_dr_xpm);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;drums_dr&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)electric_bass_guitar_bs_gtr_xpm);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;electric_bass_guitar_bs_gtr&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)electric_guitar_gtr_xpm);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;electric_guitar_gtr&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)electric_piano_pno_key_xpm);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;electric_piano_pno_key&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)kick_xpm);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;kick&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)loop_xpm);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;loop&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)organ_org_xpm);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;organ_org&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)perc_xpm);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;perc&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)sax_xpm);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;sax&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)snare_xpm);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;snare&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)string_violin_cello_xpm);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;string_violin_cello&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)synth_xpm);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;synth&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)tambo_xpm);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;tambo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)trumpet_horn_xpm);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;trumpet_horn&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)turntable_xpm);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;turntable&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)vibraphone_vibes_xpm);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;vibraphone_vibes&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)vocal_vox_xpm);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;vocal_vox&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>one<sp/>must<sp/>be<sp/>last,<sp/>so<sp/>it<sp/>wins<sp/>when<sp/>best<sp/>score<sp/>is<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/>bitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)_default_instrument_xpm);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*bitmap);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bev);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/>pMusicalInstrument<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_musical_instrument" kindref="compound">MusicalInstrument</ref>(bitmap,<sp/>wxEmptyString);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/>mMusicalInstruments.Add(pMusicalInstrument);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight><highlight class="comment">//<sp/>event<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerBoard::OnSize(wxSizeEvent<sp/>&amp;evt)</highlight></codeline>
<codeline lineno="1701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;FitInside()<sp/>doesn&apos;t<sp/>work,<sp/>and<sp/>it<sp/>doesn&apos;t<sp/>happen<sp/>automatically.<sp/>Is<sp/>wxScrolledWindow<sp/>wrong?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/>mScrolledWindow-&gt;SetSize(evt.GetSize());</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/>this-&gt;ResizeTrackClusters();</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/>this-&gt;RefreshTrackClusters(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerBoard::OnTimer(wxCommandEvent<sp/>&amp;event)</highlight></codeline>
<codeline lineno="1710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PRL<sp/>12<sp/>Jul<sp/>2015:<sp/><sp/>Moved<sp/>the<sp/>below<sp/>(with<sp/>comments)<sp/>out<sp/>of<sp/>TrackPanel::OnTimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vaughan,<sp/>2011-01-28:<sp/>No<sp/>longer<sp/>doing<sp/>this<sp/>on<sp/>timer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Now<sp/>it&apos;s<sp/>in<sp/>AudioIO::SetMeters()<sp/>and<sp/>AudioIO::StopStream(),<sp/>as<sp/>with<sp/>Meter<sp/>Toolbar<sp/>meters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(pMixerBoard)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>pMixerBoard-&gt;ResetMeters(false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//v<sp/>Vaughan,<sp/>2011-02-25:<sp/>Moved<sp/>this<sp/>update<sp/>back<sp/>here<sp/>from<sp/>audacityAudioCallback.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>See<sp/>note<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vaughan,<sp/>2010-01-30:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Since<sp/>all<sp/>we&apos;re<sp/>doing<sp/>here<sp/>is<sp/>updating<sp/>the<sp/>meters,<sp/>I<sp/>moved<sp/>it<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>audacityAudioCallback<sp/>where<sp/>it<sp/>calls<sp/>gAudioIO-&gt;mOutputMeter-&gt;UpdateDisplay().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mProject-&gt;IsAudioActive())</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UpdateMeters(<ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1adaf7977e341e8012b03dca8c733f24e1" kindref="member">GetStreamTime</ref>(),</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mProject-&gt;mLastPlayMode<sp/>==<sp/><ref refid="_project_8h_1a188092ed559d356ade9a517d60ec3f34ad53cd4444a1569bf088f2b33b44ed310" kindref="member">loopedPlay</ref>));</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>other<sp/>listeners<sp/>get<sp/>the<sp/>notification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>MixerBoardFrame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_mixer_board_frame" kindref="compound">MixerBoardFrame</ref>,<sp/>wxFrame)</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/>EVT_KEY_DOWN(MixerBoardFrame::OnKeyEvent)</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/>EVT_CLOSE(MixerBoardFrame::OnCloseWindow)</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/>EVT_MAXIMIZE(MixerBoardFrame::OnMaximize)</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/>EVT_SIZE(MixerBoardFrame::OnSize)</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>to<sp/>fitting<sp/>one<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744" refid="_mixer_board_8cpp_1ac704a08bc6ba65f1818dd1b7f27e4050" refkind="member"><highlight class="normal"><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxSize<sp/><ref refid="_mixer_board_8cpp_1ac704a08bc6ba65f1818dd1b7f27e4050" kindref="member">kDefaultSize</ref><sp/>=</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/>wxSize(<ref refid="_mixer_board_8cpp_1aadf033a3fa7629f599603473c50d82d1" kindref="member">MIXER_BOARD_MIN_WIDTH</ref>,<sp/><ref refid="_mixer_board_8cpp_1ab809deb2f3b3489b22ac0408e8a4c57b" kindref="member">MIXER_BOARD_MIN_HEIGHT</ref>);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747" refid="class_mixer_board_frame_1a611228531f279047d8af7096905057a6" refkind="member"><highlight class="normal"><ref refid="class_mixer_board_frame" kindref="compound">MixerBoardFrame</ref>::<ref refid="class_mixer_board_frame" kindref="compound">MixerBoardFrame</ref>(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>*<sp/>parent)</highlight></codeline>
<codeline lineno="1748"><highlight class="normal">:<sp/>wxFrame(parent,<sp/>-1,</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString::<ref refid="class_format" kindref="compound">Format</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(&quot;Audacity<sp/><ref refid="class_mixer" kindref="compound">Mixer</ref><sp/>Board%<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>&quot;),</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((parent-&gt;GetName()<sp/>==<sp/>wxEmptyString)<sp/>?</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(&quot;&quot;)<sp/>:</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString::<ref refid="class_format" kindref="compound">Format</ref>(wxT(&quot;<sp/>-<sp/>%s&quot;),</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;GetName()))),</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDefaultPosition,<sp/><ref refid="_mixer_board_8cpp_1ac704a08bc6ba65f1818dd1b7f27e4050" kindref="member">kDefaultSize</ref>,</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vvv<sp/>Bug<sp/>in<sp/>wxFRAME_FLOAT_ON_PARENT:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>both<sp/>the<sp/>project<sp/>frame<sp/>and<sp/>MixerBoardFrame<sp/>are<sp/>minimized<sp/>and<sp/>you<sp/>restore<sp/>MixerBoardFrame,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>can&apos;t<sp/>restore<sp/>project<sp/>frame<sp/>until<sp/>you<sp/>close<sp/>MixerBoardFrame,<sp/>but<sp/>then<sp/>project<sp/>frame<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MixerBoardFrame<sp/>are<sp/>restored<sp/>but<sp/>MixerBoardFrame<sp/>is<sp/>unresponsive<sp/>because<sp/>it<sp/>thinks<sp/>it&apos;s<sp/>not<sp/>shown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>wxDEFAULT_FRAME_STYLE<sp/>|<sp/>wxFRAME_FLOAT_ON_PARENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDEFAULT_FRAME_STYLE)</highlight></codeline>
<codeline lineno="1761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/>mMixerBoard<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_mixer_board" kindref="compound">MixerBoard</ref>(parent,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>wxDefaultPosition,<sp/>kDefaultSize);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/>this-&gt;SetSizeHints(MIXER_BOARD_MIN_WIDTH,<sp/>MIXER_BOARD_MIN_HEIGHT);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/>mMixerBoard-&gt;UpdateTrackClusters();</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loads<sp/>either<sp/>the<sp/>XPM<sp/>or<sp/>the<sp/>windows<sp/>resource,<sp/>depending<sp/>on<sp/>the<sp/>platform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__WXMAC__)<sp/>&amp;&amp;<sp/>!defined(__WXX11__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WXMSW__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxIcon<sp/>ic{<sp/>wxICON(AudacityLogo)<sp/>};</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxIcon<sp/>ic{wxICON(AudacityLogo48x48)};</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetIcon(ic);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781" refid="class_mixer_board_frame_1ad1cc3191b42bd795f1bb2c92029aebe1" refkind="member"><highlight class="normal"><ref refid="class_mixer_board_frame_1ad1cc3191b42bd795f1bb2c92029aebe1" kindref="member">MixerBoardFrame::~MixerBoardFrame</ref>()</highlight></codeline>
<codeline lineno="1782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight><highlight class="comment">//<sp/>event<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerBoardFrame::OnCloseWindow(wxCloseEvent<sp/>&amp;WXUNUSED(event))</highlight></codeline>
<codeline lineno="1787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/>this-&gt;Hide();</highlight></codeline>
<codeline lineno="1789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerBoardFrame::OnMaximize(wxMaximizeEvent<sp/>&amp;event)</highlight></codeline>
<codeline lineno="1792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>size<sp/>hints<sp/>to<sp/>show<sp/>all<sp/>tracks<sp/>before<sp/>skipping<sp/>to<sp/>let<sp/>default<sp/>handling<sp/>happen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/>mMixerBoard-&gt;UpdateWidth();</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerBoardFrame::OnSize(wxSizeEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="1799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/>mMixerBoard-&gt;SetSize(this-&gt;GetClientSize());</highlight></codeline>
<codeline lineno="1801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MixerBoardFrame::OnKeyEvent(wxKeyEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="1804"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/>project-&gt;<ref refid="class_audacity_project_1ab917fcaa9c189654c7bdf6b8eba992cf" kindref="member">GetCommandManager</ref>()-&gt;<ref refid="class_command_manager_1a53b3920c43591ee4af2918aab7be04a0" kindref="member">FilterKeyEvent</ref>(project,<sp/>event,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp"/>
  </compounddef>
</doxygen>
