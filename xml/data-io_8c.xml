<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="data-io_8c" kind="file" language="C++">
    <compoundname>data-io.c</compoundname>
    <includes local="no">limits.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="data-io_8h" local="yes">data-io.h</includes>
    <includes refid="libsoxr_2src_2internal_8h" local="yes">internal.h</includes>
    <includes refid="rint_8h" local="yes">rint.h</includes>
    <incdepgraph>
      <node id="21117">
        <label>stdarg.h</label>
      </node>
      <node id="21115">
        <label>internal.h</label>
        <link refid="libsoxr_2src_2internal_8h"/>
        <childnode refid="21116" relation="include">
        </childnode>
        <childnode refid="21117" relation="include">
        </childnode>
        <childnode refid="21118" relation="include">
        </childnode>
      </node>
      <node id="21114">
        <label>stddef.h</label>
      </node>
      <node id="21109">
        <label>limits.h</label>
      </node>
      <node id="21119">
        <label>rint.h</label>
        <link refid="rint_8h"/>
        <childnode refid="21116" relation="include">
        </childnode>
      </node>
      <node id="21116">
        <label>soxr-config.h</label>
      </node>
      <node id="21111">
        <label>string.h</label>
      </node>
      <node id="21110">
        <label>math.h</label>
      </node>
      <node id="21108">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/data-io.c</label>
        <link refid="data-io.c"/>
        <childnode refid="21109" relation="include">
        </childnode>
        <childnode refid="21110" relation="include">
        </childnode>
        <childnode refid="21111" relation="include">
        </childnode>
        <childnode refid="21112" relation="include">
        </childnode>
        <childnode refid="21115" relation="include">
        </childnode>
        <childnode refid="21119" relation="include">
        </childnode>
      </node>
      <node id="21112">
        <label>data-io.h</label>
        <link refid="data-io_8h"/>
        <childnode refid="21113" relation="include">
        </childnode>
      </node>
      <node id="21113">
        <label>soxr.h</label>
        <link refid="soxr_8h"/>
        <childnode refid="21114" relation="include">
        </childnode>
      </node>
      <node id="21118">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="data-io_8c_1ae6d89d1b1d2e8f0662f218b8e7acc5e8" prot="public" static="no">
        <name>DEINTERLEAVE_FROM</name>
        <param><defname>T</defname></param>
        <param><defname>flag</defname></param>
        <initializer>do { \
  unsigned <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>; \
  size_t j; \
  <ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> * src = *src0; \
  <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (ch &gt; 1) \
    <ref refid="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" kindref="member">for</ref> (j = 0; j &lt; n; ++j) <ref refid="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" kindref="member">for</ref> (<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref> = 0; <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref> &lt; ch; ++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>) dest[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][j] = (DEINTERLEAVE_TO)*src++; \
  else <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (flag) memcpy(dest[0], src, n * sizeof(<ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref>)), src = &amp;src[n]; \
  else <ref refid="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" kindref="member">for</ref> (j = 0; j &lt; n; dest[0][j++] = (DEINTERLEAVE_TO)*src++); \
  *src0 = src; \
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/data-io.c" line="13" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/data-io.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="data-io_8c_1a204b77de8b9fc7684b3c3faa933e8149" prot="public" static="no">
        <name>INTERLEAVE_TO</name>
        <param><defname>T</defname></param>
        <param><defname>flag</defname></param>
        <initializer>do { \
  unsigned <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>; \
  size_t j; \
  <ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref> * dest = *dest0; \
  <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (ch &gt; 1) \
  <ref refid="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" kindref="member">for</ref> (j = 0; j &lt; n; ++j) <ref refid="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" kindref="member">for</ref> (<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref> = 0; <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref> &lt; ch; ++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>) *dest++ = (<ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref>)src[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][j]; \
  else <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (flag) memcpy(dest, src[0], n * sizeof(<ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref>)), dest = &amp;dest[n]; \
  else <ref refid="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" kindref="member">for</ref> (j = 0; j &lt; n; *dest++ = (<ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref>)src[0][j++]); \
  *dest0 = dest; \
  <ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> 0; \
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/data-io.c" line="190" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/data-io.c" bodystart="190" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>SoX<sp/>Resampler<sp/>Library<sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-13<sp/>robs@users.sourceforge.net</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licence<sp/>for<sp/>this<sp/>file:<sp/>LGPL<sp/>v2.1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>LICENCE<sp/>for<sp/>details.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data-io_8h" kindref="compound">data-io.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libsoxr_2src_2internal_8h" kindref="compound">internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="data-io_8c_1ae6d89d1b1d2e8f0662f218b8e7acc5e8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEINTERLEAVE_FROM(T,flag)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"><sp/><sp/>unsigned<sp/>i;<sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"><sp/><sp/>size_t<sp/>j;<sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"><sp/><sp/>T<sp/>const<sp/>*<sp/>src<sp/>=<sp/>*src0;<sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"><sp/><sp/>if<sp/>(ch<sp/>&gt;<sp/>1)<sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n;<sp/>++j)<sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ch;<sp/>++i)<sp/>dest[i][j]<sp/>=<sp/>(DEINTERLEAVE_TO)*src++;<sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/>else<sp/>if<sp/>(flag)<sp/>memcpy(dest[0],<sp/>src,<sp/>n<sp/>*<sp/>sizeof(T)),<sp/>src<sp/>=<sp/>&amp;src[n];<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/>else<sp/>for<sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n;<sp/>dest[0][j++]<sp/>=<sp/>(DEINTERLEAVE_TO)*src++);<sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/>*src0<sp/>=<sp/>src;<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_DOUBLE_PRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="data-io_8h_1a3e2562473faf84d3a9210f5ec4922fb2" kindref="member">_soxr_deinterleave</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="comment">/*<sp/>Round/clipping<sp/>not<sp/>needed<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66d" kindref="member">soxr_datatype_t</ref><sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>*<sp/>src0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ch)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEINTERLEAVE_TO<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_type<sp/>&amp;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66dad1716db1382f46a308b7df696bdbed45" kindref="member">SOXR_FLOAT32</ref>:<sp/><ref refid="data-io_8c_1ae6d89d1b1d2e8f0662f218b8e7acc5e8" kindref="member">DEINTERLEAVE_FROM</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>0);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66dac4467d0142aa3f567a44b33c63c12a0e" kindref="member">SOXR_FLOAT64</ref>:<sp/><ref refid="data-io_8c_1ae6d89d1b1d2e8f0662f218b8e7acc5e8" kindref="member">DEINTERLEAVE_FROM</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>1);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66da1e90ac1fc35fe1d864887c287d4e45f4" kindref="member">SOXR_INT32</ref>:<sp/><sp/><sp/><ref refid="data-io_8c_1ae6d89d1b1d2e8f0662f218b8e7acc5e8" kindref="member">DEINTERLEAVE_FROM</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>,<sp/>0);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66da8fb4e6993616d8f31c387f6de0d6108c" kindref="member">SOXR_INT16</ref>:<sp/><sp/><sp/><ref refid="data-io_8c_1ae6d89d1b1d2e8f0662f218b8e7acc5e8" kindref="member">DEINTERLEAVE_FROM</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a044293bfeff56852a28ed6c2cfbb2649" kindref="member">int16_t</ref>,<sp/>0);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_SINGLE_PRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="data-io_8h_1ae52e823e505bcd1b46a7a5e1888b3e16" kindref="member">_soxr_deinterleave_f</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="comment">/*<sp/>Round/clipping<sp/>not<sp/>needed<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66d" kindref="member">soxr_datatype_t</ref><sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>*<sp/>src0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ch)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>DEINTERLEAVE_TO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEINTERLEAVE_TO<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_type<sp/>&amp;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66dad1716db1382f46a308b7df696bdbed45" kindref="member">SOXR_FLOAT32</ref>:<sp/><ref refid="data-io_8c_1ae6d89d1b1d2e8f0662f218b8e7acc5e8" kindref="member">DEINTERLEAVE_FROM</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>1);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66dac4467d0142aa3f567a44b33c63c12a0e" kindref="member">SOXR_FLOAT64</ref>:<sp/><ref refid="data-io_8c_1ae6d89d1b1d2e8f0662f218b8e7acc5e8" kindref="member">DEINTERLEAVE_FROM</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>0);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66da1e90ac1fc35fe1d864887c287d4e45f4" kindref="member">SOXR_INT32</ref>:<sp/><sp/><sp/><ref refid="data-io_8c_1ae6d89d1b1d2e8f0662f218b8e7acc5e8" kindref="member">DEINTERLEAVE_FROM</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>,<sp/>0);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66da8fb4e6993616d8f31c387f6de0d6108c" kindref="member">SOXR_INT16</ref>:<sp/><sp/><sp/><ref refid="data-io_8c_1ae6d89d1b1d2e8f0662f218b8e7acc5e8" kindref="member">DEINTERLEAVE_FROM</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a044293bfeff56852a28ed6c2cfbb2649" kindref="member">int16_t</ref>,<sp/>0);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rint_8h" kindref="compound">rint.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_FENV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;fenv.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>fe_test_invalid()<sp/>fetestexcept(FE_INVALID)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>fe_clear_invalid()<sp/>feclearexcept(FE_INVALID)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FE_INVALID<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined<sp/>_WIN64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;<ref refid="float_8h" kindref="compound">float.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>fe_test_invalid()<sp/>(_statusfp()<sp/>&amp;<sp/>_SW_INVALID)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>fe_clear_invalid<sp/>_clearfp<sp/></highlight><highlight class="comment">/*<sp/>FIXME<sp/>clears<sp/>all<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="cdefs_8h_1a96deb7ba5a74848afb710cc4ee6d2c08" kindref="member">__inline</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fe_test_invalid()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>status_word;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm<sp/>fnstsw<sp/>status_word</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status_word<sp/>&amp;<sp/>FE_INVALID;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="cdefs_8h_1a96deb7ba5a74848afb710cc4ee6d2c08" kindref="member">__inline</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fe_clear_invalid()</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a044293bfeff56852a28ed6c2cfbb2649" kindref="member">int16_t</ref><sp/><ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>[14];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm<sp/>fnstenv<sp/>status</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>status[2]<sp/>&amp;=<sp/>~FE_INVALID;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm<sp/>fldenv<sp/>status</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>FE_INVALID<sp/>&amp;&amp;<sp/>defined<sp/>FPU_RINT32<sp/>&amp;&amp;<sp/>defined<sp/>__STDC_VERSION__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_DOUBLE_PRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLOATX<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSX_RINT_CLIP_2<sp/>lsx_rint32_clip_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSX_RINT_CLIP<sp/>lsx_rint32_clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_CLIP<sp/>rint32_clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT<sp/>rint32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>FPU_RINT32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FPU_RINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_T<sp/>int32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_MAX<sp/>2147483647L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rint-clip_8h" kindref="compound">rint-clip.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSX_RINT_CLIP_2<sp/>lsx_rint16_clip_2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSX_RINT_CLIP<sp/>lsx_rint16_clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_CLIP<sp/>rint16_clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT<sp/>rint16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>FPU_RINT16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FPU_RINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_T<sp/>int16_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_MAX<sp/>32767</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rint-clip_8h" kindref="compound">rint-clip.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSX_RINT_CLIP_2<sp/>lsx_rint16_clip_2_dither</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSX_RINT_CLIP<sp/>lsx_rint16_clip_dither</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_CLIP<sp/>rint16_clip_dither</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT<sp/>rint16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>FPU_RINT16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FPU_RINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_T<sp/>int16_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_MAX<sp/>32767</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DITHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rint-clip_8h" kindref="compound">rint-clip.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>FLOATX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_SINGLE_PRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLOATX<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSX_RINT_CLIP_2<sp/>lsx_rint32_clip_2_f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSX_RINT_CLIP<sp/>lsx_rint32_clip_f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_CLIP<sp/>rint32_clip_f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT<sp/>rint32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>FPU_RINT32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FPU_RINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_T<sp/>int32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_MAX<sp/>2147483647L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rint-clip_8h" kindref="compound">rint-clip.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSX_RINT_CLIP_2<sp/>lsx_rint16_clip_2_f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSX_RINT_CLIP<sp/>lsx_rint16_clip_f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_CLIP<sp/>rint16_clip_f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT<sp/>rint16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>FPU_RINT16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FPU_RINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_T<sp/>int16_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_MAX<sp/>32767</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rint-clip_8h" kindref="compound">rint-clip.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSX_RINT_CLIP_2<sp/>lsx_rint16_clip_2_dither_f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSX_RINT_CLIP<sp/>lsx_rint16_clip_dither_f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_CLIP<sp/>rint16_clip_dither_f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT<sp/>rint16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>FPU_RINT16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FPU_RINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_T<sp/>int16_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RINT_MAX<sp/>32767</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DITHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rint-clip_8h" kindref="compound">rint-clip.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>FLOATX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>FE_INVALID<sp/>&amp;&amp;<sp/>defined<sp/>FPU_RINT32<sp/>&amp;&amp;<sp/>defined<sp/>__STDC_VERSION__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>OFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="data-io_8c_1a204b77de8b9fc7684b3c3faa933e8149" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INTERLEAVE_TO(T,flag)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"><sp/><sp/>unsigned<sp/>i;<sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"><sp/><sp/>size_t<sp/>j;<sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/>T<sp/>*<sp/>dest<sp/>=<sp/>*dest0;<sp/>\</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"><sp/><sp/>if<sp/>(ch<sp/>&gt;<sp/>1)<sp/>\</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"><sp/><sp/>for<sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n;<sp/>++j)<sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ch;<sp/>++i)<sp/>*dest++<sp/>=<sp/>(T)src[i][j];<sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/>else<sp/>if<sp/>(flag)<sp/>memcpy(dest,<sp/>src[0],<sp/>n<sp/>*<sp/>sizeof(T)),<sp/>dest<sp/>=<sp/>&amp;dest[n];<sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"><sp/><sp/>else<sp/>for<sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n;<sp/>*dest++<sp/>=<sp/>(T)src[0][j++]);<sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/>*dest0<sp/>=<sp/>dest;<sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/>return<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_DOUBLE_PRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>clips<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="data-io_8h_1a8cf548e4d094401e15dd78380be62644" kindref="member">_soxr_interleave</ref>(<ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66d" kindref="member">soxr_datatype_t</ref><sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>*<sp/>dest0,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*<sp/>seed)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_type<sp/>&amp;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66dad1716db1382f46a308b7df696bdbed45" kindref="member">SOXR_FLOAT32</ref>:<sp/><ref refid="data-io_8c_1a204b77de8b9fc7684b3c3faa933e8149" kindref="member">INTERLEAVE_TO</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66dac4467d0142aa3f567a44b33c63c12a0e" kindref="member">SOXR_FLOAT64</ref>:<sp/><ref refid="data-io_8c_1a204b77de8b9fc7684b3c3faa933e8149" kindref="member">INTERLEAVE_TO</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66da1e90ac1fc35fe1d864887c287d4e45f4" kindref="member">SOXR_INT32</ref>:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lsx_rint32_clip(dest0,<sp/>src[0],<sp/>n);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lsx_rint32_clip_2(dest0,<sp/>src,<sp/>ch,<sp/>n);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66da8fb4e6993616d8f31c387f6de0d6108c" kindref="member">SOXR_INT16</ref>:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seed)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lsx_rint16_clip_dither(dest0,<sp/>src[0],<sp/>n,<sp/>seed);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lsx_rint16_clip_2_dither(dest0,<sp/>src,<sp/>ch,<sp/>n,<sp/>seed);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lsx_rint16_clip(dest0,<sp/>src[0],<sp/>n);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lsx_rint16_clip_2(dest0,<sp/>src,<sp/>ch,<sp/>n);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_SINGLE_PRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>clips<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="data-io_8h_1aa94e9c0f89c276eb61d6abc0207ff3f3" kindref="member">_soxr_interleave_f</ref>(<ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66d" kindref="member">soxr_datatype_t</ref><sp/>data_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>*<sp/>dest0,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*<sp/>seed)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_type<sp/>&amp;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66dad1716db1382f46a308b7df696bdbed45" kindref="member">SOXR_FLOAT32</ref>:<sp/><ref refid="data-io_8c_1a204b77de8b9fc7684b3c3faa933e8149" kindref="member">INTERLEAVE_TO</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66dac4467d0142aa3f567a44b33c63c12a0e" kindref="member">SOXR_FLOAT64</ref>:<sp/><ref refid="data-io_8c_1a204b77de8b9fc7684b3c3faa933e8149" kindref="member">INTERLEAVE_TO</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66da1e90ac1fc35fe1d864887c287d4e45f4" kindref="member">SOXR_INT32</ref>:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lsx_rint32_clip_f(dest0,<sp/>src[0],<sp/>n);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lsx_rint32_clip_2_f(dest0,<sp/>src,<sp/>ch,<sp/>n);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="soxr_8h_1ac648d3d2dd7b1988e631d6205e73f66da8fb4e6993616d8f31c387f6de0d6108c" kindref="member">SOXR_INT16</ref>:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seed)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lsx_rint16_clip_dither_f(dest0,<sp/>src[0],<sp/>n,<sp/>seed);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lsx_rint16_clip_2_dither_f(dest0,<sp/>src,<sp/>ch,<sp/>n,<sp/>seed);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lsx_rint16_clip_f(dest0,<sp/>src[0],<sp/>n);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lsx_rint16_clip_2_f(dest0,<sp/>src,<sp/>ch,<sp/>n);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/data-io.c"/>
  </compounddef>
</doxygen>
