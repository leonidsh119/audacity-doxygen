<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="src_2fft_8h" kind="file" language="C++">
    <compoundname>FFT.h</compoundname>
    <includes local="no">wx/defs.h</includes>
    <includes local="no">wx/wxchar.h</includes>
    <includes refid="_experimental_8h" local="yes">Experimental.h</includes>
    <includedby refid="_audacity_app_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudacityApp.cpp</includedby>
    <includedby refid="_audacity_headers_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</includedby>
    <includedby refid="_contrast_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Contrast.cpp</includedby>
    <includedby refid="_equalization_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp</includedby>
    <includedby refid="_paulstretch_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Paulstretch.cpp</includedby>
    <includedby refid="src_2_f_f_t_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/FFT.cpp</includedby>
    <includedby refid="_freq_window_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/FreqWindow.cpp</includedby>
    <includedby refid="_spec_power_meter_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.cpp</includedby>
    <includedby refid="_spectrogram_settings_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/prefs/SpectrogramSettings.cpp</includedby>
    <includedby refid="_spectrum_prefs_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/prefs/SpectrumPrefs.cpp</includedby>
    <includedby refid="_spectrum_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Spectrum.h</includedby>
    <includedby refid="_spectrum_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Spectrum.cpp</includedby>
    <includedby refid="_wave_clip_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/WaveClip.cpp</includedby>
    <incdepgraph>
      <node id="12464">
        <label>C:/_dev/OpenU/Audacity/audacity/src/FFT.h</label>
        <link refid="src/fft.h"/>
        <childnode refid="12465" relation="include">
        </childnode>
        <childnode refid="12466" relation="include">
        </childnode>
        <childnode refid="12467" relation="include">
        </childnode>
      </node>
      <node id="12466">
        <label>wx/wxchar.h</label>
      </node>
      <node id="12467">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="12465" relation="include">
        </childnode>
      </node>
      <node id="12465">
        <label>wx/defs.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12473">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp</label>
        <link refid="_equalization_8cpp"/>
      </node>
      <node id="12472">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Contrast.cpp</label>
        <link refid="_contrast_8cpp"/>
      </node>
      <node id="12479">
        <label>C:/_dev/OpenU/Audacity/audacity/src/prefs/SpectrumPrefs.cpp</label>
        <link refid="_spectrum_prefs_8cpp"/>
      </node>
      <node id="12481">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Spectrum.cpp</label>
        <link refid="_spectrum_8cpp"/>
      </node>
      <node id="12468">
        <label>C:/_dev/OpenU/Audacity/audacity/src/FFT.h</label>
        <link refid="src/fft.h"/>
        <childnode refid="12469" relation="include">
        </childnode>
        <childnode refid="12470" relation="include">
        </childnode>
        <childnode refid="12472" relation="include">
        </childnode>
        <childnode refid="12473" relation="include">
        </childnode>
        <childnode refid="12474" relation="include">
        </childnode>
        <childnode refid="12475" relation="include">
        </childnode>
        <childnode refid="12476" relation="include">
        </childnode>
        <childnode refid="12477" relation="include">
        </childnode>
        <childnode refid="12478" relation="include">
        </childnode>
        <childnode refid="12479" relation="include">
        </childnode>
        <childnode refid="12480" relation="include">
        </childnode>
        <childnode refid="12481" relation="include">
        </childnode>
        <childnode refid="12483" relation="include">
        </childnode>
      </node>
      <node id="12483">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveClip.cpp</label>
        <link refid="_wave_clip_8cpp"/>
      </node>
      <node id="12474">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Paulstretch.cpp</label>
        <link refid="_paulstretch_8cpp"/>
      </node>
      <node id="12478">
        <label>C:/_dev/OpenU/Audacity/audacity/src/prefs/SpectrogramSettings.cpp</label>
        <link refid="_spectrogram_settings_8cpp"/>
      </node>
      <node id="12475">
        <label>C:/_dev/OpenU/Audacity/audacity/src/FFT.cpp</label>
        <link refid="src_2_f_f_t_8cpp"/>
      </node>
      <node id="12476">
        <label>C:/_dev/OpenU/Audacity/audacity/src/FreqWindow.cpp</label>
        <link refid="_freq_window_8cpp"/>
      </node>
      <node id="12470">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</label>
        <link refid="_audacity_headers_8h"/>
        <childnode refid="12471" relation="include">
        </childnode>
      </node>
      <node id="12477">
        <label>C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.cpp</label>
        <link refid="_spec_power_meter_8cpp"/>
      </node>
      <node id="12484">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp</label>
        <link refid="_wave_track_8cpp"/>
      </node>
      <node id="12482">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp</label>
        <link refid="_track_artist_8cpp"/>
      </node>
      <node id="12480">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Spectrum.h</label>
        <link refid="_spectrum_8h"/>
        <childnode refid="12481" relation="include">
        </childnode>
        <childnode refid="12482" relation="include">
        </childnode>
        <childnode refid="12483" relation="include">
        </childnode>
        <childnode refid="12484" relation="include">
        </childnode>
      </node>
      <node id="12469">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityApp.cpp</label>
        <link refid="_audacity_app_8cpp"/>
      </node>
      <node id="12471">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.cpp</label>
        <link refid="_audacity_headers_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="src_2fft_8h_1ae71449b1cc6e6250b91f539153a7a0d3" prot="public" static="no">
        <name>M_PI</name>
        <initializer>3.14159265358979323846  /* pi */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FFT.h" line="52" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FFT.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6" prot="public" static="no">
        <name>eWindowFunctions</name>
        <enumvalue id="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a5cd3d194fd6203904707cbb816e8263a" prot="public">
          <name>eWinFuncRectangular</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6aa1bdce9b7c558ad9ca43340e9ff56eee" prot="public">
          <name>eWinFuncBartlett</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6aa04a3ee0b159fb4f2838c9fbd3d3723f" prot="public">
          <name>eWinFuncHamming</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a971e324ff71c1f91855f0c1a29cec3c6" prot="public">
          <name>eWinFuncHanning</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6ab0d108bb5eb57f16db603deb2b93d6af" prot="public">
          <name>eWinFuncBlackman</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a631429259a311e4efdb33721f12eae95" prot="public">
          <name>eWinFuncBlackmanHarris</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6ac17253004653f14faff0fb7a6c85d87e" prot="public">
          <name>eWinFuncWelch</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a87ca573397f47833a7836ad04675a845" prot="public">
          <name>eWinFuncGaussian25</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6ae2fda393a19784de8b74e472e52b29d7" prot="public">
          <name>eWinFuncGaussian35</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a9e3880fdfe9d144a51b2131c78eaf00f" prot="public">
          <name>eWinFuncGaussian45</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a9744e6932edf24440760adf0709d98ce" prot="public">
          <name>eWinFuncCount</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FFT.h" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FFT.h" bodystart="107" bodyend="120"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="src_2fft_8h_1ab287cc9ff67413884629c3130b8e891f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PowerSpectrum</definition>
        <argsstring>(int NumSamples, float *In, float *Out)</argsstring>
        <name>PowerSpectrum</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>NumSamples</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>In</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>Out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FFT.h" line="64" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FFT.cpp" bodystart="390" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="src_2fft_8h_1a04c380365be207b671ee839633af0e3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void RealFFT</definition>
        <argsstring>(int NumSamples, float *RealIn, float *RealOut, float *ImagOut)</argsstring>
        <name>RealFFT</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>NumSamples</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>RealIn</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>RealOut</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ImagOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FFT.h" line="73" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FFT.cpp" bodystart="253" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="src_2fft_8h_1a47f4d941ab874bbac2ac000dfd9aef65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void InverseRealFFT</definition>
        <argsstring>(int NumSamples, float *RealIn, float *ImagIn, float *RealOut)</argsstring>
        <name>InverseRealFFT</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>NumSamples</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>RealIn</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ImagIn</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>RealOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FFT.h" line="84" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FFT.cpp" bodystart="348" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="src_2fft_8h_1a2e6a370e8fb32b62ccce6a44d05b7d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void FFT</definition>
        <argsstring>(int NumSamples, bool InverseTransform, float *RealIn, float *ImagIn, float *RealOut, float *ImagOut)</argsstring>
        <name>FFT</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>NumSamples</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>InverseTransform</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>RealIn</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ImagIn</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>RealOut</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ImagOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FFT.h" line="94" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FFT.cpp" bodystart="143" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="src_2fft_8h_1a1890400b30343c689c02f20c8af3a64c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WindowFunc</definition>
        <argsstring>(int whichFunction, int NumSamples, float *data)</argsstring>
        <name>WindowFunc</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>whichFunction</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>NumSamples</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FFT.h" line="122" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FFT.cpp" bodystart="660" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="src_2fft_8h_1ae4722b3594e5072a0a6b3ac676c6f781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void NewWindowFunc</definition>
        <argsstring>(int whichFunction, int NumSamples, bool extraSample, float *data)</argsstring>
        <name>NewWindowFunc</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>whichFunction</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>NumSamples</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>extraSample</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FFT.h" line="130" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FFT.cpp" bodystart="519" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="src_2fft_8h_1abd228a918a5e5fb6a0f6117b922bf4b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void DerivativeOfWindowFunc</definition>
        <argsstring>(int whichFunction, int NumSamples, bool extraSample, float *data)</argsstring>
        <name>DerivativeOfWindowFunc</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>whichFunction</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>NumSamples</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>extraSample</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FFT.h" line="139" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FFT.cpp" bodystart="683" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="src_2fft_8h_1a29f0e54859b8f619dea2eb81e2f4f5dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxChar *</type>
        <definition>const wxChar* WindowFuncName</definition>
        <argsstring>(int whichFunction)</argsstring>
        <name>WindowFuncName</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>whichFunction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FFT.h" line="145" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FFT.cpp" bodystart="492" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="src_2fft_8h_1a76c25900e85f54ac7b949eae6f6f629d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int NumWindowFuncs</definition>
        <argsstring>()</argsstring>
        <name>NumWindowFuncs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FFT.h" line="151" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FFT.cpp" bodystart="487" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="src_2fft_8h_1a45b3f5f8dad0f1396f6b568edd681d4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void DeinitFFT</definition>
        <argsstring>()</argsstring>
        <name>DeinitFFT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FFT.h" line="153" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FFT.cpp" bodystart="117" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>FFT.h</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>September<sp/>2000</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>This<sp/>file<sp/>contains<sp/>a<sp/>few<sp/>FFT<sp/>routines,<sp/>including<sp/>a<sp/>real-FFT</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>routine<sp/>that<sp/>is<sp/>almost<sp/>twice<sp/>as<sp/>fast<sp/>as<sp/>a<sp/>normal<sp/>complex<sp/>FFT,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>and<sp/>a<sp/>power<sp/>spectrum<sp/>routine<sp/>which<sp/>is<sp/>more<sp/>convenient<sp/>when</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>you<sp/>know<sp/>you<sp/>don&apos;t<sp/>care<sp/>about<sp/>phase<sp/>information.<sp/><sp/>It<sp/>now<sp/>also</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>contains<sp/>a<sp/>few<sp/>basic<sp/>windowing<sp/>functions.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>Some<sp/>of<sp/>this<sp/>code<sp/>was<sp/>based<sp/>on<sp/>a<sp/>free<sp/>implementation<sp/>of<sp/>an<sp/>FFT</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>by<sp/>Don<sp/>Cross,<sp/>available<sp/>on<sp/>the<sp/>web<sp/>at:</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>http://www.intersrv.com/~dcross/fft.html</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>The<sp/>basic<sp/>algorithm<sp/>for<sp/>his<sp/>code<sp/>was<sp/>based<sp/>on<sp/>Numerical<sp/>Recipes</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/>in<sp/>Fortran.<sp/><sp/>I<sp/>optimized<sp/>his<sp/>code<sp/>further<sp/>by<sp/>reducing<sp/>array</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/>accesses,<sp/>caching<sp/>the<sp/>bit<sp/>reversal<sp/>table,<sp/>and<sp/>eliminating</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/>float-to-double<sp/>conversions,<sp/>and<sp/>I<sp/>added<sp/>the<sp/>routines<sp/>to</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/>calculate<sp/>a<sp/>real<sp/>FFT<sp/>and<sp/>a<sp/>real<sp/>power<sp/>spectrum.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/>Note:<sp/>all<sp/>of<sp/>these<sp/>routines<sp/>use<sp/>single-precision<sp/>floats.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>I<sp/>have<sp/>found<sp/>that<sp/>in<sp/>practice,<sp/>floats<sp/>work<sp/>well<sp/>until<sp/>you</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/>get<sp/>above<sp/>8192<sp/>samples.<sp/><sp/>If<sp/>you<sp/>need<sp/>to<sp/>do<sp/>a<sp/>larger<sp/>FFT,</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/>you<sp/>need<sp/>to<sp/>use<sp/>doubles.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight></codeline>
<codeline lineno="31"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AUDACITY_FFT_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AUDACITY_FFT_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/defs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/>Salvo<sp/>Ventura<sp/>-<sp/>November<sp/>2006</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/>Added<sp/>more<sp/>window<sp/>functions:</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>4:<sp/>Blackman</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>5:<sp/>Blackman-Harris</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>6:<sp/>Welch</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>7:<sp/>Gaussian(a=2.5)</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>8:<sp/>Gaussian(a=3.5)</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>9:<sp/>Gaussian(a=4.5)</highlight></codeline>
<codeline lineno="46"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/defs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/wxchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="src_2fft_8h_1ae71449b1cc6e6250b91f539153a7a0d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_PI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3.14159265358979323846<sp/><sp/></highlight><highlight class="comment">/*<sp/>pi<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>the<sp/>function<sp/>you<sp/>will<sp/>use<sp/>the<sp/>most<sp/>often.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>Given<sp/>an<sp/>array<sp/>of<sp/>floats,<sp/>this<sp/>will<sp/>compute<sp/>the<sp/>power</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>spectrum<sp/>by<sp/>doing<sp/>a<sp/>Real<sp/>FFT<sp/>and<sp/>then<sp/>computing<sp/>the</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>sum<sp/>of<sp/>the<sp/>squares<sp/>of<sp/>the<sp/>real<sp/>and<sp/>imaginary<sp/>parts.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>the<sp/>output<sp/>array<sp/>is<sp/>half<sp/>the<sp/>length<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>input<sp/>array,<sp/>and<sp/>that<sp/>NumSamples<sp/>must<sp/>be<sp/>a<sp/>power<sp/>of<sp/>two.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="src_2fft_8h_1ab287cc9ff67413884629c3130b8e891f" kindref="member">PowerSpectrum</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumSamples,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="devicetopology_8h_1aab6c7474a070d22bf61ccf21b532412fad8ff8dfc9381018e97fce86d909f8975" kindref="member">In</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="devicetopology_8h_1aab6c7474a070d22bf61ccf21b532412fabba45258e8122cd853f27f4c8b5d3871" kindref="member">Out</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>Computes<sp/>an<sp/>FFT<sp/>when<sp/>the<sp/>input<sp/>data<sp/>is<sp/>real<sp/>but<sp/>you<sp/>still</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>want<sp/>complex<sp/>data<sp/>as<sp/>output.<sp/><sp/>The<sp/>output<sp/>arrays<sp/>are<sp/>the</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>same<sp/>length<sp/>as<sp/>the<sp/>input,<sp/>but<sp/>will<sp/>be<sp/>conjugate-symmetric</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>NumSamples<sp/>must<sp/>be<sp/>a<sp/>power<sp/>of<sp/>two.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="src_2fft_8h_1a04c380365be207b671ee839633af0e3d" kindref="member">RealFFT</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumSamples,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*RealIn,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*RealOut,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ImagOut);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>Computes<sp/>an<sp/>Inverse<sp/>FFT<sp/>when<sp/>the<sp/>input<sp/>data<sp/>is<sp/>conjugate<sp/>symmetric</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>so<sp/>the<sp/>output<sp/>is<sp/>purely<sp/>real.<sp/><sp/>NumSamples<sp/>must<sp/>be<sp/>a<sp/>power<sp/>of</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>two.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>Requires:<sp/>EXPERIMENTAL_USE_REALFFTF</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_experimental_8h" kindref="compound">Experimental.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_USE_REALFFTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="src_2fft_8h_1a47f4d941ab874bbac2ac000dfd9aef65" kindref="member">InverseRealFFT</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumSamples,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*RealIn,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ImagIn,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*RealOut);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>Computes<sp/>a<sp/>FFT<sp/>of<sp/>complex<sp/>input<sp/>and<sp/>returns<sp/>complex<sp/>output.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>Currently<sp/>this<sp/>is<sp/>the<sp/>only<sp/>function<sp/>here<sp/>that<sp/>supports<sp/>the</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>inverse<sp/>transform<sp/>as<sp/>well.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="src_2fft_8h_1a2e6a370e8fb32b62ccce6a44d05b7d06" kindref="member">FFT</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumSamples,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>InverseTransform,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*RealIn,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ImagIn,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*RealOut,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ImagOut);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>Multiply<sp/>values<sp/>in<sp/>data<sp/>by<sp/>values<sp/>of<sp/>the<sp/>chosen<sp/>function</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>DO<sp/>NOT<sp/>REUSE!<sp/><sp/>Prefer<sp/>NewWindowFunc<sp/>instead</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>This<sp/>version<sp/>was<sp/>inconsistent<sp/>whether<sp/>the<sp/>window<sp/>functions<sp/>were</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>symmetrical<sp/>about<sp/>NumSamples<sp/>/<sp/>2,<sp/>or<sp/>about<sp/>(NumSamples<sp/>-<sp/>1)<sp/>/<sp/>2</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>It<sp/>remains<sp/>for<sp/>compatibility<sp/>until<sp/>we<sp/>decide<sp/>to<sp/>upgrade<sp/>all<sp/>the<sp/>old<sp/>uses</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>All<sp/>functions<sp/>have<sp/>0<sp/>in<sp/>data[0]<sp/>except<sp/>Rectangular,<sp/>Hamming<sp/>and<sp/>Gaussians</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6" kindref="member">eWindowFunctions</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109" refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a5cd3d194fd6203904707cbb816e8263a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a5cd3d194fd6203904707cbb816e8263a" kindref="member">eWinFuncRectangular</ref>,</highlight></codeline>
<codeline lineno="110" refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6aa1bdce9b7c558ad9ca43340e9ff56eee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6aa1bdce9b7c558ad9ca43340e9ff56eee" kindref="member">eWinFuncBartlett</ref>,</highlight></codeline>
<codeline lineno="111" refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6aa04a3ee0b159fb4f2838c9fbd3d3723f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6aa04a3ee0b159fb4f2838c9fbd3d3723f" kindref="member">eWinFuncHamming</ref>,</highlight></codeline>
<codeline lineno="112" refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a971e324ff71c1f91855f0c1a29cec3c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a971e324ff71c1f91855f0c1a29cec3c6" kindref="member">eWinFuncHanning</ref>,</highlight></codeline>
<codeline lineno="113" refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6ab0d108bb5eb57f16db603deb2b93d6af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6ab0d108bb5eb57f16db603deb2b93d6af" kindref="member">eWinFuncBlackman</ref>,</highlight></codeline>
<codeline lineno="114" refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a631429259a311e4efdb33721f12eae95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a631429259a311e4efdb33721f12eae95" kindref="member">eWinFuncBlackmanHarris</ref>,</highlight></codeline>
<codeline lineno="115" refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6ac17253004653f14faff0fb7a6c85d87e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6ac17253004653f14faff0fb7a6c85d87e" kindref="member">eWinFuncWelch</ref>,</highlight></codeline>
<codeline lineno="116" refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a87ca573397f47833a7836ad04675a845" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a87ca573397f47833a7836ad04675a845" kindref="member">eWinFuncGaussian25</ref>,</highlight></codeline>
<codeline lineno="117" refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6ae2fda393a19784de8b74e472e52b29d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6ae2fda393a19784de8b74e472e52b29d7" kindref="member">eWinFuncGaussian35</ref>,</highlight></codeline>
<codeline lineno="118" refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a9e3880fdfe9d144a51b2131c78eaf00f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a9e3880fdfe9d144a51b2131c78eaf00f" kindref="member">eWinFuncGaussian45</ref>,</highlight></codeline>
<codeline lineno="119" refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a9744e6932edf24440760adf0709d98ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2fft_8h_1a5f8d08940ffe571835d5d45e705883b6a9744e6932edf24440760adf0709d98ce" kindref="member">eWinFuncCount</ref></highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="src_2fft_8h_1a1890400b30343c689c02f20c8af3a64c" kindref="member">WindowFunc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichFunction,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumSamples,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>Multiply<sp/>values<sp/>in<sp/>data<sp/>by<sp/>values<sp/>of<sp/>the<sp/>chosen<sp/>function</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>All<sp/>functions<sp/>are<sp/>symmetrical<sp/>about<sp/>NumSamples<sp/>/<sp/>2<sp/>if<sp/>extraSample<sp/>is<sp/>false,</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>otherwise<sp/>about<sp/>(NumSamples<sp/>-<sp/>1)<sp/>/<sp/>2</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>All<sp/>functions<sp/>have<sp/>0<sp/>in<sp/>data[0]<sp/>except<sp/>Rectangular,<sp/>Hamming<sp/>and<sp/>Gaussians</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="src_2fft_8h_1ae4722b3594e5072a0a6b3ac676c6f781" kindref="member">NewWindowFunc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichFunction,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumSamples,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>extraSample,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>Multiply<sp/>values<sp/>in<sp/>data<sp/>by<sp/>derivative<sp/>of<sp/>the<sp/>chosen<sp/>function,<sp/>assuming</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>sampling<sp/>interval<sp/>is<sp/>unit</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>All<sp/>functions<sp/>are<sp/>symmetrical<sp/>about<sp/>NumSamples<sp/>/<sp/>2<sp/>if<sp/>extraSample<sp/>is<sp/>false,</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>otherwise<sp/>about<sp/>(NumSamples<sp/>-<sp/>1)<sp/>/<sp/>2</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>All<sp/>functions<sp/>have<sp/>0<sp/>in<sp/>data[0]<sp/>except<sp/>Rectangular,<sp/>Hamming<sp/>and<sp/>Gaussians</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="src_2fft_8h_1abd228a918a5e5fb6a0f6117b922bf4b4" kindref="member">DerivativeOfWindowFunc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichFunction,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumSamples,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>extraSample,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>Returns<sp/>the<sp/>name<sp/>of<sp/>the<sp/>windowing<sp/>function<sp/>(for<sp/>UI<sp/>display)</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="src_2fft_8h_1a29f0e54859b8f619dea2eb81e2f4f5dd" kindref="member">WindowFuncName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichFunction);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>windowing<sp/>functions<sp/>supported</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="src_2fft_8h_1a76c25900e85f54ac7b949eae6f6f629d" kindref="member">NumWindowFuncs</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="src_2fft_8h_1a45b3f5f8dad0f1396f6b568edd681d4a" kindref="member">DeinitFFT</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/FFT.h"/>
  </compounddef>
</doxygen>
