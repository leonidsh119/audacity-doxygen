<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="xlio_8c" kind="file" language="C++">
    <compoundname>xlio.c</compoundname>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <incdepgraph>
      <node id="18502">
        <label>stdlib.h</label>
      </node>
      <node id="18505">
        <label>setjmp.h</label>
      </node>
      <node id="18501">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="18502" relation="include">
        </childnode>
        <childnode refid="18503" relation="include">
        </childnode>
        <childnode refid="18504" relation="include">
        </childnode>
        <childnode refid="18505" relation="include">
        </childnode>
        <childnode refid="18506" relation="include">
        </childnode>
      </node>
      <node id="18500">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c</label>
        <link refid="xlio.c"/>
        <childnode refid="18501" relation="include">
        </childnode>
      </node>
      <node id="18506">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="18504">
        <label>ctype.h</label>
      </node>
      <node id="18503">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="xlio_8c_1afeda0c1fa1b515c8b7744515f87be5d9" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL s_stdin</definition>
        <argsstring></argsstring>
        <name>s_stdin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="14" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xlio_8c_1a463856efc8da127ad6c57d80d9a1aa8a" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL s_stdout</definition>
        <argsstring></argsstring>
        <name>s_stdout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="14" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xlio_8c_1ae60f225884037abda5baf197ed476981" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL s_stderr</definition>
        <argsstring></argsstring>
        <name>s_stderr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="14" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xlio_8c_1a10b165ec2ea035015f6cda448dcd5dca" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL s_debugio</definition>
        <argsstring></argsstring>
        <name>s_debugio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="14" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xlio_8c_1a6b1ade50cb11d3aa71e17e981cb768b7" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL s_traceout</definition>
        <argsstring></argsstring>
        <name>s_traceout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="14" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xlio_8c_1aa49556ecde86e8c9fa35e41225d867d0" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL s_unbound</definition>
        <argsstring></argsstring>
        <name>s_unbound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="14" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xlio_8c_1aec75dd6ecfb87f235d95cc6cd426502d" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int xlfsize</definition>
        <argsstring></argsstring>
        <name>xlfsize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="15" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="xlio_8c_1a1999231d37fbd6a4d9cfe53ed2efb6eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int xlgetc</definition>
        <argsstring>(LVAL fptr)</argsstring>
        <name>xlgetc</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>fptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="22" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="22" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="xlio_8c_1a59009616784b3b56a8ef0abaf54c5cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xlungetc</definition>
        <argsstring>(LVAL fptr, int ch)</argsstring>
        <name>xlungetc</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>fptr</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="69" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="69" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="xlio_8c_1a1505f66ee518f62b45926e579037b740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int xlpeek</definition>
        <argsstring>(LVAL fptr)</argsstring>
        <name>xlpeek</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>fptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="93" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="93" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="xlio_8c_1aafd322c97eac80cbeda20ba0476c3f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xlputc</definition>
        <argsstring>(LVAL fptr, int ch)</argsstring>
        <name>xlputc</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>fptr</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="124" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="124" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="xlio_8c_1a0452d08b2d0f4a2036134ab5de246cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xloutflush</definition>
        <argsstring>(LVAL fptr)</argsstring>
        <name>xloutflush</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>fptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="159" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="159" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="xlio_8c_1a60b7556856827a4008a758d41b66a664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xlflush</definition>
        <argsstring>(void)</argsstring>
        <name>xlflush</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="180" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="xlio_8c_1ab2c9fa910569499da2fee915fa7ccef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void stdprint</definition>
        <argsstring>(LVAL expr)</argsstring>
        <name>stdprint</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="186" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="186" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void stdputstr</definition>
        <argsstring>(const char *str)</argsstring>
        <name>stdputstr</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="193" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="xlio_8c_1ad6cfde7a7bc9a1d443d9b77639c8d5b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void stdflush</definition>
        <argsstring>()</argsstring>
        <name>stdflush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="199" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="xlio_8c_1ac6fc4ab8690608ac27ae45ce0be05310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void errprint</definition>
        <argsstring>(LVAL expr)</argsstring>
        <name>errprint</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="205" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="205" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="xlio_8c_1a6b1f25f19d584cce958a129b65cac4e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void errputstr</definition>
        <argsstring>(const const char *str)</argsstring>
        <name>errputstr</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="212" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="xlio_8c_1a5422099bbd519a9725249123cec8022a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void dbgprint</definition>
        <argsstring>(LVAL expr)</argsstring>
        <name>dbgprint</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="218" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="218" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="xlio_8c_1a1f2aeff95d72b2da7797e7952d5ead92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void dbgputstr</definition>
        <argsstring>(const char *str)</argsstring>
        <name>dbgputstr</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="225" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="xlio_8c_1a220862106e3eb5c7c9f9814322bcb3d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void trcprin1</definition>
        <argsstring>(LVAL expr)</argsstring>
        <name>trcprin1</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="231" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="xlio_8c_1a15f1d9905a3840a14237bfc2352cfde8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void trcputstr</definition>
        <argsstring>(const char *str)</argsstring>
        <name>trcputstr</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" line="237" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c" bodystart="237" bodyend="240"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>xlio<sp/>-<sp/>xlisp<sp/>i/o<sp/>routines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Copyright<sp/>(c)<sp/>1985,<sp/>by<sp/>David<sp/>Michael<sp/>Betz</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>for<sp/>unrestricted<sp/>non-commercial<sp/>use<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CHANGE<sp/>LOG</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>28Apr03<sp/><sp/>dm<sp/><sp/>eliminate<sp/>some<sp/>compiler<sp/>warnings</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>external<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlio_8c_1afeda0c1fa1b515c8b7744515f87be5d9" kindref="member">s_stdin</ref>,<ref refid="xlio_8c_1a463856efc8da127ad6c57d80d9a1aa8a" kindref="member">s_stdout</ref>,<ref refid="xlio_8c_1ae60f225884037abda5baf197ed476981" kindref="member">s_stderr</ref>,<ref refid="xlio_8c_1a10b165ec2ea035015f6cda448dcd5dca" kindref="member">s_debugio</ref>,<ref refid="xlio_8c_1a6b1ade50cb11d3aa71e17e981cb768b7" kindref="member">s_traceout</ref>,<ref refid="xlio_8c_1aa49556ecde86e8c9fa35e41225d867d0" kindref="member">s_unbound</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1aec75dd6ecfb87f235d95cc6cd426502d" kindref="member">xlfsize</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_INPUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>FILE<sp/>*read_by_xlisp;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlgetc<sp/>-<sp/>get<sp/>a<sp/>character<sp/>from<sp/>a<sp/>file<sp/>or<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="xlisp_8h_1a1999231d37fbd6a4d9cfe53ed2efb6eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1a1999231d37fbd6a4d9cfe53ed2efb6eb" kindref="member">xlgetc</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>fptr)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>lptr,<sp/>cptr=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>input<sp/>from<sp/>nil<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fptr<sp/>==<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>EOF;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>check<sp/>for<sp/>input<sp/>from<sp/>a<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1ad9cca1e0a5cd821f4059e7d7becad19c" kindref="member">ustreamp</ref>(fptr))<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((lptr<sp/>=<sp/><ref refid="xldmem_8h_1a18603cb4c27ce8eaa7a0dcb123a5eb6c" kindref="member">gethead</ref>(fptr))<sp/>==<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>EOF;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(lptr)<sp/>||<sp/>(cptr<sp/>=<sp/><ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(lptr))<sp/>==<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref><sp/>||<sp/>!<ref refid="xlisp_8h_1a5986cd41900c01e8329a24a2bf4061ae" kindref="member">charp</ref>(cptr))</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;bad<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a344dc36eb3adf97dbfcee45fa73cab36" kindref="member">sethead</ref>(fptr,lptr<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(lptr));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lptr<sp/>==<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1ace4bb4548c3c56309e015dce935cedce" kindref="member">settail</ref>(fptr,<ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/><ref refid="xldmem_8h_1a0f48ea5640420636c1efde82ece970cb" kindref="member">getchcode</ref>(cptr);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>check<sp/>for<sp/>a<sp/>buffered<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ch<sp/>=<sp/><ref refid="xldmem_8h_1a17411ecc8167abffbd3cfb9705d06543" kindref="member">getsavech</ref>(fptr)))</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a6c2e5b94433bc5d039b19f1c456de7d0" kindref="member">setsavech</ref>(fptr,</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>check<sp/>for<sp/>terminal<sp/>input<sp/>or<sp/>file<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp<sp/>=<sp/><ref refid="xldmem_8h_1add3fb93f402f3053f209b7f5a0ed703c" kindref="member">getfile</ref>(fptr);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp<sp/>==<sp/>stdin<sp/>||<sp/>fp<sp/>==<sp/><ref refid="xlisp_8h_1a3a540e3eef339eec06aff31c4ba1eb25" kindref="member">STDERR</ref>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a662d469998b4f1514239f5282e960811" kindref="member">ostgetc</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a530ba796c2b0448cd6a5674828ee005a" kindref="member">osagetc</ref>(fp);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_INPUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_by_xlisp<sp/>&amp;&amp;<sp/>ch<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putc(ch,<sp/>read_by_xlisp);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ch);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlungetc<sp/>-<sp/>unget<sp/>a<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="xlisp_8h_1a59009616784b3b56a8ef0abaf54c5cf8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1a59009616784b3b56a8ef0abaf54c5cf8" kindref="member">xlungetc</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>fptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>lptr;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>ungetc<sp/>from<sp/>nil<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fptr<sp/>==<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref><sp/>||<sp/>ch<sp/>==<sp/>EOF)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>check<sp/>for<sp/>ungetc<sp/>to<sp/>a<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1ad9cca1e0a5cd821f4059e7d7becad19c" kindref="member">ustreamp</ref>(fptr))<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>!=<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lptr<sp/>=<sp/><ref refid="xldmem_8c_1a6020b108cda9dc1cb27b748db6afef0a" kindref="member">cons</ref>(<ref refid="xldmem_8c_1a7984f9f9c881be8794b440f145099640" kindref="member">cvchar</ref>(ch),<ref refid="xldmem_8h_1a18603cb4c27ce8eaa7a0dcb123a5eb6c" kindref="member">gethead</ref>(fptr));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8h_1a18603cb4c27ce8eaa7a0dcb123a5eb6c" kindref="member">gethead</ref>(fptr)<sp/>==<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1ace4bb4548c3c56309e015dce935cedce" kindref="member">settail</ref>(fptr,lptr);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a344dc36eb3adf97dbfcee45fa73cab36" kindref="member">sethead</ref>(fptr,lptr);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>it<sp/>must<sp/>be<sp/>a<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a6c2e5b94433bc5d039b19f1c456de7d0" kindref="member">setsavech</ref>(fptr,ch);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlpeek<sp/>-<sp/>peek<sp/>at<sp/>a<sp/>character<sp/>from<sp/>a<sp/>file<sp/>or<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="xlisp_8h_1a1505f66ee518f62b45926e579037b740" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1a1505f66ee518f62b45926e579037b740" kindref="member">xlpeek</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>fptr)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>lptr,<sp/>cptr=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>input<sp/>from<sp/>nil<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fptr<sp/>==<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>EOF;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>check<sp/>for<sp/>input<sp/>from<sp/>a<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1ad9cca1e0a5cd821f4059e7d7becad19c" kindref="member">ustreamp</ref>(fptr))<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((lptr<sp/>=<sp/><ref refid="xldmem_8h_1a18603cb4c27ce8eaa7a0dcb123a5eb6c" kindref="member">gethead</ref>(fptr))<sp/>==<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>EOF;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(lptr)<sp/>||<sp/>(cptr<sp/>=<sp/><ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(lptr))<sp/>==<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref><sp/>||<sp/>!<ref refid="xlisp_8h_1a5986cd41900c01e8329a24a2bf4061ae" kindref="member">charp</ref>(cptr))</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;bad<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/><ref refid="xldmem_8h_1a0f48ea5640420636c1efde82ece970cb" kindref="member">getchcode</ref>(cptr);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>get<sp/>the<sp/>next<sp/>file<sp/>character<sp/>and<sp/>save<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/><ref refid="xlio_8c_1a1999231d37fbd6a4d9cfe53ed2efb6eb" kindref="member">xlgetc</ref>(fptr);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a6c2e5b94433bc5d039b19f1c456de7d0" kindref="member">setsavech</ref>(fptr,ch);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ch);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlputc<sp/>-<sp/>put<sp/>a<sp/>character<sp/>to<sp/>a<sp/>file<sp/>or<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="xlisp_8h_1aafd322c97eac80cbeda20ba0476c3f55" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1aafd322c97eac80cbeda20ba0476c3f55" kindref="member">xlputc</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>fptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>lptr;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>count<sp/>the<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="xlio_8c_1aec75dd6ecfb87f235d95cc6cd426502d" kindref="member">xlfsize</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>output<sp/>to<sp/>nil<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fptr<sp/>==<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>check<sp/>for<sp/>output<sp/>to<sp/>an<sp/>unnamed<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1ad9cca1e0a5cd821f4059e7d7becad19c" kindref="member">ustreamp</ref>(fptr))<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lptr<sp/>=<sp/><ref refid="xlisp_8h_1a72509ef6a53e6298774f56615eaaf775" kindref="member">consa</ref>(<ref refid="xldmem_8c_1a7984f9f9c881be8794b440f145099640" kindref="member">cvchar</ref>(ch));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8h_1aa7db5c5de32561ee21a4c07bb432d658" kindref="member">gettail</ref>(fptr))</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(<ref refid="xldmem_8h_1aa7db5c5de32561ee21a4c07bb432d658" kindref="member">gettail</ref>(fptr),lptr);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a344dc36eb3adf97dbfcee45fa73cab36" kindref="member">sethead</ref>(fptr,lptr);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1ace4bb4548c3c56309e015dce935cedce" kindref="member">settail</ref>(fptr,lptr);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>check<sp/>for<sp/>terminal<sp/>output<sp/>or<sp/>file<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp<sp/>=<sp/><ref refid="xldmem_8h_1add3fb93f402f3053f209b7f5a0ed703c" kindref="member">getfile</ref>(fptr);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fp)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;file<sp/>not<sp/>open&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp<sp/>==<sp/><ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref><sp/>||<sp/>fp<sp/>==<sp/><ref refid="xlisp_8h_1a3a540e3eef339eec06aff31c4ba1eb25" kindref="member">STDERR</ref>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a7c44a8db56cc38f0f45a70b6d193efe5" kindref="member">ostputc</ref>(ch);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1aecc6063894c25621e38a01e4f8f5a7fe" kindref="member">osaputc</ref>(ch,fp);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xloutflush<sp/>--<sp/>flush<sp/>output<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="xlisp_8h_1a0452d08b2d0f4a2036134ab5de246cc5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1a0452d08b2d0f4a2036134ab5de246cc5" kindref="member">xloutflush</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>fptr)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>output<sp/>to<sp/>nil<sp/>or<sp/>unnamed<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fptr<sp/>==<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref><sp/>||<sp/><ref refid="xlisp_8h_1ad9cca1e0a5cd821f4059e7d7becad19c" kindref="member">ustreamp</ref>(fptr))</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>check<sp/>for<sp/>terminal<sp/>output<sp/>or<sp/>file<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp<sp/>=<sp/><ref refid="xldmem_8h_1add3fb93f402f3053f209b7f5a0ed703c" kindref="member">getfile</ref>(fptr);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fp)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;file<sp/>not<sp/>open&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp<sp/>==<sp/><ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref><sp/>||<sp/>fp<sp/>==<sp/><ref refid="xlisp_8h_1a3a540e3eef339eec06aff31c4ba1eb25" kindref="member">STDERR</ref>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a52a924a1a4c0c3fa1911a21d625bdafb" kindref="member">ostoutflush</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a8bdfbf338cf77a6766eae6bf0fd73a60" kindref="member">osoutflush</ref>(fp);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlflush<sp/>-<sp/>flush<sp/>the<sp/>input<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="xlisp_8h_1a60b7556856827a4008a758d41b66a664" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1a60b7556856827a4008a758d41b66a664" kindref="member">xlflush</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1abc672a20ed89c85c4f01809be53f5910" kindref="member">osflush</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>stdprint<sp/>-<sp/>print<sp/>to<sp/>*standard-output*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="xlisp_8h_1ab2c9fa910569499da2fee915fa7ccef3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1ab2c9fa910569499da2fee915fa7ccef3" kindref="member">stdprint</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>expr)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a9d50f0142c90da892c9036f5a1747b0a" kindref="member">xlprint</ref>(<ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(s_stdout),expr,<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a471e8ba608717f84efa3840ddc2afca6" kindref="member">xlterpri</ref>(<ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(s_stdout));</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>stdputstr<sp/>-<sp/>print<sp/>a<sp/>string<sp/>to<sp/>*standard-output*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="xlisp_8h_1a48c6474ff667334385f7c6e4c350c51d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a95f4d8be9c7842d1ca6c6503005f0b39" kindref="member">xlputstr</ref>(<ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(s_stdout),str);</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>stdflush<sp/>-<sp/>flush<sp/>the<sp/>*standard-output*<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="xlisp_8h_1a25e8863097ff041f035f32576b00fe7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1ad6cfde7a7bc9a1d443d9b77639c8d5b3" kindref="member">stdflush</ref>()</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a0452d08b2d0f4a2036134ab5de246cc5" kindref="member">xloutflush</ref>(<ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(s_stdout));</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>errprint<sp/>-<sp/>print<sp/>to<sp/>*error-output*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="xlisp_8h_1ac6fc4ab8690608ac27ae45ce0be05310" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1ac6fc4ab8690608ac27ae45ce0be05310" kindref="member">errprint</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>expr)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a9d50f0142c90da892c9036f5a1747b0a" kindref="member">xlprint</ref>(<ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(s_stderr),expr,<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a471e8ba608717f84efa3840ddc2afca6" kindref="member">xlterpri</ref>(<ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(s_stderr));</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>errputstr<sp/>-<sp/>print<sp/>a<sp/>string<sp/>to<sp/>*error-output*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="xlio_8c_1a6b1f25f19d584cce958a129b65cac4e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1a6b1f25f19d584cce958a129b65cac4e2" kindref="member">errputstr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a95f4d8be9c7842d1ca6c6503005f0b39" kindref="member">xlputstr</ref>(<ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(s_stderr),str);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbgprint<sp/>-<sp/>print<sp/>to<sp/>*debug-io*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="xlisp_8h_1a5422099bbd519a9725249123cec8022a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1a5422099bbd519a9725249123cec8022a" kindref="member">dbgprint</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>expr)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a9d50f0142c90da892c9036f5a1747b0a" kindref="member">xlprint</ref>(<ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(s_debugio),expr,<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a471e8ba608717f84efa3840ddc2afca6" kindref="member">xlterpri</ref>(<ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(s_debugio));</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbgputstr<sp/>-<sp/>print<sp/>a<sp/>string<sp/>to<sp/>*debug-io*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="xlisp_8h_1a1f2aeff95d72b2da7797e7952d5ead92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1a1f2aeff95d72b2da7797e7952d5ead92" kindref="member">dbgputstr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a95f4d8be9c7842d1ca6c6503005f0b39" kindref="member">xlputstr</ref>(<ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(s_debugio),str);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>trcprin1<sp/>-<sp/>print<sp/>to<sp/>*trace-output*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="xlisp_8h_1a220862106e3eb5c7c9f9814322bcb3d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1a220862106e3eb5c7c9f9814322bcb3d0" kindref="member">trcprin1</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>expr)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a9d50f0142c90da892c9036f5a1747b0a" kindref="member">xlprint</ref>(<ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(s_traceout),expr,<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>trcputstr<sp/>-<sp/>print<sp/>a<sp/>string<sp/>to<sp/>*trace-output*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="xlisp_8h_1a15f1d9905a3840a14237bfc2352cfde8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xlio_8c_1a15f1d9905a3840a14237bfc2352cfde8" kindref="member">trcputstr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a95f4d8be9c7842d1ca6c6503005f0b39" kindref="member">xlputstr</ref>(<ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(s_traceout),str);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlio.c"/>
  </compounddef>
</doxygen>
