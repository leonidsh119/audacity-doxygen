<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lv2_2plugins_2eg-sampler_8lv2_2waflib_2_tools_2d_8py" kind="file" language="Python">
    <compoundname>d.py</compoundname>
    <innerclass refid="classwaflib_1_1_tools_1_1d_1_1d" prot="public">waflib::Tools::d::d</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1d_1_1d__with__header" prot="public">waflib::Tools::d::d_with_header</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1d_1_1d__header" prot="public">waflib::Tools::d::d_header</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1d_1_1dprogram" prot="public">waflib::Tools::d::dprogram</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1d_1_1dshlib" prot="public">waflib::Tools::d::dshlib</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1d_1_1dstlib" prot="public">waflib::Tools::d::dstlib</innerclass>
    <innernamespace refid="namespacewaflib_1_1_tools_1_1d">waflib::Tools::d</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>encoding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WARNING!<sp/>Do<sp/>not<sp/>edit!<sp/>http://waf.googlecode.com/git/docs/wafbook/single.html#_obtaining_the_waf_file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>waflib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Utils,Task,Errors</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_task_gen" kindref="compound">waflib.TaskGen</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>taskgen_method,feature,extension</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools" kindref="compound">waflib.Tools</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>d_scan,d_config</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1ccroot" kindref="compound">waflib.Tools.ccroot</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>link_task,stlink_task</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>(Task.Task):</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;GREEN&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${D}<sp/>${DFLAGS}<sp/>${DINC_ST:INCPATHS}<sp/>${D_SRC_F:SRC}<sp/>${D_TGT_F:TGT}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>scan=d_scan.scan</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">d_with_header(<ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>):</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${D}<sp/>${DFLAGS}<sp/>${DINC_ST:INCPATHS}<sp/>${D_HDR_F:tgt.outputs[1].bldpath()}<sp/>${D_SRC_F:SRC}<sp/>${D_TGT_F:tgt.outputs[0].bldpath()}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">d_header(Task.Task):</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${D}<sp/>${D_HEADER}<sp/>${SRC}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">dprogram(<ref refid="namespacewaflib_1_1_tools_1_1ccroot_1ae241b759e3c8c26160691a6716025a0c" kindref="member">link_task</ref>):</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${D_LINKER}<sp/>${LINKFLAGS}<sp/>${DLNK_SRC_F}${SRC}<sp/>${DLNK_TGT_F:TGT}<sp/>${RPATH_ST:RPATH}<sp/>${DSTLIB_MARKER}<sp/>${DSTLIBPATH_ST:STLIBPATH}<sp/>${DSTLIB_ST:STLIB}<sp/>${DSHLIB_MARKER}<sp/>${DLIBPATH_ST:LIBPATH}<sp/>${DSHLIB_ST:LIB}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>inst_to=</highlight><highlight class="stringliteral">&apos;${BINDIR}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">dshlib(dprogram):</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>inst_to=</highlight><highlight class="stringliteral">&apos;${LIBDIR}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">dstlib(stlink_task):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref>(</highlight><highlight class="stringliteral">&apos;.d&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;.di&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;.D&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1d_1a0b6f5907fb19962703822b05f5d2c7f6" kindref="member">d_hook</ref>(self,node):</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>ext=Utils.destos_to_binfmt(self.env.DEST_OS)==</highlight><highlight class="stringliteral">&apos;pe&apos;</highlight><highlight class="keywordflow">and</highlight><highlight class="stringliteral">&apos;obj&apos;</highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;o&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>out=</highlight><highlight class="stringliteral">&apos;%s.%d.%s&apos;</highlight><highlight class="normal">%(node.name,self.idx,ext)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1ccroot_1aa2b134d88893eeede9656625b368d4df" kindref="member">create_compiled_task</ref>(self,name,node):</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task=self.create_task(name,node,node.parent.find_or_declare(out))</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.compiled_tasks.append(task)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.compiled_tasks=[task]</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>task</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;generate_headers&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk=<ref refid="namespacewaflib_1_1_tools_1_1ccroot_1aa2b134d88893eeede9656625b368d4df" kindref="member">create_compiled_task</ref>(self,</highlight><highlight class="stringliteral">&apos;d_with_header&apos;</highlight><highlight class="normal">,node)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk.outputs.append(node.change_ext(self.env[</highlight><highlight class="stringliteral">&apos;DHEADER_ext&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk=<ref refid="namespacewaflib_1_1_tools_1_1ccroot_1aa2b134d88893eeede9656625b368d4df" kindref="member">create_compiled_task</ref>(self,</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">,node)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tsk</highlight></codeline>
<codeline lineno="42"><highlight class="normal">@taskgen_method</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1d_1abeab4cb06670217a6a35b8a77933e947" kindref="member">generate_header</ref>(self,filename):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.header_lst.append([filename,self.install_path])</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.header_lst=[[filename,self.install_path]]</highlight></codeline>
<codeline lineno="48"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1d_1ae7724c426c7d6b03c2f1e81bf03f40a9" kindref="member">process_header</ref>(self):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;header_lst&apos;</highlight><highlight class="normal">,[]):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node=self.path.find_resource(i[0])</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>node:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Errors.WafError(</highlight><highlight class="stringliteral">&apos;file<sp/>%r<sp/>not<sp/>found<sp/>on<sp/>d<sp/>obj&apos;</highlight><highlight class="normal">%i[0])</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.create_task(</highlight><highlight class="stringliteral">&apos;d_header&apos;</highlight><highlight class="normal">,node,node.change_ext(</highlight><highlight class="stringliteral">&apos;.di&apos;</highlight><highlight class="normal">))</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-sampler.lv2/waflib/Tools/d.py"/>
  </compounddef>
</doxygen>
