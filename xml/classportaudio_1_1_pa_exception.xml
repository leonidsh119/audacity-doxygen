<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classportaudio_1_1_pa_exception" kind="class" language="C++" prot="public">
    <compoundname>portaudio::PaException</compoundname>
    <basecompoundref refid="classportaudio_1_1_exception" prot="public" virt="non-virtual">portaudio::Exception</basecompoundref>
    <includes refid="_exception_8hxx" local="no">Exception.hxx</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classportaudio_1_1_pa_exception_1a7abe584b6b84c1ad7ed83597e231e8fd" prot="private" static="no" mutable="no">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError portaudio::PaException::error_</definition>
        <argsstring></argsstring>
        <name>error_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/include/portaudiocpp/Exception.hxx" line="72" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/include/portaudiocpp/Exception.hxx" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classportaudio_1_1_pa_exception_1a6b7027b327f4dc62f6bd6665f9478e53" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>portaudio::PaException::PaException</definition>
        <argsstring>(PaError error)</argsstring>
        <name>PaException</name>
        <param>
          <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Wraps a PortAudio error into a PortAudioCpp <ref refid="classportaudio_1_1_pa_exception" kindref="compound">PaException</ref>. ///. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/include/portaudiocpp/Exception.hxx" line="57" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/source/portaudiocpp/Exception.cxx" bodystart="12" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classportaudio_1_1_pa_exception_1af1d551c0c9de378b00efcdbe2c752857" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char * portaudio::PaException::what</definition>
        <argsstring>() const </argsstring>
        <name>what</name>
        <reimplements refid="classportaudio_1_1_exception_1a8bd220db3a08079360fc17d553e5b3a8">what</reimplements>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Alias for <ref refid="classportaudio_1_1_pa_exception_1ad139949eecc8955b1869b0e938191331" kindref="member">paErrorText()</ref>, to have std::exception compliance. ///. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/include/portaudiocpp/Exception.hxx" line="59" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/source/portaudiocpp/Exception.cxx" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classportaudio_1_1_pa_exception_1af7f8a6b5448288c51228cd9cf7b8ea06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError portaudio::PaException::paError</definition>
        <argsstring>() const </argsstring>
        <name>paError</name>
        <briefdescription>
<para>Returns the PortAudio error code (PaError). ///. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/include/portaudiocpp/Exception.hxx" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/source/portaudiocpp/Exception.cxx" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classportaudio_1_1_pa_exception_1ad139949eecc8955b1869b0e938191331" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char * portaudio::PaException::paErrorText</definition>
        <argsstring>() const </argsstring>
        <name>paErrorText</name>
        <briefdescription>
<para>Returns the error as a (zero-terminated) text string. ///. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/include/portaudiocpp/Exception.hxx" line="62" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/source/portaudiocpp/Exception.cxx" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classportaudio_1_1_pa_exception_1a21d789f84e9a1b6a9b6fe311a6f619e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool portaudio::PaException::isHostApiError</definition>
        <argsstring>() const </argsstring>
        <name>isHostApiError</name>
        <briefdescription>
<para>Returns true is the error is a <ref refid="classportaudio_1_1_host_api" kindref="compound">HostApi</ref> error. ///. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/include/portaudiocpp/Exception.hxx" line="64" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/source/portaudiocpp/Exception.cxx" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classportaudio_1_1_pa_exception_1a0ac3d71d5b3c25286390af5eeef4efd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long portaudio::PaException::lastHostApiError</definition>
        <argsstring>() const </argsstring>
        <name>lastHostApiError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the last <ref refid="classportaudio_1_1_host_api" kindref="compound">HostApi</ref> error (which is the current one if <ref refid="classportaudio_1_1_pa_exception_1a21d789f84e9a1b6a9b6fe311a6f619e4" kindref="member">isHostApiError()</ref> returns true) as an error code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/include/portaudiocpp/Exception.hxx" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/source/portaudiocpp/Exception.cxx" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classportaudio_1_1_pa_exception_1a522aacb863209b01cac7c75ab77baba5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char * portaudio::PaException::lastHostApiErrorText</definition>
        <argsstring>() const </argsstring>
        <name>lastHostApiErrorText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the last <ref refid="classportaudio_1_1_host_api" kindref="compound">HostApi</ref> error (which is the current one if <ref refid="classportaudio_1_1_pa_exception_1a21d789f84e9a1b6a9b6fe311a6f619e4" kindref="member">isHostApiError()</ref> returns true) as a (zero-terminated) text string, if it&apos;s available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/include/portaudiocpp/Exception.hxx" line="66" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/source/portaudiocpp/Exception.cxx" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classportaudio_1_1_pa_exception_1af260698024cbd224c58a619da51ceed9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool portaudio::PaException::operator==</definition>
        <argsstring>(const PaException &amp;rhs) const </argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="classportaudio_1_1_pa_exception" kindref="compound">PaException</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/include/portaudiocpp/Exception.hxx" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/source/portaudiocpp/Exception.cxx" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classportaudio_1_1_pa_exception_1a55020aa670918f47f087677111fc3f77" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool portaudio::PaException::operator!=</definition>
        <argsstring>(const PaException &amp;rhs) const </argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="classportaudio_1_1_pa_exception" kindref="compound">PaException</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/include/portaudiocpp/Exception.hxx" line="69" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/source/portaudiocpp/Exception.cxx" bodystart="78" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Wrapper for PortAudio error codes to C++ exceptions. </para>    </briefdescription>
    <detaileddescription>
<para>It wraps up PortAudio&apos;s error handling mechanism using C++ exceptions and is derived from std::exception for easy exception handling and to ease integration with other code.</para><para>To know what exceptions each function may throw, look up the errors that can occure in the PortAudio documentation for the equivalent functions.</para><para>Some functions are likely to throw an exception (such as Stream::open(), etc) and these should always be called in try{} catch{} blocks and the thrown exceptions should be handled properly (ie. the application shouldn&apos;t just abort, but merely display a warning dialog to the user or something). However nearly all functions in PortAudioCpp are capable of throwing exceptions. When a function like <ref refid="classportaudio_1_1_stream_1ada2dbfeb07d901c0a5e554706886751b" kindref="member">Stream::isStopped()</ref> throws an exception, it&apos;s such an exceptional state that it&apos;s not likely that it can be recovered. PaExceptions such as these can ``safely&apos;&apos; be left to be handled by some outer catch-all-like mechanism for unrecoverable errors. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="8295">
        <label>portaudio::Exception</label>
        <link refid="classportaudio_1_1_exception"/>
        <childnode refid="8296" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8294">
        <label>portaudio::PaException</label>
        <link refid="classportaudio_1_1_pa_exception"/>
        <childnode refid="8295" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8296">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8298">
        <label>portaudio::Exception</label>
        <link refid="classportaudio_1_1_exception"/>
        <childnode refid="8299" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8297">
        <label>portaudio::PaException</label>
        <link refid="classportaudio_1_1_pa_exception"/>
        <childnode refid="8298" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8299">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/include/portaudiocpp/Exception.hxx" line="55" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/cpp/include/portaudiocpp/Exception.hxx" bodystart="54" bodyend="73"/>
    <listofallmembers>
      <member refid="classportaudio_1_1_pa_exception_1a7abe584b6b84c1ad7ed83597e231e8fd" prot="private" virt="non-virtual"><scope>portaudio::PaException</scope><name>error_</name></member>
      <member refid="classportaudio_1_1_pa_exception_1a21d789f84e9a1b6a9b6fe311a6f619e4" prot="public" virt="non-virtual"><scope>portaudio::PaException</scope><name>isHostApiError</name></member>
      <member refid="classportaudio_1_1_pa_exception_1a0ac3d71d5b3c25286390af5eeef4efd6" prot="public" virt="non-virtual"><scope>portaudio::PaException</scope><name>lastHostApiError</name></member>
      <member refid="classportaudio_1_1_pa_exception_1a522aacb863209b01cac7c75ab77baba5" prot="public" virt="non-virtual"><scope>portaudio::PaException</scope><name>lastHostApiErrorText</name></member>
      <member refid="classportaudio_1_1_pa_exception_1a55020aa670918f47f087677111fc3f77" prot="public" virt="non-virtual"><scope>portaudio::PaException</scope><name>operator!=</name></member>
      <member refid="classportaudio_1_1_pa_exception_1af260698024cbd224c58a619da51ceed9" prot="public" virt="non-virtual"><scope>portaudio::PaException</scope><name>operator==</name></member>
      <member refid="classportaudio_1_1_pa_exception_1af7f8a6b5448288c51228cd9cf7b8ea06" prot="public" virt="non-virtual"><scope>portaudio::PaException</scope><name>paError</name></member>
      <member refid="classportaudio_1_1_pa_exception_1ad139949eecc8955b1869b0e938191331" prot="public" virt="non-virtual"><scope>portaudio::PaException</scope><name>paErrorText</name></member>
      <member refid="classportaudio_1_1_pa_exception_1a6b7027b327f4dc62f6bd6665f9478e53" prot="public" virt="non-virtual"><scope>portaudio::PaException</scope><name>PaException</name></member>
      <member refid="classportaudio_1_1_pa_exception_1af1d551c0c9de378b00efcdbe2c752857" prot="public" virt="virtual"><scope>portaudio::PaException</scope><name>what</name></member>
      <member refid="classportaudio_1_1_exception_1adf147e2b88f398a7203605a8f90c3d60" prot="public" virt="virtual"><scope>portaudio::PaException</scope><name>~Exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
