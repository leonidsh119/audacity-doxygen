<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="codebook_8c" kind="file" language="C++">
    <compoundname>codebook.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="ogg_8h" local="no">ogg/ogg.h</includes>
    <includes refid="codec_8h" local="yes">vorbis/codec.h</includes>
    <includes refid="codebook_8h" local="yes">codebook.h</includes>
    <includes refid="scales_8h" local="yes">scales.h</includes>
    <includes refid="misc_8h" local="yes">misc.h</includes>
    <includes refid="os_8h" local="yes">os.h</includes>
    <incdepgraph>
      <node id="22697">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="22698" relation="include">
        </childnode>
        <childnode refid="22699" relation="include">
        </childnode>
        <childnode refid="22689" relation="include">
        </childnode>
      </node>
      <node id="22696">
        <label>stdint.h</label>
      </node>
      <node id="22688">
        <label>stdlib.h</label>
      </node>
      <node id="22704">
        <label>misc.h</label>
        <link refid="misc_8h"/>
        <childnode refid="22700" relation="include">
        </childnode>
      </node>
      <node id="22702">
        <label>scales.h</label>
        <link refid="scales_8h"/>
        <childnode refid="22690" relation="include">
        </childnode>
        <childnode refid="22703" relation="include">
        </childnode>
      </node>
      <node id="22700">
        <label>vorbis/codec.h</label>
        <link refid="codec_8h"/>
        <childnode refid="22691" relation="include">
        </childnode>
      </node>
      <node id="22692">
        <label>stddef.h</label>
      </node>
      <node id="22699">
        <label>alloca.h</label>
      </node>
      <node id="22693">
        <label>ogg/os_types.h</label>
        <link refid="os__types_8h"/>
        <childnode refid="22694" relation="include">
        </childnode>
      </node>
      <node id="22687">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c</label>
        <link refid="codebook.c"/>
        <childnode refid="22688" relation="include">
        </childnode>
        <childnode refid="22689" relation="include">
        </childnode>
        <childnode refid="22690" relation="include">
        </childnode>
        <childnode refid="22691" relation="include">
        </childnode>
        <childnode refid="22700" relation="include">
        </childnode>
        <childnode refid="22701" relation="include">
        </childnode>
        <childnode refid="22702" relation="include">
        </childnode>
        <childnode refid="22704" relation="include">
        </childnode>
        <childnode refid="22703" relation="include">
        </childnode>
      </node>
      <node id="22701">
        <label>codebook.h</label>
        <link refid="codebook_8h"/>
        <childnode refid="22691" relation="include">
        </childnode>
      </node>
      <node id="22698">
        <label>MacTypes.h</label>
      </node>
      <node id="22689">
        <label>string.h</label>
      </node>
      <node id="22691">
        <label>ogg/ogg.h</label>
        <link refid="ogg_8h"/>
        <childnode refid="22692" relation="include">
        </childnode>
        <childnode refid="22693" relation="include">
        </childnode>
      </node>
      <node id="22690">
        <label>math.h</label>
      </node>
      <node id="22703">
        <label>os.h</label>
        <link refid="os_8h"/>
        <childnode refid="22690" relation="include">
        </childnode>
        <childnode refid="22693" relation="include">
        </childnode>
        <childnode refid="22704" relation="include">
        </childnode>
      </node>
      <node id="22694">
        <label>ogg/config_types.h</label>
        <link refid="config__types_8h"/>
        <childnode refid="22695" relation="include">
        </childnode>
        <childnode refid="22696" relation="include">
        </childnode>
        <childnode refid="22697" relation="include">
        </childnode>
      </node>
      <node id="22695">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="codebook_8c_1ae1669a0f9de7163a739cd4712dba1410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int vorbis_staticbook_pack</definition>
        <argsstring>(const static_codebook *c, oggpack_buffer *opb)</argsstring>
        <name>vorbis_staticbook_pack</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="structstatic__codebook" kindref="compound">static_codebook</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>opb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" line="30" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" bodystart="30" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="codebook_8c_1a997a151e42f340185c6685f6de975b9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref> *</type>
        <definition>static_codebook* vorbis_staticbook_unpack</definition>
        <argsstring>(oggpack_buffer *opb)</argsstring>
        <name>vorbis_staticbook_unpack</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>opb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" line="149" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" bodystart="149" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="codebook_8c_1aef10100390bdb0f59f150e45c5255afa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int vorbis_book_encode</definition>
        <argsstring>(codebook *book, int a, oggpack_buffer *b)</argsstring>
        <name>vorbis_book_encode</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
          <declname>book</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" line="274" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" bodystart="274" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="codebook_8c_1a572151346c1fccbaf5f647788061cd43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref></type>
        <definition>static ogg_uint32_t bitreverse</definition>
        <argsstring>(ogg_uint32_t x)</argsstring>
        <name>bitreverse</name>
        <param>
          <type><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" line="288" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" bodystart="288" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="codebook_8c_1a04dd209c5e29ced5480eabd0c28da1d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="os_8h_1a0fda516f667a51e47901f4c451d89e79" kindref="member">STIN</ref> long</type>
        <definition>STIN long decode_packed_entry_number</definition>
        <argsstring>(codebook *book, oggpack_buffer *b)</argsstring>
        <name>decode_packed_entry_number</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
          <declname>book</declname>
        </param>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" line="296" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" bodystart="296" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="codebook_8c_1ab64c32ac3c21667daf48dff173999dd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long vorbis_book_decode</definition>
        <argsstring>(codebook *book, oggpack_buffer *b)</argsstring>
        <name>vorbis_book_decode</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
          <declname>book</declname>
        </param>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" line="358" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" bodystart="358" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="codebook_8c_1a1e21765f57f5e92dd447a2c65639ebd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long vorbis_book_decodevs_add</definition>
        <argsstring>(codebook *book, float *a, oggpack_buffer *b, int n)</argsstring>
        <name>vorbis_book_decodevs_add</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
          <declname>book</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" line="371" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" bodystart="371" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="codebook_8c_1ae3ec5eec5c8c323d4c928802ce0b6cb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long vorbis_book_decodev_add</definition>
        <argsstring>(codebook *book, float *a, oggpack_buffer *b, int n)</argsstring>
        <name>vorbis_book_decodev_add</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
          <declname>book</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" line="391" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" bodystart="391" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="codebook_8c_1a5c5bd9764a71f55ec58899ce5bfeeb47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long vorbis_book_decodev_set</definition>
        <argsstring>(codebook *book, float *a, oggpack_buffer *b, int n)</argsstring>
        <name>vorbis_book_decodev_set</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
          <declname>book</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" line="439" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" bodystart="439" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="codebook_8c_1ac9aee20e4c831541befddae12556b7eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long vorbis_book_decodevv_add</definition>
        <argsstring>(codebook *book, float **a, long offset, int ch, oggpack_buffer *b, int n)</argsstring>
        <name>vorbis_book_decodevv_add</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
          <declname>book</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>a</declname>
        </param>
        <param>
          <type>long</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" line="462" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c" bodystart="462" bodyend="484"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2009<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>Xiph.Org<sp/>Foundation<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>basic<sp/>codebook<sp/>pack/unpack/code/decode<sp/>operations</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>codebook.c<sp/>18183<sp/>2012-02-03<sp/>20:51:27Z<sp/>xiphmont<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ogg_8h" kindref="compound">ogg/ogg.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="codec_8h" kindref="compound">vorbis/codec.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="codebook_8h" kindref="compound">codebook.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scales_8h" kindref="compound">scales.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="misc_8h" kindref="compound">misc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="os_8h" kindref="compound">os.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>packs<sp/>the<sp/>given<sp/>codebook<sp/>into<sp/>the<sp/>bitstream<sp/>**************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="localcodebook_8h_1a2e4cf9084f67bbbdf68500dc850e33b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="codebook_8c_1ae1669a0f9de7163a739cd4712dba1410" kindref="member">vorbis_staticbook_pack</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*opb){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ordered=0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>the<sp/>basic<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,0x564342,24);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,c-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>,16);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>,24);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>pack<sp/>the<sp/>codewords.<sp/><sp/>There<sp/>are<sp/>two<sp/>packings;<sp/>length<sp/>ordered<sp/>and</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>length<sp/>random.<sp/><sp/>Decide<sp/>between<sp/>the<sp/>two<sp/>now.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;i&lt;c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;i++)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[i-1]==0<sp/>||<sp/>c-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[i]&lt;c-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[i-1])</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>)ordered=1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ordered){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>length<sp/>ordered.<sp/><sp/>We<sp/>only<sp/>need<sp/>to<sp/>say<sp/>how<sp/>many<sp/>codewords<sp/>of</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>each<sp/>length.<sp/><sp/>The<sp/>actual<sp/>codewords<sp/>are<sp/>generated</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deterministically<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>=0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,1,1);<sp/><sp/></highlight><highlight class="comment">/*<sp/>ordered<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,c-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[0]-1,5);<sp/></highlight><highlight class="comment">/*<sp/>1<sp/>to<sp/>32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;i&lt;c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;i++){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">=c-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>=c-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[i-1];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">&gt;last){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=last;j&lt;</highlight><highlight class="keyword">this</highlight><highlight class="normal">;j++){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,i-count,<ref refid="codebook_8h_1a6ffad9cca3bc0e3c913059a5a948d70e" kindref="member">_ilog</ref>(c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>-count));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count=<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,i-count,<ref refid="codebook_8h_1a6ffad9cca3bc0e3c913059a5a948d70e" kindref="member">_ilog</ref>(c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>-count));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>length<sp/>random.<sp/><sp/>Again,<sp/>we<sp/>don&apos;t<sp/>code<sp/>the<sp/>codeword<sp/>itself,<sp/>just</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>length.<sp/><sp/>This<sp/>time,<sp/>though,<sp/>we<sp/>have<sp/>to<sp/>encode<sp/>each<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,0,1);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unordered<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>algortihmic<sp/>mapping<sp/>has<sp/>use<sp/>for<sp/>&apos;unused<sp/>entries&apos;,<sp/>which<sp/>we<sp/>tag</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>here.<sp/><sp/>The<sp/>algorithmic<sp/>mapping<sp/>happens<sp/>as<sp/>usual,<sp/>but<sp/>the<sp/>unused</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>has<sp/>no<sp/>codeword.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;i++)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[i]==0)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,0,1);<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>unused<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;i++)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,c-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[i]-1,5);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,1,1);<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>unused<sp/>entries;<sp/>thus<sp/>we<sp/>tag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;i++){</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[i]==0){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,0,1);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,1,1);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,c-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[i]-1,5);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>the<sp/>entry<sp/>number<sp/>the<sp/>desired<sp/>return<sp/>value,<sp/>or<sp/>do<sp/>we<sp/>have<sp/>a</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>mapping?<sp/>If<sp/>we<sp/>have<sp/>a<sp/>mapping,<sp/>what<sp/>type?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,c-&gt;<ref refid="structstatic__codebook_1a818d20b21c9c6c1d9472a09c4b063794" kindref="member">maptype</ref>,4);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c-&gt;<ref refid="structstatic__codebook_1a818d20b21c9c6c1d9472a09c4b063794" kindref="member">maptype</ref>){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>mapping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>implicitly<sp/>populated<sp/>value<sp/>mapping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>explicitly<sp/>populated<sp/>value<sp/>mapping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!c-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>quantlist?<sp/><sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>values<sp/>that<sp/>define<sp/>the<sp/>dequantization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,c-&gt;<ref refid="structstatic__codebook_1a8f11e73cd9db46a04fb86743f078a27c" kindref="member">q_min</ref>,32);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,c-&gt;<ref refid="structstatic__codebook_1a94d93723dc380cd4fe483094e133ecb4" kindref="member">q_delta</ref>,32);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,c-&gt;<ref refid="structstatic__codebook_1aaf7234dd01a51b7a70e3ab06122ee7ca" kindref="member">q_quant</ref>-1,4);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,c-&gt;<ref refid="structstatic__codebook_1aae1321f5435c0b33f22beb66636aa3b2" kindref="member">q_sequencep</ref>,1);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantvals;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c-&gt;<ref refid="structstatic__codebook_1a818d20b21c9c6c1d9472a09c4b063794" kindref="member">maptype</ref>){</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>single<sp/>column<sp/>of<sp/>(c-&gt;entries/c-&gt;dim)<sp/>quantized<sp/>values<sp/>for</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>building<sp/>a<sp/>full<sp/>value<sp/>list<sp/>algorithmically<sp/>(square<sp/>lattice)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quantvals=<ref refid="codebook_8h_1aec05a8c0eabef16f1074fa1d596ce6e4" kindref="member">_book_maptype1_quantvals</ref>(c);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>every<sp/>value<sp/>(c-&gt;entries*c-&gt;dim<sp/>total)<sp/>specified<sp/>explicitly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quantvals=c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>*c-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>NOT_REACHABLE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quantvals=-1;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>quantized<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;quantvals;i++)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(opb,labs(c-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>[i]),c-&gt;<ref refid="structstatic__codebook_1aaf7234dd01a51b7a70e3ab06122ee7ca" kindref="member">q_quant</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>case;<sp/>we<sp/>don&apos;t<sp/>have<sp/>any<sp/>other<sp/>map<sp/>types<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>unpacks<sp/>a<sp/>codebook<sp/>from<sp/>the<sp/>packet<sp/>buffer<sp/>into<sp/>the<sp/>codebook<sp/>struct,</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/>readies<sp/>the<sp/>codebook<sp/>auxiliary<sp/>structures<sp/>for<sp/>decode<sp/>*************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="codebook_8h_1a5eb28707ade9f87ff5d1cbf11fb89be6" refkind="member"><highlight class="normal"><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*<ref refid="codebook_8c_1a997a151e42f340185c6685f6de975b9e" kindref="member">vorbis_staticbook_unpack</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*opb){</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>=<ref refid="os__types_8h_1a309e0b91bf7968a1e7ae1072d216a0cb" kindref="member">_ogg_calloc</ref>(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*s));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1a9992fc79beaacce326a6b6cc4b7f0ef9" kindref="member">allocedp</ref>=1;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>alignment<sp/>is<sp/>correct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,24)!=0x564342)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_eofout;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>the<sp/>basic<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>=<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,16);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>=<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,24);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>==-1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_eofout;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="codebook_8h_1a6ffad9cca3bc0e3c913059a5a948d70e" kindref="member">_ilog</ref>(s-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>)+<ref refid="codebook_8h_1a6ffad9cca3bc0e3c913059a5a948d70e" kindref="member">_ilog</ref>(s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>)&gt;24)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_eofout;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>codeword<sp/>ordering....<sp/>length<sp/>ordered<sp/>or<sp/>unordered?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,1)){</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocated<sp/>but<sp/>unused<sp/>entries?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>unused=<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,1);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>*(unused?1:5)+7)&gt;&gt;3&gt;opb-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>-<ref refid="ogg_8h_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(opb))</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_eofout;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unordered<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*s-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>)*s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocated<sp/>but<sp/>unused<sp/>entries?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(unused){</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yes,<sp/>unused<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;i++){</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,1)){</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num=<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,5);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(num==-1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_eofout;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=num+1;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>all<sp/>entries<sp/>used;<sp/>no<sp/>tagging<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;i++){</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num=<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,5);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(num==-1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_eofout;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=num+1;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ordered<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>=<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,5)+1;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(length==0)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_eofout;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*s-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>)*s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;){</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num=<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,<ref refid="codebook_8h_1a6ffad9cca3bc0e3c913059a5a948d70e" kindref="member">_ilog</ref>(s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>-i));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(num==-1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_eofout;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(length&gt;32<sp/>||<sp/>num&gt;s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>-i<sp/>||</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(num&gt;0<sp/>&amp;&amp;<sp/>(num-1)&gt;&gt;(length-1)&gt;1)){</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_errout;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(length&gt;32)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_errout;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;num;j++,i++)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[i]=length;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length++;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>EOF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_eofout;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>we<sp/>have<sp/>a<sp/>mapping<sp/>to<sp/>unpack?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">((s-&gt;<ref refid="structstatic__codebook_1a818d20b21c9c6c1d9472a09c4b063794" kindref="member">maptype</ref>=<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,4))){</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>mapping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>implicitly<sp/>populated<sp/>value<sp/>mapping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>explicitly<sp/>populated<sp/>value<sp/>mapping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1a8f11e73cd9db46a04fb86743f078a27c" kindref="member">q_min</ref>=<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,32);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1a94d93723dc380cd4fe483094e133ecb4" kindref="member">q_delta</ref>=<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,32);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1aaf7234dd01a51b7a70e3ab06122ee7ca" kindref="member">q_quant</ref>=<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,4)+1;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1aae1321f5435c0b33f22beb66636aa3b2" kindref="member">q_sequencep</ref>=<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,1);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structstatic__codebook_1aae1321f5435c0b33f22beb66636aa3b2" kindref="member">q_sequencep</ref>==-1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_eofout;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantvals=0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(s-&gt;<ref refid="structstatic__codebook_1a818d20b21c9c6c1d9472a09c4b063794" kindref="member">maptype</ref>){</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quantvals=(s-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>==0?0:<ref refid="codebook_8h_1aec05a8c0eabef16f1074fa1d596ce6e4" kindref="member">_book_maptype1_quantvals</ref>(s));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quantvals=s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>*s-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>quantized<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(((quantvals*s-&gt;<ref refid="structstatic__codebook_1aaf7234dd01a51b7a70e3ab06122ee7ca" kindref="member">q_quant</ref>+7)&gt;&gt;3)&gt;opb-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>-<ref refid="ogg_8h_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(opb))</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_eofout;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*s-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>)*quantvals);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;quantvals;i++)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>[i]=<ref refid="ogg_8h_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(opb,s-&gt;<ref refid="structstatic__codebook_1aaf7234dd01a51b7a70e3ab06122ee7ca" kindref="member">q_quant</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(quantvals&amp;&amp;s-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>[quantvals-1]==-1)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_eofout;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>_errout;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>all<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(s);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/>_errout:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/>_eofout:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><ref refid="codebook_8h_1a0ed7bb03c373f902d26796714fb97c5b" kindref="member">vorbis_staticbook_destroy</ref>(s);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>bits<sp/>************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="localcodebook_8h_1aef10100390bdb0f59f150e45c5255afa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="codebook_8c_1aef10100390bdb0f59f150e45c5255afa" kindref="member">vorbis_book_encode</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*book,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a&lt;0<sp/>||<sp/>a&gt;=book-&gt;<ref refid="structcodebook_1ad3f2dd8f3ad3efffbb5f60d467133ab0" kindref="member">c</ref>-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="ogg_8h_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(b,book-&gt;<ref refid="structcodebook_1a2ea951b8092a4a68551bbd9728fc86af" kindref="member">codelist</ref>[a],book-&gt;<ref refid="structcodebook_1ad3f2dd8f3ad3efffbb5f60d467133ab0" kindref="member">c</ref>-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[a]);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(book-&gt;<ref refid="structcodebook_1ad3f2dd8f3ad3efffbb5f60d467133ab0" kindref="member">c</ref>-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[a]);</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>&apos;eliminate<sp/>the<sp/>decode<sp/>tree&apos;<sp/>optimization<sp/>actually<sp/>requires<sp/>the</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/>codewords<sp/>to<sp/>be<sp/>MSb<sp/>first,<sp/>not<sp/>LSb.<sp/><sp/>This<sp/>is<sp/>an<sp/>annoying<sp/>inelegancy</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/>(and<sp/>one<sp/>of<sp/>the<sp/>first<sp/>places<sp/>where<sp/>carefully<sp/>thought<sp/>out<sp/>design</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/>turned<sp/>out<sp/>to<sp/>be<sp/>wrong;<sp/>Vorbis<sp/>II<sp/>and<sp/>future<sp/>Ogg<sp/>codecs<sp/>should<sp/>go</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/>to<sp/>an<sp/>MSb<sp/>bitpacker),<sp/>but<sp/>not<sp/>actually<sp/>the<sp/>huge<sp/>hit<sp/>it<sp/>appears<sp/>to</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/>be.<sp/><sp/>The<sp/>first-stage<sp/>decode<sp/>table<sp/>catches<sp/>most<sp/>words<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/>bitreverse<sp/>is<sp/>not<sp/>in<sp/>the<sp/>main<sp/>execution<sp/>path.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/>bitreverse(<ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>x=<sp/><sp/><sp/><sp/>((x&gt;&gt;16)&amp;0x0000ffff)<sp/>|<sp/>((x&lt;&lt;16)&amp;0xffff0000);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>x=<sp/><sp/><sp/><sp/>((x&gt;&gt;<sp/>8)&amp;0x00ff00ff)<sp/>|<sp/>((x&lt;&lt;<sp/>8)&amp;0xff00ff00);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>x=<sp/><sp/><sp/><sp/>((x&gt;&gt;<sp/>4)&amp;0x0f0f0f0f)<sp/>|<sp/>((x&lt;&lt;<sp/>4)&amp;0xf0f0f0f0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>x=<sp/><sp/><sp/><sp/>((x&gt;&gt;<sp/>2)&amp;0x33333333)<sp/>|<sp/>((x&lt;&lt;<sp/>2)&amp;0xcccccccc);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">((x&gt;&gt;<sp/>1)&amp;0x55555555)<sp/>|<sp/>((x&lt;&lt;<sp/>1)&amp;0xaaaaaaaa);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="codebook_8c_1a04dd209c5e29ced5480eabd0c28da1d9" refkind="member"><highlight class="normal"><ref refid="os_8h_1a0fda516f667a51e47901f4c451d89e79" kindref="member">STIN</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="codebook_8c_1a04dd209c5e29ced5480eabd0c28da1d9" kindref="member">decode_packed_entry_number</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*book,<sp/><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>read=book-&gt;<ref refid="structcodebook_1a53d70c4645254078f75ddd0420ce8e52" kindref="member">dec_maxlength</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lo,hi;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lok<sp/>=<sp/><ref refid="ogg_8h_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(b,book-&gt;<ref refid="structcodebook_1ab3661a7669c853181bf70ca9296649c1" kindref="member">dec_firsttablen</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lok<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>entry<sp/>=<sp/>book-&gt;<ref refid="structcodebook_1a037eee9db5ac27e82c3be1a3e24ffebd" kindref="member">dec_firsttable</ref>[lok];</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entry&amp;0x80000000UL){</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lo=(entry&gt;&gt;15)&amp;0x7fff;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi=book-&gt;<ref refid="structcodebook_1a4ab1a61278a77046c0a213b7ddfe748c" kindref="member">used_entries</ref>-(entry&amp;0x7fff);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1ab1072d1dfae8866cce6014489fa926f0" kindref="member">oggpack_adv</ref>(b,<sp/>book-&gt;<ref refid="structcodebook_1aad33e74f39a1b209834804a8d28031c2" kindref="member">dec_codelengths</ref>[entry-1]);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(entry-1);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>lo=0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>hi=book-&gt;<ref refid="structcodebook_1a4ab1a61278a77046c0a213b7ddfe748c" kindref="member">used_entries</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>lok<sp/>=<sp/><ref refid="ogg_8h_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(b,<sp/>read);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(lok&lt;0<sp/>&amp;&amp;<sp/>read&gt;1)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>lok<sp/>=<sp/><ref refid="ogg_8h_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(b,<sp/>--read);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lok&lt;0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>bisect<sp/>search<sp/>for<sp/>the<sp/>codeword<sp/>in<sp/>the<sp/>ordered<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/>testword=bitreverse((<ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref>)lok);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(hi-lo&gt;1){</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>=(hi-lo)&gt;&gt;1;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="patest__multi__sine_8c_1a4e1a7dd05b97e23b3dd1aed354405b63" kindref="member">test</ref>=book-&gt;<ref refid="structcodebook_1a2ea951b8092a4a68551bbd9728fc86af" kindref="member">codelist</ref>[lo+<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>]&gt;testword;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lo+=p&amp;(test-1);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-=p&amp;(-<ref refid="patest__multi__sine_8c_1a4e1a7dd05b97e23b3dd1aed354405b63" kindref="member">test</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(book-&gt;<ref refid="structcodebook_1aad33e74f39a1b209834804a8d28031c2" kindref="member">dec_codelengths</ref>[lo]&lt;=read){</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1ab1072d1dfae8866cce6014489fa926f0" kindref="member">oggpack_adv</ref>(b,<sp/>book-&gt;<ref refid="structcodebook_1aad33e74f39a1b209834804a8d28031c2" kindref="member">dec_codelengths</ref>[lo]);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(lo);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="ogg_8h_1ab1072d1dfae8866cce6014489fa926f0" kindref="member">oggpack_adv</ref>(b,<sp/>read);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Decode<sp/>side<sp/>is<sp/>specced<sp/>and<sp/>easier,<sp/>because<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>find</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/>matches<sp/>using<sp/>different<sp/>criteria;<sp/>we<sp/>simply<sp/>read<sp/>and<sp/>map.<sp/><sp/>There<sp/>are</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/>two<sp/>things<sp/>we<sp/>need<sp/>to<sp/>do<sp/>&apos;depending&apos;:</highlight></codeline>
<codeline lineno="346"><highlight class="comment"></highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/>We<sp/>may<sp/>need<sp/>to<sp/>support<sp/>interleave.<sp/><sp/>We<sp/>don&apos;t<sp/>really,<sp/>but<sp/>it&apos;s</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/>convenient<sp/>to<sp/>do<sp/>it<sp/>here<sp/>rather<sp/>than<sp/>rebuild<sp/>the<sp/>vector<sp/>later.</highlight></codeline>
<codeline lineno="349"><highlight class="comment"></highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/>Cascades<sp/>may<sp/>be<sp/>additive<sp/>or<sp/>multiplicitive;<sp/>this<sp/>is<sp/>not<sp/>inherent<sp/>in</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/>the<sp/>codebook,<sp/>but<sp/>set<sp/>in<sp/>the<sp/>code<sp/>using<sp/>the<sp/>codebook.<sp/><sp/>Like</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/>interleaving,<sp/>it&apos;s<sp/>easiest<sp/>to<sp/>do<sp/>it<sp/>here.</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/>addmul==0<sp/>-&gt;<sp/>declarative<sp/>(set<sp/>the<sp/>value)</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/>addmul==1<sp/>-&gt;<sp/>additive</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/>addmul==2<sp/>-&gt;<sp/>multiplicitive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>returns<sp/>the<sp/>[original,<sp/>not<sp/>compacted]<sp/>entry<sp/>number<sp/>or<sp/>-1<sp/>on<sp/>eof<sp/>*********/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="localcodebook_8h_1ab64c32ac3c21667daf48dff173999dd1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="codebook_8c_1ab64c32ac3c21667daf48dff173999dd1" kindref="member">vorbis_book_decode</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*book,<sp/><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(book-&gt;<ref refid="structcodebook_1a4ab1a61278a77046c0a213b7ddfe748c" kindref="member">used_entries</ref>&gt;0){</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>packed_entry=<ref refid="codebook_8c_1a04dd209c5e29ced5480eabd0c28da1d9" kindref="member">decode_packed_entry_number</ref>(book,b);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(packed_entry&gt;=0)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(book-&gt;<ref refid="structcodebook_1a25d9abb79519e5740fae3c635bff7031" kindref="member">dec_index</ref>[packed_entry]);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>there&apos;s<sp/>no<sp/>dec_index,<sp/>the<sp/>codebook<sp/>unpacking<sp/>isn&apos;t<sp/>collapsed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>returns<sp/>0<sp/>on<sp/>OK<sp/>or<sp/>-1<sp/>on<sp/>eof<sp/>*************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>decode<sp/>vector<sp/>/<sp/>dim<sp/>granularity<sp/>gaurding<sp/>is<sp/>done<sp/>in<sp/>the<sp/>upper<sp/>layer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="localcodebook_8h_1a1e21765f57f5e92dd447a2c65639ebd0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="codebook_8c_1a1e21765f57f5e92dd447a2c65639ebd0" kindref="member">vorbis_book_decodevs_add</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*book,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(book-&gt;<ref refid="structcodebook_1a4ab1a61278a77046c0a213b7ddfe748c" kindref="member">used_entries</ref>&gt;0){</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step=n/book-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*entry<sp/>=<sp/>alloca(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*entry)*step);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>alloca(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*t)*step);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j,<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>step;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>entry[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=<ref refid="codebook_8c_1a04dd209c5e29ced5480eabd0c28da1d9" kindref="member">decode_packed_entry_number</ref>(book,b);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entry[i]==-1)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>book-&gt;<ref refid="structcodebook_1ac3365da931532e158435f2e62021c90b" kindref="member">valuelist</ref>+entry[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]*book-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,o=0;i&lt;book-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>;i++,o+=step)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;j&lt;step;j++)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[o+j]+=t[j][i];</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>decode<sp/>vector<sp/>/<sp/>dim<sp/>granularity<sp/>gaurding<sp/>is<sp/>done<sp/>in<sp/>the<sp/>upper<sp/>layer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="localcodebook_8h_1ae3ec5eec5c8c323d4c928802ce0b6cb1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="codebook_8c_1ae3ec5eec5c8c323d4c928802ce0b6cb1" kindref="member">vorbis_book_decodev_add</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*book,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(book-&gt;<ref refid="structcodebook_1a4ab1a61278a77046c0a213b7ddfe748c" kindref="member">used_entries</ref>&gt;0){</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j,entry;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(book-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>&gt;8){</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;){</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>=<sp/><ref refid="codebook_8c_1a04dd209c5e29ced5480eabd0c28da1d9" kindref="member">decode_packed_entry_number</ref>(book,b);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entry==-1)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/><sp/><sp/><sp/><sp/>=<sp/>book-&gt;<ref refid="structcodebook_1ac3365da931532e158435f2e62021c90b" kindref="member">valuelist</ref>+entry*book-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;j&lt;book-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>;)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i++]+=t[j++];</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;){</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>=<sp/><ref refid="codebook_8c_1a04dd209c5e29ced5480eabd0c28da1d9" kindref="member">decode_packed_entry_number</ref>(book,b);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entry==-1)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/><sp/><sp/><sp/><sp/>=<sp/>book-&gt;<ref refid="structcodebook_1ac3365da931532e158435f2e62021c90b" kindref="member">valuelist</ref>+entry*book-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j=0;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)book-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>){</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i++]+=t[j++];</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i++]+=t[j++];</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i++]+=t[j++];</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i++]+=t[j++];</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i++]+=t[j++];</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i++]+=t[j++];</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i++]+=t[j++];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i++]+=t[j++];</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>unlike<sp/>the<sp/>others,<sp/>we<sp/>guard<sp/>against<sp/>n<sp/>not<sp/>being<sp/>an<sp/>integer<sp/>number</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/><sp/><sp/>of<sp/>&lt;dim&gt;<sp/>internally<sp/>rather<sp/>than<sp/>in<sp/>the<sp/>upper<sp/>layer<sp/>(called<sp/>only<sp/>by</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/>floor0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="localcodebook_8h_1a5c5bd9764a71f55ec58899ce5bfeeb47" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="codebook_8c_1a5c5bd9764a71f55ec58899ce5bfeeb47" kindref="member">vorbis_book_decodev_set</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*book,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(book-&gt;<ref refid="structcodebook_1a4ab1a61278a77046c0a213b7ddfe748c" kindref="member">used_entries</ref>&gt;0){</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j,entry;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;){</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>=<sp/><ref refid="codebook_8c_1a04dd209c5e29ced5480eabd0c28da1d9" kindref="member">decode_packed_entry_number</ref>(book,b);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entry==-1)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/><sp/><sp/><sp/><sp/>=<sp/>book-&gt;<ref refid="structcodebook_1ac3365da931532e158435f2e62021c90b" kindref="member">valuelist</ref>+entry*book-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;i&lt;n<sp/>&amp;&amp;<sp/>j&lt;book-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>;){</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i++]=t[j++];</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;){</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a[i++]=0.f;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="localcodebook_8h_1aac565a12a24e25e13723600d4cb16dd5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="codebook_8c_1ac9aee20e4c831541befddae12556b7eb" kindref="member">vorbis_book_decodevv_add</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*book,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j,entry;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chptr=0;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(book-&gt;<ref refid="structcodebook_1a4ab1a61278a77046c0a213b7ddfe748c" kindref="member">used_entries</ref>&gt;0){</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=offset/ch;i&lt;(offset+n)/ch;){</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>=<sp/><ref refid="codebook_8c_1a04dd209c5e29ced5480eabd0c28da1d9" kindref="member">decode_packed_entry_number</ref>(book,b);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entry==-1)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>book-&gt;<ref refid="structcodebook_1ac3365da931532e158435f2e62021c90b" kindref="member">valuelist</ref>+entry*book-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;j&lt;book-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>;j++){</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[chptr++][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]+=t[j];</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(chptr==ch){</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chptr=0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.c"/>
  </compounddef>
</doxygen>
