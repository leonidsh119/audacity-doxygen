<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="reader_8c" kind="file" language="C++">
    <compoundname>reader.c</compoundname>
    <includes refid="serd__internal_8h" local="yes">serd_internal.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="27109">
        <label>stdbool.h</label>
      </node>
      <node id="27106">
        <label>stdarg.h</label>
      </node>
      <node id="27108">
        <label>stdint.h</label>
      </node>
      <node id="27103">
        <label>stdlib.h</label>
      </node>
      <node id="27101">
        <label>errno.h</label>
      </node>
      <node id="27098">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c</label>
        <link refid="reader.c"/>
        <childnode refid="27099" relation="include">
        </childnode>
        <childnode refid="27100" relation="include">
        </childnode>
        <childnode refid="27101" relation="include">
        </childnode>
        <childnode refid="27106" relation="include">
        </childnode>
        <childnode refid="27108" relation="include">
        </childnode>
        <childnode refid="27102" relation="include">
        </childnode>
        <childnode refid="27103" relation="include">
        </childnode>
        <childnode refid="27104" relation="include">
        </childnode>
      </node>
      <node id="27105">
        <label>serd/serd.h</label>
        <link refid="serd_8h"/>
        <childnode refid="27106" relation="include">
        </childnode>
        <childnode refid="27107" relation="include">
        </childnode>
        <childnode refid="27108" relation="include">
        </childnode>
        <childnode refid="27102" relation="include">
        </childnode>
        <childnode refid="27109" relation="include">
        </childnode>
      </node>
      <node id="27107">
        <label>stddef.h</label>
      </node>
      <node id="27099">
        <label>serd_internal.h</label>
        <link refid="serd__internal_8h"/>
        <childnode refid="27100" relation="include">
        </childnode>
        <childnode refid="27101" relation="include">
        </childnode>
        <childnode refid="27102" relation="include">
        </childnode>
        <childnode refid="27103" relation="include">
        </childnode>
        <childnode refid="27104" relation="include">
        </childnode>
        <childnode refid="27105" relation="include">
        </childnode>
        <childnode refid="27110" relation="include">
        </childnode>
      </node>
      <node id="27100">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="27104">
        <label>string.h</label>
      </node>
      <node id="27110">
        <label>serd_config.h</label>
      </node>
      <node id="27102">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_cursor" prot="public">Cursor</innerclass>
    <innerclass refid="struct_read_context" prot="public">ReadContext</innerclass>
    <innerclass refid="struct_serd_reader_impl" prot="public">SerdReaderImpl</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="reader_8c_1a69399823e754e5d4184435f0c079270a" prot="public" static="no">
        <name>NS_XSD</name>
        <initializer>&quot;http://www.w3.org/2001/XMLSchema#&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="27" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="reader_8c_1a298b6f024c8a4d1832092da69d976137" prot="public" static="no">
        <name>NS_RDF</name>
        <initializer>&quot;http://www.w3.org/1999/02/22-rdf-<ref refid="cmdline_8c_1a9aea52a77da0039230114dcf40c98aa6" kindref="member">syntax</ref>-<ref refid="xmltok_8c_1ab6aec1346fb6c7b2733f0f73c9536ad2" kindref="member">ns</ref>#&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="28" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="reader_8c_1a1250c4f76a63eb0d4d32099f72aa0166" prot="public" static="no">
        <name>TRY_THROW</name>
        <param><defname>exp</defname></param>
        <initializer><ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (!(exp)) goto except;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="30" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" prot="public" static="no">
        <name>TRY_RET</name>
        <param><defname>exp</defname></param>
        <initializer><ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (!(exp)) <ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> 0;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="31" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="reader_8c_1a959f2f865ce117e0b82d3fd8a397146b" prot="public" static="no">
        <name>SERD_STACK_ASSERT_TOP</name>
        <param><defname>reader</defname></param>
        <param><defname>ref</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="37" column="14" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="reader_8c_1a98bcb3c70ff45bd1a5c5b2fd6c57146b" prot="public" static="no">
        <name>XSD_DECIMAL</name>
        <initializer><ref refid="sratom_8c_1a69399823e754e5d4184435f0c079270a" kindref="member">NS_XSD</ref> &quot;decimal&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="846" column="10"/>
      </memberdef>
      <memberdef kind="define" id="reader_8c_1ade95cd5a8762f9d0d3d1add02e7edf84" prot="public" static="no">
        <name>XSD_DOUBLE</name>
        <initializer><ref refid="sratom_8c_1a69399823e754e5d4184435f0c079270a" kindref="member">NS_XSD</ref> &quot;double&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="847" column="10"/>
      </memberdef>
      <memberdef kind="define" id="reader_8c_1a82721775ff7756001016d6694c798ed9" prot="public" static="no">
        <name>XSD_INTEGER</name>
        <initializer><ref refid="sratom_8c_1a69399823e754e5d4184435f0c079270a" kindref="member">NS_XSD</ref> &quot;integer&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="848" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="reader_8c_1a2fafebf49f926daa90ef0a072992470b" prot="public" static="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
        <definition>typedef uint32_t uchar</definition>
        <argsstring></argsstring>
        <name>uchar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="46" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t Ref</definition>
        <argsstring></argsstring>
        <name>Ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="reader_8c_1ab9e1468648e253d66a4dbc434f101f26" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int r_err</definition>
        <argsstring>(SerdReader *reader, SerdStatus st, const char *fmt,...)</argsstring>
        <name>r_err</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
          <declname>st</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="96" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="96" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a8e2cea4e2292da7946bbd07b3d8f2c88" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>static SerdStatus page</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>page</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="109" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="109" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ada6d330a8e9d87a96cd73d178c345854" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
        <definition>static uint8_t peek_byte</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>peek_byte</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="124" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a69a8b2dd70e1ce50358bc31662f53f2e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
        <definition>static uint8_t eat_byte_safe</definition>
        <argsstring>(SerdReader *reader, const uint8_t byte)</argsstring>
        <name>eat_byte_safe</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>byte</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="130" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="130" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1af21a577100451505509567eba5a05d1f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
        <definition>static uint8_t eat_byte_check</definition>
        <argsstring>(SerdReader *reader, const uint8_t byte)</argsstring>
        <name>eat_byte_check</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>byte</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="152" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="152" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ae3c95bc25db48ff3b3fd690e533fecc0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void eat_string</definition>
        <argsstring>(SerdReader *reader, const char *str, unsigned n)</argsstring>
        <name>eat_string</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="163" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="163" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a9fbc5f3a588a0f5d99d663519c568091" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
        <definition>static Ref push_node_padded</definition>
        <argsstring>(SerdReader *reader, size_t maxlen, SerdType type, const char *str, size_t n_bytes)</argsstring>
        <name>push_node_padded</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga7ccd8d4fb2c3a6ad690ed6d6fe1b45fa" kindref="member">SerdType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="171" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="171" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a01702344fbf4b7b8fcc81d9c65af9b1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
        <definition>static Ref push_node</definition>
        <argsstring>(SerdReader *reader, SerdType type, const char *str, size_t n_bytes)</argsstring>
        <name>push_node</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga7ccd8d4fb2c3a6ad690ed6d6fe1b45fa" kindref="member">SerdType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="195" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a1110bacebb06cf89e4684852772eb429" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
        <definition>static SerdNode* deref</definition>
        <argsstring>(SerdReader *reader, const Ref ref)</argsstring>
        <name>deref</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="201" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="201" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a238b7c668051bd96ffa27bdcd22d7031" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void push_byte</definition>
        <argsstring>(SerdReader *reader, Ref ref, const uint8_t c)</argsstring>
        <name>push_byte</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>ref</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="212" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="212" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1adcae0c67ee8881b9d48c9bfd435bd146" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void push_replacement</definition>
        <argsstring>(SerdReader *reader, Ref dest)</argsstring>
        <name>push_replacement</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="226" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="226" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a10fca226cbab9137b3cca984d3795754" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
        <definition>static Ref pop_node</definition>
        <argsstring>(SerdReader *reader, Ref ref)</argsstring>
        <name>pop_node</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="234" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="234" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a94aa835a6c7ce8b1f8e0e49c3981d0a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool emit_statement</definition>
        <argsstring>(SerdReader *reader, ReadContext ctx, Ref o, Ref d, Ref l)</argsstring>
        <name>emit_statement</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="struct_read_context" kindref="compound">ReadContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="250" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="250" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ad1c6358566ac4785e52cc2c117b69981" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_collection</definition>
        <argsstring>(SerdReader *reader, ReadContext ctx, Ref *dest)</argsstring>
        <name>read_collection</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="struct_read_context" kindref="compound">ReadContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="266" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1237" bodyend="1293"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1acafd09a1ca9d178b3c9d5cb3cdd557c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_predicateObjectList</definition>
        <argsstring>(SerdReader *reader, ReadContext ctx, bool *ate_dot)</argsstring>
        <name>read_predicateObjectList</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="struct_read_context" kindref="compound">ReadContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>ate_dot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="269" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1194" bodyend="1225"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a0537a261c7801ef4a95a72eab4dd5487" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
        <definition>static uint8_t read_HEX</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>read_HEX</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="272" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="272" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1adb2e56659acc88b7a02613db831d022c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_UCHAR</definition>
        <argsstring>(SerdReader *reader, Ref dest, uint32_t *char_code)</argsstring>
        <name>read_UCHAR</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref> *</type>
          <declname>char_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="285" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="285" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a1efd8e7db40755615df63b110b8427eb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_ECHAR</definition>
        <argsstring>(SerdReader *reader, Ref dest, SerdNodeFlags *flags)</argsstring>
        <name>read_ECHAR</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" kindref="member">SerdNodeFlags</ref> *</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="357" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="357" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a962e228c786f6e7cdb7182305e1c5bc1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>static SerdStatus bad_char</definition>
        <argsstring>(SerdReader *reader, Ref dest, const char *fmt, uint8_t c)</argsstring>
        <name>bad_char</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="392" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="392" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ab9670906f7930c620c864a5c9eb291bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>static SerdStatus read_utf8_character</definition>
        <argsstring>(SerdReader *reader, Ref dest, uint8_t c)</argsstring>
        <name>read_utf8_character</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="407" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="407" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1abbe599a72b41bb17995cca5c87b10550" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>static SerdStatus read_character</definition>
        <argsstring>(SerdReader *reader, Ref dest, SerdNodeFlags *flags, uint8_t c)</argsstring>
        <name>read_character</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" kindref="member">SerdNodeFlags</ref> *</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="442" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="442" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ac61c24cc7ae18ef8da2428dbcf23af29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void read_comment</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>read_comment</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="462" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="462" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ad2aaaf440642fe4767bffb74523c6006" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_ws</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>read_ws</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="473" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="473" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a03a84a515a32e55f7f42174cb152b6da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_ws_star</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>read_ws_star</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="489" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="489" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a615935cdeaa2f5b174b8b5dbeb60d887" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_ws_plus</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>read_ws_plus</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="496" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="496" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a3a7842ee40a78386ea34e00e6c90a5d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool peek_delim</definition>
        <argsstring>(SerdReader *reader, const char delim)</argsstring>
        <name>peek_delim</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="503" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="503" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a34af822bf6556a2d30504eabbb7d3e2d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool eat_delim</definition>
        <argsstring>(SerdReader *reader, const char delim)</argsstring>
        <name>eat_delim</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="510" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="510" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a429d13fc699ff5579b17391e82da86ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
        <definition>static Ref read_STRING_LITERAL_LONG</definition>
        <argsstring>(SerdReader *reader, SerdNodeFlags *flags, uint8_t q)</argsstring>
        <name>read_STRING_LITERAL_LONG</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" kindref="member">SerdNodeFlags</ref> *</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="522" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="522" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1aa2f178005765a16854126a416a327838" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
        <definition>static Ref read_STRING_LITERAL</definition>
        <argsstring>(SerdReader *reader, SerdNodeFlags *flags, uint8_t q)</argsstring>
        <name>read_STRING_LITERAL</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" kindref="member">SerdNodeFlags</ref> *</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="562" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="562" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a442a72993b5357b4f080e289d02d44da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
        <definition>static Ref read_String</definition>
        <argsstring>(SerdReader *reader, SerdNodeFlags *flags)</argsstring>
        <name>read_String</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" kindref="member">SerdNodeFlags</ref> *</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="595" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="595" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1acb0565a036091888d14fe587cef7e1f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_PN_CHARS_BASE</definition>
        <argsstring>(SerdReader *reader, Ref dest)</argsstring>
        <name>read_PN_CHARS_BASE</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="616" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="616" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ac0cb466a54c2905665675b7aa3e2e770" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_PN_CHARS</definition>
        <argsstring>(SerdReader *reader, Ref dest)</argsstring>
        <name>read_PN_CHARS</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="630" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="630" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a43e24da7afa83acfd458f313fb35ad5c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_PERCENT</definition>
        <argsstring>(SerdReader *reader, Ref dest)</argsstring>
        <name>read_PERCENT</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="645" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="645" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1acc0e4951eba00edb4bb99fa1da9481f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>static SerdStatus read_PLX</definition>
        <argsstring>(SerdReader *reader, Ref dest)</argsstring>
        <name>read_PLX</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="659" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="659" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1adbb21ac979bd3264efb8df95ec4bdf04" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>static SerdStatus read_PN_LOCAL</definition>
        <argsstring>(SerdReader *reader, Ref dest, bool *ate_dot)</argsstring>
        <name>read_PN_LOCAL</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>ate_dot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="684" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="684" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a2595178e73c92ff84cbfa2124a3451b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>static SerdStatus read_PN_PREFIX_tail</definition>
        <argsstring>(SerdReader *reader, Ref dest)</argsstring>
        <name>read_PN_PREFIX_tail</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="724" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="724" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1aa582bd4d6112288b2e1d4769152d5e56" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>static SerdStatus read_PN_PREFIX</definition>
        <argsstring>(SerdReader *reader, Ref dest)</argsstring>
        <name>read_PN_PREFIX</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="745" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="745" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a68ea0246ec12b5bdece61396fde8f5b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
        <definition>static Ref read_LANGTAG</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>read_LANGTAG</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="754" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="754" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a2ff31832cc2766916539607dc7e923d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
        <definition>static Ref read_IRIREF</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>read_IRIREF</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="775" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="775" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a55441961df5d6f5f8f243a48e4b1ee13" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_PrefixedName</definition>
        <argsstring>(SerdReader *reader, Ref dest, bool read_prefix, bool *ate_dot)</argsstring>
        <name>read_PrefixedName</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>read_prefix</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>ate_dot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="814" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="814" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ab00fa9eaddbd32bd89be899bfc1a4768" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_0_9</definition>
        <argsstring>(SerdReader *reader, Ref str, bool at_least_one)</argsstring>
        <name>read_0_9</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>at_least_one</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="831" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="831" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ae93500857ff83a214de9d114af2aea32" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_number</definition>
        <argsstring>(SerdReader *reader, Ref *dest, Ref *datatype, bool *ate_dot)</argsstring>
        <name>read_number</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref> *</type>
          <declname>datatype</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>ate_dot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="844" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="844" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a24d0490949f95661dfe8c9982aa5a1c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_iri</definition>
        <argsstring>(SerdReader *reader, Ref *dest, bool *ate_dot)</argsstring>
        <name>read_iri</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>ate_dot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="908" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="908" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a3f2818230ae8a1dd0d31c843a189df9c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_literal</definition>
        <argsstring>(SerdReader *reader, Ref *dest, Ref *datatype, Ref *lang, SerdNodeFlags *flags, bool *ate_dot)</argsstring>
        <name>read_literal</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref> *</type>
          <declname>datatype</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref> *</type>
          <declname>lang</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" kindref="member">SerdNodeFlags</ref> *</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>ate_dot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="924" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="924" bodyend="950"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a6c622d05548a5bd962bb8825fd29d6eb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool is_token_end</definition>
        <argsstring>(uint8_t c)</argsstring>
        <name>is_token_end</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="953" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="953" bodyend="962"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a3f3654a6de1a54babaa399772a9874b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_verb</definition>
        <argsstring>(SerdReader *reader, Ref *dest)</argsstring>
        <name>read_verb</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="965" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="965" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a11d276b31271bc57354e977a8b1ac9cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
        <definition>static Ref read_BLANK_NODE_LABEL</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>read_BLANK_NODE_LABEL</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="993" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="993" bodyend="1036"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a546e99bdf2c30d014c4d93214f971c18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void set_blank_id</definition>
        <argsstring>(SerdReader *reader, Ref ref, size_t buf_size)</argsstring>
        <name>set_blank_id</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>ref</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1039" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1039" bodyend="1045"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ae0752b8ed71b196427799cba50b4a7db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t genid_size</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>genid_size</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1048" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1048" bodyend="1051"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a90aa5081916e477676fdab802bc805a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
        <definition>static Ref blank_id</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>blank_id</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1054" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1054" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ad082c8dd14ee3084bdaef4d800b73849" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_blank</definition>
        <argsstring>(SerdReader *reader, ReadContext ctx, bool subject, Ref *dest)</argsstring>
        <name>read_blank</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="struct_read_context" kindref="compound">ReadContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1062" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1062" bodyend="1106"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a6844bee5f8352df3f8fc3b3f1e8bef58" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_object</definition>
        <argsstring>(SerdReader *reader, ReadContext ctx, bool *ate_dot)</argsstring>
        <name>read_object</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="struct_read_context" kindref="compound">ReadContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>ate_dot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1111" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1111" bodyend="1181"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a9510dcf23145af5f3d26d0bdeac533a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_objectList</definition>
        <argsstring>(SerdReader *reader, ReadContext ctx, bool *ate_dot)</argsstring>
        <name>read_objectList</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="struct_read_context" kindref="compound">ReadContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>ate_dot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1184" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1184" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1aab3bbf78e56dc29f6290319062748006" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool end_collection</definition>
        <argsstring>(SerdReader *reader, ReadContext ctx, Ref n1, Ref n2, bool ret)</argsstring>
        <name>end_collection</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="struct_read_context" kindref="compound">ReadContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>n1</declname>
        </param>
        <param>
          <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
          <declname>n2</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1228" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1228" bodyend="1234"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a942d0819bafc08bf69164d21219186b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></type>
        <definition>static Ref read_subject</definition>
        <argsstring>(SerdReader *reader, ReadContext ctx, bool *nested)</argsstring>
        <name>read_subject</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="struct_read_context" kindref="compound">ReadContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>nested</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1296" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1296" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ab08f399f5cc8f6241a8bce1951bc5908" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_triples</definition>
        <argsstring>(SerdReader *reader, ReadContext ctx, bool *ate_dot)</argsstring>
        <name>read_triples</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="struct_read_context" kindref="compound">ReadContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>ate_dot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1314" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1314" bodyend="1337"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a5b015c406673e370e2f54f84fce666bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_base</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>read_base</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1340" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1340" bodyend="1352"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ace9c0f268f04909349c09bbbe71f078c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_prefixID</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>read_prefixID</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1355" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1355" bodyend="1387"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a6ad564ddd19cf532a42608303ee025e4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_directive</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>read_directive</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1390" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1390" bodyend="1398"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ad7edbab63f834a47e661c844bd209245" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_statement</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>read_statement</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1401" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1401" bodyend="1427"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1ab3e6e13b39f93135784e86e9fe857051" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool read_turtleDoc</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>read_turtleDoc</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1430" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1430" bodyend="1436"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga99a5f1ae546409bcb9a56d89e68902bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
        <definition>SERD_API SerdReader* serd_reader_new</definition>
        <argsstring>(SerdSyntax syntax, void *handle, void(*free_handle)(void *), SerdBaseSink base_sink, SerdPrefixSink prefix_sink, SerdStatementSink statement_sink, SerdEndSink end_sink)</argsstring>
        <name>serd_reader_new</name>
        <param>
          <type><ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref></type>
          <declname>syntax</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *)</type>
          <declname>free_handle</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga9f1652e78562130337b519f309dd5125" kindref="member">SerdBaseSink</ref></type>
          <declname>base_sink</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga692f0bbdf5e2576191ee3556ecde7d55" kindref="member">SerdPrefixSink</ref></type>
          <declname>prefix_sink</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga9cd6dc709f738ed9770d0d2cd1195bd4" kindref="member">SerdStatementSink</ref></type>
          <declname>statement_sink</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gae67888543462e4127e6a4f6af047026b" kindref="member">SerdEndSink</ref></type>
          <declname>end_sink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new RDF reader. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1440" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1440" bodyend="1481"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga3a64910235c2c8bedb0e9244b338c5c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_reader_set_error_sink</definition>
        <argsstring>(SerdReader *reader, SerdErrorSink error_sink, void *error_handle)</argsstring>
        <name>serd_reader_set_error_sink</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga925d2fda236697a3e643b307ffe242e5" kindref="member">SerdErrorSink</ref></type>
          <declname>error_sink</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
          <defname>error_handle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a function to be called when errors occur during reading.</para><para>The <computeroutput>error_sink</computeroutput> will be called with <computeroutput>handle</computeroutput> as its first argument. If no error function is set, errors are printed to stderr in GCC style. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1485" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1485" bodyend="1491"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga26a4070db2f9ef59c94adeaa9dac6752" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_reader_free</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>serd_reader_free</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free <computeroutput>reader</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1495" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1495" bodyend="1511"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gaad5ac334bdf5d0c531dc0526c2310862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>SERD_API void* serd_reader_get_handle</definition>
        <argsstring>(const SerdReader *reader)</argsstring>
        <name>serd_reader_get_handle</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>handle</computeroutput> passed to <ref refid="group__serd_1ga99a5f1ae546409bcb9a56d89e68902bf" kindref="member">serd_reader_new()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1515" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1515" bodyend="1518"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga18b1d46abcd156310e0b18221aa80e31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_reader_add_blank_prefix</definition>
        <argsstring>(SerdReader *reader, const uint8_t *prefix)</argsstring>
        <name>serd_reader_add_blank_prefix</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a prefix to be added to all blank node identifiers.</para><para>This is useful when multiple files are to be parsed into the same output (e.g. a store, or other files). Since Serd preserves blank node IDs, this could cause conflicts where two non-equivalent blank nodes are merged, resulting in corrupt data. By setting a unique blank node prefix for each parsed file, this can be avoided, while preserving blank node names. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1522" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1522" bodyend="1533"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga7f5f4f5a6b224b0f04df3c078f9e3eaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_reader_set_default_graph</definition>
        <argsstring>(SerdReader *reader, const SerdNode *graph)</argsstring>
        <name>serd_reader_set_default_graph</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the URI of the default graph.</para><para>If this is set, the reader will emit quads with the graph set to the given node for any statements that are not in a named graph (which is currently all of them since Serd currently does not support any graph syntaxes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1537" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1537" bodyend="1542"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gad0fe4c7359478679e69b397620dc7f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_reader_read_file</definition>
        <argsstring>(SerdReader *reader, const uint8_t *uri)</argsstring>
        <name>serd_reader_read_file</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a file at a given <computeroutput>uri</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1546" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1546" bodyend="1562"/>
      </memberdef>
      <memberdef kind="function" id="reader_8c_1a113007edd0e63a003719af2ba85ada2c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void skip_bom</definition>
        <argsstring>(SerdReader *me)</argsstring>
        <name>skip_bom</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>me</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1565" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1565" bodyend="1571"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga0cc5b3a7ec36893d67e70564d3f326a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_reader_start_stream</definition>
        <argsstring>(SerdReader *me, FILE *file, const uint8_t *name, bool bulk)</argsstring>
        <name>serd_reader_start_stream</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>me</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>bulk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start an incremental read from a file handle.</para><para>Iff <computeroutput>bulk</computeroutput> is true, <computeroutput>file</computeroutput> will be read a page at a time. This is more efficient, but uses a page of memory and means that an entire page of input must be ready before any callbacks will fire. To react as soon as input arrives, set <computeroutput>bulk</computeroutput> to false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1575" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1575" bodyend="1604"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga832ee2aae7c3d9f6b7de4c793ec3a21c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_reader_read_chunk</definition>
        <argsstring>(SerdReader *me)</argsstring>
        <name>serd_reader_read_chunk</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>me</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a single &quot;chunk&quot; of data during an incremental read.</para><para>This function will read a single top level description, and return. This may be a directive, statement, or several statements; essentially it reads until a &apos;.&apos; is encountered. This is particularly useful for reading directly from a pipe or socket. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1608" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1608" bodyend="1620"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga55a5a06fdc2fc6a50913f64798e980cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_reader_end_stream</definition>
        <argsstring>(SerdReader *me)</argsstring>
        <name>serd_reader_end_stream</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>me</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finish an incremental read from a file handle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1624" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1624" bodyend="1632"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga001d19e0eac46f43a011f6266a7b3d59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_reader_read_file_handle</definition>
        <argsstring>(SerdReader *me, FILE *file, const uint8_t *name)</argsstring>
        <name>serd_reader_read_file_handle</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
          <defname>me</defname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read <computeroutput>file</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1636" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1636" bodyend="1644"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga3ebc4139f1b992135bdd86fc6959b566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_reader_read_string</definition>
        <argsstring>(SerdReader *me, const uint8_t *utf8)</argsstring>
        <name>serd_reader_read_string</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>me</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>utf8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read <computeroutput>utf8</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" line="1648" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1648" bodyend="1664"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2011-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serd__internal_8h" kindref="compound">serd_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="reader_8c_1a69399823e754e5d4184435f0c079270a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NS_XSD<sp/>&quot;http://www.w3.org/2001/XMLSchema#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="reader_8c_1a298b6f024c8a4d1832092da69d976137" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NS_RDF<sp/>&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="reader_8c_1a1250c4f76a63eb0d4d32099f72aa0166" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRY_THROW(exp)<sp/>if<sp/>(!(exp))<sp/>goto<sp/>except;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRY_RET(exp)<sp/><sp/><sp/>if<sp/>(!(exp))<sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SERD_STACK_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SERD_STACK_ASSERT_TOP(reader,<sp/>ref)<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ref<sp/>==<sp/>reader-&gt;allocs[reader-&gt;n_allocs<sp/>-<sp/>1]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="reader_8c_1a959f2f865ce117e0b82d3fd8a397146b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SERD_STACK_ASSERT_TOP(reader,<sp/>ref)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="struct_cursor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41" refid="struct_cursor_1a61ce50a14bcc2cf08334e4c53d37801a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="struct_cursor_1a61ce50a14bcc2cf08334e4c53d37801a" kindref="member">filename</ref>;</highlight></codeline>
<codeline lineno="42" refid="struct_cursor_1a5a8e665bc240497b8493cd37ca2bb797" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_cursor_1a5a8e665bc240497b8493cd37ca2bb797" kindref="member">line</ref>;</highlight></codeline>
<codeline lineno="43" refid="struct_cursor_1a093085ae2880b51e3dcf36e9e8c98227" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_cursor_1a093085ae2880b51e3dcf36e9e8c98227" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/><ref refid="struct_cursor" kindref="compound">Cursor</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="reader_8c_1a2fafebf49f926daa90ef0a072992470b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="reader_8c_1a2fafebf49f926daa90ef0a072992470b" kindref="member">uchar</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reference<sp/>to<sp/>a<sp/>node<sp/>in<sp/>the<sp/>stack<sp/>(we<sp/>can<sp/>not<sp/>use<sp/>pointers<sp/>since<sp/>the</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>stack<sp/>may<sp/>be<sp/>reallocated,<sp/>invalidating<sp/>any<sp/>pointers<sp/>to<sp/>elements).</highlight></codeline>
<codeline lineno="50"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="struct_read_context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54" refid="struct_read_context_1a709b5a59c90f78414910f39045fd75e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_read_context_1a709b5a59c90f78414910f39045fd75e5" kindref="member">graph</ref>;</highlight></codeline>
<codeline lineno="55" refid="struct_read_context_1af01726bf3cdcea0c7d9181780c0f9792" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_read_context_1af01726bf3cdcea0c7d9181780c0f9792" kindref="member">subject</ref>;</highlight></codeline>
<codeline lineno="56" refid="struct_read_context_1afc93d6c14a830fbd358031bf6af40679" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_read_context_1afc93d6c14a830fbd358031bf6af40679" kindref="member">predicate</ref>;</highlight></codeline>
<codeline lineno="57" refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref>*<sp/><ref refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/><ref refid="struct_read_context" kindref="compound">ReadContext</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="struct_serd_reader_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_serd_reader_impl" kindref="compound">SerdReaderImpl</ref><sp/>{</highlight></codeline>
<codeline lineno="61" refid="struct_serd_reader_impl_1a28b79e692482b0d851fa270cebecc82d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a28b79e692482b0d851fa270cebecc82d" kindref="member">handle</ref>;</highlight></codeline>
<codeline lineno="62" refid="struct_serd_reader_impl_1a191c6250ae91cb188e174c620e2a56a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="struct_serd_reader_impl_1a191c6250ae91cb188e174c620e2a56a4" kindref="member">free_handle</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr);</highlight></codeline>
<codeline lineno="63" refid="struct_serd_reader_impl_1af5714ae0f9634efefffe98c4f3bb71bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga9f1652e78562130337b519f309dd5125" kindref="member">SerdBaseSink</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1af5714ae0f9634efefffe98c4f3bb71bb" kindref="member">base_sink</ref>;</highlight></codeline>
<codeline lineno="64" refid="struct_serd_reader_impl_1a211a08bf052bba443d0ade936dac6e14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga692f0bbdf5e2576191ee3556ecde7d55" kindref="member">SerdPrefixSink</ref><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a211a08bf052bba443d0ade936dac6e14" kindref="member">prefix_sink</ref>;</highlight></codeline>
<codeline lineno="65" refid="struct_serd_reader_impl_1aca8f39fb5b4a86cb32a716c00d6c4b35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga9cd6dc709f738ed9770d0d2cd1195bd4" kindref="member">SerdStatementSink</ref><sp/><ref refid="struct_serd_reader_impl_1aca8f39fb5b4a86cb32a716c00d6c4b35" kindref="member">statement_sink</ref>;</highlight></codeline>
<codeline lineno="66" refid="struct_serd_reader_impl_1aec86fe1b35ee482731a7b9777d2d6d58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gae67888543462e4127e6a4f6af047026b" kindref="member">SerdEndSink</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1aec86fe1b35ee482731a7b9777d2d6d58" kindref="member">end_sink</ref>;</highlight></codeline>
<codeline lineno="67" refid="struct_serd_reader_impl_1a2b58643d49634d56a1a9f415af3ee4ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga925d2fda236697a3e643b307ffe242e5" kindref="member">SerdErrorSink</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a2b58643d49634d56a1a9f415af3ee4ad" kindref="member">error_sink</ref>;</highlight></codeline>
<codeline lineno="68" refid="struct_serd_reader_impl_1a71c2449acdc262672cebdae6ea4c714d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a71c2449acdc262672cebdae6ea4c714d" kindref="member">error_handle</ref>;</highlight></codeline>
<codeline lineno="69" refid="struct_serd_reader_impl_1a113ee2dfd936366f9c714ed70020520d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a113ee2dfd936366f9c714ed70020520d" kindref="member">rdf_first</ref>;</highlight></codeline>
<codeline lineno="70" refid="struct_serd_reader_impl_1a32af449a191e755cb1127c3508f2b430" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a32af449a191e755cb1127c3508f2b430" kindref="member">rdf_rest</ref>;</highlight></codeline>
<codeline lineno="71" refid="struct_serd_reader_impl_1aac99326aed9e7f3eeca4091b8f3d0506" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1aac99326aed9e7f3eeca4091b8f3d0506" kindref="member">rdf_nil</ref>;</highlight></codeline>
<codeline lineno="72" refid="struct_serd_reader_impl_1ab571a14f450c34efd761c3b47f3b15b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1ab571a14f450c34efd761c3b47f3b15b4" kindref="member">default_graph</ref>;</highlight></codeline>
<codeline lineno="73" refid="struct_serd_reader_impl_1a871444261290dc2606a8b6e10140809f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a871444261290dc2606a8b6e10140809f" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="74" refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_stack" kindref="compound">SerdStack</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref>;</highlight></codeline>
<codeline lineno="75" refid="struct_serd_reader_impl_1afda8a754daff17dd6a77e0b0eddab234" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1afda8a754daff17dd6a77e0b0eddab234" kindref="member">syntax</ref>;</highlight></codeline>
<codeline lineno="76" refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_cursor" kindref="compound">Cursor</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref>;</highlight></codeline>
<codeline lineno="77" refid="struct_serd_reader_impl_1aca4db00f91fdf36b05ec228b9d44f112" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1aca4db00f91fdf36b05ec228b9d44f112" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="78" refid="struct_serd_reader_impl_1af61d5a94d087d60988a6ea9b9f63ab2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1af61d5a94d087d60988a6ea9b9f63ab2b" kindref="member">bprefix</ref>;</highlight></codeline>
<codeline lineno="79" refid="struct_serd_reader_impl_1a5a75eaed54d5b72afd6904b54d06e6be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a5a75eaed54d5b72afd6904b54d06e6be" kindref="member">bprefix_len</ref>;</highlight></codeline>
<codeline lineno="80" refid="struct_serd_reader_impl_1aed5dc926dd93012d4203447568a12e8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1aed5dc926dd93012d4203447568a12e8a" kindref="member">next_id</ref>;</highlight></codeline>
<codeline lineno="81" refid="struct_serd_reader_impl_1ac46a2d2d335e8f045c6d830359222055" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1ac46a2d2d335e8f045c6d830359222055" kindref="member">read_buf</ref>;</highlight></codeline>
<codeline lineno="82" refid="struct_serd_reader_impl_1ac8afa312459baf236325a58e7b2036a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1ac8afa312459baf236325a58e7b2036a2" kindref="member">file_buf</ref>;</highlight></codeline>
<codeline lineno="83" refid="struct_serd_reader_impl_1acc33bdf3a5c4695c3b0ef4eb0a2334f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1acc33bdf3a5c4695c3b0ef4eb0a2334f6" kindref="member">read_head</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="84" refid="struct_serd_reader_impl_1ad1ca00cbb0da8030ee0213e281bc049b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1ad1ca00cbb0da8030ee0213e281bc049b" kindref="member">read_byte</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="85" refid="struct_serd_reader_impl_1a408331130f9cb0719dc74322cfad7ca9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a408331130f9cb0719dc74322cfad7ca9" kindref="member">from_file</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="struct_serd_reader_impl_1adf71d0ad7ed396c0782d003499b7d3e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1adf71d0ad7ed396c0782d003499b7d3e2" kindref="member">paging</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87" refid="struct_serd_reader_impl_1a0d6a7eb8e193703fe9788e0627e64f91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a0d6a7eb8e193703fe9788e0627e64f91" kindref="member">eof</ref>;</highlight></codeline>
<codeline lineno="88" refid="struct_serd_reader_impl_1a7d7280fc1b56b1ddcb6a309b7e206152" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a7d7280fc1b56b1ddcb6a309b7e206152" kindref="member">seen_genid</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SERD_STACK_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocs;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_allocs;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">r_err(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref><sp/>st,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><ref refid="namespacelv2specgen_1a022f620722f1029244a92eca556aa50a" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_error" kindref="compound">SerdError</ref><sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st,<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref>.<ref refid="struct_cursor_1a61ce50a14bcc2cf08334e4c53d37801a" kindref="member">filename</ref>,<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref>.<ref refid="struct_cursor_1a5a8e665bc240497b8493cd37ca2bb797" kindref="member">line</ref>,<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref>.<ref refid="struct_cursor_1a093085ae2880b51e3dcf36e9e8c98227" kindref="member">col</ref>,<sp/>fmt,<sp/>&amp;args</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>serd_error(reader-&gt;<ref refid="struct_serd_reader_impl_1a2b58643d49634d56a1a9f415af3ee4ad" kindref="member">error_sink</ref>,<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a71c2449acdc262672cebdae6ea4c714d" kindref="member">error_handle</ref>,<sp/>&amp;e);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="109"><highlight class="normal">page(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1acc33bdf3a5c4695c3b0ef4eb0a2334f6" kindref="member">read_head</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_read<sp/>=<sp/>fread(reader-&gt;<ref refid="struct_serd_reader_impl_1ac8afa312459baf236325a58e7b2036a2" kindref="member">file_buf</ref>,<sp/>1,<sp/><ref refid="serd__internal_8h_1a6f0323326188077fd7b6f1661a0e037e" kindref="member">SERD_PAGE_SIZE</ref>,<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a871444261290dc2606a8b6e10140809f" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_read<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1ac8afa312459baf236325a58e7b2036a2" kindref="member">file_buf</ref>[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a0d6a7eb8e193703fe9788e0627e64f91" kindref="member">eof</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ferror(reader-&gt;<ref refid="struct_serd_reader_impl_1a871444261290dc2606a8b6e10140809f" kindref="member">fd</ref>)<sp/>?<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dada1292115013f04e99b2ecfe32acd9a5" kindref="member">SERD_ERR_UNKNOWN</ref><sp/>:<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" kindref="member">SERD_FAILURE</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_read<sp/>&lt;<sp/><ref refid="serd__internal_8h_1a6f0323326188077fd7b6f1661a0e037e" kindref="member">SERD_PAGE_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1ac8afa312459baf236325a58e7b2036a2" kindref="member">file_buf</ref>[n_read]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></highlight></codeline>
<codeline lineno="124"><highlight class="normal">peek_byte(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1ac46a2d2d335e8f045c6d830359222055" kindref="member">read_buf</ref>[reader-&gt;<ref refid="struct_serd_reader_impl_1acc33bdf3a5c4695c3b0ef4eb0a2334f6" kindref="member">read_head</ref>];</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></highlight></codeline>
<codeline lineno="130"><highlight class="normal">eat_byte_safe(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>byte)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(peek_byte(reader)<sp/>==<sp/>byte);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(byte)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">:<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a0d6a7eb8e193703fe9788e0627e64f91" kindref="member">eof</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:<sp/>++reader-&gt;<ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref>.<ref refid="struct_cursor_1a5a8e665bc240497b8493cd37ca2bb797" kindref="member">line</ref>;<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref>.<ref refid="struct_cursor_1a093085ae2880b51e3dcf36e9e8c98227" kindref="member">col</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/>++reader-&gt;<ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref>.<ref refid="struct_cursor_1a093085ae2880b51e3dcf36e9e8c98227" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader-&gt;<ref refid="struct_serd_reader_impl_1a408331130f9cb0719dc74322cfad7ca9" kindref="member">from_file</ref><sp/>&amp;&amp;<sp/>!reader-&gt;<ref refid="struct_serd_reader_impl_1adf71d0ad7ed396c0782d003499b7d3e2" kindref="member">paging</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>fgetc(reader-&gt;<ref refid="struct_serd_reader_impl_1a871444261290dc2606a8b6e10140809f" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1ad1ca00cbb0da8030ee0213e281bc049b" kindref="member">read_byte</ref><sp/>=<sp/>(c<sp/>==<sp/>EOF)<sp/>?<sp/>0<sp/>:<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>)<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a0d6a7eb8e193703fe9788e0627e64f91" kindref="member">eof</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++reader-&gt;<ref refid="struct_serd_reader_impl_1acc33bdf3a5c4695c3b0ef4eb0a2334f6" kindref="member">read_head</ref><sp/>==<sp/><ref refid="serd__internal_8h_1a6f0323326188077fd7b6f1661a0e037e" kindref="member">SERD_PAGE_SIZE</ref><sp/>&amp;&amp;<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1adf71d0ad7ed396c0782d003499b7d3e2" kindref="member">paging</ref>)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page(reader);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>byte;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></highlight></codeline>
<codeline lineno="152"><highlight class="normal">eat_byte_check(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>byte)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/>byte)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expected<sp/>`%c&apos;,<sp/>not<sp/>`%c&apos;\n&quot;</highlight><highlight class="normal">,<sp/>byte,<sp/>c);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eat_byte_safe(reader,<sp/>byte);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">eat_string(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>n;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_check(reader,<sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>)[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></highlight></codeline>
<codeline lineno="171"><highlight class="normal">push_node_padded(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxlen,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga7ccd8d4fb2c3a6ad690ed6d6fe1b45fa" kindref="member">SerdType</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_bytes)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>mem<sp/>=<sp/>serd_stack_push(&amp;reader-&gt;<ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref>,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_serd_node" kindref="compound">SerdNode</ref>)<sp/>+<sp/>maxlen<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnode" kindref="compound">node</ref><sp/>=<sp/>(<ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*)mem;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref><sp/>=<sp/>node-&gt;<ref refid="struct_serd_node_1ad4816721933bbd19f904ff67d3beb40e" kindref="member">n_chars</ref><sp/>=<sp/>n_bytes;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="struct_serd_node_1a945891f8a5762a5739fc6ad7e023b50c" kindref="member">flags</ref><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="struct_serd_reader_impl_1aca4db00f91fdf36b05ec228b9d44f112" kindref="member">buf</ref><sp/>=<sp/>mem<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_serd_node" kindref="compound">SerdNode</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(buf,<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,<sp/>n_bytes<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SERD_STACK_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;allocs<sp/>=<sp/>realloc(</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;allocs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)<sp/>*<sp/>(++reader-&gt;n_allocs));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;allocs[reader-&gt;n_allocs<sp/>-<sp/>1]<sp/>=<sp/>(mem<sp/>-<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref>.<ref refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" kindref="member">buf</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)node<sp/>-<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref>.<ref refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></highlight></codeline>
<codeline lineno="195"><highlight class="normal">push_node(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="group__serd_1ga7ccd8d4fb2c3a6ad690ed6d6fe1b45fa" kindref="member">SerdType</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_bytes)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>push_node_padded(reader,<sp/>n_bytes,<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,<sp/>n_bytes);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*</highlight></codeline>
<codeline lineno="201"><highlight class="normal">deref(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/>ref)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="structnode" kindref="compound">node</ref><sp/>=<sp/>(<ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*)(reader-&gt;<ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref>.<ref refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" kindref="member">buf</ref><sp/>+<sp/>ref);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref><sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)node<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_serd_node" kindref="compound">SerdNode</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">push_byte(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/>ref,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a959f2f865ce117e0b82d3fd8a397146b" kindref="member">SERD_STACK_ASSERT_TOP</ref>(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/><sp/><sp/><sp/>=<sp/>serd_stack_push(&amp;reader-&gt;<ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnode" kindref="compound">node</ref><sp/>=<sp/>(<ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*)(reader-&gt;<ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref>.<ref refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" kindref="member">buf</ref><sp/>+<sp/>ref);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>++node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(c<sp/>&amp;<sp/>0x80))<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Starts<sp/>with<sp/>0<sp/>bit,<sp/>start<sp/>of<sp/>new<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++node-&gt;<ref refid="struct_serd_node_1ad4816721933bbd19f904ff67d3beb40e" kindref="member">n_chars</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>*(s<sp/>-<sp/>1)<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>*s<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">push_replacement(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>dest,<sp/>0xEF);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>dest,<sp/>0xBF);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>dest,<sp/>0xBD);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></highlight></codeline>
<codeline lineno="234"><highlight class="normal">pop_node(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/>ref)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref<sp/>&amp;&amp;<sp/>ref<sp/>!=<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a113ee2dfd936366f9c714ed70020520d" kindref="member">rdf_first</ref><sp/>&amp;&amp;<sp/>ref<sp/>!=<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a32af449a191e755cb1127c3508f2b430" kindref="member">rdf_rest</ref></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>ref<sp/>!=<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1aac99326aed9e7f3eeca4091b8f3d0506" kindref="member">rdf_nil</ref>)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SERD_STACK_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a959f2f865ce117e0b82d3fd8a397146b" kindref="member">SERD_STACK_ASSERT_TOP</ref>(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--reader-&gt;n_allocs;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnode" kindref="compound">node</ref><sp/>=<sp/>deref(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/>top<sp/><sp/>=<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref>.<ref refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" kindref="member">buf</ref><sp/>+<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref>.<ref refid="struct_serd_stack_1a2fda2753d2ada98036894458c573bf38" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serd_stack_pop(&amp;reader-&gt;<ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref>,<sp/>top<sp/>-<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)node);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">emit_statement(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="struct_read_context" kindref="compound">ReadContext</ref><sp/>ctx,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>graph<sp/>=<sp/>deref(reader,<sp/>ctx.<ref refid="struct_read_context_1a709b5a59c90f78414910f39045fd75e5" kindref="member">graph</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!graph<sp/>&amp;&amp;<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1ab571a14f450c34efd761c3b47f3b15b4" kindref="member">default_graph</ref>.<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph<sp/>=<sp/>&amp;reader-&gt;<ref refid="struct_serd_reader_impl_1ab571a14f450c34efd761c3b47f3b15b4" kindref="member">default_graph</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>!reader-&gt;<ref refid="struct_serd_reader_impl_1aca8f39fb5b4a86cb32a716c00d6c4b35" kindref="member">statement_sink</ref><sp/>||</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!reader-&gt;<ref refid="struct_serd_reader_impl_1aca8f39fb5b4a86cb32a716c00d6c4b35" kindref="member">statement_sink</ref>(</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a28b79e692482b0d851fa270cebecc82d" kindref="member">handle</ref>,<sp/>*ctx.<ref refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" kindref="member">flags</ref>,<sp/>graph,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deref(reader,<sp/>ctx.<ref refid="struct_read_context_1af01726bf3cdcea0c7d9181780c0f9792" kindref="member">subject</ref>),<sp/>deref(reader,<sp/>ctx.<ref refid="struct_read_context_1afc93d6c14a830fbd358031bf6af40679" kindref="member">predicate</ref>),</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deref(reader,<sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>),<sp/>deref(reader,<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>),<sp/>deref(reader,<sp/>l));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>*ctx.<ref refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" kindref="member">flags</ref><sp/>&amp;=<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647ac4825dca7b59b50762a87174fc4148b2" kindref="member">SERD_ANON_CONT</ref>|<ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a0d0a1d37007f3e9524ad05fb42fee24a" kindref="member">SERD_LIST_CONT</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Preserve<sp/>only<sp/>cont<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">read_collection(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="struct_read_context" kindref="compound">ReadContext</ref><sp/>ctx,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">read_predicateObjectList(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="struct_read_context" kindref="compound">ReadContext</ref><sp/>ctx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>ate_dot);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></highlight></codeline>
<codeline lineno="272"><highlight class="normal">read_HEX(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_digit(c)<sp/>||<sp/>in_range(c,<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)<sp/>||<sp/>in_range(c,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eat_byte_safe(reader,<sp/>c);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>hexadecimal<sp/>digit<sp/>`%c&apos;\n&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>UCHAR<sp/>escape,<sp/>initial<sp/>\<sp/>is<sp/>already<sp/>eaten<sp/>by<sp/>caller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">read_UCHAR(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref>*<sp/>char_code)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(b)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;U&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>b);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="struct_serd_reader_impl_1aca4db00f91fdf36b05ec228b9d44f112" kindref="member">buf</ref>[9]<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(buf[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>read_HEX(reader)))<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>code;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)buf,<sp/></highlight><highlight class="stringliteral">&quot;%X&quot;</highlight><highlight class="normal">,<sp/>&amp;code);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>&lt;<sp/>0x00000080)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>&lt;<sp/>0x00000800)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>&lt;<sp/>0x00010000)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>&lt;<sp/>0x00110000)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unicode<sp/>character<sp/>0x%X<sp/>out<sp/>of<sp/>range\n&quot;</highlight><highlight class="normal">,<sp/>code);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_replacement(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*char_code<sp/>=<sp/>0xFFFD;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>output<sp/>in<sp/>buf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Note<sp/>#<sp/>of<sp/>bytes<sp/>=<sp/>#<sp/>of<sp/>leading<sp/>1<sp/>bits<sp/>in<sp/>first<sp/>byte)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(size)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[3]<sp/>=<sp/>0x80<sp/>|<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>)(c<sp/>&amp;<sp/>0x3F);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>&gt;&gt;=<sp/>6;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>|=<sp/>(16<sp/>&lt;&lt;<sp/>12);<sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>bit<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[2]<sp/>=<sp/>0x80<sp/>|<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>)(c<sp/>&amp;<sp/>0x3F);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>&gt;&gt;=<sp/>6;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>|=<sp/>(32<sp/>&lt;&lt;<sp/>6);<sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>bit<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[1]<sp/>=<sp/>0x80<sp/>|<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>)(c<sp/>&amp;<sp/>0x3F);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>&gt;&gt;=<sp/>6;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>|=<sp/>0xC0;<sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>bits<sp/>6<sp/>and<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[0]<sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>)c;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/>buf[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>*char_code<sp/>=<sp/>code;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>ECHAR<sp/>escape,<sp/>initial<sp/>\<sp/>is<sp/>already<sp/>eaten<sp/>by<sp/>caller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal">read_ECHAR(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/><ref refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" kindref="member">SerdNodeFlags</ref>*<sp/>flags)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="charliteral">&apos;\b&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*flags<sp/>|=<sp/><ref refid="group__serd_1ggaf4ef160dcb28ebf5786dfd138807d8b5adfeaf2c1a43d47c219474095fbba2a5a" kindref="member">SERD_HAS_NEWLINE</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*flags<sp/>|=<sp/><ref refid="group__serd_1ggaf4ef160dcb28ebf5786dfd138807d8b5adfeaf2c1a43d47c219474095fbba2a5a" kindref="member">SERD_HAS_NEWLINE</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="charliteral">&apos;\f&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="392"><highlight class="normal">bad_char(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,<sp/>fmt,<sp/>c);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>push_replacement(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>bytes<sp/>until<sp/>the<sp/>next<sp/>start<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>peek_byte(reader);<sp/>(<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>&amp;<sp/>0x80);)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="407"><highlight class="normal">read_utf8_character(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>&amp;<sp/>0xE0)<sp/>==<sp/>0xC0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Starts<sp/>with<sp/>`110&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>&amp;<sp/>0xF0)<sp/>==<sp/>0xE0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Starts<sp/>with<sp/>`1110&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>&amp;<sp/>0xF8)<sp/>==<sp/>0xF0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Starts<sp/>with<sp/>`11110&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bad_char(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>UTF-8<sp/>start<sp/>0x%X\n&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bytes[4];</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes[0]<sp/>=<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>character<sp/>validity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>1;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((bytes[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>peek_byte(reader))<sp/>&amp;<sp/>0x80)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bad_char(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>UTF-8<sp/>continuation<sp/>0x%X\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>bytes[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Emit<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/>bytes[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>one<sp/>character<sp/>(possibly<sp/>multi-byte)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>byte,<sp/>c,<sp/>has<sp/>already<sp/>been<sp/>eaten<sp/>by<sp/>caller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="442"><highlight class="normal">read_character(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/><ref refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" kindref="member">SerdNodeFlags</ref>*<sp/>flags,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(c<sp/>&amp;<sp/>0x80))<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xA:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xD:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*flags<sp/>|=<sp/><ref refid="group__serd_1ggaf4ef160dcb28ebf5786dfd138807d8b5adfeaf2c1a43d47c219474095fbba2a5a" kindref="member">SERD_HAS_NEWLINE</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*flags<sp/>|=<sp/><ref refid="group__serd_1ggaf4ef160dcb28ebf5786dfd138807d8b5ac3f09d734dd3ec4325e7b2f1c4bfdaca" kindref="member">SERD_HAS_QUOTE</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/>c);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_utf8_character(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/>c);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[10]<sp/>comment<sp/>::=<sp/>&apos;#&apos;<sp/>(<sp/>[^#xA<sp/>#xD]<sp/>)*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal">read_comment(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(((c<sp/>=<sp/>peek_byte(reader))<sp/>!=<sp/>0xA)<sp/>&amp;&amp;<sp/>(c<sp/>!=<sp/>0xD)<sp/>&amp;&amp;<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>c);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[24]<sp/>ws<sp/>::=<sp/>#x9<sp/>|<sp/>#xA<sp/>|<sp/>#xD<sp/>|<sp/>#x20<sp/>|<sp/>comment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal">read_ws(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x9:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xA:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xD:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x20:</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>c);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_comment(reader);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal">read_ws_star(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(read_ws(reader))<sp/>{}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal">read_ws_plus(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" kindref="member">TRY_RET</ref>(read_ws(reader));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_ws_star(reader);</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal">peek_delim(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delim)</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>read_ws_star(reader);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>peek_byte(reader)<sp/>==<sp/>delim;</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal">eat_delim(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delim)</highlight></codeline>
<codeline lineno="511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(peek_delim(reader,<sp/>delim))<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>delim);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_ws_star(reader);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STRING_LITERAL_LONG_QUOTE<sp/>and<sp/>STRING_LITERAL_LONG_SINGLE_QUOTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initial<sp/>triple<sp/>quotes<sp/>are<sp/>already<sp/>eaten<sp/>by<sp/>caller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></highlight></codeline>
<codeline lineno="522"><highlight class="normal">read_STRING_LITERAL_LONG(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" kindref="member">SerdNodeFlags</ref>*<sp/>flags,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/>ref<sp/>=<sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaa661a7e84228e32f0b979839658bf4c6" kindref="member">SERD_LITERAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>code;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>c);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!read_ECHAR(reader,<sp/>ref,<sp/>flags)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!read_UCHAR(reader,<sp/>ref,<sp/>&amp;code))<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>escape<sp/>`\\%c&apos;\n&quot;</highlight><highlight class="normal">,<sp/>peek_byte(reader));</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop_node(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>q);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>q2<sp/>=<sp/>eat_byte_safe(reader,<sp/>peek_byte(reader));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>q3<sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q2<sp/>==<sp/>q<sp/>&amp;&amp;<sp/>q3<sp/>==<sp/>q)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>q3);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*flags<sp/>|=<sp/><ref refid="group__serd_1ggaf4ef160dcb28ebf5786dfd138807d8b5ac3f09d734dd3ec4325e7b2f1c4bfdaca" kindref="member">SERD_HAS_QUOTE</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>ref,<sp/>c);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_character(reader,<sp/>ref,<sp/>flags,<sp/>q2);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_character(reader,<sp/>ref,<sp/>flags,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref;</highlight></codeline>
<codeline lineno="557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STRING_LITERAL_QUOTE<sp/>and<sp/>STRING_LITERAL_SINGLE_QUOTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initial<sp/>quote<sp/>is<sp/>already<sp/>eaten<sp/>by<sp/>caller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></highlight></codeline>
<codeline lineno="562"><highlight class="normal">read_STRING_LITERAL(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" kindref="member">SerdNodeFlags</ref>*<sp/>flags,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/>ref<sp/>=<sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaa661a7e84228e32f0b979839658bf4c6" kindref="member">SERD_LITERAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>code;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,<sp/></highlight><highlight class="stringliteral">&quot;line<sp/>end<sp/>in<sp/>short<sp/>string\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop_node(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>c);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!read_ECHAR(reader,<sp/>ref,<sp/>flags)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!read_UCHAR(reader,<sp/>ref,<sp/>&amp;code))<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>escape<sp/>`\\%c&apos;\n&quot;</highlight><highlight class="normal">,<sp/>peek_byte(reader));</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop_node(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_check(reader,<sp/>q);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_character(reader,<sp/>ref,<sp/>flags,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>eat_byte_check(reader,<sp/>q);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></highlight></codeline>
<codeline lineno="595"><highlight class="normal">read_String(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" kindref="member">SerdNodeFlags</ref>*<sp/>flags)</highlight></codeline>
<codeline lineno="596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>q1<sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>q1);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>q2<sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q2<sp/>!=<sp/>q1)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Short<sp/>string<sp/>(not<sp/>triple<sp/>quoted)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_STRING_LITERAL(reader,<sp/>flags,<sp/>q1);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>q2);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>q3<sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q3<sp/>!=<sp/>q1)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>short<sp/>string<sp/>(&quot;&quot;<sp/>or<sp/>&apos;&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaa661a7e84228e32f0b979839658bf4c6" kindref="member">SERD_LITERAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>q3);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_STRING_LITERAL_LONG(reader,<sp/>flags,<sp/>q1);</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal">read_PN_CHARS_BASE(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>&amp;<sp/>0x80))<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Multi-byte<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!read_utf8_character(reader,<sp/>dest,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_alpha(c))<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>dest,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal">read_PN_CHARS(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>&amp;<sp/>0x80))<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Multi-byte<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!read_utf8_character(reader,<sp/>dest,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_alpha(c)<sp/>||<sp/>is_digit(c)<sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>dest,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal">read_PERCENT(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>dest,<sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>h1<sp/>=<sp/>read_HEX(reader);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>h2<sp/>=<sp/>read_HEX(reader);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h1<sp/>&amp;&amp;<sp/>h2)<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>dest,<sp/>h1);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>dest,<sp/>h2);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="659"><highlight class="normal">read_PLX(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="660"><highlight class="normal">{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!read_PERCENT(reader,<sp/>dest))<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>c);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_alpha(c<sp/>=<sp/>peek_byte(reader)))<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Escapes<sp/>like<sp/>\u<sp/>\n<sp/>etc.<sp/>are<sp/>not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>escaping<sp/>of<sp/>pretty<sp/>much<sp/>any<sp/>other<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>dest,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" kindref="member">SERD_FAILURE</ref>;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="684"><highlight class="normal">read_PN_LOCAL(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>ate_dot)</highlight></codeline>
<codeline lineno="685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref><sp/>st;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((st<sp/>=<sp/>read_PLX(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>))<sp/>&gt;<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" kindref="member">SERD_FAILURE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>st;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref><sp/>&amp;&amp;<sp/>!read_PN_CHARS_BASE(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>))<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" kindref="member">SERD_FAILURE</ref>;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>peek_byte(reader)))<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Middle:<sp/>(PN_CHARS<sp/>|<sp/>&apos;.&apos;<sp/>|<sp/>&apos;;&apos;)*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((st<sp/>=<sp/>read_PLX(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>))<sp/>&gt;<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" kindref="member">SERD_FAILURE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>st;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref><sp/>&amp;&amp;<sp/>!read_PN_CHARS(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>))<sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>deref(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>[n-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref><sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ate<sp/>trailing<sp/>dot,<sp/>pop<sp/>it<sp/>from<sp/>stack/node<sp/>and<sp/>inform<sp/>caller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serd_stack_pop(&amp;reader-&gt;<ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ate_dot<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>remainder<sp/>of<sp/>a<sp/>PN_PREFIX<sp/>after<sp/>some<sp/>initial<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="724"><highlight class="normal">read_PN_PREFIX_tail(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="725"><highlight class="normal">{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>peek_byte(reader)))<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Middle:<sp/>(PN_CHARS<sp/>|<sp/>&apos;.&apos;)*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>dest,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!read_PN_CHARS(reader,<sp/>dest))<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>deref(reader,<sp/>dest);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>[n-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref><sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!read_PN_CHARS(reader,<sp/>dest))<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,<sp/></highlight><highlight class="stringliteral">&quot;prefix<sp/>ends<sp/>with<sp/>`.&apos;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="745"><highlight class="normal">read_PN_PREFIX(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_PN_CHARS_BASE(reader,<sp/>dest))<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_PN_PREFIX_tail(reader,<sp/>dest);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" kindref="member">SERD_FAILURE</ref>;</highlight></codeline>
<codeline lineno="751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></highlight></codeline>
<codeline lineno="754"><highlight class="normal">read_LANGTAG(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_alpha(c))<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,<sp/></highlight><highlight class="stringliteral">&quot;unexpected<sp/>`%c&apos;\n&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/>ref<sp/>=<sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaa661a7e84228e32f0b979839658bf4c6" kindref="member">SERD_LITERAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>ref,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>peek_byte(reader))<sp/>&amp;&amp;<sp/>in_range(c,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>ref,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(peek_byte(reader)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>ref,<sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>peek_byte(reader))<sp/>&amp;&amp;<sp/>(is_alpha(c)<sp/>||<sp/>is_digit(c)))<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>ref,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref;</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></highlight></codeline>
<codeline lineno="775"><highlight class="normal">read_IRIREF(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" kindref="member">TRY_RET</ref>(eat_byte_check(reader,<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><sp/><sp/><sp/><sp/><sp/>ref<sp/>=<sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>code;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;`&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>IRI<sp/>character<sp/>`%c&apos;\n&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop_node(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>c);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>c);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!read_UCHAR(reader,<sp/>ref,<sp/>&amp;code))<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>IRI<sp/>escape\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop_node(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(code)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>escaped<sp/>IRI<sp/>character<sp/>%X<sp/>%c\n&quot;</highlight><highlight class="normal">,<sp/>code,<sp/>code);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop_node(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;=<sp/>0x20)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop_node(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>ref,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal">read_PrefixedName(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>read_prefix,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>ate_dot)</highlight></codeline>
<codeline lineno="815"><highlight class="normal">{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_prefix)<sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_PN_PREFIX(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)<sp/>&gt;<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" kindref="member">SERD_FAILURE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eat_byte_check(reader,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>push_byte(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_PN_LOCAL(reader,<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/>ate_dot)<sp/>&lt;=<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" kindref="member">SERD_FAILURE</ref>;</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal">read_0_9(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>at_least_one)</highlight></codeline>
<codeline lineno="832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;<sp/>is_digit((<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>peek_byte(reader)));<sp/>++<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,<sp/>eat_byte_safe(reader,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>));</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(at_least_one<sp/>&amp;&amp;<sp/>count<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,<sp/></highlight><highlight class="stringliteral">&quot;expected<sp/>digit\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal">read_number(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref>*<sp/>datatype,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>ate_dot)</highlight></codeline>
<codeline lineno="845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>XSD_DECIMAL<sp/>NS_XSD<sp/>&quot;decimal&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>XSD_DOUBLE<sp/><sp/>NS_XSD<sp/>&quot;double&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>XSD_INTEGER<sp/>NS_XSD<sp/>&quot;integer&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><sp/><sp/><sp/><sp/>ref<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaa661a7e84228e32f0b979839658bf4c6" kindref="member">SERD_LITERAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>has_decimal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>ref,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>peek_byte(reader))<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_decimal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decimal<sp/>case<sp/>2<sp/>(e.g.<sp/>&apos;.0&apos;<sp/>or<sp/>`-.0&apos;<sp/>or<sp/>`+.0&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>ref,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a1250c4f76a63eb0d4d32099f72aa0166" kindref="member">TRY_THROW</ref>(read_0_9(reader,<sp/>ref,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>other<sp/>cases<sp/>::=<sp/>(<sp/>&apos;-&apos;<sp/>|<sp/>&apos;+&apos;<sp/>)<sp/>[0-9]+<sp/>(<sp/>.<sp/>)?<sp/>(<sp/>[0-9]+<sp/>)?<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a1250c4f76a63eb0d4d32099f72aa0166" kindref="member">TRY_THROW</ref>(is_digit(c));</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_0_9(reader,<sp/>ref,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>peek_byte(reader))<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_decimal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Annoyingly,<sp/>dot<sp/>can<sp/>be<sp/>end<sp/>of<sp/>statement,<sp/>so<sp/>tentatively<sp/>eat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>c);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_digit(c)<sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref><sp/><sp/><sp/><sp/>=<sp/>ref;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ate_dot<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>caller<sp/>to<sp/>deal<sp/>with<sp/>stupid<sp/>grammar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>byte<sp/>is<sp/>not<sp/>a<sp/>number<sp/>character,<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>ref,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_0_9(reader,<sp/>ref,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>ref,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>peek_byte(reader)))<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>ref,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a1250c4f76a63eb0d4d32099f72aa0166" kindref="member">TRY_THROW</ref>(read_0_9(reader,<sp/>ref,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*datatype<sp/>=<sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref>,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ade95cd5a8762f9d0d3d1add02e7edf84" kindref="member">XSD_DOUBLE</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="reader_8c_1ade95cd5a8762f9d0d3d1add02e7edf84" kindref="member">XSD_DOUBLE</ref>)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_decimal)<sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*datatype<sp/>=<sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref>,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a98bcb3c70ff45bd1a5c5b2fd6c57146b" kindref="member">XSD_DECIMAL</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="reader_8c_1a98bcb3c70ff45bd1a5c5b2fd6c57146b" kindref="member">XSD_DECIMAL</ref>)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*datatype<sp/>=<sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref>,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a82721775ff7756001016d6694c798ed9" kindref="member">XSD_INTEGER</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="reader_8c_1a82721775ff7756001016d6694c798ed9" kindref="member">XSD_INTEGER</ref>)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref><sp/>=<sp/>ref;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="901"><highlight class="normal">except:</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>*datatype);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal">read_iri(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>ate_dot)</highlight></codeline>
<codeline lineno="909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(peek_byte(reader))<sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref><sp/>=<sp/>read_IRIREF(reader);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref><sp/>=<sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa8a72fff2f6f94adeb11ccadf12c117d8" kindref="member">SERD_CURIE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!read_PrefixedName(reader,<sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>ate_dot))<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref><sp/>=<sp/>pop_node(reader,<sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref><sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal">read_literal(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref>*<sp/>datatype,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref>*<sp/><ref refid="namespacewaflib_1_1_tools_1_1qt4_1a1410657c327d97e1b283cb08a32121f4" kindref="member">lang</ref>,<sp/><ref refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" kindref="member">SerdNodeFlags</ref>*<sp/>flags,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>ate_dot)</highlight></codeline>
<codeline lineno="926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref><sp/>=<sp/>read_String(reader,<sp/>flags);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!str)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(peek_byte(reader))<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a1250c4f76a63eb0d4d32099f72aa0166" kindref="member">TRY_THROW</ref>(*<ref refid="namespacewaflib_1_1_tools_1_1qt4_1a1410657c327d97e1b283cb08a32121f4" kindref="member">lang</ref><sp/>=<sp/>read_LANGTAG(reader));</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_check(reader,<sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a1250c4f76a63eb0d4d32099f72aa0166" kindref="member">TRY_THROW</ref>(read_iri(reader,<sp/>datatype,<sp/>ate_dot));</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref><sp/>=<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="945"><highlight class="normal">except:</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>*datatype);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>*<ref refid="namespacewaflib_1_1_tools_1_1qt4_1a1410657c327d97e1b283cb08a32121f4" kindref="member">lang</ref>);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>str);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal">is_token_end(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="954"><highlight class="normal">{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x9:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xA:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0xD:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x20:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal">read_verb(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(peek_byte(reader)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*dest<sp/>=<sp/>read_IRIREF(reader));</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Either<sp/>a<sp/>qname,<sp/>or<sp/>&quot;a&quot;.<sp/><sp/>Read<sp/>the<sp/>prefix<sp/>first,<sp/>and<sp/>if<sp/>it<sp/>is<sp/>in<sp/>fact</highlight></codeline>
<codeline lineno="971"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;a&quot;,<sp/>produce<sp/>that<sp/>instead.</highlight></codeline>
<codeline lineno="972"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dest<sp/>=<sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa8a72fff2f6f94adeb11ccadf12c117d8" kindref="member">SERD_CURIE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref><sp/><sp/><sp/><sp/>=<sp/>deref(reader,<sp/>*dest);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref><sp/>st<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>read_PN_PREFIX(reader,<sp/>*dest);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ate_dot<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!st<sp/>&amp;&amp;<sp/>node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref><sp/>==<sp/>1<sp/>&amp;&amp;<sp/>node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_token_end(peek_byte(reader)))<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>*dest);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*dest<sp/>=<sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref>,<sp/><ref refid="reader_8c_1a298b6f024c8a4d1832092da69d976137" kindref="member">NS_RDF</ref><sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,<sp/>47));</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>&gt;<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" kindref="member">SERD_FAILURE</ref><sp/>||</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!read_PrefixedName(reader,<sp/>*dest,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;ate_dot)<sp/>||</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ate_dot)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*dest<sp/>=<sp/>pop_node(reader,<sp/>*dest));</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></highlight></codeline>
<codeline lineno="993"><highlight class="normal">read_BLANK_NODE_LABEL(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="994"><highlight class="normal">{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>eat_byte_check(reader,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/>ref<sp/>=<sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaed82589a7355a2086b1c9cd91ec261c7" kindref="member">SERD_BLANK</ref>,</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1af61d5a94d087d60988a6ea9b9f63ab2b" kindref="member">bprefix</ref><sp/>?<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)reader-&gt;<ref refid="struct_serd_reader_impl_1af61d5a94d087d60988a6ea9b9f63ab2b" kindref="member">bprefix</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a5a75eaed54d5b72afd6904b54d06e6be" kindref="member">bprefix_len</ref>);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>peek_byte(reader);<sp/><sp/></highlight><highlight class="comment">//<sp/>First:<sp/>(PN_CHARS<sp/>|<sp/>&apos;_&apos;<sp/>|<sp/>[0-9])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_digit(c)<sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>ref,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!read_PN_CHARS(reader,<sp/>ref))<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>name<sp/>start<sp/>character\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop_node(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>peek_byte(reader)))<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Middle:<sp/>(PN_CHARS<sp/>|<sp/>&apos;.&apos;)*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_byte(reader,<sp/>ref,<sp/>eat_byte_safe(reader,<sp/>c));</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!read_PN_CHARS(reader,<sp/>ref))<sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>n<sp/>=<sp/>deref(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>[n-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref><sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!read_PN_CHARS(reader,<sp/>ref))<sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,<sp/></highlight><highlight class="stringliteral">&quot;name<sp/>ends<sp/>with<sp/>`.&apos;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop_node(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader-&gt;<ref refid="struct_serd_reader_impl_1afda8a754daff17dd6a77e0b0eddab234" kindref="member">syntax</ref><sp/>==<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a4acfee57d17213dcb55e94c55a4fd78e" kindref="member">SERD_TURTLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_digit(n-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>[1]))<sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)n-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>)[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>clash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a7d7280fc1b56b1ddcb6a309b7e206152" kindref="member">seen_genid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader-&gt;<ref refid="struct_serd_reader_impl_1a7d7280fc1b56b1ddcb6a309b7e206152" kindref="member">seen_genid</ref><sp/>&amp;&amp;<sp/>n-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da129e75e2f73cc16a2aeb9da549cdc3c8" kindref="member">SERD_ERR_ID_CLASH</ref>,</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;found<sp/>both<sp/>`b&apos;<sp/>and<sp/>`B&apos;<sp/>blank<sp/>IDs,<sp/>prefix<sp/>required\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop_node(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal">set_blank_id(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/>ref,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_size)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref><sp/><sp/><sp/>=<sp/>deref(reader,<sp/>ref);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structprefix" kindref="compound">prefix</ref><sp/>=<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1af61d5a94d087d60988a6ea9b9f63ab2b" kindref="member">bprefix</ref><sp/>?<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)reader-&gt;<ref refid="struct_serd_reader_impl_1af61d5a94d087d60988a6ea9b9f63ab2b" kindref="member">bprefix</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref><sp/>=<sp/>node-&gt;<ref refid="struct_serd_node_1ad4816721933bbd19f904ff67d3beb40e" kindref="member">n_chars</ref><sp/>=<sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref>(</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>buf_size,<sp/></highlight><highlight class="stringliteral">&quot;%sb%u&quot;</highlight><highlight class="normal">,<sp/><ref refid="lib_2expat_8h_1ab9c3d990bb61927ef5406b25c41652ee" kindref="member">prefix</ref>,<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1aed5dc926dd93012d4203447568a12e8a" kindref="member">next_id</ref>++);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal">genid_size(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="1049"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a5a75eaed54d5b72afd6904b54d06e6be" kindref="member">bprefix_len</ref><sp/>+<sp/>1<sp/>+<sp/>10<sp/>+<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>+<sp/>&quot;b&quot;<sp/>+<sp/>UINT32_MAX<sp/>+<sp/>\0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></highlight></codeline>
<codeline lineno="1054"><highlight class="normal">blank_id(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/>ref<sp/>=<sp/>push_node_padded(reader,<sp/>genid_size(reader),<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaed82589a7355a2086b1c9cd91ec261c7" kindref="member">SERD_BLANK</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>set_blank_id(reader,<sp/>ref,<sp/>genid_size(reader));</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal">read_blank(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="struct_read_context" kindref="compound">ReadContext</ref><sp/>ctx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>subject,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref><sp/>old_flags<sp/>=<sp/>*ctx.<ref refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacesmartmsgmerge_1ac2680eb7fa9c45a71b644e17efafadd9" kindref="member">empty</ref>;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(peek_byte(reader))<sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*dest<sp/>=<sp/>read_BLANK_NODE_LABEL(reader));</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((empty<sp/>=<sp/>peek_delim(reader,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ctx.<ref refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" kindref="member">flags</ref><sp/>|=<sp/>(subject)<sp/>?<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a09c7af768d2df031e453af6cd4b5c443" kindref="member">SERD_EMPTY_S</ref><sp/>:<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a392894ad449f66514ac9395708bf7a2e" kindref="member">SERD_EMPTY_O</ref>;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ctx.<ref refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" kindref="member">flags</ref><sp/>|=<sp/>(subject)<sp/>?<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a4884dff61b0d7db44be17bb950158f8e" kindref="member">SERD_ANON_S_BEGIN</ref><sp/>:<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647aae52aa2d821bdd02e828cfcf07692978" kindref="member">SERD_ANON_O_BEGIN</ref>;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dest<sp/>=<sp/>blank_id(reader);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx.<ref refid="struct_read_context_1af01726bf3cdcea0c7d9181780c0f9792" kindref="member">subject</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" kindref="member">TRY_RET</ref>(emit_statement(reader,<sp/>ctx,<sp/>*dest,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="struct_read_context_1af01726bf3cdcea0c7d9181780c0f9792" kindref="member">subject</ref><sp/>=<sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!empty)<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ctx.<ref refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" kindref="member">flags</ref><sp/>&amp;=<sp/>~(<ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a0d0a1d37007f3e9524ad05fb42fee24a" kindref="member">SERD_LIST_CONT</ref>);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!subject)<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ctx.<ref refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" kindref="member">flags</ref><sp/>|=<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647ac4825dca7b59b50762a87174fc4148b2" kindref="member">SERD_ANON_CONT</ref>;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ate_dot<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_predicateObjectList(reader,<sp/>ctx,<sp/>&amp;ate_dot);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ate_dot)<sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,<sp/></highlight><highlight class="stringliteral">&quot;`.&apos;<sp/>inside<sp/>blank\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_ws_star(reader);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader-&gt;<ref refid="struct_serd_reader_impl_1aec86fe1b35ee482731a7b9777d2d6d58" kindref="member">end_sink</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1aec86fe1b35ee482731a7b9777d2d6d58" kindref="member">end_sink</ref>(reader-&gt;<ref refid="struct_serd_reader_impl_1a28b79e692482b0d851fa270cebecc82d" kindref="member">handle</ref>,<sp/>deref(reader,<sp/>*dest));</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ctx.<ref refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" kindref="member">flags</ref><sp/>=<sp/>old_flags;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_check(reader,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_collection(reader,<sp/>ctx,<sp/>dest);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>blank<sp/>node\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Recurses,<sp/>calling<sp/>statement_sink<sp/>for<sp/>every<sp/>statement<sp/>encountered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Leaves<sp/>stack<sp/>in<sp/>original<sp/>calling<sp/>state<sp/>(i.e.<sp/>pops<sp/>everything<sp/>it<sp/>pushes).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal">read_object(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="struct_read_context" kindref="compound">ReadContext</ref><sp/>ctx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>ate_dot)</highlight></codeline>
<codeline lineno="1112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>XSD_BOOLEAN<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="reader_8c_1a69399823e754e5d4184435f0c079270a" kindref="member">NS_XSD</ref><sp/></highlight><highlight class="stringliteral">&quot;boolean&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>XSD_BOOLEAN_LEN<sp/>=<sp/>40;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>orig_stack_size<sp/>=<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref>.<ref refid="struct_serd_stack_1a2fda2753d2ada98036894458c573bf38" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><sp/><sp/><sp/><sp/>=<sp/>(ctx.<ref refid="struct_read_context_1af01726bf3cdcea0c7d9181780c0f9792" kindref="member">subject</ref><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datatype<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_tools_1_1qt4_1a1410657c327d97e1b283cb08a32121f4" kindref="member">lang</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>peek_byte(reader);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a1250c4f76a63eb0d4d32099f72aa0166" kindref="member">TRY_THROW</ref>(ret<sp/>=<sp/>read_blank(reader,<sp/>ctx,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;o));</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a1250c4f76a63eb0d4d32099f72aa0166" kindref="member">TRY_THROW</ref>(ret<sp/>=<sp/>read_iri(reader,<sp/>&amp;o,<sp/>ate_dot));</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;7&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;8&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a1250c4f76a63eb0d4d32099f72aa0166" kindref="member">TRY_THROW</ref>(ret<sp/>=<sp/>read_number(reader,<sp/>&amp;o,<sp/>&amp;datatype,<sp/>ate_dot));</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a1250c4f76a63eb0d4d32099f72aa0166" kindref="member">TRY_THROW</ref>(ret<sp/>=<sp/>read_literal(reader,<sp/>&amp;o,<sp/>&amp;datatype,<sp/>&amp;lang,<sp/>&amp;flags,<sp/>ate_dot));</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Either<sp/>a<sp/>boolean<sp/>literal,<sp/>or<sp/>a<sp/>qname.<sp/><sp/>Read<sp/>the<sp/>prefix<sp/>first,<sp/>and<sp/>if</highlight></codeline>
<codeline lineno="1151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>is<sp/>in<sp/>fact<sp/>a<sp/>&quot;true&quot;<sp/>or<sp/>&quot;false&quot;<sp/>literal,<sp/>produce<sp/>that<sp/>instead.</highlight></codeline>
<codeline lineno="1152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>deref(reader,<sp/>o<sp/>=<sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa8a72fff2f6f94adeb11ccadf12c117d8" kindref="member">SERD_CURIE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0));</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(read_PN_CHARS_BASE(reader,<sp/>o))<sp/>{}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref><sp/>==<sp/>4<sp/>&amp;&amp;<sp/>!memcmp(node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">,<sp/>4))<sp/>||</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref><sp/>==<sp/>5<sp/>&amp;&amp;<sp/>!memcmp(node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">,<sp/>5)))<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref><sp/>=<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaa661a7e84228e32f0b979839658bf4c6" kindref="member">SERD_LITERAL</ref>;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datatype<sp/><sp/><sp/>=<sp/>push_node(</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref>,<sp/>XSD_BOOLEAN,<sp/>XSD_BOOLEAN_LEN);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_PN_PREFIX_tail(reader,<sp/>o)<sp/>&gt;<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" kindref="member">SERD_FAILURE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>read_PrefixedName(reader,<sp/>o,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ate_dot);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&amp;&amp;<sp/>emit)<sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deref(reader,<sp/>o)-&gt;<ref refid="struct_serd_node_1a945891f8a5762a5739fc6ad7e023b50c" kindref="member">flags</ref><sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>emit_statement(reader,<sp/>ctx,<sp/>o,<sp/>datatype,<sp/>lang);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal">except:</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>lang);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>datatype);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>o);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(reader-&gt;<ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref>.<ref refid="struct_serd_stack_1a2fda2753d2ada98036894458c573bf38" kindref="member">size</ref><sp/>==<sp/>orig_stack_size);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal">read_objectList(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="struct_read_context" kindref="compound">ReadContext</ref><sp/>ctx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>ate_dot)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" kindref="member">TRY_RET</ref>(read_object(reader,<sp/>ctx,<sp/>ate_dot));</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!*ate_dot<sp/>&amp;&amp;<sp/>eat_delim(reader,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" kindref="member">TRY_RET</ref>(read_object(reader,<sp/>ctx,<sp/>ate_dot));</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal">read_predicateObjectList(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="struct_read_context" kindref="compound">ReadContext</ref><sp/>ctx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>ate_dot)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a1250c4f76a63eb0d4d32099f72aa0166" kindref="member">TRY_THROW</ref>(read_verb(reader,<sp/>&amp;ctx.<ref refid="struct_read_context_1afc93d6c14a830fbd358031bf6af40679" kindref="member">predicate</ref>));</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_ws_star(reader);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1a1250c4f76a63eb0d4d32099f72aa0166" kindref="member">TRY_THROW</ref>(read_objectList(reader,<sp/>ctx,<sp/>ate_dot));</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="struct_read_context_1afc93d6c14a830fbd358031bf6af40679" kindref="member">predicate</ref><sp/>=<sp/>pop_node(reader,<sp/>ctx.<ref refid="struct_read_context_1afc93d6c14a830fbd358031bf6af40679" kindref="member">predicate</ref>);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ate_dot)<sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_ws_star(reader);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>peek_byte(reader))<sp/>{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/>c);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>ctx.<ref refid="struct_read_context_1afc93d6c14a830fbd358031bf6af40679" kindref="member">predicate</ref>);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">except:</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>ctx.<ref refid="struct_read_context_1afc93d6c14a830fbd358031bf6af40679" kindref="member">predicate</ref>);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal">end_collection(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="struct_read_context" kindref="compound">ReadContext</ref><sp/>ctx,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/>n1,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/>n2,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>n2);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>n1);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>*ctx.<ref refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" kindref="member">flags</ref><sp/>&amp;=<sp/>~<ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a0d0a1d37007f3e9524ad05fb42fee24a" kindref="member">SERD_LIST_CONT</ref>;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret<sp/>&amp;&amp;<sp/>(eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal">read_collection(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="struct_read_context" kindref="compound">ReadContext</ref><sp/>ctx,<sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>peek_delim(reader,<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest<sp/>=<sp/>end<sp/>?<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1aac99326aed9e7f3eeca4091b8f3d0506" kindref="member">rdf_nil</ref><sp/>:<sp/>blank_id(reader);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx.<ref refid="struct_read_context_1af01726bf3cdcea0c7d9181780c0f9792" kindref="member">subject</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subject<sp/>predicate<sp/>_:head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ctx.<ref refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" kindref="member">flags</ref><sp/>|=<sp/>(end<sp/>?<sp/>0<sp/>:<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a546d2b47940fe7e7fcf866dcb278788d" kindref="member">SERD_LIST_O_BEGIN</ref>);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" kindref="member">TRY_RET</ref>(emit_statement(reader,<sp/>ctx,<sp/>*dest,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ctx.<ref refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" kindref="member">flags</ref><sp/>|=<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a0d0a1d37007f3e9524ad05fb42fee24a" kindref="member">SERD_LIST_CONT</ref>;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ctx.<ref refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" kindref="member">flags</ref><sp/>|=<sp/>(end<sp/>?<sp/>0<sp/>:<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647ada6665ea768d1fa37766c7a9b5e38d2f" kindref="member">SERD_LIST_S_BEGIN</ref>);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end)<sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end_collection(reader,<sp/>ctx,<sp/>0,<sp/>0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>order<sp/>of<sp/>node<sp/>allocation<sp/>here<sp/>is<sp/>necessarily<sp/>not<sp/>in<sp/>stack<sp/>order,</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>so<sp/>we<sp/>create<sp/>two<sp/>nodes<sp/>and<sp/>recycle<sp/>them<sp/>throughout.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/>n1<sp/><sp/><sp/>=<sp/>push_node_padded(reader,<sp/>genid_size(reader),<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaed82589a7355a2086b1c9cd91ec261c7" kindref="member">SERD_BLANK</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/>n2<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="structnode" kindref="compound">node</ref><sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="musiprog_8h_1ab85a87f557c748059fc58ae957c8a3c7" kindref="member">rest</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="struct_read_context_1af01726bf3cdcea0c7d9181780c0f9792" kindref="member">subject</ref><sp/>=<sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(end<sp/>=<sp/>peek_delim(reader,<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_:node<sp/>rdf:first<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="struct_read_context_1afc93d6c14a830fbd358031bf6af40679" kindref="member">predicate</ref><sp/>=<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a113ee2dfd936366f9c714ed70020520d" kindref="member">rdf_first</ref>;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ate_dot<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!read_object(reader,<sp/>ctx,<sp/>&amp;ate_dot)<sp/>||<sp/>ate_dot)<sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end_collection(reader,<sp/>ctx,<sp/>n1,<sp/>n2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(end<sp/>=<sp/>peek_delim(reader,<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Give<sp/>rest<sp/>a<sp/>new<sp/>ID.<sp/><sp/>Done<sp/>as<sp/>late<sp/>as<sp/>possible<sp/>to<sp/>ensure<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="1273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>and<sp/>&gt;<sp/>IDs<sp/>generated<sp/>by<sp/>read_object<sp/>above.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rest)<sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rest<sp/>=<sp/>n2<sp/>=<sp/>blank_id(reader);<sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>pass,<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_blank_id(reader,<sp/>rest,<sp/>genid_size(reader));</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_:node<sp/>rdf:rest<sp/>_:rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ctx.<ref refid="struct_read_context_1aed36def2b4ab49bffc8d09a722328831" kindref="member">flags</ref><sp/>|=<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a0d0a1d37007f3e9524ad05fb42fee24a" kindref="member">SERD_LIST_CONT</ref>;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="struct_read_context_1afc93d6c14a830fbd358031bf6af40679" kindref="member">predicate</ref><sp/>=<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a32af449a191e755cb1127c3508f2b430" kindref="member">rdf_rest</ref>;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" kindref="member">TRY_RET</ref>(emit_statement(reader,<sp/>ctx,</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(end<sp/>?<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1aac99326aed9e7f3eeca4091b8f3d0506" kindref="member">rdf_nil</ref><sp/>:<sp/>rest),<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="struct_read_context_1af01726bf3cdcea0c7d9181780c0f9792" kindref="member">subject</ref><sp/>=<sp/><ref refid="musiprog_8h_1ab85a87f557c748059fc58ae957c8a3c7" kindref="member">rest</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_:node<sp/>=<sp/>_:rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rest<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>node;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_:rest<sp/>=<sp/>(old)_:node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ctx.<ref refid="struct_read_context_1af01726bf3cdcea0c7d9181780c0f9792" kindref="member">subject</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>invariant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end_collection(reader,<sp/>ctx,<sp/>n1,<sp/>n2,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref></highlight></codeline>
<codeline lineno="1296"><highlight class="normal">read_subject(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="struct_read_context" kindref="compound">ReadContext</ref><sp/>ctx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>nested)</highlight></codeline>
<codeline lineno="1297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><sp/>subject<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ate_dot<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(peek_byte(reader))<sp/>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*nested<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nobreak</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_blank(reader,<sp/>ctx,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>&amp;subject);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_iri(reader,<sp/>&amp;subject,<sp/>&amp;ate_dot);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ate_dot<sp/>?<sp/>pop_node(reader,<sp/>subject)<sp/>:<sp/>subject;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal">read_triples(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader,<sp/><ref refid="struct_read_context" kindref="compound">ReadContext</ref><sp/>ctx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>ate_dot)</highlight></codeline>
<codeline lineno="1315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nested<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/>subject<sp/>=<sp/>read_subject(reader,<sp/>ctx,<sp/>&amp;nested);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subject)<sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="struct_read_context_1af01726bf3cdcea0c7d9181780c0f9792" kindref="member">subject</ref><sp/>=<sp/>subject;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nested)<sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_ws_star(reader);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(peek_byte(reader)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_predicateObjectList(reader,<sp/>ctx,<sp/>ate_dot);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" kindref="member">TRY_RET</ref>(read_ws_plus(reader));</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>read_predicateObjectList(reader,<sp/>ctx,<sp/>ate_dot);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>subject);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="struct_read_context_1af01726bf3cdcea0c7d9181780c0f9792" kindref="member">subject</ref><sp/>=<sp/>ctx.<ref refid="struct_read_context_1afc93d6c14a830fbd358031bf6af40679" kindref="member">predicate</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal">read_base(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="1341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`@&apos;<sp/>is<sp/>already<sp/>eaten<sp/>in<sp/>read_directive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>eat_string(reader,<sp/></highlight><highlight class="stringliteral">&quot;base&quot;</highlight><highlight class="normal">,<sp/>4);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" kindref="member">TRY_RET</ref>(read_ws_plus(reader));</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" kindref="member">TRY_RET</ref>(uri<sp/>=<sp/>read_IRIREF(reader));</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader-&gt;<ref refid="struct_serd_reader_impl_1af5714ae0f9634efefffe98c4f3bb71bb" kindref="member">base_sink</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1af5714ae0f9634efefffe98c4f3bb71bb" kindref="member">base_sink</ref>(reader-&gt;<ref refid="struct_serd_reader_impl_1a28b79e692482b0d851fa270cebecc82d" kindref="member">handle</ref>,<sp/>deref(reader,<sp/>uri));</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>uri);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal">read_prefixID(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="1356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`@&apos;<sp/>is<sp/>already<sp/>eaten<sp/>in<sp/>read_directive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>eat_string(reader,<sp/></highlight><highlight class="stringliteral">&quot;prefix&quot;</highlight><highlight class="normal">,<sp/>6);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" kindref="member">TRY_RET</ref>(read_ws_plus(reader));</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>=<sp/>push_node(reader,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaa661a7e84228e32f0b979839658bf4c6" kindref="member">SERD_LITERAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_PN_PREFIX(reader,<sp/>name)<sp/>&gt;<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" kindref="member">SERD_FAILURE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop_node(reader,<sp/>name);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eat_byte_check(reader,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop_node(reader,<sp/>name);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>read_ws_star(reader);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="reader_8c_1ae3e9b21450ad93b7e7f8e5be89e2d8db" kindref="member">Ref</ref><sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref><sp/>=<sp/>read_IRIREF(reader);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!uri)<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>name);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader-&gt;<ref refid="struct_serd_reader_impl_1a211a08bf052bba443d0ade936dac6e14" kindref="member">prefix_sink</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>!reader-&gt;<ref refid="struct_serd_reader_impl_1a211a08bf052bba443d0ade936dac6e14" kindref="member">prefix_sink</ref>(reader-&gt;<ref refid="struct_serd_reader_impl_1a28b79e692482b0d851fa270cebecc82d" kindref="member">handle</ref>,</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deref(reader,<sp/>name),</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deref(reader,<sp/>uri));</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>uri);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>name);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal">read_directive(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(peek_byte(reader))<sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_base(reader);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_prefixID(reader);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r_err(reader,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>directive\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal">read_statement(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="1402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref><sp/>flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_read_context" kindref="compound">ReadContext</ref><sp/>ctx<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>&amp;flags<sp/>};</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>read_ws_star(reader);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ate_dot<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(peek_byte(reader))<sp/>{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a0d6a7eb8e193703fe9788e0627e64f91" kindref="member">eof</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" kindref="member">TRY_RET</ref>(read_directive(reader));</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_ws_star(reader);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eat_byte_safe(reader,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" kindref="member">TRY_RET</ref>(read_triples(reader,<sp/>ctx,<sp/>&amp;ate_dot));</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ate_dot)<sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_ws_star(reader);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eat_byte_check(reader,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>read_ws_star(reader);<sp/></highlight><highlight class="comment">//<sp/>remove?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal">read_turtleDoc(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="1431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!reader-&gt;<ref refid="struct_serd_reader_impl_1a0d6a7eb8e193703fe9788e0627e64f91" kindref="member">eof</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reader_8c_1af72c93ab9ee84180d8b65acca4f6dea2" kindref="member">TRY_RET</ref>(read_statement(reader));</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*</highlight></codeline>
<codeline lineno="1440" refid="group__serd_1ga99a5f1ae546409bcb9a56d89e68902bf" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga99a5f1ae546409bcb9a56d89e68902bf" kindref="member">serd_reader_new</ref>(<ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1afda8a754daff17dd6a77e0b0eddab234" kindref="member">syntax</ref>,</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a28b79e692482b0d851fa270cebecc82d" kindref="member">handle</ref>,</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="struct_serd_reader_impl_1a191c6250ae91cb188e174c620e2a56a4" kindref="member">free_handle</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga9f1652e78562130337b519f309dd5125" kindref="member">SerdBaseSink</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1af5714ae0f9634efefffe98c4f3bb71bb" kindref="member">base_sink</ref>,</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga692f0bbdf5e2576191ee3556ecde7d55" kindref="member">SerdPrefixSink</ref><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a211a08bf052bba443d0ade936dac6e14" kindref="member">prefix_sink</ref>,</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga9cd6dc709f738ed9770d0d2cd1195bd4" kindref="member">SerdStatementSink</ref><sp/><ref refid="struct_serd_reader_impl_1aca8f39fb5b4a86cb32a716c00d6c4b35" kindref="member">statement_sink</ref>,</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1gae67888543462e4127e6a4f6af047026b" kindref="member">SerdEndSink</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1aec86fe1b35ee482731a7b9777d2d6d58" kindref="member">end_sink</ref>)</highlight></codeline>
<codeline lineno="1447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_cursor" kindref="compound">Cursor</ref><sp/><ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref><sp/>=<sp/>{<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/><sp/>me<sp/><sp/>=<sp/>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_serd_reader_impl" kindref="compound">SerdReaderImpl</ref>));</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a28b79e692482b0d851fa270cebecc82d" kindref="member">handle</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_reader_impl_1a28b79e692482b0d851fa270cebecc82d" kindref="member">handle</ref>;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a191c6250ae91cb188e174c620e2a56a4" kindref="member">free_handle</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_reader_impl_1a191c6250ae91cb188e174c620e2a56a4" kindref="member">free_handle</ref>;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1af5714ae0f9634efefffe98c4f3bb71bb" kindref="member">base_sink</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_reader_impl_1af5714ae0f9634efefffe98c4f3bb71bb" kindref="member">base_sink</ref>;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a211a08bf052bba443d0ade936dac6e14" kindref="member">prefix_sink</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_reader_impl_1a211a08bf052bba443d0ade936dac6e14" kindref="member">prefix_sink</ref>;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1aca8f39fb5b4a86cb32a716c00d6c4b35" kindref="member">statement_sink</ref><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_reader_impl_1aca8f39fb5b4a86cb32a716c00d6c4b35" kindref="member">statement_sink</ref>;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1aec86fe1b35ee482731a7b9777d2d6d58" kindref="member">end_sink</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_reader_impl_1aec86fe1b35ee482731a7b9777d2d6d58" kindref="member">end_sink</ref>;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a2b58643d49634d56a1a9f415af3ee4ad" kindref="member">error_sink</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a71c2449acdc262672cebdae6ea4c714d" kindref="member">error_handle</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1ab571a14f450c34efd761c3b47f3b15b4" kindref="member">default_graph</ref><sp/><sp/><sp/><sp/>=<sp/>SERD_NODE_NULL;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a871444261290dc2606a8b6e10140809f" kindref="member">fd</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>serd_stack_new(<ref refid="serd__internal_8h_1a6f0323326188077fd7b6f1661a0e037e" kindref="member">SERD_PAGE_SIZE</ref>);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1afda8a754daff17dd6a77e0b0eddab234" kindref="member">syntax</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_reader_impl_1afda8a754daff17dd6a77e0b0eddab234" kindref="member">syntax</ref>;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref>;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1af61d5a94d087d60988a6ea9b9f63ab2b" kindref="member">bprefix</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a5a75eaed54d5b72afd6904b54d06e6be" kindref="member">bprefix_len</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1aed5dc926dd93012d4203447568a12e8a" kindref="member">next_id</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1ac46a2d2d335e8f045c6d830359222055" kindref="member">read_buf</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1ac8afa312459baf236325a58e7b2036a2" kindref="member">file_buf</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1acc33bdf3a5c4695c3b0ef4eb0a2334f6" kindref="member">read_head</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a0d6a7eb8e193703fe9788e0627e64f91" kindref="member">eof</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a7d7280fc1b56b1ddcb6a309b7e206152" kindref="member">seen_genid</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SERD_STACK_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;allocs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;n_allocs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a113ee2dfd936366f9c714ed70020520d" kindref="member">rdf_first</ref><sp/>=<sp/>push_node(me,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref>,<sp/><ref refid="reader_8c_1a298b6f024c8a4d1832092da69d976137" kindref="member">NS_RDF</ref><sp/></highlight><highlight class="stringliteral">&quot;first&quot;</highlight><highlight class="normal">,<sp/>48);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a32af449a191e755cb1127c3508f2b430" kindref="member">rdf_rest</ref><sp/><sp/>=<sp/>push_node(me,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref>,<sp/><ref refid="reader_8c_1a298b6f024c8a4d1832092da69d976137" kindref="member">NS_RDF</ref><sp/></highlight><highlight class="stringliteral">&quot;rest&quot;</highlight><highlight class="normal">,<sp/>47);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1aac99326aed9e7f3eeca4091b8f3d0506" kindref="member">rdf_nil</ref><sp/><sp/><sp/>=<sp/>push_node(me,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref>,<sp/><ref refid="reader_8c_1a298b6f024c8a4d1832092da69d976137" kindref="member">NS_RDF</ref><sp/></highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">,<sp/>46);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>me;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485" refid="group__serd_1ga3a64910235c2c8bedb0e9244b338c5c5" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga3a64910235c2c8bedb0e9244b338c5c5" kindref="member">serd_reader_set_error_sink</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/><sp/><sp/>reader,</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga925d2fda236697a3e643b307ffe242e5" kindref="member">SerdErrorSink</ref><sp/><ref refid="struct_serd_reader_impl_1a2b58643d49634d56a1a9f415af3ee4ad" kindref="member">error_sink</ref>,</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl_1a71c2449acdc262672cebdae6ea4c714d" kindref="member">error_handle</ref>)</highlight></codeline>
<codeline lineno="1488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a2b58643d49634d56a1a9f415af3ee4ad" kindref="member">error_sink</ref><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_reader_impl_1a2b58643d49634d56a1a9f415af3ee4ad" kindref="member">error_sink</ref>;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a71c2449acdc262672cebdae6ea4c714d" kindref="member">error_handle</ref><sp/>=<sp/><ref refid="struct_serd_reader_impl_1a71c2449acdc262672cebdae6ea4c714d" kindref="member">error_handle</ref>;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1495" refid="group__serd_1ga26a4070db2f9ef59c94adeaa9dac6752" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga26a4070db2f9ef59c94adeaa9dac6752" kindref="member">serd_reader_free</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1aac99326aed9e7f3eeca4091b8f3d0506" kindref="member">rdf_nil</ref>);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a32af449a191e755cb1127c3508f2b430" kindref="member">rdf_rest</ref>);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>pop_node(reader,<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a113ee2dfd936366f9c714ed70020520d" kindref="member">rdf_first</ref>);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga037ef71317b8afff0a020072099cd14f" kindref="member">serd_node_free</ref>(&amp;reader-&gt;<ref refid="struct_serd_reader_impl_1ab571a14f450c34efd761c3b47f3b15b4" kindref="member">default_graph</ref>);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SERD_STACK_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/>free(reader-&gt;allocs);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>free(reader-&gt;<ref refid="struct_serd_reader_impl_1a8b07284d327aa1d28a9db3f5513b7b32" kindref="member">stack</ref>.<ref refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" kindref="member">buf</ref>);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>free(reader-&gt;<ref refid="struct_serd_reader_impl_1af61d5a94d087d60988a6ea9b9f63ab2b" kindref="member">bprefix</ref>);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader-&gt;<ref refid="struct_serd_reader_impl_1a191c6250ae91cb188e174c620e2a56a4" kindref="member">free_handle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a191c6250ae91cb188e174c620e2a56a4" kindref="member">free_handle</ref>(reader-&gt;<ref refid="struct_serd_reader_impl_1a28b79e692482b0d851fa270cebecc82d" kindref="member">handle</ref>);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>free(reader);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="1515" refid="group__serd_1gaad5ac334bdf5d0c531dc0526c2310862" refkind="member"><highlight class="normal"><ref refid="group__serd_1gaad5ac334bdf5d0c531dc0526c2310862" kindref="member">serd_reader_get_handle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader)</highlight></codeline>
<codeline lineno="1516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a28b79e692482b0d851fa270cebecc82d" kindref="member">handle</ref>;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522" refid="group__serd_1ga18b1d46abcd156310e0b18221aa80e31" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga18b1d46abcd156310e0b18221aa80e31" kindref="member">serd_reader_add_blank_prefix</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/><sp/><sp/><sp/>reader,</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="structprefix" kindref="compound">prefix</ref>)</highlight></codeline>
<codeline lineno="1524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>free(reader-&gt;<ref refid="struct_serd_reader_impl_1af61d5a94d087d60988a6ea9b9f63ab2b" kindref="member">bprefix</ref>);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a5a75eaed54d5b72afd6904b54d06e6be" kindref="member">bprefix_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1af61d5a94d087d60988a6ea9b9f63ab2b" kindref="member">bprefix</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prefix)<sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a5a75eaed54d5b72afd6904b54d06e6be" kindref="member">bprefix_len</ref><sp/>=<sp/>strlen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)prefix);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1af61d5a94d087d60988a6ea9b9f63ab2b" kindref="member">bprefix</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)malloc(reader-&gt;<ref refid="struct_serd_reader_impl_1a5a75eaed54d5b72afd6904b54d06e6be" kindref="member">bprefix_len</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(reader-&gt;<ref refid="struct_serd_reader_impl_1af61d5a94d087d60988a6ea9b9f63ab2b" kindref="member">bprefix</ref>,<sp/>prefix,<sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1a5a75eaed54d5b72afd6904b54d06e6be" kindref="member">bprefix_len</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537" refid="group__serd_1ga7f5f4f5a6b224b0f04df3c078f9e3eaf" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga7f5f4f5a6b224b0f04df3c078f9e3eaf" kindref="member">serd_reader_set_default_graph</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/><sp/><sp/><sp/><sp/>reader,</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>graph)</highlight></codeline>
<codeline lineno="1539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga037ef71317b8afff0a020072099cd14f" kindref="member">serd_node_free</ref>(&amp;reader-&gt;<ref refid="struct_serd_reader_impl_1ab571a14f450c34efd761c3b47f3b15b4" kindref="member">default_graph</ref>);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="struct_serd_reader_impl_1ab571a14f450c34efd761c3b47f3b15b4" kindref="member">default_graph</ref><sp/>=<sp/><ref refid="group__serd_1ga5a25ffa37534176468ffc8e4e6ce8d7c" kindref="member">serd_node_copy</ref>(graph);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="1546" refid="group__serd_1gad0fe4c7359478679e69b397620dc7f52" refkind="member"><highlight class="normal"><ref refid="group__serd_1gad0fe4c7359478679e69b397620dc7f52" kindref="member">serd_reader_read_file</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/><sp/><sp/><sp/>reader,</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>)</highlight></codeline>
<codeline lineno="1548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref><sp/>=<sp/><ref refid="group__serd_1ga5d9bf71e7a2beae95fdec28956aecc00" kindref="member">serd_uri_to_path</ref>(uri);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!path)<sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da138e7b6b98684e9f408bb91e49bbb315" kindref="member">SERD_ERR_BAD_ARG</ref>;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/><ref refid="struct_serd_reader_impl_1a871444261290dc2606a8b6e10140809f" kindref="member">fd</ref><sp/>=<sp/>serd_fopen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)path,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fd)<sp/>{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dada1292115013f04e99b2ecfe32acd9a5" kindref="member">SERD_ERR_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref><sp/>ret<sp/>=<sp/><ref refid="group__serd_1ga001d19e0eac46f43a011f6266a7b3d59" kindref="member">serd_reader_read_file_handle</ref>(reader,<sp/>fd,<sp/>path);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(fd);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal">skip_bom(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>me)</highlight></codeline>
<codeline lineno="1566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>me-&gt;<ref refid="struct_serd_reader_impl_1ac46a2d2d335e8f045c6d830359222055" kindref="member">read_buf</ref>;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(me-&gt;<ref refid="struct_serd_reader_impl_1adf71d0ad7ed396c0782d003499b7d3e2" kindref="member">paging</ref><sp/>&amp;&amp;<sp/>b[0]<sp/>==<sp/>0xEF<sp/>&amp;&amp;<sp/>b[1]<sp/>==<sp/>0xBB<sp/>&amp;&amp;<sp/>b[2]<sp/>==<sp/>0xBF)<sp/>{</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1acc33bdf3a5c4695c3b0ef4eb0a2334f6" kindref="member">read_head</ref><sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="1575" refid="group__serd_1ga0cc5b3a7ec36893d67e70564d3f326a7" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga0cc5b3a7ec36893d67e70564d3f326a7" kindref="member">serd_reader_start_stream</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/><sp/><sp/><sp/>me,</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file,</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bulk)</highlight></codeline>
<codeline lineno="1579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_cursor" kindref="compound">Cursor</ref><sp/><ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref><sp/>=<sp/>{<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/>1,<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a871444261290dc2606a8b6e10140809f" kindref="member">fd</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>file;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1acc33bdf3a5c4695c3b0ef4eb0a2334f6" kindref="member">read_head</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref>;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a408331130f9cb0719dc74322cfad7ca9" kindref="member">from_file</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a0d6a7eb8e193703fe9788e0627e64f91" kindref="member">eof</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1adf71d0ad7ed396c0782d003499b7d3e2" kindref="member">paging</ref><sp/><sp/><sp/><sp/>=<sp/>bulk;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bulk)<sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1ac8afa312459baf236325a58e7b2036a2" kindref="member">file_buf</ref><sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)serd_bufalloc(<ref refid="serd__internal_8h_1a6f0323326188077fd7b6f1661a0e037e" kindref="member">SERD_PAGE_SIZE</ref>);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1ac46a2d2d335e8f045c6d830359222055" kindref="member">read_buf</ref><sp/>=<sp/>me-&gt;<ref refid="struct_serd_reader_impl_1ac8afa312459baf236325a58e7b2036a2" kindref="member">file_buf</ref>;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(me-&gt;<ref refid="struct_serd_reader_impl_1ac8afa312459baf236325a58e7b2036a2" kindref="member">file_buf</ref>,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/><ref refid="serd__internal_8h_1a6f0323326188077fd7b6f1661a0e037e" kindref="member">SERD_PAGE_SIZE</ref>);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref><sp/>st<sp/>=<sp/>page(me);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st)<sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga55a5a06fdc2fc6a50913f64798e980cd" kindref="member">serd_reader_end_stream</ref>(me);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>st;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_bom(me);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1ac46a2d2d335e8f045c6d830359222055" kindref="member">read_buf</ref><sp/><sp/>=<sp/>&amp;me-&gt;<ref refid="struct_serd_reader_impl_1ad1ca00cbb0da8030ee0213e281bc049b" kindref="member">read_byte</ref>;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1ad1ca00cbb0da8030ee0213e281bc049b" kindref="member">read_byte</ref><sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>read<sp/>to<sp/>avoid<sp/>potentially<sp/>blocking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="1608" refid="group__serd_1ga832ee2aae7c3d9f6b7de4c793ec3a21c" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga832ee2aae7c3d9f6b7de4c793ec3a21c" kindref="member">serd_reader_read_chunk</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>me)</highlight></codeline>
<codeline lineno="1609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!me-&gt;<ref refid="struct_serd_reader_impl_1ad1ca00cbb0da8030ee0213e281bc049b" kindref="member">read_byte</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>initial<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>fgetc(me-&gt;<ref refid="struct_serd_reader_impl_1a871444261290dc2606a8b6e10140809f" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1ad1ca00cbb0da8030ee0213e281bc049b" kindref="member">read_byte</ref><sp/>=<sp/>(c<sp/>==<sp/>EOF)<sp/>?<sp/>0<sp/>:<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>)<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a0d6a7eb8e193703fe9788e0627e64f91" kindref="member">eof</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" kindref="member">SERD_FAILURE</ref>;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_statement(me)<sp/>?<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref><sp/>:<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" kindref="member">SERD_FAILURE</ref>;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="1624" refid="group__serd_1ga55a5a06fdc2fc6a50913f64798e980cd" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga55a5a06fdc2fc6a50913f64798e980cd" kindref="member">serd_reader_end_stream</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>me)</highlight></codeline>
<codeline lineno="1625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(me-&gt;<ref refid="struct_serd_reader_impl_1adf71d0ad7ed396c0782d003499b7d3e2" kindref="member">paging</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(me-&gt;<ref refid="struct_serd_reader_impl_1ac8afa312459baf236325a58e7b2036a2" kindref="member">file_buf</ref>);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a871444261290dc2606a8b6e10140809f" kindref="member">fd</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1ac46a2d2d335e8f045c6d830359222055" kindref="member">read_buf</ref><sp/>=<sp/>me-&gt;<ref refid="struct_serd_reader_impl_1ac8afa312459baf236325a58e7b2036a2" kindref="member">file_buf</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="1636" refid="group__serd_1ga001d19e0eac46f43a011f6266a7b3d59" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga001d19e0eac46f43a011f6266a7b3d59" kindref="member">serd_reader_read_file_handle</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>me,<sp/>FILE*<sp/>file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="1637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref><sp/>st<sp/>=<sp/><ref refid="group__serd_1ga0cc5b3a7ec36893d67e70564d3f326a7" kindref="member">serd_reader_start_stream</ref>(me,<sp/>file,<sp/>name,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!st)<sp/>{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st<sp/>=<sp/>read_turtleDoc(me)<sp/>?<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref><sp/>:<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dada1292115013f04e99b2ecfe32acd9a5" kindref="member">SERD_ERR_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga55a5a06fdc2fc6a50913f64798e980cd" kindref="member">serd_reader_end_stream</ref>(me);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>st;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="1648" refid="group__serd_1ga3ebc4139f1b992135bdd86fc6959b566" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga3ebc4139f1b992135bdd86fc6959b566" kindref="member">serd_reader_read_string</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>me,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>utf8)</highlight></codeline>
<codeline lineno="1649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_cursor" kindref="compound">Cursor</ref><sp/><ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref><sp/>=<sp/>{<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)</highlight><highlight class="stringliteral">&quot;(string)&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1ac46a2d2d335e8f045c6d830359222055" kindref="member">read_buf</ref><sp/><sp/>=<sp/>utf8;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1acc33bdf3a5c4695c3b0ef4eb0a2334f6" kindref="member">read_head</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_reader_impl_1a8b7b3d469e05aa98e9997608214f6886" kindref="member">cur</ref>;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a408331130f9cb0719dc74322cfad7ca9" kindref="member">from_file</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1adf71d0ad7ed396c0782d003499b7d3e2" kindref="member">paging</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1a0d6a7eb8e193703fe9788e0627e64f91" kindref="member">eof</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/>skip_bom(me);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>read_turtleDoc(me);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/>me-&gt;<ref refid="struct_serd_reader_impl_1ac46a2d2d335e8f045c6d830359222055" kindref="member">read_buf</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret<sp/>?<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref><sp/>:<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dada1292115013f04e99b2ecfe32acd9a5" kindref="member">SERD_ERR_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c"/>
  </compounddef>
</doxygen>
