<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__lavu__log" kind="group">
    <compoundname>lavu_log</compoundname>
    <title>Logging Facility</title>
    <innergroup refid="group__lavu__log__constants">Logging Constants</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lavu__log_1gabd386ffd4b27637cf34e98d5d1a6e8ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_log</definition>
        <argsstring>(void *avcl, int level, const char *fmt,...) av_printf_format(3</argsstring>
        <name>av_log</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>avcl</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send the specified message to the log if the level is less than or equal to the current av_log_level. By default, all logging messages are sent to stderr. This behavior can be altered by setting a different logging callback function. <simplesect kind="see"><para><ref refid="group__lavu__log_1ga14034761faf581a8b9ed6ef19b313708" kindref="member">av_log_set_callback</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>avcl</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an arbitrary struct of which the first field is a pointer to an <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> struct. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The importance level of the message expressed using a <ref refid="group__lavu__log__constants" kindref="compound">Logging Constant</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>The format string (printf-compatible) that specifies how subsequent arguments are converted to output. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__log_1ga6d72fb598cff2c8385069a1fc2ee5812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void void av_vlog</definition>
        <argsstring>(void *avcl, int level, const char *fmt, va_list vl)</argsstring>
        <name>av_vlog</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>avcl</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>vl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send the specified message to the log if the level is less than or equal to the current av_log_level. By default, all logging messages are sent to stderr. This behavior can be altered by setting a different logging callback function. <simplesect kind="see"><para><ref refid="group__lavu__log_1ga14034761faf581a8b9ed6ef19b313708" kindref="member">av_log_set_callback</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>avcl</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an arbitrary struct of which the first field is a pointer to an <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> struct. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The importance level of the message expressed using a <ref refid="group__lavu__log__constants" kindref="compound">Logging Constant</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>The format string (printf-compatible) that specifies how subsequent arguments are converted to output. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vl</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments referenced by the format string. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__log_1gae8ada5cc5722548d8698650b05207904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_log_get_level</definition>
        <argsstring>(void)</argsstring>
        <name>av_log_get_level</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current log level</para><para><simplesect kind="see"><para><ref refid="group__lavu__log__constants" kindref="compound">Logging Constants</ref></para></simplesect>
<simplesect kind="return"><para>Current log level </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__log_1ga1fd32c74db581e3e2e7f35d277bb1e24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_log_set_level</definition>
        <argsstring>(int level)</argsstring>
        <name>av_log_set_level</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the log level</para><para><simplesect kind="see"><para><ref refid="group__lavu__log__constants" kindref="compound">Logging Constants</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>Logging level </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__log_1ga14034761faf581a8b9ed6ef19b313708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_log_set_callback</definition>
        <argsstring>(void(*callback)(void *, int, const char *, va_list))</argsstring>
        <name>av_log_set_callback</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>, <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *, va_list)</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the logging callback</para><para><simplesect kind="note"><para>The callback must be thread safe, even if the application does not use threads itself as some codecs are multithreaded.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__lavu__log_1ga5bd132d2e4ac6f9843ef6d8e3c05050a" kindref="member">av_log_default_callback</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>A logging function with a compatible signature. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__log_1ga5bd132d2e4ac6f9843ef6d8e3c05050a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_log_default_callback</definition>
        <argsstring>(void *avcl, int level, const char *fmt, va_list vl)</argsstring>
        <name>av_log_default_callback</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>avcl</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>vl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default logging callback</para><para>It prints the message to stderr, optionally colorizing it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>avcl</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an arbitrary struct of which the first field is a pointer to an <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> struct. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The importance level of the message expressed using a <ref refid="group__lavu__log__constants" kindref="compound">Logging Constant</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>The format string (printf-compatible) that specifies how subsequent arguments are converted to output. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vl</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments referenced by the format string. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__log_1ga791fcd0dba1d19fe0c3677509344328e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* av_default_item_name</definition>
        <argsstring>(void *ctx)</argsstring>
        <name>av_default_item_name</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the context name</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> context</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> class_name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__log_1ga796896ca6a991fda200e8363777aeea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ffmpeg_2libavutil_2log_8h_1aeb1c06cc3e47a029ca6afeac782ac8f9" kindref="member">AVClassCategory</ref></type>
        <definition>AVClassCategory av_default_get_category</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>av_default_get_category</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__log_1gaed9e57ccba2adc41864f54f47dfcccec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_log_format_line</definition>
        <argsstring>(void *ptr, int level, const char *fmt, va_list vl, char *line, int line_size, int *print_prefix)</argsstring>
        <name>av_log_format_line</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>vl</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>line</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>line_size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>print_prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_format" kindref="compound">Format</ref> a line of log the same way as the default callback. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to receive the formated line </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>print_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>used to store whether the prefix must be printed; must point to a persistent integer initially set to 1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__log_1gaf8143cc9a7cd364af1ff525c6181c0ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_log_set_flags</definition>
        <argsstring>(int arg)</argsstring>
        <name>av_log_set_flags</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h" line="308" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__lavu__log_1ga793c07676246a541ca1cb910df880cdd" prot="public" static="no">
        <name>av_dlog</name>
        <param><defname>pctx</defname></param>
        <param><defname>...</defname></param>
        <initializer>do { <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (0) <ref refid="group__lavu__log_1gabd386ffd4b27637cf34e98d5d1a6e8ae" kindref="member">av_log</ref>(pctx, <ref refid="group__lavu__log__constants_1ga5b7221c3afd06848486776bd834a58a5" kindref="member">AV_LOG_DEBUG</ref>, __VA_ARGS__); } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>av_dlog macros Useful to print debug messages that shouldn&apos;t get compiled in normally. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h" line="296" column="14" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lavu__log_1ga6cdf5cd331b17e80e8308124f05a6db8" prot="public" static="no">
        <name>AV_LOG_SKIP_REPEATED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Skip repeated messages, this requires the user app to use <ref refid="group__lavu__log_1gabd386ffd4b27637cf34e98d5d1a6e8ae" kindref="member">av_log()</ref> instead of (f)printf as the 2 would otherwise interfere and lead to &quot;Last message repeated x times&quot; messages below (f)printf messages with some bad luck. Also to receive the last, &quot;last repeated&quot; line if any, the user app must call av_log(NULL, AV_LOG_QUIET, &quot;%s&quot;, &quot;&quot;); at the end </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h" line="307" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/log.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
