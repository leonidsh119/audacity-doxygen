<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__lavu__dict" kind="group">
    <compoundname>lavu_dict</compoundname>
    <title>AVDictionary</title>
    <innerclass refid="struct_a_v_dictionary_entry" prot="public">AVDictionaryEntry</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__lavu__dict_1gabd3d99365f54396328c265f9e5753f5c" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_dictionary_entry" kindref="compound">AVDictionaryEntry</ref></type>
        <definition>typedef struct AVDictionaryEntry  AVDictionaryEntry</definition>
        <argsstring></argsstring>
        <name>AVDictionaryEntry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" prot="public" static="no">
        <type>struct <ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref></type>
        <definition>typedef struct AVDictionary AVDictionary</definition>
        <argsstring></argsstring>
        <name>AVDictionary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lavu__dict_1ga8140aee3afe5d5ccdf2d4a5eabb4a710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_dictionary_entry" kindref="compound">AVDictionaryEntry</ref> *</type>
        <definition>AVDictionaryEntry* av_dict_get</definition>
        <argsstring>(AVDictionary *m, const char *key, const AVDictionaryEntry *prev, int flags)</argsstring>
        <name>av_dict_get</name>
        <param>
          <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_dictionary_entry" kindref="compound">AVDictionaryEntry</ref> *</type>
          <declname>prev</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a dictionary entry with matching key.</para><para>The returned entry key or value must not be changed, or it will cause undefined behavior.</para><para>To iterate through all the dictionary entries, you can set the matching key to the null string &quot;&quot; and set the AV_DICT_IGNORE_SUFFIX flag.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prev</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the previous matching element to find the next. If set to NULL the first matching element is returned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>matching key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>a collection of AV_DICT_* flags controlling how the entry is retrieved </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found entry or NULL in case no matching entry was found in the dictionary </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__dict_1gad21456d6601aa096c7c78dce8848d50a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_dict_count</definition>
        <argsstring>(const AVDictionary *m)</argsstring>
        <name>av_dict_count</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get number of entries in dictionary.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>dictionary </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of entries in dictionary </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__dict_1ga8d9c2de72b310cef8e6a28c9cd3acbbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_dict_set</definition>
        <argsstring>(AVDictionary **pm, const char *key, const char *value, int flags)</argsstring>
        <name>av_dict_set</name>
        <param>
          <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> **</type>
          <declname>pm</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the given entry in *pm, overwriting an existing entry.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a pointer to a dictionary struct. If *pm is NULL a dictionary struct is allocated and put in *pm. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>entry key to add to *pm (will be av_strduped depending on flags) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>entry value to add to *pm (will be av_strduped depending on flags). Passing a NULL value will cause an existing entry to be deleted. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;= 0 on success otherwise an error code &lt;0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__dict_1gaca5ff7c251e60bd13164d13c82f21b79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_dict_parse_string</definition>
        <argsstring>(AVDictionary **pm, const char *str, const char *key_val_sep, const char *pairs_sep, int flags)</argsstring>
        <name>av_dict_parse_string</name>
        <param>
          <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> **</type>
          <declname>pm</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>key_val_sep</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>pairs_sep</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the key/value pairs list and add the parsed entries to a dictionary.</para><para>In case of failure, all the successfully set entries are stored in *pm. You may need to manually free the created dictionary.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key_val_sep</parametername>
</parameternamelist>
<parameterdescription>
<para>a 0-terminated list of characters used to separate key from value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pairs_sep</parametername>
</parameternamelist>
<parameterdescription>
<para>a 0-terminated list of characters used to separate two pairs from each other </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>flags to use when adding to dictionary. AV_DICT_DONT_STRDUP_KEY and AV_DICT_DONT_STRDUP_VAL are ignored since the key/value tokens will always be duplicated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative AVERROR code on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__dict_1ga84757a064d7c4e5558389f1459958f8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_dict_copy</definition>
        <argsstring>(AVDictionary **dst, AVDictionary *src, int flags)</argsstring>
        <name>av_dict_copy</name>
        <param>
          <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy entries from one AVDictionary struct into another. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a pointer to a AVDictionary struct. If *dst is NULL, this function will allocate a struct for you and put it in *dst </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to source AVDictionary struct </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>flags to use when setting entries in *dst </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>metadata is read using the AV_DICT_IGNORE_SUFFIX flag </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__dict_1ga1bafd682b1fbb90e48a4cc3814b820f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_dict_free</definition>
        <argsstring>(AVDictionary **m)</argsstring>
        <name>av_dict_free</name>
        <param>
          <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> **</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free all the memory allocated for an AVDictionary struct and all keys and values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="161" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__lavu__dict_1gad9cbc53cec515b72ae7caa2e194c6bc0" prot="public" static="no">
        <name>AV_DICT_MATCH_CASE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Only get an entry with exact-case key match. Only relevant in <ref refid="group__lavu__dict_1ga8140aee3afe5d5ccdf2d4a5eabb4a710" kindref="member">av_dict_get()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="67" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lavu__dict_1ga341bbd1ea599dfb0510f419e5272fecc" prot="public" static="no">
        <name>AV_DICT_IGNORE_SUFFIX</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return first entry in a dictionary whose first part corresponds to the search key, ignoring the suffix of the found key string. Only relevant in <ref refid="group__lavu__dict_1ga8140aee3afe5d5ccdf2d4a5eabb4a710" kindref="member">av_dict_get()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="69" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lavu__dict_1gacb0ce4f20c15bf174f93590ace0fc8fd" prot="public" static="no">
        <name>AV_DICT_DONT_STRDUP_KEY</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Take ownership of a key that&apos;s been allocated with <ref refid="group__lavu__mem_1gacbca30ebc510a7e4156d66e7aceb2dc8" kindref="member">av_malloc()</ref> or another memory allocation function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="71" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lavu__dict_1ga7a9a991cb7837b10ffd44725263de425" prot="public" static="no">
        <name>AV_DICT_DONT_STRDUP_VAL</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Take ownership of a value that&apos;s been allocated with <ref refid="group__lavu__mem_1gacbca30ebc510a7e4156d66e7aceb2dc8" kindref="member">av_malloc()</ref> or another memory allocation function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="73" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lavu__dict_1ga8ed4237acfc3d68484301a5d1859936c" prot="public" static="no">
        <name>AV_DICT_DONT_OVERWRITE</name>
        <initializer>16</initializer>
        <briefdescription>
<para>Don&apos;t overwrite existing entries. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="74" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lavu__dict_1ga64018c01d1e8c44d1d8c03dfb099f2c2" prot="public" static="no">
        <name>AV_DICT_APPEND</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the entry already exists, append to it. Note that no delimiter is added, the strings are simply concatenated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="76" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Simple key:value store. </para>    </briefdescription>
    <detaileddescription>
<para>Dictionaries are used for storing key:value pairs. To create an AVDictionary, simply pass an address of a NULL pointer to <ref refid="group__lavu__dict_1ga8d9c2de72b310cef8e6a28c9cd3acbbe" kindref="member">av_dict_set()</ref>. NULL can be used as an empty dictionary wherever a pointer to an AVDictionary is required. Use <ref refid="group__lavu__dict_1ga8140aee3afe5d5ccdf2d4a5eabb4a710" kindref="member">av_dict_get()</ref> to retrieve an entry or iterate over all entries and finally <ref refid="group__lavu__dict_1ga1bafd682b1fbb90e48a4cc3814b820f7" kindref="member">av_dict_free()</ref> to free the dictionary and all its contents.</para><para><programlisting><codeline><highlight class="normal">AVDictionary<sp/>*d<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>&quot;create&quot;<sp/>an<sp/>empty<sp/>dictionary</highlight></codeline>
<codeline><highlight class="normal">AVDictionaryEntry<sp/>*t<sp/>=<sp/>NULL;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">av_dict_set(&amp;d,<sp/>&quot;foo&quot;,<sp/>&quot;bar&quot;,<sp/>0);<sp/>//<sp/>add<sp/>an<sp/>entry</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">char<sp/>*k<sp/>=<sp/>av_strdup(&quot;key&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>if<sp/>your<sp/>strings<sp/>are<sp/>already<sp/>allocated,</highlight></codeline>
<codeline><highlight class="normal">char<sp/>*v<sp/>=<sp/>av_strdup(&quot;value&quot;);<sp/><sp/><sp/><sp/><sp/>//<sp/>you<sp/>can<sp/>avoid<sp/>copying<sp/>them<sp/>like<sp/>this</highlight></codeline>
<codeline><highlight class="normal">av_dict_set(&amp;d,<sp/>k,<sp/>v,<sp/>AV_DICT_DONT_STRDUP_KEY<sp/>|<sp/>AV_DICT_DONT_STRDUP_VAL);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">while<sp/>(t<sp/>=<sp/>av_dict_get(d,<sp/>&quot;&quot;,<sp/>t,<sp/>AV_DICT_IGNORE_SUFFIX))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;....&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>iterate<sp/>over<sp/>all<sp/>entries<sp/>in<sp/>d</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">av_dict_free(&amp;d);</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
