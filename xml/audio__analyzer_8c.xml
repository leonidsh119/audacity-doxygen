<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="audio__analyzer_8c" kind="file" language="C++">
    <compoundname>audio_analyzer.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="qa__tools_8h" local="yes">qa_tools.h</includes>
    <includes refid="audio__analyzer_8h" local="yes">audio_analyzer.h</includes>
    <includes refid="write__wav_8h" local="yes">write_wav.h</includes>
    <incdepgraph>
      <node id="29231">
        <label>stdlib.h</label>
      </node>
      <node id="29237">
        <label>biquad_filter.h</label>
        <link refid="biquad__filter_8h"/>
      </node>
      <node id="29233">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="29238">
        <label>write_wav.h</label>
        <link refid="write__wav_8h"/>
      </node>
      <node id="29232">
        <label>string.h</label>
      </node>
      <node id="29234">
        <label>math.h</label>
      </node>
      <node id="29230">
        <label>stdio.h</label>
      </node>
      <node id="29229">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c</label>
        <link refid="audio_analyzer.c"/>
        <childnode refid="29230" relation="include">
        </childnode>
        <childnode refid="29231" relation="include">
        </childnode>
        <childnode refid="29232" relation="include">
        </childnode>
        <childnode refid="29233" relation="include">
        </childnode>
        <childnode refid="29234" relation="include">
        </childnode>
        <childnode refid="29235" relation="include">
        </childnode>
        <childnode refid="29236" relation="include">
        </childnode>
        <childnode refid="29238" relation="include">
        </childnode>
      </node>
      <node id="29235">
        <label>qa_tools.h</label>
        <link refid="qa__tools_8h"/>
      </node>
      <node id="29236">
        <label>audio_analyzer.h</label>
        <link refid="audio__analyzer_8h"/>
        <childnode refid="29237" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="audio__analyzer_8c_1a016e9520d8018f5c1252776eaf21b347" prot="public" static="no">
        <name>PAQA_POP_THRESHOLD</name>
        <initializer>(0.04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="48" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="audio__analyzer_8c_1af0b23eedf2352de4c1eff77e1401730c" prot="public" static="no">
        <name>NUM_SAMPLES</name>
        <initializer>(200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="210" column="9"/>
      </memberdef>
      <memberdef kind="define" id="audio__analyzer_8c_1ad4d796b98c583d49e83adabd74a63bf6" prot="public" static="no">
        <name>MAX_BUFFER_SIZE</name>
        <initializer>2048</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="482" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="audio__analyzer_8c_1a9c930334efac22cea25f83543823d995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_GetNthFrequency</definition>
        <argsstring>(double baseFrequency, int index)</argsstring>
        <name>PaQa_GetNthFrequency</name>
        <param>
          <type>double</type>
          <declname>baseFrequency</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate Nth frequency of a series for use in testing multiple channels. Series should avoid harmonic overlap between channels. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a0d053fe46ae855fa1401098ea08efa88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_EraseBuffer</definition>
        <argsstring>(float *buffer, int numFrames, int samplesPerFrame)</argsstring>
        <name>PaQa_EraseBuffer</name>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numFrames</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>samplesPerFrame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="58" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a5b15fa5f9ffe7d147b31f747c40ff49b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_SetupSineGenerator</definition>
        <argsstring>(PaQaSineGenerator *generator, double frequency, double amplitude, double frameRate)</argsstring>
        <name>PaQa_SetupSineGenerator</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1a54a1c7f8306dd7ec9c736d2e81681f03" kindref="member">PaQaSineGenerator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>double</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frameRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prepare an oscillator that can generate a sine tone for testing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="69" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="69" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a3511746af23da7b237a81abcd5103e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_MixSine</definition>
        <argsstring>(PaQaSineGenerator *generator, float *buffer, int numSamples, int stride)</argsstring>
        <name>PaQa_MixSine</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1a54a1c7f8306dd7ec9c736d2e81681f03" kindref="member">PaQaSineGenerator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="78" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1affb588de87b9064d3af8d645b65cff5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_GenerateCrackDISABLED</definition>
        <argsstring>(float *buffer, int numSamples, int stride)</argsstring>
        <name>PaQa_GenerateCrackDISABLED</name>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="96" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="96" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a13f48cb441107ed8d398bb6c63f802ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_InitializeRecording</definition>
        <argsstring>(PaQaRecording *recording, int maxFrames, int frameRate)</argsstring>
        <name>PaQa_InitializeRecording</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>maxSamples</declname>
          <defname>maxFrames</defname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sampleRate</declname>
          <defname>frameRate</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate memory for containg a mono audio signal. Set up recording for writing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="114" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="114" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_TerminateRecording</definition>
        <argsstring>(PaQaRecording *recording)</argsstring>
        <name>PaQa_TerminateRecording</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free memory allocated by PaQa_InitializeRecording. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="127" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="127" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a2d62bebaad42618015497e0c80be4324" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_WriteRecording</definition>
        <argsstring>(PaQaRecording *recording, float *buffer, int numFrames, int stride)</argsstring>
        <name>PaQa_WriteRecording</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
          <defname>numFrames</defname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>is the spacing of samples to skip in the input buffer. To use every samples pass 1. To use every other sample pass 2. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="138" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="138" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a12ccb2fbd5fe3bf93b8cd79bd7985ca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_WriteSilence</definition>
        <argsstring>(PaQaRecording *recording, int numFrames)</argsstring>
        <name>PaQa_WriteSilence</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
          <defname>numFrames</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write zeros into a recording. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="160" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="160" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1ad876645a8a56487a53473d914d36c502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_RecordFreeze</definition>
        <argsstring>(PaQaRecording *recording, int numFrames)</argsstring>
        <name>PaQa_RecordFreeze</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numFrames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="181" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="181" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1ad176a266e1bb48a3107f50755127fac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_SaveRecordingToWaveFile</definition>
        <argsstring>(PaQaRecording *recording, const char *filename)</argsstring>
        <name>PaQa_SaveRecordingToWaveFile</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write recording to WAV file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="206" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="206" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a2c9261859914b9de91ab823e7ba39e8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_MeasureCrossingSlope</definition>
        <argsstring>(float *buffer, int numFrames)</argsstring>
        <name>PaQa_MeasureCrossingSlope</name>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numFrames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Measure slope of the positive zero crossings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="251" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="251" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a134d28401b6cd71d28ed3a4291032a54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_MeasureSineAmplitudeBySlope</definition>
        <argsstring>(PaQaRecording *recording, double frequency, double frameRate, int startFrame, int numFrames)</argsstring>
        <name>PaQa_MeasureSineAmplitudeBySlope</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frameRate</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>startFrame</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numFrames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Estimate the original amplitude of a clipped sine wave by measuring its average slope at the zero crossings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="287" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="287" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a7f26dbd09af0cc0cf873e84d7ec0a13b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_CorrelateSine</definition>
        <argsstring>(PaQaRecording *recording, double frequency, double frameRate, int startFrame, int numFrames, double *phasePtr)</argsstring>
        <name>PaQa_CorrelateSine</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frameRate</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>startFrame</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numFrames</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phasePtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="299" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="299" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a89f3a57c92da52f6ebdb4ee3633db3b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_FilterRecording</definition>
        <argsstring>(PaQaRecording *input, PaQaRecording *output, BiquadFilter *filter)</argsstring>
        <name>PaQa_FilterRecording</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="biquad__filter_8h_1a056212dddb48d45495c50f7ccdf2b43a" kindref="member">BiquadFilter</ref> *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply a biquad filter to the audio from the input recording and write it to the output recording. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="340" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="340" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1ad6a738fa0bb8d1f1d4d6c4f354c57d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_FindFirstMatch</definition>
        <argsstring>(PaQaRecording *recording, float *buffer, int numFrames, double threshold)</argsstring>
        <name>PaQa_FindFirstMatch</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numFrames</declname>
        </param>
        <param>
          <type>double</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scan until we get a correlation of a single that goes over the tolerance level, peaks then drops to half the peak. Look for inverse correlation as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="352" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="352" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a8be3a62d7063764c0f1fbbe0f2fdfec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_MeasureArea</definition>
        <argsstring>(float *buffer, int numFrames, int stride)</argsstring>
        <name>PaQa_MeasureArea</name>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numFrames</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Measure the area under the curve by summing absolute value of each value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="414" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="414" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1aca03218918e6dd68c79c6cc60bc21384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_MeasureRootMeanSquare</definition>
        <argsstring>(float *buffer, int numFrames)</argsstring>
        <name>PaQa_MeasureRootMeanSquare</name>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numFrames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="428" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="428" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a1d09e6452bd3a8c0537c0d1c7585b3fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_CompareAmplitudes</definition>
        <argsstring>(PaQaRecording *recording, int startAt, float *buffer, int numFrames)</argsstring>
        <name>PaQa_CompareAmplitudes</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>startAt</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
          <defname>numFrames</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare the amplitudes of these two signals. Return ratio of recorded signal over buffer signal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="447" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="447" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1aa3695cc2693120119d3e2f7ee3cad473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_ComputePhaseDifference</definition>
        <argsstring>(double phase1, double phase2)</argsstring>
        <name>PaQa_ComputePhaseDifference</name>
        <param>
          <type>double</type>
          <declname>phase1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phase2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="463" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="463" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a4039fbc279401ddba45fc9ee1ca5797d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_MeasureLatency</definition>
        <argsstring>(PaQaRecording *recording, PaQaTestTone *testTone, PaQaAnalysisResult *analysisResult)</argsstring>
        <name>PaQa_MeasureLatency</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1aeb941f66bc7a144aba7db0ed6088d9b1" kindref="member">PaQaTestTone</ref> *</type>
          <declname>testTone</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1a55c76a25f8d624d32cd78856c0654f6f" kindref="member">PaQaAnalysisResult</ref> *</type>
          <declname>analysisResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="478" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="478" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a631518e6a5897a8a64ae34f8d0250bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_FadeInRecording</definition>
        <argsstring>(PaQaRecording *recording, int startFrame, int count)</argsstring>
        <name>PaQa_FadeInRecording</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>startFrame</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="508" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="508" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1aef129fd055155c5d019b9e891bd2a14c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_DetectPop</definition>
        <argsstring>(PaQaRecording *recording, PaQaTestTone *testTone, PaQaAnalysisResult *analysisResult)</argsstring>
        <name>PaQa_DetectPop</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1aeb941f66bc7a144aba7db0ed6088d9b1" kindref="member">PaQaTestTone</ref> *</type>
          <declname>testTone</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1a55c76a25f8d624d32cd78856c0654f6f" kindref="member">PaQaAnalysisResult</ref> *</type>
          <declname>analysisResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply notch filter and high pass filter then detect remaining energy. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="541" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="541" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a099e7057eac9b60d6c9f1b8db76cede5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_DetectPhaseError</definition>
        <argsstring>(PaQaRecording *recording, PaQaTestTone *testTone, PaQaAnalysisResult *analysisResult)</argsstring>
        <name>PaQa_DetectPhaseError</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1aeb941f66bc7a144aba7db0ed6088d9b1" kindref="member">PaQaTestTone</ref> *</type>
          <declname>testTone</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1a55c76a25f8d624d32cd78856c0654f6f" kindref="member">PaQaAnalysisResult</ref> *</type>
          <declname>analysisResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="611" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="611" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8c_1a6232297ca356c8753050d169966525b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_AnalyseRecording</definition>
        <argsstring>(PaQaRecording *recording, PaQaTestTone *testTone, PaQaAnalysisResult *analysisResult)</argsstring>
        <name>PaQa_AnalyseRecording</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1aeb941f66bc7a144aba7db0ed6088d9b1" kindref="member">PaQaTestTone</ref> *</type>
          <declname>testTone</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1a55c76a25f8d624d32cd78856c0654f6f" kindref="member">PaQaAnalysisResult</ref> *</type>
          <declname>analysisResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Analyse a recording of a sine wave. Measure latency and look for dropped frames, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" line="685" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="685" bodyend="706"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>PortAudio<sp/>Portable<sp/>Real-Time<sp/>Audio<sp/>Library</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Latest<sp/>Version<sp/>at:<sp/>http://www.portaudio.com</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2010<sp/>Phil<sp/>Burk<sp/>and<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="qa__tools_8h" kindref="compound">qa_tools.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="audio__analyzer_8h" kindref="compound">audio_analyzer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="write__wav_8h" kindref="compound">write_wav.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="audio__analyzer_8c_1a016e9520d8018f5c1252776eaf21b347" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAQA_POP_THRESHOLD<sp/><sp/>(0.04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="audio__analyzer_8h_1a9c930334efac22cea25f83543823d995" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a9c930334efac22cea25f83543823d995" kindref="member">PaQa_GetNthFrequency</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>baseFrequency,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>13<sp/>tone<sp/>equal<sp/>tempered<sp/>scale<sp/>because<sp/>it<sp/>does<sp/>not<sp/>generate<sp/>harmonic<sp/>ratios.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseFrequency<sp/>*<sp/>pow(<sp/>2.0,<sp/>index<sp/>/<sp/>13.0<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="audio__analyzer_8h_1a0d053fe46ae855fa1401098ea08efa88" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a0d053fe46ae855fa1401098ea08efa88" kindref="member">PaQa_EraseBuffer</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samplesPerFrame<sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples<sp/>=<sp/>numFrames<sp/>*<sp/>samplesPerFrame;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;numSamples;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer++<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="audio__analyzer_8h_1a5b15fa5f9ffe7d147b31f747c40ff49b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a5b15fa5f9ffe7d147b31f747c40ff49b" kindref="member">PaQa_SetupSineGenerator</ref>(<sp/><ref refid="struct_pa_qa_sine_generator__s" kindref="compound">PaQaSineGenerator</ref><sp/>*generator,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frequency,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amplitude,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frameRate<sp/>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>generator-&gt;<ref refid="struct_pa_qa_sine_generator__s_1a6a53658f28e435c3c7bdd47e36859826" kindref="member">phase</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>generator-&gt;<ref refid="struct_pa_qa_sine_generator__s_1a8f0027443ba30c1c5e57c88364cec465" kindref="member">amplitude</ref><sp/>=<sp/>amplitude;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>generator-&gt;<ref refid="struct_pa_qa_sine_generator__s_1ae73569f3aa4212befb0fc87df74d6a7d" kindref="member">frequency</ref><sp/>=<sp/>frequency;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>generator-&gt;<ref refid="struct_pa_qa_sine_generator__s_1a7939455f258b2ba52aade79672f3d5ea" kindref="member">phaseIncrement</ref><sp/>=<sp/>2.0<sp/>*<sp/>frequency<sp/>*<sp/><ref refid="audio__analyzer_8h_1ac58cbaeae310f551049f77b7c098599e" kindref="member">MATH_PI</ref><sp/>/<sp/>frameRate;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="audio__analyzer_8h_1a3511746af23da7b237a81abcd5103e0e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a3511746af23da7b237a81abcd5103e0e" kindref="member">PaQa_MixSine</ref>(<sp/><ref refid="struct_pa_qa_sine_generator__s" kindref="compound">PaQaSineGenerator</ref><sp/>*generator,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;numSamples;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>sinf(<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>generator-&gt;<ref refid="struct_pa_qa_sine_generator__s_1a6a53658f28e435c3c7bdd47e36859826" kindref="member">phase</ref><sp/>)<sp/>*<sp/>generator-&gt;<ref refid="struct_pa_qa_sine_generator__s_1a8f0027443ba30c1c5e57c88364cec465" kindref="member">amplitude</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer<sp/>+=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;<sp/></highlight><highlight class="comment">//<sp/>Mix<sp/>with<sp/>existing<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>stride;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advance<sp/>phase<sp/>and<sp/>wrap<sp/>around.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generator-&gt;<ref refid="struct_pa_qa_sine_generator__s_1a6a53658f28e435c3c7bdd47e36859826" kindref="member">phase</ref><sp/>+=<sp/>generator-&gt;<ref refid="struct_pa_qa_sine_generator__s_1a7939455f258b2ba52aade79672f3d5ea" kindref="member">phaseIncrement</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(generator-&gt;<ref refid="struct_pa_qa_sine_generator__s_1a6a53658f28e435c3c7bdd47e36859826" kindref="member">phase</ref><sp/>&gt;<sp/><ref refid="audio__analyzer_8h_1a40f334a745c1fd19326902c1e0e17d67" kindref="member">MATH_TWO_PI</ref>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generator-&gt;<ref refid="struct_pa_qa_sine_generator__s_1a6a53658f28e435c3c7bdd47e36859826" kindref="member">phase</ref><sp/>-=<sp/><ref refid="audio__analyzer_8h_1a40f334a745c1fd19326902c1e0e17d67" kindref="member">MATH_TWO_PI</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="audio__analyzer_8c_1affb588de87b9064d3af8d645b65cff5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1affb588de87b9064d3af8d645b65cff5b" kindref="member">PaQa_GenerateCrackDISABLED</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref><sp/>=<sp/>numSamples/2;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;numSamples;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>phase<sp/>=<sp/>(<ref refid="audio__analyzer_8h_1a40f334a745c1fd19326902c1e0e17d67" kindref="member">MATH_TWO_PI</ref><sp/>*<sp/>0.5<sp/>*<sp/>(i<sp/>-<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>))<sp/>/<sp/>numSamples;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cosp<sp/>=<sp/>cosf(<sp/>phase<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cos2<sp/>=<sp/>cosp<sp/>*<sp/>cosp;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invert<sp/>second<sp/>half<sp/>of<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>(i<sp/>&lt;<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>)<sp/>?<sp/>cos2<sp/>:<sp/>(0-cos2);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>stride;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="audio__analyzer_8h_1a93b734e5ffce0b4aebcb41a210bcf2ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a13f48cb441107ed8d398bb6c63f802ae" kindref="member">PaQa_InitializeRecording</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxFrames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameRate<sp/>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numBytes<sp/>=<sp/>maxFrames<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)malloc(numBytes);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1ab91b54409a2bc9579a9ef7b166b28ef8" kindref="member">QA_ASSERT_TRUE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Allocate<sp/>recording<sp/>buffer.&quot;</highlight><highlight class="normal">,<sp/>(recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref><sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" kindref="member">maxFrames</ref><sp/>=<sp/>maxFrames;<sp/><sp/><sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0a16e04122d6509e3efd524744b1e1df" kindref="member">sampleRate</ref><sp/>=<sp/>frameRate;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="audio__analyzer_8h_1a75b79fa3e7ebd8814532f4e6771f1d0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording<sp/>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref><sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref><sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" kindref="member">maxFrames</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="audio__analyzer_8h_1a7cf446a82066abc234f0170f10adc8b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a2d62bebaad42618015497e0c80be4324" kindref="member">PaQa_WriteRecording</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesToWrite;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>&amp;recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>framesToWrite<sp/>=<sp/>numFrames;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((framesToWrite<sp/>+<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>)<sp/>&gt;<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" kindref="member">maxFrames</ref>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToWrite<sp/>=<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" kindref="member">maxFrames</ref><sp/>-<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;framesToWrite;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data++<sp/>=<sp/>*<ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>stride;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref><sp/>+=<sp/>framesToWrite;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref><sp/>&gt;=<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" kindref="member">maxFrames</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="audio__analyzer_8h_1a74079de339ec5f428d495cddb5e3b573" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a12ccb2fbd5fe3bf93b8cd79bd7985ca1" kindref="member">PaQa_WriteSilence</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames<sp/>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesToRecord;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>&amp;recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>framesToRecord<sp/>=<sp/>numFrames;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((framesToRecord<sp/>+<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>)<sp/>&gt;<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" kindref="member">maxFrames</ref>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToRecord<sp/>=<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" kindref="member">maxFrames</ref><sp/>-<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;framesToRecord;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data++<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref><sp/>+=<sp/>framesToRecord;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref><sp/>&gt;=<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" kindref="member">maxFrames</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="audio__analyzer_8h_1a45471b2da58d5831059bda8c87628085" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1ad876645a8a56487a53473d914d36c502" kindref="member">PaQa_RecordFreeze</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames<sp/>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesToRecord;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>&amp;recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>];</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>framesToRecord<sp/>=<sp/>numFrames;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((framesToRecord<sp/>+<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>)<sp/>&gt;<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" kindref="member">maxFrames</ref>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToRecord<sp/>=<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" kindref="member">maxFrames</ref><sp/>-<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;framesToRecord;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>old<sp/>value<sp/>forward<sp/>as<sp/>if<sp/>the<sp/>signal<sp/>had<sp/>frozen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>data[i-1];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref><sp/>+=<sp/>framesToRecord;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref><sp/>&gt;=<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" kindref="member">maxFrames</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="206" refid="audio__analyzer_8h_1ad176a266e1bb48a3107f50755127fac8" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1ad176a266e1bb48a3107f50755127fac8" kindref="member">PaQa_SaveRecordingToWaveFile</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref><sp/>)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_w_a_v___writer__s" kindref="compound">WAV_Writer</ref><sp/>writer;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_SAMPLES<sp/><sp/>(200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>[<ref refid="audio__analyzer_8c_1af0b23eedf2352de4c1eff77e1401730c" kindref="member">NUM_SAMPLES</ref>];</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samplesPerFrame<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numLeft<sp/>=<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/>&amp;recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><sp/><ref refid="write__wav_8c_1a2ccf8f4887bd22ac43f3e5c7a9e16799" kindref="member">Audio_WAV_OpenWriter</ref>(<sp/>&amp;writer,<sp/>filename,<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0a16e04122d6509e3efd524744b1e1df" kindref="member">sampleRate</ref>,<sp/>samplesPerFrame<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>numLeft<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numToSave<sp/>=<sp/>(numLeft<sp/>&gt;<sp/><ref refid="audio__analyzer_8c_1af0b23eedf2352de4c1eff77e1401730c" kindref="member">NUM_SAMPLES</ref>)<sp/>?<sp/><ref refid="audio__analyzer_8c_1af0b23eedf2352de4c1eff77e1401730c" kindref="member">NUM_SAMPLES</ref><sp/>:<sp/>numLeft;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>double<sp/>samples<sp/>to<sp/>shorts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;numToSave;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fval<sp/>=<sp/>*buffer++;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>float<sp/>to<sp/>int<sp/>and<sp/>clip<sp/>to<sp/>short<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ival<sp/>=<sp/>fval<sp/>*<sp/>32768.0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ival<sp/>&gt;<sp/>32767<sp/>)<sp/>ival<sp/>=<sp/>32767;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ival<sp/>&lt;<sp/>-32768<sp/>)<sp/>ival<sp/>=<sp/>-32768;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>ival;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><sp/><ref refid="write__wav_8c_1acf9e3951bed222ba08f37c45fe24d77d" kindref="member">Audio_WAV_WriteShorts</ref>(<sp/>&amp;writer,<sp/>data,<sp/>numToSave<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numLeft<sp/>-=<sp/>numToSave;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><sp/><ref refid="write__wav_8c_1adb4825adde65afffe3ea3d5ef840bd5f" kindref="member">Audio_WAV_CloseWriter</ref>(<sp/>&amp;writer<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>result<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>NUM_SAMPLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="audio__analyzer_8h_1a2c9261859914b9de91ab823e7ba39e8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a2c9261859914b9de91ab823e7ba39e8b" kindref="member">PaQa_MeasureCrossingSlope</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames<sp/>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slopeTotal<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slopeCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>previous;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>averageSlope<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>buffer[0];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=1;<sp/>i&lt;numFrames;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>current<sp/>=<sp/>buffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(current<sp/>&gt;<sp/>0.0)<sp/>&amp;&amp;<sp/>(previous<sp/>&lt;<sp/>0.0)<sp/>)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>current<sp/>-<sp/>previous;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slopeTotal<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slopeCount<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>slopeCount<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>averageSlope<sp/>=<sp/>slopeTotal<sp/>/<sp/>slopeCount;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>averageSlope;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>We<sp/>can&apos;t<sp/>just<sp/>measure<sp/>the<sp/>peaks<sp/>cuz<sp/>they<sp/>may<sp/>be<sp/>clipped.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*<sp/>But<sp/>the<sp/>zero<sp/>crossing<sp/>should<sp/>be<sp/>intact.</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>The<sp/>measured<sp/>slope<sp/>of<sp/>a<sp/>sine<sp/>wave<sp/>at<sp/>zero<sp/>should<sp/>be:</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/><sp/><sp/>slope<sp/>=<sp/>sin(<sp/>2PI<sp/>*<sp/>frequency<sp/>/<sp/>sampleRate<sp/>)</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="audio__analyzer_8h_1a134d28401b6cd71d28ed3a4291032a54" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a134d28401b6cd71d28ed3a4291032a54" kindref="member">PaQa_MeasureSineAmplitudeBySlope</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frequency,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frameRate,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startFrame,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames<sp/>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/>&amp;recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[startFrame];</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>measuredSlope<sp/>=<sp/><ref refid="audio__analyzer_8c_1a2c9261859914b9de91ab823e7ba39e8b" kindref="member">PaQa_MeasureCrossingSlope</ref>(<sp/>buffer,<sp/>numFrames<sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>unitySlope<sp/>=<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>(<sp/><ref refid="audio__analyzer_8h_1a40f334a745c1fd19326902c1e0e17d67" kindref="member">MATH_TWO_PI</ref><sp/>*<sp/>frequency<sp/>/<sp/>frameRate<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>estimatedAmplitude<sp/>=<sp/>measuredSlope<sp/>/<sp/>unitySlope;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>estimatedAmplitude;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="audio__analyzer_8h_1addffeae72a884cce43ade4621c9b23c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a7f26dbd09af0cc0cf873e84d7ec0a13b" kindref="member">PaQa_CorrelateSine</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frequency,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frameRate,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startFrame,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*phasePtr<sp/>)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>magnitude<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numLeft<sp/>=<sp/>numFrames;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phaseIncrement<sp/>=<sp/>2.0<sp/>*<sp/><ref refid="audio__analyzer_8h_1ac58cbaeae310f551049f77b7c098599e" kindref="member">MATH_PI</ref><sp/>*<sp/>frequency<sp/>/<sp/>frameRate;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sinAccumulator<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cosAccumulator<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>&amp;recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[startFrame];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1ab91b54409a2bc9579a9ef7b166b28ef8" kindref="member">QA_ASSERT_TRUE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;startFrame<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal">,<sp/>(startFrame<sp/>&lt;<sp/>recording-&gt;numFrames)<sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1ab91b54409a2bc9579a9ef7b166b28ef8" kindref="member">QA_ASSERT_TRUE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;numFrames<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal">,<sp/>((startFrame+numFrames)<sp/>&lt;=<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>)<sp/>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>numLeft<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sample<sp/>=<sp/>(double)<sp/>*data++;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sinAccumulator<sp/>+=<sp/>sample<sp/>*<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>(<sp/>phase<sp/>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosAccumulator<sp/>+=<sp/>sample<sp/>*<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(<sp/>phase<sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase<sp/>+=<sp/>phaseIncrement;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase<sp/>&gt;<sp/><ref refid="audio__analyzer_8h_1a40f334a745c1fd19326902c1e0e17d67" kindref="member">MATH_TWO_PI</ref>)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase<sp/>-=<sp/><ref refid="audio__analyzer_8h_1a40f334a745c1fd19326902c1e0e17d67" kindref="member">MATH_TWO_PI</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numLeft<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>sinAccumulator<sp/>=<sp/>sinAccumulator<sp/>/<sp/>numFrames;<sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>cosAccumulator<sp/>=<sp/>cosAccumulator<sp/>/<sp/>numFrames;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Why<sp/>do<sp/>I<sp/>have<sp/>to<sp/>multiply<sp/>by<sp/>2.0?<sp/>Need<sp/>it<sp/>to<sp/>make<sp/>result<sp/>come<sp/>out<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>magnitude<sp/>=<sp/>2.0<sp/>*<sp/>sqrt(<sp/>(sinAccumulator<sp/>*<sp/>sinAccumulator)<sp/>+<sp/>(cosAccumulator<sp/>*<sp/>cosAccumulator<sp/>));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>phasePtr<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase<sp/>=<sp/>atan2(<sp/>cosAccumulator,<sp/>sinAccumulator<sp/>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*phasePtr<sp/>=<sp/>phase;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>magnitude;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="audio__analyzer_8h_1a89f3a57c92da52f6ebdb4ee3633db3b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a89f3a57c92da52f6ebdb4ee3633db3b2" kindref="member">PaQa_FilterRecording</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*input,<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/><ref refid="struct_biquad_filter__s" kindref="compound">BiquadFilter</ref><sp/>*<ref refid="mm_8c_1a2719b8cbe8dc1a5064a418269c72e528" kindref="member">filter</ref><sp/>)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numToFilter<sp/>=<sp/>(input-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref><sp/>&gt;<sp/>output-&gt;<ref refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" kindref="member">maxFrames</ref>)<sp/>?<sp/>output-&gt;<ref refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" kindref="member">maxFrames</ref><sp/>:<sp/>input-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="biquad__filter_8c_1af0bea0119ae481833a2bcea97ea98489" kindref="member">BiquadFilter_Filter</ref>(<sp/>filter,<sp/>&amp;input-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[0],<sp/>&amp;output-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[0],<sp/>numToFilter<sp/>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref><sp/>=<sp/>numToFilter;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="352" refid="audio__analyzer_8h_1a8f61990e727c1eb1e278cce3b18b4375" refkind="member"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1ad6a738fa0bb8d1f1d4d6c4f354c57d9d" kindref="member">PaQa_FindFirstMatch</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold<sp/><sp/>)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ic,is;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>many<sp/>buffers<sp/>will<sp/>fit<sp/>in<sp/>the<sp/>recording?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxCorrelations<sp/>=<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref><sp/>-<sp/>numFrames;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxSum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>peakIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inverseMaxSum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inversePeakIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>location<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1ab91b54409a2bc9579a9ef7b166b28ef8" kindref="member">QA_ASSERT_TRUE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;numFrames<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal">,<sp/>(numFrames<sp/>&lt;<sp/>recording-&gt;numFrames)<sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>ic=0;<sp/>ic&lt;maxCorrelations;<sp/>ic++<sp/>)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pastPeak;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inversePastPeak;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Correlate<sp/>buffer<sp/>against<sp/>the<sp/>recording.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*recorded<sp/>=<sp/>&amp;recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[<sp/>ic<sp/>];</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>is=0;<sp/>is&lt;numFrames;<sp/>is++<sp/>)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s1<sp/>=<sp/>buffer[is];</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s2<sp/>=<sp/>*recorded++;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>s1<sp/>*<sp/>s2;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(sum<sp/>&gt;<sp/>maxSum)<sp/>)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxSum<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peakIndex<sp/>=<sp/>ic;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>((-sum)<sp/>&gt;<sp/>inverseMaxSum)<sp/>)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inverseMaxSum<sp/>=<sp/>-sum;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inversePeakIndex<sp/>=<sp/>ic;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pastPeak<sp/>=<sp/>(maxSum<sp/>&gt;<sp/>threshold)<sp/>&amp;&amp;<sp/>(sum<sp/>&lt;<sp/>0.5*maxSum);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inversePastPeak<sp/>=<sp/>(inverseMaxSum<sp/>&gt;<sp/>threshold)<sp/>&amp;&amp;<sp/>((-sum)<sp/>&lt;<sp/>0.5*inverseMaxSum);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;PaQa_FindFirstMatch:<sp/>ic<sp/>=<sp/>%4d,<sp/>sum<sp/>=<sp/>%8f,<sp/>maxSum<sp/>=<sp/>%8f,<sp/>inverseMaxSum<sp/>=<sp/>%8f\n&quot;,<sp/>ic,<sp/>sum,<sp/>maxSum,<sp/>inverseMaxSum<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pastPeak<sp/>&amp;&amp;<sp/>inversePastPeak<sp/>)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>maxSum<sp/>&gt;<sp/>inverseMaxSum<sp/>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>location<sp/>=<sp/>peakIndex;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>location<sp/>=<sp/>inversePeakIndex;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;PaQa_FindFirstMatch:<sp/>location<sp/>=<sp/>%4d\n&quot;,<sp/>(int)location<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>location;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Measure<sp/>the<sp/>area<sp/>under<sp/>the<sp/>curve<sp/>by<sp/>summing<sp/>absolute<sp/>value<sp/>of<sp/>each<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="audio__analyzer_8h_1a8be3a62d7063764c0f1fbbe0f2fdfec8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a8be3a62d7063764c0f1fbbe0f2fdfec8" kindref="member">PaQa_MeasureArea</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/><sp/>)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>is=0;<sp/>is&lt;numFrames;<sp/>is++<sp/>)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>+=<sp/>fabs(<sp/>*buffer<sp/>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>stride;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>area;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Measure<sp/>the<sp/>area<sp/>under<sp/>the<sp/>curve<sp/>by<sp/>summing<sp/>absolute<sp/>value<sp/>of<sp/>each<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="audio__analyzer_8h_1aca03218918e6dd68c79c6cc60bc21384" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1aca03218918e6dd68c79c6cc60bc21384" kindref="member">PaQa_MeasureRootMeanSquare</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames<sp/>)</highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>root;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>is=0;<sp/>is&lt;numFrames;<sp/>is++<sp/>)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>*buffer++;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>+=<sp/>value<sp/>*<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>root<sp/>=<sp/>sqrt(<sp/>area<sp/>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root<sp/>/<sp/>numFrames;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compare<sp/>the<sp/>amplitudes<sp/>of<sp/>these<sp/>two<sp/>signals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>ratio<sp/>of<sp/>recorded<sp/>signal<sp/>over<sp/>buffer<sp/>signal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="audio__analyzer_8h_1a36b44ac4b3ba2e3de200de15ee7a25ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a1d09e6452bd3a8c0537c0d1c7585b3fa" kindref="member">PaQa_CompareAmplitudes</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startAt,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames<sp/>)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1ab91b54409a2bc9579a9ef7b166b28ef8" kindref="member">QA_ASSERT_TRUE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;startAt+numFrames<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal">,<sp/>((startAt+numFrames)<sp/>&lt;<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>)<sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recordedArea<sp/>=<sp/><ref refid="audio__analyzer_8c_1a8be3a62d7063764c0f1fbbe0f2fdfec8" kindref="member">PaQa_MeasureArea</ref>(<sp/>&amp;recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[startAt],<sp/>numFrames,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bufferArea<sp/>=<sp/><ref refid="audio__analyzer_8c_1a8be3a62d7063764c0f1fbbe0f2fdfec8" kindref="member">PaQa_MeasureArea</ref>(<sp/>buffer,<sp/>numFrames,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bufferArea<sp/>==<sp/>0.0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>100000000.0;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>recordedArea<sp/>/<sp/>bufferArea;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="audio__analyzer_8h_1aa3695cc2693120119d3e2f7ee3cad473" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1aa3695cc2693120119d3e2f7ee3cad473" kindref="member">PaQa_ComputePhaseDifference</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase2<sp/>)</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>phase1<sp/>-<sp/>phase2;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>delta<sp/>&gt;<sp/><ref refid="audio__analyzer_8h_1ac58cbaeae310f551049f77b7c098599e" kindref="member">MATH_PI</ref><sp/>)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>-=<sp/><ref refid="audio__analyzer_8h_1a40f334a745c1fd19326902c1e0e17d67" kindref="member">MATH_TWO_PI</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>delta<sp/>&lt;<sp/>-<ref refid="audio__analyzer_8h_1ac58cbaeae310f551049f77b7c098599e" kindref="member">MATH_PI</ref><sp/>)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>+=<sp/><ref refid="audio__analyzer_8h_1a40f334a745c1fd19326902c1e0e17d67" kindref="member">MATH_TWO_PI</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="audio__analyzer_8c_1a4039fbc279401ddba45fc9ee1ca5797d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a4039fbc279401ddba45fc9ee1ca5797d" kindref="member">PaQa_MeasureLatency</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/><ref refid="struct_pa_qa_test_tone__s" kindref="compound">PaQaTestTone</ref><sp/>*testTone,<sp/><ref refid="struct_pa_qa_analysis_result__s" kindref="compound">PaQaAnalysisResult</ref><sp/>*analysisResult<sp/>)</highlight></codeline>
<codeline lineno="479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_sine_generator__s" kindref="compound">PaQaSineGenerator</ref><sp/>generator;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_BUFFER_SIZE<sp/>2048</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[<ref refid="audio__analyzer_8c_1ad4d796b98c583d49e83adabd74a63bf6" kindref="member">MAX_BUFFER_SIZE</ref>];</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="latency_8c_1a486233493fc0e05fe1bdbe7b7e5d0f1e" kindref="member">period</ref><sp/>=<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a204af537989a744626b4aabeb9e2d3a9" kindref="member">sampleRate</ref><sp/>/<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1ab6e6a027870ba348bbce705bf5c196e5" kindref="member">frequency</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cycleSize<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>(period<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;PaQa_AnalyseRecording:<sp/>frequency<sp/>=<sp/>%8f,<sp/>frameRate<sp/>=<sp/>%8f,<sp/>period<sp/>=<sp/>%8f,<sp/>cycleSize<sp/>=<sp/>%8d\n&quot;,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>testTone-&gt;frequency,<sp/>testTone-&gt;sampleRate,<sp/>period,<sp/>cycleSize<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1affa94b0959c600449a9473337ddd8abd" kindref="member">valid</ref><sp/>=<sp/>(0);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>generator<sp/>to<sp/>find<sp/>matching<sp/>first<sp/>cycle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1ab91b54409a2bc9579a9ef7b166b28ef8" kindref="member">QA_ASSERT_TRUE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;cycleSize<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal">,<sp/>(cycleSize<sp/>&lt;<sp/><ref refid="audio__analyzer_8c_1ad4d796b98c583d49e83adabd74a63bf6" kindref="member">MAX_BUFFER_SIZE</ref>)<sp/>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a5b15fa5f9ffe7d147b31f747c40ff49b" kindref="member">PaQa_SetupSineGenerator</ref>(<sp/>&amp;generator,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1ab6e6a027870ba348bbce705bf5c196e5" kindref="member">frequency</ref>,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a94af989158aefe3bd584700022836a55" kindref="member">amplitude</ref>,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a204af537989a744626b4aabeb9e2d3a9" kindref="member">sampleRate</ref><sp/>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a0d053fe46ae855fa1401098ea08efa88" kindref="member">PaQa_EraseBuffer</ref>(<sp/>buffer,<sp/>cycleSize,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a90c802d23c98b9b340772c2bf2c14a84" kindref="member">samplesPerFrame</ref><sp/>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a3511746af23da7b237a81abcd5103e0e" kindref="member">PaQa_MixSine</ref>(<sp/>&amp;generator,<sp/>buffer,<sp/>cycleSize,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a90c802d23c98b9b340772c2bf2c14a84" kindref="member">samplesPerFrame</ref><sp/>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold<sp/>=<sp/>cycleSize<sp/>*<sp/>0.02;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref><sp/>=<sp/><ref refid="audio__analyzer_8c_1ad6a738fa0bb8d1f1d4d6c4f354c57d9d" kindref="member">PaQa_FindFirstMatch</ref>(<sp/>recording,<sp/>buffer,<sp/>cycleSize,<sp/>threshold<sp/>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1ab91b54409a2bc9579a9ef7b166b28ef8" kindref="member">QA_ASSERT_TRUE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>the<sp/>start<sp/>of<sp/>the<sp/>signal.&quot;</highlight><highlight class="normal">,<sp/>(analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref><sp/>&gt;=<sp/>0)<sp/>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1a3db306b382cb9b01f4954e078f1f0d4c" kindref="member">amplitudeRatio</ref><sp/>=<sp/><ref refid="audio__analyzer_8c_1a1d09e6452bd3a8c0537c0d1c7585b3fa" kindref="member">PaQa_CompareAmplitudes</ref>(<sp/>recording,<sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref>,<sp/>buffer,<sp/>cycleSize<sp/>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Apply<sp/>cosine<sp/>squared<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="audio__analyzer_8c_1a631518e6a5897a8a64ae34f8d0250bdb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a631518e6a5897a8a64ae34f8d0250bdb" kindref="member">PaQa_FadeInRecording</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startFrame,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>)</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase<sp/>=<sp/>0.5<sp/>*<sp/><ref refid="audio__analyzer_8h_1ac58cbaeae310f551049f77b7c098599e" kindref="member">MATH_PI</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advance<sp/>a<sp/>quarter<sp/>wave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phaseIncrement<sp/>=<sp/>0.25<sp/>*<sp/>2.0<sp/>*<sp/><ref refid="audio__analyzer_8h_1ac58cbaeae310f551049f77b7c098599e" kindref="member">MATH_PI</ref><sp/>/<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>startFrame<sp/>&gt;=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>count<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Zero<sp/>out<sp/>initial<sp/>part<sp/>of<sp/>the<sp/>recording.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>is=0;<sp/>is&lt;startFrame;<sp/>is++<sp/>)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[<sp/>is<sp/>]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fade<sp/>in<sp/>where<sp/>signal<sp/>begins.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>is=0;<sp/>is&lt;<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;<sp/>is++<sp/>)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(<sp/>phase<sp/>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>c<sp/>*<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[<sp/>is<sp/>+<sp/>startFrame<sp/>];</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>x<sp/>*<sp/>w;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;FADE<sp/>%d<sp/>:<sp/>w=%f,<sp/>x=%f,<sp/>y=%f\n&quot;,<sp/>is,<sp/>w,<sp/>x,<sp/>y<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[<sp/>is<sp/>+<sp/>startFrame<sp/>]<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase<sp/>+=<sp/>phaseIncrement;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="541" refid="audio__analyzer_8c_1aef129fd055155c5d019b9e891bd2a14c" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1aef129fd055155c5d019b9e891bd2a14c" kindref="member">PaQa_DetectPop</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/><ref refid="struct_pa_qa_test_tone__s" kindref="compound">PaQaTestTone</ref><sp/>*testTone,<sp/><ref refid="struct_pa_qa_analysis_result__s" kindref="compound">PaQaAnalysisResult</ref><sp/>*analysisResult<sp/>)</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxAmplitude;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxPosition;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/><sp/><sp/><sp/><sp/>notchOutput<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_biquad_filter__s" kindref="compound">BiquadFilter</ref><sp/><sp/><sp/><sp/><sp/><sp/>notchFilter;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/><sp/><sp/><sp/><sp/>hipassOutput<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_biquad_filter__s" kindref="compound">BiquadFilter</ref><sp/><sp/><sp/><sp/><sp/><sp/>hipassFilter;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameRate<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0a16e04122d6509e3efd524744b1e1df" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1aa803a3ce07fc930d172f019881cb5b44" kindref="member">popPosition</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1ab23ac837dc1cc396ab58326efea278ba" kindref="member">popAmplitude</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="audio__analyzer_8c_1a13f48cb441107ed8d398bb6c63f802ae" kindref="member">PaQa_InitializeRecording</ref>(<sp/>&amp;notchOutput,<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>,<sp/>frameRate<sp/>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_InitializeRecording<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="audio__analyzer_8c_1a13f48cb441107ed8d398bb6c63f802ae" kindref="member">PaQa_InitializeRecording</ref>(<sp/>&amp;hipassOutput,<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>,<sp/>frameRate<sp/>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_InitializeRecording<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>notch<sp/>filter<sp/>to<sp/>remove<sp/>test<sp/>tone.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="biquad__filter_8c_1ad03fda9b4f22950f65f43139541a8377" kindref="member">BiquadFilter_SetupNotch</ref>(<sp/>&amp;notchFilter,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1ab6e6a027870ba348bbce705bf5c196e5" kindref="member">frequency</ref><sp/>/<sp/>frameRate,<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a89f3a57c92da52f6ebdb4ee3633db3b2" kindref="member">PaQa_FilterRecording</ref>(<sp/>recording,<sp/>&amp;notchOutput,<sp/>&amp;notchFilter<sp/>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//result<sp/>=<sp/>PaQa_SaveRecordingToWaveFile(<sp/>&amp;notchOutput,<sp/>&quot;notch_output.wav&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//QA_ASSERT_EQUALS(<sp/>&quot;PaQa_SaveRecordingToWaveFile<sp/>failed&quot;,<sp/>0,<sp/>result<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>fade-in<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a631518e6a5897a8a64ae34f8d0250bdb" kindref="member">PaQa_FadeInRecording</ref>(<sp/>&amp;notchOutput,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref>,<sp/>500<sp/>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>high<sp/>pass<sp/>to<sp/>accentuate<sp/>the<sp/>edges<sp/>of<sp/>a<sp/>pop.<sp/>At<sp/>higher<sp/>frequency!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="biquad__filter_8c_1aa302a7fc0cb71ad72013dcfe9b875ce3" kindref="member">BiquadFilter_SetupHighPass</ref>(<sp/>&amp;hipassFilter,<sp/>2.0<sp/>*<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1ab6e6a027870ba348bbce705bf5c196e5" kindref="member">frequency</ref><sp/>/<sp/>frameRate,<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a89f3a57c92da52f6ebdb4ee3633db3b2" kindref="member">PaQa_FilterRecording</ref>(<sp/>&amp;notchOutput,<sp/>&amp;hipassOutput,<sp/>&amp;hipassFilter<sp/>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//result<sp/>=<sp/>PaQa_SaveRecordingToWaveFile(<sp/>&amp;hipassOutput,<sp/>&quot;hipass_output.wav&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//QA_ASSERT_EQUALS(<sp/>&quot;PaQa_SaveRecordingToWaveFile<sp/>failed&quot;,<sp/>0,<sp/>result<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>remaining<sp/>signal<sp/>looking<sp/>for<sp/>peak.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>maxAmplitude<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>maxPosition<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref>;<sp/>i&lt;hipassOutput.<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>hipassOutput.<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mag<sp/>=<sp/>fabs(<sp/>x<sp/>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mag<sp/>&gt;<sp/>maxAmplitude<sp/>)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxAmplitude<sp/>=<sp/>mag;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxPosition<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>maxAmplitude<sp/>&gt;<sp/><ref refid="audio__analyzer_8c_1a016e9520d8018f5c1252776eaf21b347" kindref="member">PAQA_POP_THRESHOLD</ref><sp/>)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1aa803a3ce07fc930d172f019881cb5b44" kindref="member">popPosition</ref><sp/>=<sp/>maxPosition;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1ab23ac837dc1cc396ab58326efea278ba" kindref="member">popAmplitude</ref><sp/>=<sp/>maxAmplitude;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;notchOutput<sp/>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;hipassOutput<sp/>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;notchOutput<sp/>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;hipassOutput<sp/>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="audio__analyzer_8c_1a099e7057eac9b60d6c9f1b8db76cede5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a099e7057eac9b60d6c9f1b8db76cede5" kindref="member">PaQa_DetectPhaseError</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/><ref refid="struct_pa_qa_test_tone__s" kindref="compound">PaQaTestTone</ref><sp/>*testTone,<sp/><ref refid="struct_pa_qa_analysis_result__s" kindref="compound">PaQaAnalysisResult</ref><sp/>*analysisResult<sp/>)</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="latency_8c_1a486233493fc0e05fe1bdbe7b7e5d0f1e" kindref="member">period</ref><sp/>=<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a204af537989a744626b4aabeb9e2d3a9" kindref="member">sampleRate</ref><sp/>/<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1ab6e6a027870ba348bbce705bf5c196e5" kindref="member">frequency</ref>;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cycleSize<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>(period<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxAddedFrames<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxDroppedFrames<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>previousPhase<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>previousFrameError<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loopCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skip<sp/>=<sp/>cycleSize;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowSize<sp/>=<sp/>cycleSize;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>recording<sp/>starting<sp/>with<sp/>first<sp/>cycle,<sp/>looking<sp/>for<sp/>phase<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1adf01d50ef45ca2a38f961659b0b5e39e" kindref="member">numDroppedFrames</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1aeb484763fda64f2ad66d30f1e7538290" kindref="member">numAddedFrames</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1a5465c8dc21981f08bce260e864882808" kindref="member">droppedFramesPosition</ref><sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1a54d571e9c681cdaf3901744c0dd84d10" kindref="member">addedFramesPosition</ref><sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref>;<sp/>i&lt;(recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref><sp/>-<sp/>windowSize);<sp/>i<sp/>+=<sp/>skip<sp/>)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>expectedPhase<sp/>=<sp/>previousPhase<sp/>+<sp/>(skip<sp/>*<sp/><ref refid="audio__analyzer_8h_1a40f334a745c1fd19326902c1e0e17d67" kindref="member">MATH_TWO_PI</ref><sp/>/<sp/><ref refid="latency_8c_1a486233493fc0e05fe1bdbe7b7e5d0f1e" kindref="member">period</ref>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>expectedPhaseIncrement<sp/>=<sp/><ref refid="audio__analyzer_8c_1aa3695cc2693120119d3e2f7ee3cad473" kindref="member">PaQa_ComputePhaseDifference</ref>(<sp/>expectedPhase,<sp/>previousPhase<sp/>);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase<sp/>=<sp/>666.0;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mag<sp/>=<sp/><ref refid="audio__analyzer_8c_1a7f26dbd09af0cc0cf873e84d7ec0a13b" kindref="member">PaQa_CorrelateSine</ref>(<sp/>recording,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1ab6e6a027870ba348bbce705bf5c196e5" kindref="member">frequency</ref>,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a204af537989a744626b4aabeb9e2d3a9" kindref="member">sampleRate</ref>,<sp/>i,<sp/>windowSize,<sp/>&amp;phase<sp/>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(loopCount<sp/>&gt;<sp/>1)<sp/>&amp;&amp;<sp/>(mag<sp/>&gt;<sp/>0.0)<sp/>)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phaseDelta<sp/>=<sp/><ref refid="audio__analyzer_8c_1aa3695cc2693120119d3e2f7ee3cad473" kindref="member">PaQa_ComputePhaseDifference</ref>(<sp/>phase,<sp/>previousPhase<sp/>);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phaseError<sp/>=<sp/><ref refid="audio__analyzer_8c_1aa3695cc2693120119d3e2f7ee3cad473" kindref="member">PaQa_ComputePhaseDifference</ref>(<sp/>phaseDelta,<sp/>expectedPhaseIncrement<sp/>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>phaseError<sp/>to<sp/>equivalent<sp/>number<sp/>of<sp/>frames.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frameError<sp/>=<sp/>period<sp/>*<sp/>phaseError<sp/>/<sp/><ref refid="audio__analyzer_8h_1a40f334a745c1fd19326902c1e0e17d67" kindref="member">MATH_TWO_PI</ref>;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>consecutiveFrameError<sp/>=<sp/>frameError<sp/>+<sp/>previousFrameError;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>fabs(frameError)<sp/>&gt;<sp/>0.01<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;FFFFFFFFFFFFF<sp/>frameError<sp/>=<sp/>%f,<sp/>at<sp/>%d\n&quot;,<sp/>frameError,<sp/>i<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>consecutiveFrameError<sp/>&gt;<sp/>0.8<sp/>)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>droppedFrames<sp/>=<sp/>consecutiveFrameError;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(droppedFrames<sp/>&gt;<sp/>(maxDroppedFrames<sp/>*<sp/>1.001))</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1adf01d50ef45ca2a38f961659b0b5e39e" kindref="member">numDroppedFrames</ref><sp/>=<sp/>droppedFrames;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1a5465c8dc21981f08bce260e864882808" kindref="member">droppedFramesPosition</ref><sp/>=<sp/>i<sp/>+<sp/>(windowSize/2);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxDroppedFrames<sp/>=<sp/>droppedFrames;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>consecutiveFrameError<sp/>&lt;<sp/>-0.8<sp/>)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>addedFrames<sp/>=<sp/>0<sp/>-<sp/>consecutiveFrameError;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addedFrames<sp/>&gt;<sp/>(maxAddedFrames<sp/>*<sp/>1.001))</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1aeb484763fda64f2ad66d30f1e7538290" kindref="member">numAddedFrames</ref><sp/>=<sp/>addedFrames;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1a54d571e9c681cdaf3901744c0dd84d10" kindref="member">addedFramesPosition</ref><sp/>=<sp/>i<sp/>+<sp/>(windowSize/2);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxAddedFrames<sp/>=<sp/>addedFrames;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previousFrameError<sp/>=<sp/>frameError;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(<sp/>i&lt;8000<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>printf(&quot;%d:<sp/>phase<sp/>=<sp/>%8f,<sp/>expected<sp/>=<sp/>%8f,<sp/>delta<sp/>=<sp/>%8f,<sp/>frameError<sp/>=<sp/>%8f\n&quot;,<sp/>i,<sp/>phase,<sp/>expectedPhaseIncrement,<sp/>phaseDelta,<sp/>frameError<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previousPhase<sp/>=<sp/>phase;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loopCount<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685" refid="audio__analyzer_8h_1a6232297ca356c8753050d169966525b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8c_1a6232297ca356c8753050d169966525b6" kindref="member">PaQa_AnalyseRecording</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/><ref refid="struct_pa_qa_test_tone__s" kindref="compound">PaQaTestTone</ref><sp/>*testTone,<sp/><ref refid="struct_pa_qa_analysis_result__s" kindref="compound">PaQaAnalysisResult</ref><sp/>*analysisResult<sp/>)</highlight></codeline>
<codeline lineno="686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>analysisResult,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_pa_qa_analysis_result__s" kindref="compound">PaQaAnalysisResult</ref>)<sp/>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="audio__analyzer_8c_1a4039fbc279401ddba45fc9ee1ca5797d" kindref="member">PaQa_MeasureLatency</ref>(<sp/>recording,<sp/>testTone,<sp/>analysisResult<sp/>);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;latency<sp/>measurement&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref><sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1a3db306b382cb9b01f4954e078f1f0d4c" kindref="member">amplitudeRatio</ref><sp/>&gt;<sp/>0.1)<sp/>)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analysisResult-&gt;<ref refid="struct_pa_qa_analysis_result__s_1affa94b0959c600449a9473337ddd8abd" kindref="member">valid</ref><sp/>=<sp/>(1);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="audio__analyzer_8c_1aef129fd055155c5d019b9e891bd2a14c" kindref="member">PaQa_DetectPop</ref>(<sp/>recording,<sp/>testTone,<sp/>analysisResult<sp/>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;detect<sp/>pop&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="audio__analyzer_8c_1a099e7057eac9b60d6c9f1b8db76cede5" kindref="member">PaQa_DetectPhaseError</ref>(<sp/>recording,<sp/>testTone,<sp/>analysisResult<sp/>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;detect<sp/>phase<sp/>error&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c"/>
  </compounddef>
</doxygen>
