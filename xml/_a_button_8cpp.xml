<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_a_button_8cpp" kind="file" language="C++">
    <compoundname>AButton.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">../Audacity.h</includes>
    <includes refid="_a_button_8h" local="yes">AButton.h</includes>
    <includes refid="_a_color_8h" local="yes">../AColor.h</includes>
    <includes local="no">wx/dcclient.h</includes>
    <includes local="no">wx/dcmemory.h</includes>
    <includes local="no">wx/dcbuffer.h</includes>
    <includes local="no">wx/image.h</includes>
    <includes refid="_project_8h" local="yes">../Project.h</includes>
    <includes local="no">wx/tooltip.h</includes>
    <incdepgraph>
      <node id="58303">
        <label>wx/dir.h</label>
      </node>
      <node id="58312">
        <label>wx/choice.h</label>
      </node>
      <node id="58277">
        <label>wx/dcbuffer.h</label>
      </node>
      <node id="58284">
        <label>wx/hashmap.h</label>
      </node>
      <node id="58341">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="58339">
        <label>wx/gauge.h</label>
      </node>
      <node id="58304">
        <label>wx/event.h</label>
      </node>
      <node id="58291">
        <label>wx/ffile.h</label>
      </node>
      <node id="58328">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="58286" relation="include">
        </childnode>
        <childnode refid="58320" relation="include">
        </childnode>
        <childnode refid="58329" relation="include">
        </childnode>
      </node>
      <node id="58268">
        <label>wx/dcclient.h</label>
      </node>
      <node id="58302">
        <label>wx/cmdline.h</label>
      </node>
      <node id="58266">
        <label>ImageRoll.h</label>
        <link refid="_image_roll_8h"/>
        <childnode refid="58267" relation="include">
        </childnode>
        <childnode refid="58268" relation="include">
        </childnode>
        <childnode refid="58269" relation="include">
        </childnode>
        <childnode refid="58270" relation="include">
        </childnode>
        <childnode refid="58271" relation="include">
        </childnode>
        <childnode refid="58272" relation="include">
        </childnode>
      </node>
      <node id="58319">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="58286" relation="include">
        </childnode>
        <childnode refid="58320" relation="include">
        </childnode>
        <childnode refid="58321" relation="include">
        </childnode>
        <childnode refid="58322" relation="include">
        </childnode>
        <childnode refid="58317" relation="include">
        </childnode>
      </node>
      <node id="58335">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="58287" relation="include">
        </childnode>
        <childnode refid="58282" relation="include">
        </childnode>
        <childnode refid="58336" relation="include">
        </childnode>
      </node>
      <node id="58288">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="58259" relation="include">
        </childnode>
        <childnode refid="58282" relation="include">
        </childnode>
        <childnode refid="58289" relation="include">
        </childnode>
        <childnode refid="58290" relation="include">
        </childnode>
      </node>
      <node id="58296">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="58294">
        <label>wx/wxchar.h</label>
      </node>
      <node id="58264">
        <label>wx/image.h</label>
      </node>
      <node id="58275">
        <label>wx/pen.h</label>
      </node>
      <node id="58345">
        <label>wx/frame.h</label>
      </node>
      <node id="58314">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="58315" relation="include">
        </childnode>
        <childnode refid="58259" relation="include">
        </childnode>
      </node>
      <node id="58321">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="58286" relation="include">
        </childnode>
      </node>
      <node id="58285">
        <label>wx/utils.h</label>
      </node>
      <node id="58338">
        <label>wx/evtloop.h</label>
      </node>
      <node id="58279">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="58269" relation="include">
        </childnode>
      </node>
      <node id="58310">
        <label>wx/timer.h</label>
      </node>
      <node id="58292">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="58263" relation="include">
        </childnode>
        <childnode refid="58293" relation="include">
        </childnode>
      </node>
      <node id="58334">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="58324">
        <label>wx/fileconf.h</label>
      </node>
      <node id="58326">
        <label>map</label>
      </node>
      <node id="58329">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="58286" relation="include">
        </childnode>
        <childnode refid="58321" relation="include">
        </childnode>
        <childnode refid="58319" relation="include">
        </childnode>
        <childnode refid="58320" relation="include">
        </childnode>
        <childnode refid="58327" relation="include">
        </childnode>
        <childnode refid="58328" relation="include">
        </childnode>
      </node>
      <node id="58267">
        <label>wx/dc.h</label>
      </node>
      <node id="58342">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="58259" relation="include">
        </childnode>
      </node>
      <node id="58340">
        <label>wx/stattext.h</label>
      </node>
      <node id="58309">
        <label>wx/socket.h</label>
      </node>
      <node id="58344">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="58320">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="58286" relation="include">
        </childnode>
      </node>
      <node id="58281">
        <label>wx/list.h</label>
      </node>
      <node id="58299">
        <label>wx/menu.h</label>
      </node>
      <node id="58269">
        <label>wx/defs.h</label>
      </node>
      <node id="58265">
        <label>wx/window.h</label>
      </node>
      <node id="58306">
        <label>wx/intl.h</label>
      </node>
      <node id="58347">
        <label>wx/tooltip.h</label>
      </node>
      <node id="58337">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="58259" relation="include">
        </childnode>
        <childnode refid="58269" relation="include">
        </childnode>
        <childnode refid="58317" relation="include">
        </childnode>
        <childnode refid="58338" relation="include">
        </childnode>
        <childnode refid="58339" relation="include">
        </childnode>
        <childnode refid="58340" relation="include">
        </childnode>
        <childnode refid="58285" relation="include">
        </childnode>
      </node>
      <node id="58332">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="58286">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="58282" relation="include">
        </childnode>
        <childnode refid="58287" relation="include">
        </childnode>
      </node>
      <node id="58325">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="58269" relation="include">
        </childnode>
        <childnode refid="58270" relation="include">
        </childnode>
        <childnode refid="58324" relation="include">
        </childnode>
        <childnode refid="58282" relation="include">
        </childnode>
        <childnode refid="58326" relation="include">
        </childnode>
        <childnode refid="58319" relation="include">
        </childnode>
        <childnode refid="58327" relation="include">
        </childnode>
        <childnode refid="58328" relation="include">
        </childnode>
        <childnode refid="58329" relation="include">
        </childnode>
      </node>
      <node id="58317">
        <label>wx/dialog.h</label>
      </node>
      <node id="58260">
        <label>AButton.h</label>
        <link refid="_a_button_8h"/>
        <childnode refid="58261" relation="include">
        </childnode>
        <childnode refid="58263" relation="include">
        </childnode>
        <childnode refid="58264" relation="include">
        </childnode>
        <childnode refid="58265" relation="include">
        </childnode>
        <childnode refid="58266" relation="include">
        </childnode>
      </node>
      <node id="58283">
        <label>wx/filename.h</label>
      </node>
      <node id="58316">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="58279" relation="include">
        </childnode>
        <childnode refid="58312" relation="include">
        </childnode>
        <childnode refid="58317" relation="include">
        </childnode>
        <childnode refid="58304" relation="include">
        </childnode>
        <childnode refid="58318" relation="include">
        </childnode>
        <childnode refid="58282" relation="include">
        </childnode>
        <childnode refid="58319" relation="include">
        </childnode>
        <childnode refid="58325" relation="include">
        </childnode>
        <childnode refid="58330" relation="include">
        </childnode>
      </node>
      <node id="58322">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="58323" relation="include">
        </childnode>
        <childnode refid="58302" relation="include">
        </childnode>
        <childnode refid="58324" relation="include">
        </childnode>
        <childnode refid="58306" relation="include">
        </childnode>
      </node>
      <node id="58274">
        <label>wx/brush.h</label>
      </node>
      <node id="58298">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="58279" relation="include">
        </childnode>
        <childnode refid="58261" relation="include">
        </childnode>
        <childnode refid="58263" relation="include">
        </childnode>
        <childnode refid="58282" relation="include">
        </childnode>
        <childnode refid="58270" relation="include">
        </childnode>
        <childnode refid="58299" relation="include">
        </childnode>
        <childnode refid="58284" relation="include">
        </childnode>
        <childnode refid="58300" relation="include">
        </childnode>
        <childnode refid="58288" relation="include">
        </childnode>
        <childnode refid="58286" relation="include">
        </childnode>
      </node>
      <node id="58258">
        <label>C:/_dev/OpenU/Audacity/audacity/src/widgets/AButton.cpp</label>
        <link refid="AButton.cpp"/>
        <childnode refid="58259" relation="include">
        </childnode>
        <childnode refid="58260" relation="include">
        </childnode>
        <childnode refid="58273" relation="include">
        </childnode>
        <childnode refid="58268" relation="include">
        </childnode>
        <childnode refid="58276" relation="include">
        </childnode>
        <childnode refid="58277" relation="include">
        </childnode>
        <childnode refid="58264" relation="include">
        </childnode>
        <childnode refid="58278" relation="include">
        </childnode>
        <childnode refid="58347" relation="include">
        </childnode>
      </node>
      <node id="58259">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="58313">
        <label>wx/grid.h</label>
      </node>
      <node id="58263">
        <label>vector</label>
      </node>
      <node id="58330">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="58259" relation="include">
        </childnode>
        <childnode refid="58261" relation="include">
        </childnode>
        <childnode refid="58331" relation="include">
        </childnode>
        <childnode refid="58332" relation="include">
        </childnode>
        <childnode refid="58270" relation="include">
        </childnode>
        <childnode refid="58306" relation="include">
        </childnode>
        <childnode refid="58282" relation="include">
        </childnode>
        <childnode refid="58333" relation="include">
        </childnode>
        <childnode refid="58321" relation="include">
        </childnode>
        <childnode refid="58319" relation="include">
        </childnode>
        <childnode refid="58279" relation="include">
        </childnode>
        <childnode refid="58293" relation="include">
        </childnode>
        <childnode refid="58334" relation="include">
        </childnode>
        <childnode refid="58335" relation="include">
        </childnode>
        <childnode refid="58337" relation="include">
        </childnode>
      </node>
      <node id="58270">
        <label>wx/dynarray.h</label>
      </node>
      <node id="58278">
        <label>../Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="58259" relation="include">
        </childnode>
        <childnode refid="58279" relation="include">
        </childnode>
        <childnode refid="58280" relation="include">
        </childnode>
        <childnode refid="58292" relation="include">
        </childnode>
        <childnode refid="58296" relation="include">
        </childnode>
        <childnode refid="58297" relation="include">
        </childnode>
        <childnode refid="58298" relation="include">
        </childnode>
        <childnode refid="58316" relation="include">
        </childnode>
        <childnode refid="58288" relation="include">
        </childnode>
        <childnode refid="58341" relation="include">
        </childnode>
        <childnode refid="58342" relation="include">
        </childnode>
        <childnode refid="58269" relation="include">
        </childnode>
        <childnode refid="58304" relation="include">
        </childnode>
        <childnode refid="58308" relation="include">
        </childnode>
        <childnode refid="58343" relation="include">
        </childnode>
        <childnode refid="58344" relation="include">
        </childnode>
        <childnode refid="58345" relation="include">
        </childnode>
        <childnode refid="58306" relation="include">
        </childnode>
        <childnode refid="58268" relation="include">
        </childnode>
        <childnode refid="58346" relation="include">
        </childnode>
      </node>
      <node id="58327">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="58286" relation="include">
        </childnode>
        <childnode refid="58321" relation="include">
        </childnode>
        <childnode refid="58320" relation="include">
        </childnode>
      </node>
      <node id="58273">
        <label>../AColor.h</label>
        <link refid="_a_color_8h"/>
        <childnode refid="58274" relation="include">
        </childnode>
        <childnode refid="58275" relation="include">
        </childnode>
      </node>
      <node id="58282">
        <label>wx/string.h</label>
      </node>
      <node id="58300">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="58259" relation="include">
        </childnode>
        <childnode refid="58301" relation="include">
        </childnode>
        <childnode refid="58302" relation="include">
        </childnode>
        <childnode refid="58303" relation="include">
        </childnode>
        <childnode refid="58304" relation="include">
        </childnode>
        <childnode refid="58305" relation="include">
        </childnode>
        <childnode refid="58306" relation="include">
        </childnode>
        <childnode refid="58307" relation="include">
        </childnode>
        <childnode refid="58308" relation="include">
        </childnode>
        <childnode refid="58309" relation="include">
        </childnode>
        <childnode refid="58310" relation="include">
        </childnode>
        <childnode refid="58311" relation="include">
        </childnode>
        <childnode refid="58314" relation="include">
        </childnode>
        <childnode refid="58279" relation="include">
        </childnode>
      </node>
      <node id="58318">
        <label>wx/listbox.h</label>
      </node>
      <node id="58308">
        <label>wx/log.h</label>
      </node>
      <node id="58295">
        <label>math.h</label>
      </node>
      <node id="58280">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="58281" relation="include">
        </childnode>
        <childnode refid="58282" relation="include">
        </childnode>
        <childnode refid="58283" relation="include">
        </childnode>
        <childnode refid="58284" relation="include">
        </childnode>
        <childnode refid="58285" relation="include">
        </childnode>
        <childnode refid="58286" relation="include">
        </childnode>
        <childnode refid="58288" relation="include">
        </childnode>
      </node>
      <node id="58293">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="58259" relation="include">
        </childnode>
        <childnode refid="58279" relation="include">
        </childnode>
        <childnode refid="58269" relation="include">
        </childnode>
        <childnode refid="58294" relation="include">
        </childnode>
        <childnode refid="58295" relation="include">
        </childnode>
      </node>
      <node id="58287">
        <label>wx/arrstr.h</label>
      </node>
      <node id="58307">
        <label>wx/snglinst.h</label>
      </node>
      <node id="58315">
        <label>wx/thread.h</label>
      </node>
      <node id="58343">
        <label>wx/dragimag.h</label>
      </node>
      <node id="58333">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="58261">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="58262" relation="include">
        </childnode>
      </node>
      <node id="58311">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="58269" relation="include">
        </childnode>
        <childnode refid="58312" relation="include">
        </childnode>
        <childnode refid="58270" relation="include">
        </childnode>
        <childnode refid="58304" relation="include">
        </childnode>
        <childnode refid="58313" relation="include">
        </childnode>
        <childnode refid="58282" relation="include">
        </childnode>
        <childnode refid="58265" relation="include">
        </childnode>
      </node>
      <node id="58331">
        <label>set</label>
      </node>
      <node id="58346">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="58279" relation="include">
        </childnode>
      </node>
      <node id="58301">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="58336">
        <label>wx/longlong.h</label>
      </node>
      <node id="58271">
        <label>wx/panel.h</label>
      </node>
      <node id="58289">
        <label>stdio.h</label>
      </node>
      <node id="58272">
        <label>wx/version.h</label>
      </node>
      <node id="58323">
        <label>locale.h</label>
      </node>
      <node id="58305">
        <label>wx/docview.h</label>
      </node>
      <node id="58276">
        <label>wx/dcmemory.h</label>
      </node>
      <node id="58262">
        <label>memory</label>
      </node>
      <node id="58290">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="58287" relation="include">
        </childnode>
        <childnode refid="58270" relation="include">
        </childnode>
        <childnode refid="58291" relation="include">
        </childnode>
      </node>
      <node id="58297">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="58282" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_a_button_1_1_listener" prot="public">AButton::Listener</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_a_button_8cpp_1a7f3da86f90aca5a9e574b4a477211e98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>IMPLEMENT_CLASS</definition>
        <argsstring>(AButton::Listener, wxEvtHandler)</argsstring>
        <name>IMPLEMENT_CLASS</name>
        <param>
          <type><ref refid="class_a_button_1_1_listener" kindref="compound">AButton::Listener</ref></type>
        </param>
        <param>
          <type>wxEvtHandler</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/AButton.cpp" line="70" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>AButton.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Audacity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_button_8h" kindref="compound">AButton.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../AColor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcclient.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcmemory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcbuffer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/image.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//This<sp/>is<sp/>needed<sp/>for<sp/>tooltips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Project.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/tooltip.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_a_button" kindref="compound">AButton</ref>,<sp/>wxWindow)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>EVT_MOUSE_EVENTS(<ref refid="class_a_button" kindref="compound">AButton</ref>::OnMouseEvent)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>EVT_MOUSE_CAPTURE_LOST(<ref refid="class_a_button" kindref="compound">AButton</ref>::OnCaptureLost)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>EVT_KEY_DOWN(<ref refid="class_a_button" kindref="compound">AButton</ref>::OnKeyDown)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/>EVT_SET_FOCUS(<ref refid="class_a_button" kindref="compound">AButton</ref>::OnSetFocus)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>EVT_KILL_FOCUS(<ref refid="class_a_button" kindref="compound">AButton</ref>::OnKillFocus)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>EVT_PAINT(<ref refid="class_a_button" kindref="compound">AButton</ref>::OnPaint)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>EVT_SIZE(<ref refid="class_a_button" kindref="compound">AButton</ref>::OnSize)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>EVT_ERASE_BACKGROUND(<ref refid="class_a_button" kindref="compound">AButton</ref>::OnErase)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LL:<sp/><sp/>An<sp/>alternative<sp/>to<sp/>this<sp/>might<sp/>be<sp/>to<sp/>just<sp/>use<sp/>the<sp/>wxEVT_KILL_FOCUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>wxEVT_ACTIVATE<sp/>events.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_a_button_1_1_listener" refkind="compound"><highlight class="normal">class<sp/><ref refid="class_a_button" kindref="compound">AButton</ref>::<ref refid="class_a_button_1_1_listener" kindref="compound">Listener</ref><sp/>final</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/>:<sp/><ref refid="cext_8h_1a9b06159f783a7975eccfa27e90dff1c2" kindref="member">public</ref><sp/>wxEvtHandler</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_button_1_1_listener" kindref="compound">Listener</ref><sp/>(<ref refid="class_a_button" kindref="compound">AButton</ref><sp/>*button);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>~<ref refid="class_a_button_1_1_listener" kindref="compound">Listener</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnKeyDown(wxKeyEvent<sp/>&amp;<sp/>event);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnKeyUp(wxKeyEvent<sp/>&amp;<sp/>event);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTimer(wxTimerEvent<sp/>&amp;<sp/>event);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>DECLARE_CLASS(<ref refid="class_a_button_1_1_listener" kindref="compound">AButton::Listener</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>DECLARE_EVENT_TABLE();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_button" kindref="compound">AButton</ref><sp/>*mButton;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>wxTimer<sp/>mShiftKeyTimer;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="_a_button_8cpp_1a7f3da86f90aca5a9e574b4a477211e98" kindref="member">IMPLEMENT_CLASS</ref>(<ref refid="class_a_button_1_1_listener" kindref="compound">AButton::Listener</ref>,<sp/>wxEvtHandler);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_a_button_1_1_listener" kindref="compound">AButton::Listener</ref>,<sp/>wxEvtHandler)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>EVT_TIMER(wxID_ANY,<sp/><ref refid="class_a_button_1_1_listener_1a0ff7371e7eb2ddc795b28b129a07df9a" kindref="member">AButton::Listener::OnTimer</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_a_button_1_1_listener_1aa411f0f59b4a13e0f9515b8e97673ca5" refkind="member"><highlight class="normal"><ref refid="class_a_button" kindref="compound">AButton</ref>::<ref refid="class_a_button_1_1_listener" kindref="compound">Listener</ref>::<ref refid="class_a_button_1_1_listener" kindref="compound">Listener</ref><sp/>(<ref refid="class_a_button" kindref="compound">AButton</ref><sp/>*button)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">:<sp/>mButton(button)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>mShiftKeyTimer.SetOwner(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;Connect(<sp/>wxEVT_KEY_DOWN,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxKeyEventHandler(<sp/><ref refid="class_a_button_1_1_listener_1a9f5de99a2678b422dd5d755248591665" kindref="member">AButton::Listener::OnKeyDown</ref><sp/>),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;Connect(<sp/>wxEVT_KEY_UP,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxKeyEventHandler(<sp/><ref refid="class_a_button_1_1_listener_1aa818663b68000aed183e7a9dfa9a8470" kindref="member">AButton::Listener::OnKeyUp</ref><sp/>),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="class_a_button_1_1_listener_1a83188f0da1c74ac88dd4c0945faa0e9a" refkind="member"><highlight class="normal"><ref refid="class_a_button_1_1_listener_1a83188f0da1c74ac88dd4c0945faa0e9a" kindref="member">AButton::Listener::~Listener</ref><sp/>()</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;Disconnect(<sp/>wxEVT_KEY_DOWN,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxKeyEventHandler(<sp/><ref refid="class_a_button_1_1_listener_1a9f5de99a2678b422dd5d755248591665" kindref="member">AButton::Listener::OnKeyDown</ref><sp/>),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;Disconnect(<sp/>wxEVT_KEY_UP,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxKeyEventHandler(<sp/><ref refid="class_a_button_1_1_listener_1aa818663b68000aed183e7a9dfa9a8470" kindref="member">AButton::Listener::OnKeyUp</ref><sp/>),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_a_button_1_1_listener_1a9f5de99a2678b422dd5d755248591665" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1_1_listener_1a9f5de99a2678b422dd5d755248591665" kindref="member">AButton::Listener::OnKeyDown</ref>(wxKeyEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Really,<sp/>it&apos;s<sp/>all<sp/>the<sp/>same<sp/>check<sp/>for<sp/>changes<sp/>of<sp/>key<sp/>states.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_button_1_1_listener_1aa818663b68000aed183e7a9dfa9a8470" kindref="member">OnKeyUp</ref>(event);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>comments<sp/>in<sp/>OnTimer()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>mShiftKeyTimer.Start(100);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_a_button_1_1_listener_1aa818663b68000aed183e7a9dfa9a8470" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1_1_listener_1aa818663b68000aed183e7a9dfa9a8470" kindref="member">AButton::Listener::OnKeyUp</ref>(wxKeyEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mButton-&gt;<ref refid="class_a_button_1a40ca9be73e90b8a1c01e8f8299a4fe05" kindref="member">IsDown</ref>())</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>the<sp/>event,<sp/>consult<sp/>key<sp/>states.<sp/><sp/>One<sp/>modifier<sp/>key<sp/>might</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>gone<sp/>up<sp/>but<sp/>another<sp/>remained<sp/>down.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>CMD<sp/>(or<sp/>CTRL)<sp/>takes<sp/>precedence<sp/>over<sp/>Shift<sp/>if<sp/>both<sp/>are<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>alternates<sp/>are<sp/>defined<sp/>for<sp/>both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>also<sp/>AButton::OnMouseEvent()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="window_8cpp_1a82a18ac43492bfb375604c41b71ce84f" kindref="member">wxGetKeyState</ref>(WXK_CONTROL)<sp/>&amp;&amp;<sp/>mButton-&gt;HasAlternateImages(2))</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="window_8cpp_1a82a18ac43492bfb375604c41b71ce84f" kindref="member">wxGetKeyState</ref>(WXK_SHIFT)<sp/>&amp;&amp;<sp/>mButton-&gt;HasAlternateImages(1))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>e.g.<sp/>the<sp/>&quot;Play&quot;<sp/>button<sp/>into<sp/>a<sp/>&quot;Loop&quot;<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>&quot;Cut<sp/>Preview&quot;<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mButton-&gt;<ref refid="class_a_button_1a5ba29f07a4af182548b7dd71f8514f78" kindref="member">SetAlternateIdx</ref>(idx);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="class_a_button_1_1_listener_1a0ff7371e7eb2ddc795b28b129a07df9a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1_1_listener_1a0ff7371e7eb2ddc795b28b129a07df9a" kindref="member">AButton::Listener::OnTimer</ref>(wxTimerEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bug<sp/>307<sp/>fix:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shift<sp/>key-up<sp/>events<sp/>get<sp/>swallowed<sp/>if<sp/>a<sp/>command<sp/>with<sp/>a<sp/>Shift<sp/>in<sp/>its<sp/>keyboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shortcut<sp/>opens<sp/>a<sp/>dialog,<sp/>and<sp/>OnKeyUp()<sp/>doesn&apos;t<sp/>get<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>CTRL<sp/>now<sp/>causing<sp/>the<sp/>button<sp/>to<sp/>change<sp/>appearance,<sp/>presumably<sp/>similar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>happen<sp/>with<sp/>that<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="window_8cpp_1a82a18ac43492bfb375604c41b71ce84f" kindref="member">wxGetKeyState</ref>(WXK_SHIFT)<sp/>||</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="window_8cpp_1a82a18ac43492bfb375604c41b71ce84f" kindref="member">wxGetKeyState</ref>(WXK_CONTROL))</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxKeyEvent<sp/><ref refid="database_8c_1a4497856461b72aa327a367542f73bff3" kindref="member">dummy</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_a_button_1_1_listener_1aa818663b68000aed183e7a9dfa9a8470" kindref="member">OnKeyUp</ref>(dummy);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mShiftKeyTimer.Stop();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class_a_button_1ac983220b8a03543fc34565979e77bd72" refkind="member"><highlight class="normal"><ref refid="class_a_button_1a76a53359dd32e2ec11b082c2af00c23b" kindref="member">AButton::AButton</ref>(wxWindow<sp/>*<sp/>parent,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPoint<sp/>&amp;<sp/>pos,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxSize<sp/>&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxImage<sp/>up,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxImage<sp/>over,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxImage<sp/>down,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxImage<sp/>dis,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>toggle):</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>wxWindow()</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/>Init(parent,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos,<sp/>size,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref>(up),<sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref>(over),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref>(down),<sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref>(dis),</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggle);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_a_button_1a76a53359dd32e2ec11b082c2af00c23b" refkind="member"><highlight class="normal"><ref refid="class_a_button_1a76a53359dd32e2ec11b082c2af00c23b" kindref="member">AButton::AButton</ref>(wxWindow<sp/>*<sp/>parent,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPoint<sp/>&amp;<sp/>pos,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxSize<sp/>&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref><sp/>up,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref><sp/>over,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref><sp/>down,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref><sp/>dis,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>toggle):</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/>wxWindow()</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/>Init(parent,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos,<sp/>size,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>up,<sp/>over,<sp/>down,<sp/>dis,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggle);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_a_button_1ade4e33830c20aee1b587d56a01689de5" refkind="member"><highlight class="normal"><ref refid="class_a_button_1ade4e33830c20aee1b587d56a01689de5" kindref="member">AButton::~AButton</ref>()</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AButton::Init(wxWindow<sp/>*<sp/>parent,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPoint<sp/>&amp;<sp/>pos,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxSize<sp/>&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref><sp/>up,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref><sp/>over,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref><sp/>down,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref><sp/>dis,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>toggle)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bug<sp/>in<sp/>wxWidgets<sp/>2.8.12:<sp/>by<sp/>default<sp/>pressing<sp/>Enter<sp/>on<sp/>an<sp/>AButton<sp/>is<sp/>interpreted<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>navigation<sp/>event<sp/>-<sp/>move<sp/>to<sp/>next<sp/>control.<sp/>As<sp/>a<sp/>workaround,<sp/>the<sp/>style<sp/>wxWANTS_CHARS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>results<sp/>in<sp/>all<sp/>characters<sp/>being<sp/>available<sp/>in<sp/>the<sp/>OnKeyDown<sp/>function<sp/>below.<sp/>Note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>OnKeyDown<sp/>now<sp/>has<sp/>to<sp/>handle<sp/>navigation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>Create(parent,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos,<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,<sp/>wxWANTS_CHARS);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/>mWasShiftDown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>mWasControlDown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/>mButtonIsDown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/>mIsClicking<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/>mEnabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>mCursorIsInWindow<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>mToggle<sp/>=<sp/>toggle;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/>mUseDisabledAsDownHiliteImage<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>mImages.resize(1);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>mImages[0].mArr[0]<sp/>=<sp/>up;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>mImages[0].mArr[1]<sp/>=<sp/>over;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>mImages[0].mArr[2]<sp/>=<sp/>down;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>mImages[0].mArr[3]<sp/>=<sp/>dis;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>mAlternateIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>mButtonIsFocused<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/>mFocusRect<sp/>=<sp/>GetClientRect().Deflate(<sp/>3,<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>mForceFocusRect<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/>SetSizeHints(mImages[0].mArr[0].GetMinSize(),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mImages[0].mArr[0].GetMaxSize());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>wxUSE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/>SetName(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/>SetAccessible(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a8017401a0ece8cee5c31daf38ce88838" kindref="member">AButtonAx</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="class_a_button_1a25ff7bb94e54daffd49e96d9665b5e52" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a25ff7bb94e54daffd49e96d9665b5e52" kindref="member">AButton::UseDisabledAsDownHiliteImage</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/>mUseDisabledAsDownHiliteImage<sp/>=<sp/>flag;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="class_a_button_1aede87ec991655c30378b0ea90305b4e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1ac02fd3b9555ef38f519a6237dfca78d5" kindref="member">AButton::SetAlternateImages</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>idx,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxImage<sp/>up,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxImage<sp/>over,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxImage<sp/>down,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxImage<sp/>dis)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(1<sp/>+<sp/>idx<sp/>&gt;<sp/>mImages.size())</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mImages.resize(1<sp/>+<sp/>idx);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/>mImages[idx].mArr[0]<sp/>=<sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref>(up);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/>mImages[idx].mArr[1]<sp/>=<sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref>(over);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/>mImages[idx].mArr[2]<sp/>=<sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref>(down);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>mImages[idx].mArr[3]<sp/>=<sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref>(dis);</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="class_a_button_1ac02fd3b9555ef38f519a6237dfca78d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1ac02fd3b9555ef38f519a6237dfca78d5" kindref="member">AButton::SetAlternateImages</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>idx,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref><sp/>up,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref><sp/>over,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref><sp/>down,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref><sp/>dis)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(1<sp/>+<sp/>idx<sp/>&gt;<sp/>mImages.size())</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mImages.resize(1<sp/>+<sp/>idx);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/>mImages[idx].mArr[0]<sp/>=<sp/>up;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/>mImages[idx].mArr[1]<sp/>=<sp/>over;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/>mImages[idx].mArr[2]<sp/>=<sp/>down;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/>mImages[idx].mArr[3]<sp/>=<sp/>dis;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="class_a_button_1a5ba29f07a4af182548b7dd71f8514f78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a5ba29f07a4af182548b7dd71f8514f78" kindref="member">AButton::SetAlternateIdx</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>idx)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>alternate-image-state<sp/>is<sp/>already<sp/>correct<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>do<sp/>(saves<sp/>repainting<sp/>button).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mAlternateIdx<sp/>==<sp/>idx<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>mAlternateIdx<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="class_a_button_1ae7daa64d5211ef3f200ef59ee946e7b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1ae7daa64d5211ef3f200ef59ee946e7b3" kindref="member">AButton::FollowModifierKeys</ref>()</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!mListener)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mListener.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1_1_listener" kindref="compound">Listener</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="class_a_button_1ada6347c4b9f467666540a653c655ad66" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1ada6347c4b9f467666540a653c655ad66" kindref="member">AButton::SetFocusRect</ref>(wxRect<sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/>mFocusRect<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/>mForceFocusRect<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="class_a_button_1ab3eb39e7cc7a3b929a3f6e7036e6b4ac" refkind="member"><highlight class="normal"><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83" kindref="member">AButton::AButtonState</ref><sp/><ref refid="class_a_button_1ab3eb39e7cc7a3b929a3f6e7036e6b4ac" kindref="member">AButton::GetState</ref>()</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83" kindref="member">AButtonState</ref><sp/>state;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mEnabled<sp/>&amp;&amp;<sp/>(!mToggle<sp/>||<sp/>!mButtonIsDown))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83a85c36e5ba22412bb87f3812a7738ce9f" kindref="member">AButtonDis</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCursorIsInWindow)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mToggle)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsClicking)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>mButtonIsDown<sp/>?<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83a7b3595d8ffd640d466a9ff667943a120" kindref="member">AButtonUp</ref><sp/>:<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83abe7563fde2e83682284098a513eeecc0" kindref="member">AButtonDown</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mUseDisabledAsDownHiliteImage)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>mButtonIsDown<sp/>?<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83aa43a56eb8e2444a69ccf058b20cfc17e" kindref="member">AButtonOver</ref><sp/>:<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83a85c36e5ba22412bb87f3812a7738ce9f" kindref="member">AButtonDis</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>mButtonIsDown<sp/>?<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83abe7563fde2e83682284098a513eeecc0" kindref="member">AButtonDown</ref><sp/>:<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83aa43a56eb8e2444a69ccf058b20cfc17e" kindref="member">AButtonOver</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mUseDisabledAsDownHiliteImage)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>mButtonIsDown<sp/>?<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83a85c36e5ba22412bb87f3812a7738ce9f" kindref="member">AButtonDis</ref><sp/>:<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83aa43a56eb8e2444a69ccf058b20cfc17e" kindref="member">AButtonOver</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsClicking)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>mButtonIsDown<sp/>?<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83aa43a56eb8e2444a69ccf058b20cfc17e" kindref="member">AButtonOver</ref><sp/>:<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83abe7563fde2e83682284098a513eeecc0" kindref="member">AButtonDown</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>mButtonIsDown<sp/>?<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83abe7563fde2e83682284098a513eeecc0" kindref="member">AButtonDown</ref><sp/>:<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83aa43a56eb8e2444a69ccf058b20cfc17e" kindref="member">AButtonOver</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mToggle)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>mButtonIsDown<sp/>?<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83abe7563fde2e83682284098a513eeecc0" kindref="member">AButtonDown</ref><sp/>:<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83a7b3595d8ffd640d466a9ff667943a120" kindref="member">AButtonUp</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>mButtonIsDown<sp/>?<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83abe7563fde2e83682284098a513eeecc0" kindref="member">AButtonDown</ref><sp/>:<sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83a7b3595d8ffd640d466a9ff667943a120" kindref="member">AButtonUp</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="class_a_button_1a5cab2e11b286343d2f65da1482169140" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a5cab2e11b286343d2f65da1482169140" kindref="member">AButton::OnPaint</ref>(wxPaintEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/>wxBufferedPaintDC<sp/>dc(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83" kindref="member">AButtonState</ref><sp/>buttonState<sp/>=<sp/><ref refid="class_a_button_1ab3eb39e7cc7a3b929a3f6e7036e6b4ac" kindref="member">GetState</ref>();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>mImages[mAlternateIdx].mArr[buttonState].Draw(dc,<sp/>GetClientRect());</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)<sp/>||<sp/>defined(__WXGTK__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mButtonIsFocused<sp/>)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1af26c79694559e99331d39049090afe06" kindref="member">AColor::DrawFocus</ref>(<sp/>dc,<sp/>mFocusRect<sp/>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="class_a_button_1a79c74ddc1dac62737c76e63ce63bd885" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a79c74ddc1dac62737c76e63ce63bd885" kindref="member">AButton::OnErase</ref>(wxEraseEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>it<sp/>to<sp/>prevent<sp/>flashing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="class_a_button_1a4ae12be3ad3879770c8f70fbbe828fb0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a4ae12be3ad3879770c8f70fbbe828fb0" kindref="member">AButton::OnSize</ref>(wxSizeEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mForceFocusRect)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFocusRect<sp/>=<sp/>GetClientRect().Deflate(<sp/>3,<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AButton::HasAlternateImages(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>idx)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mImages.size()<sp/>&lt;=<sp/>idx)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageArr<sp/>&amp;images<sp/>=<sp/>mImages[idx];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_image_roll" kindref="compound">ImageRoll</ref><sp/>(&amp;arr)[4]<sp/>=<sp/>images.mArr;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(arr[0].Ok()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[1].Ok()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[2].Ok()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[3].Ok());</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="class_a_button_1a8ac23eb7e93f7becbff55ec57dcf4de6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a8ac23eb7e93f7becbff55ec57dcf4de6" kindref="member">AButton::OnMouseEvent</ref>(wxMouseEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/>wxSize<sp/>clientSize<sp/>=<sp/>GetClientSize();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83" kindref="member">AButtonState</ref><sp/>prevState<sp/>=<sp/><ref refid="class_a_button_1ab3eb39e7cc7a3b929a3f6e7036e6b4ac" kindref="member">GetState</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.Entering())</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCursorIsInWindow<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.Leaving())</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCursorIsInWindow<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCursorIsInWindow<sp/>=</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">event</highlight><highlight class="normal">.m_x<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.m_y<sp/>&gt;=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.m_x<sp/>&lt;<sp/>clientSize.x<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.m_y<sp/>&lt;<sp/>clientSize.y);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mButtonIsDown)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>CMD<sp/>(or<sp/>CTRL)<sp/>takes<sp/>precedence<sp/>over<sp/>Shift<sp/>if<sp/>both<sp/>are<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>also<sp/>AButton::Listener::OnKeyUp()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.CmdDown()<sp/>&amp;&amp;<sp/>HasAlternateImages(2))</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAlternateIdx<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.ShiftDown()<sp/>&amp;&amp;<sp/>HasAlternateImages(1))</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAlternateIdx<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAlternateIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mEnabled<sp/>&amp;&amp;<sp/>event.IsButton())<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.ButtonIsDown(wxMOUSE_BTN_ANY))<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIsClicking<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!HasCapture()<sp/>)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CaptureMouse();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsClicking)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIsClicking<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HasCapture())</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseMouse();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCursorIsInWindow<sp/>&amp;&amp;<sp/>(mToggle<sp/>||<sp/>!mButtonIsDown))<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mToggle)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mButtonIsDown<sp/>=<sp/>!mButtonIsDown;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mButtonIsDown<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mWasShiftDown<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.ShiftDown();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mWasControlDown<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.ControlDown();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_button_1a48fb77fb8c75116721a11a3d0c91ee91" kindref="member">Click</ref>();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>redraw<sp/>and<sp/>change<sp/>tooltips<sp/>if<sp/>the<sp/>state<sp/>has<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83" kindref="member">AButtonState</ref><sp/>newState<sp/>=<sp/><ref refid="class_a_button_1ab3eb39e7cc7a3b929a3f6e7036e6b4ac" kindref="member">GetState</ref>();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newState<sp/>!=<sp/>prevState)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCursorIsInWindow)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>wxUSE_TOOLTIPS<sp/>//<sp/>Not<sp/>available<sp/>in<sp/>wxX11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>tooltip<sp/>in<sp/>the<sp/>status<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxToolTip<sp/>*<sp/>pTip<sp/>=<sp/>this-&gt;GetToolTip();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pTip<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>tipText<sp/>=<sp/>pTip-&gt;GetTip();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mEnabled)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tipText<sp/>+=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>(disabled)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>()-&gt;<ref refid="class_audacity_project_1ab322d812e0ace74e6171a5aa5702dfd5" kindref="member">TP_DisplayStatusMessage</ref>(tipText);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>()-&gt;<ref refid="class_audacity_project_1ab322d812e0ace74e6171a5aa5702dfd5" kindref="member">TP_DisplayStatusMessage</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="class_a_button_1aeadcce9652a8c0693c25bd06d8900d5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1aeadcce9652a8c0693c25bd06d8900d5a" kindref="member">AButton::OnCaptureLost</ref>(wxMouseCaptureLostEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/>wxMouseEvent<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>(wxEVT_LEFT_UP);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/>e.m_x<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/>e.m_y<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_button_1a8ac23eb7e93f7becbff55ec57dcf4de6" kindref="member">OnMouseEvent</ref>(e);</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>OnKeyDown<sp/>has<sp/>to<sp/>handle<sp/>navigation<sp/>because<sp/>wxWANTS_CHARS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//<sp/>flag<sp/>was<sp/>set<sp/>-<sp/>see<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="class_a_button_1abef647b913081a2309a675509cdbc7fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1abef647b913081a2309a675509cdbc7fb" kindref="member">AButton::OnKeyDown</ref>(wxKeyEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>event.GetKeyCode()<sp/>)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_RIGHT:</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Navigate(wxNavigationKeyEvent::IsForward);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_LEFT:</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Navigate(wxNavigationKeyEvent::IsBackward);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_TAB:</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Navigate(event.ShiftDown()</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>wxNavigationKeyEvent::IsBackward</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>wxNavigationKeyEvent::IsForward);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_RETURN:</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_NUMPAD_ENTER:</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mWasShiftDown<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.ShiftDown();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mWasControlDown<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.ControlDown();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_button_1a48fb77fb8c75116721a11a3d0c91ee91" kindref="member">Click</ref>();</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="class_a_button_1a4ca506426c5899231f716c24214fd494" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a4ca506426c5899231f716c24214fd494" kindref="member">AButton::OnSetFocus</ref>(wxFocusEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/>mButtonIsFocused<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/>Refresh(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="class_a_button_1a4ceeb7d8fdf6358465b8a407efadbc01" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a4ceeb7d8fdf6358465b8a407efadbc01" kindref="member">AButton::OnKillFocus</ref>(wxFocusEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/>mButtonIsFocused<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/>Refresh(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="class_a_button_1ab308f9dcbf5867904910c47658293720" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1ab308f9dcbf5867904910c47658293720" kindref="member">AButton::WasShiftDown</ref>()</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWasShiftDown;</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="class_a_button_1a7184b1b41e15b4a1348b79cc6f718d21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a7184b1b41e15b4a1348b79cc6f718d21" kindref="member">AButton::WasControlDown</ref>()</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWasControlDown;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="class_a_button_1a962679543714243f1080938604718d13" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a962679543714243f1080938604718d13" kindref="member">AButton::Enable</ref>()</highlight></codeline>
<codeline lineno="514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/>wxWindow::Enable(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/>mEnabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="class_a_button_1a7f9e32cc30168e0f48baca331ac02921" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a7f9e32cc30168e0f48baca331ac02921" kindref="member">AButton::Disable</ref>()</highlight></codeline>
<codeline lineno="521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/>wxWindow::Enable(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/>mEnabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetCapture()==</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseMouse();</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="class_a_button_1a3125107c4a795e909efd8ffeb3ee2ceb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a3125107c4a795e909efd8ffeb3ee2ceb" kindref="member">AButton::PushDown</ref>()</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/>mButtonIsDown<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/>this-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="class_a_button_1a97a1a5fb6b2b7dc302398335241d3dad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a97a1a5fb6b2b7dc302398335241d3dad" kindref="member">AButton::PopUp</ref>()</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/>mButtonIsDown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetCapture()==</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseMouse();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/>this-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="class_a_button_1a48fb77fb8c75116721a11a3d0c91ee91" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a48fb77fb8c75116721a11a3d0c91ee91" kindref="member">AButton::Click</ref>()</highlight></codeline>
<codeline lineno="546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/>wxCommandEvent<sp/>event(wxEVT_COMMAND_BUTTON_CLICKED,<sp/>GetId());</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.SetEventObject(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/>GetEventHandler()-&gt;ProcessEvent(event);</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="class_a_button_1a07ffef4c6050acab50acc5f4f937db3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a07ffef4c6050acab50acc5f4f937db3d" kindref="member">AButton::SetShift</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shift)</highlight></codeline>
<codeline lineno="553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/>mWasShiftDown<sp/>=<sp/>shift;</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="class_a_button_1a1030f927f1de9e478a3b5df1f4b22b57" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a1030f927f1de9e478a3b5df1f4b22b57" kindref="member">AButton::SetControl</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>control)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/>mWasControlDown<sp/>=<sp/>control;</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>wxUSE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal">AButtonAx::AButtonAx(<sp/>wxWindow<sp/>*window<sp/>):</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/>wxWindowAccessible(<sp/>window<sp/>)</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal">AButtonAx::~AButtonAx()</highlight></codeline>
<codeline lineno="570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Performs<sp/>the<sp/>default<sp/>action.<sp/>childId<sp/>is<sp/>0<sp/>(the<sp/>action<sp/>for<sp/>this<sp/>object)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>&gt;<sp/>0<sp/>(the<sp/>action<sp/>for<sp/>a<sp/>child).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>wxACC_NOT_SUPPORTED<sp/>if<sp/>there<sp/>is<sp/>no<sp/>default<sp/>action<sp/>for<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">//<sp/>window<sp/>(e.g.<sp/>an<sp/>edit<sp/>control).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal">wxAccStatus<sp/>AButtonAx::DoDefaultAction(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId))</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_button" kindref="compound">AButton</ref><sp/>*ab<sp/>=<sp/>wxDynamicCast(<sp/>GetWindow(),<sp/><ref refid="class_a_button" kindref="compound">AButton</ref><sp/>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ab<sp/>&amp;&amp;<sp/>ab-&gt;<ref refid="class_a_button_1af01ff6051e4d5e3f05362e5dd00727f3" kindref="member">IsEnabled</ref>())<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ab-&gt;mWasShiftDown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ab-&gt;mWasControlDown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ab-&gt;<ref refid="class_a_button_1a48fb77fb8c75116721a11a3d0c91ee91" kindref="member">Click</ref>();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retrieves<sp/>the<sp/>address<sp/>of<sp/>an<sp/>IDispatch<sp/>interface<sp/>for<sp/>the<sp/>specified<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>objects<sp/>must<sp/>support<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal">wxAccStatus<sp/>AButtonAx::GetChild(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/>wxAccessible**<sp/>child<sp/>)</highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>childId<sp/>==<sp/>wxACC_SELF<sp/>)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*child<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*child<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>children.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal">wxAccStatus<sp/>AButtonAx::GetChildCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>childCount)</highlight></codeline>
<codeline lineno="608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/>*childCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>default<sp/>action<sp/>for<sp/>this<sp/>object<sp/>(0)<sp/>or<sp/>&gt;<sp/>0<sp/>(the<sp/>action<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>child).<sp/><sp/>Return<sp/>wxACC_OK<sp/>even<sp/>if<sp/>there<sp/>is<sp/>no<sp/>action.<sp/>actionName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>action,<sp/>or<sp/>the<sp/>empty<sp/>string<sp/>if<sp/>there<sp/>is<sp/>no<sp/>action.<sp/><sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">//<sp/>retrieved<sp/>string<sp/>describes<sp/>the<sp/>action<sp/>that<sp/>is<sp/>performed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">//<sp/>object,<sp/>not<sp/>what<sp/>the<sp/>object<sp/>does<sp/>as<sp/>a<sp/>result.<sp/>For<sp/>example,<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//<sp/>toolbar<sp/>button<sp/>that<sp/>prints<sp/>a<sp/>document<sp/>has<sp/>a<sp/>default<sp/>action<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;Press&quot;<sp/>rather<sp/>than<sp/>&quot;Prints<sp/>the<sp/>current<sp/>document.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal">wxAccStatus<sp/>AButtonAx::GetDefaultAction(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString*<sp/>actionName)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/>*actionName<sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Press&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>description<sp/>for<sp/>this<sp/>object<sp/>or<sp/>a<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal">wxAccStatus<sp/>AButtonAx::GetDescription(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString<sp/>*description<sp/>)</highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/>description-&gt;Clear();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>window<sp/>with<sp/>the<sp/>keyboard<sp/>focus.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>childId<sp/>is<sp/>0<sp/>and<sp/>child<sp/>is<sp/>NULL,<sp/>no<sp/>object<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>subhierarchy<sp/>has<sp/>the<sp/>focus.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>object<sp/>has<sp/>the<sp/>focus,<sp/>child<sp/>should<sp/>be<sp/>&apos;this&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal">wxAccStatus<sp/>AButtonAx::GetFocus(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>childId,<sp/>wxAccessible**<sp/>child)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/>*childId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/>*child<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>help<sp/>text<sp/>for<sp/>this<sp/>object<sp/>or<sp/>a<sp/>child,<sp/>similar<sp/>to<sp/>tooltip<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal">wxAccStatus<sp/>AButtonAx::GetHelpText(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString<sp/>*helpText<sp/>)</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>wxUSE_TOOLTIPS<sp/>//<sp/>Not<sp/>available<sp/>in<sp/>wxX11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_button" kindref="compound">AButton</ref><sp/>*ab<sp/>=<sp/>wxDynamicCast(<sp/>GetWindow(),<sp/><ref refid="class_a_button" kindref="compound">AButton</ref><sp/>);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/>wxToolTip<sp/>*pTip<sp/>=<sp/>ab-&gt;GetToolTip();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pTip<sp/>)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*helpText<sp/>=<sp/>pTip-&gt;GetTip();</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/>helpText-&gt;Clear();</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>keyboard<sp/>shortcut<sp/>for<sp/>this<sp/>object<sp/>or<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>e.g.<sp/>ALT+K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal">wxAccStatus<sp/>AButtonAx::GetKeyboardShortcut(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString<sp/>*shortcut<sp/>)</highlight></codeline>
<codeline lineno="671"><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/>shortcut-&gt;Clear();</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>rectangle<sp/>for<sp/>this<sp/>object<sp/>(id<sp/>=<sp/>0)<sp/>or<sp/>a<sp/>child<sp/>element<sp/>(id<sp/>&gt;<sp/>0).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rect<sp/>is<sp/>in<sp/>screen<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal">wxAccStatus<sp/>AButtonAx::GetLocation(<sp/>wxRect&amp;<sp/>rect,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(elementId)<sp/>)</highlight></codeline>
<codeline lineno="680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_button" kindref="compound">AButton</ref><sp/>*ab<sp/>=<sp/>wxDynamicCast(<sp/>GetWindow(),<sp/><ref refid="class_a_button" kindref="compound">AButton</ref><sp/>);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/>rect<sp/>=<sp/>ab-&gt;GetRect();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/>rect.SetPosition(<sp/>ab-&gt;GetParent()-&gt;ClientToScreen(<sp/>rect.GetPosition()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>name<sp/>of<sp/>the<sp/>specified<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal">wxAccStatus<sp/>AButtonAx::GetName(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString*<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_button" kindref="compound">AButton</ref><sp/>*ab<sp/>=<sp/>wxDynamicCast(<sp/>GetWindow(),<sp/><ref refid="class_a_button" kindref="compound">AButton</ref><sp/>);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/>*name<sp/>=<sp/>ab-&gt;GetName();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>name-&gt;IsEmpty()<sp/>)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*name<sp/>=<sp/>ab-&gt;GetLabel();</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>name-&gt;IsEmpty()<sp/>)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*name<sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Button&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>role<sp/>constant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal">wxAccStatus<sp/>AButtonAx::GetRole(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxAccRole*<sp/>role)</highlight></codeline>
<codeline lineno="710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/>*role<sp/>=<sp/>wxROLE_SYSTEM_PUSHBUTTON;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>a<sp/>variant<sp/>representing<sp/>the<sp/>selected<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Acceptable<sp/>values:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>a<sp/>null<sp/>variant<sp/>(IsNull()<sp/>returns<sp/>TRUE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>a<sp/>list<sp/>variant<sp/>(GetType()<sp/>==<sp/>wxT(&quot;list&quot;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>selected<sp/>child<sp/>element,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>or<sp/>0<sp/>if<sp/>this<sp/>object<sp/>is<sp/>selected<sp/>(GetType()<sp/>==<sp/>wxT(&quot;long&quot;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>a<sp/>&quot;void*&quot;<sp/>pointer<sp/>to<sp/>a<sp/>wxAccessible<sp/>child<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal">wxAccStatus<sp/>AButtonAx::GetSelections(<sp/>wxVariant<sp/>*<sp/>WXUNUSED(selections)<sp/>)</highlight></codeline>
<codeline lineno="725"><highlight class="normal">{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_NOT_IMPLEMENTED;</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>state<sp/>constant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal">wxAccStatus<sp/>AButtonAx::GetState(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>state)</highlight></codeline>
<codeline lineno="731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_button" kindref="compound">AButton</ref><sp/>*ab<sp/>=<sp/>wxDynamicCast(<sp/>GetWindow(),<sp/><ref refid="class_a_button" kindref="compound">AButton</ref><sp/>);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>ab-&gt;<ref refid="class_a_button_1ab3eb39e7cc7a3b929a3f6e7036e6b4ac" kindref="member">GetState</ref>()<sp/>)</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83abe7563fde2e83682284098a513eeecc0" kindref="member">AButton::AButtonDown</ref>:</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*state<sp/>=<sp/>wxACC_STATE_SYSTEM_PRESSED<sp/>|<sp/>wxACC_STATE_SYSTEM_FOCUSABLE;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83aa43a56eb8e2444a69ccf058b20cfc17e" kindref="member">AButton::AButtonOver</ref>:</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*state<sp/>=<sp/>wxACC_STATE_SYSTEM_HOTTRACKED<sp/>|<sp/>wxACC_STATE_SYSTEM_FOCUSABLE;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_a_button_1a2a19d9c33e99070a58b412676c6e3a83a85c36e5ba22412bb87f3812a7738ce9f" kindref="member">AButton::AButtonDis</ref>:</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*state<sp/>=<sp/>wxACC_STATE_SYSTEM_UNAVAILABLE;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*state<sp/>=<sp/>wxACC_STATE_SYSTEM_FOCUSABLE;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>use<sp/>mButtonIsFocused<sp/>is<sp/>not<sp/>set<sp/>until<sp/>after<sp/>this<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/>*state<sp/>|=<sp/>(<sp/>ab<sp/>==<sp/>wxWindow::FindFocus()<sp/>?<sp/>wxACC_STATE_SYSTEM_FOCUSED<sp/>:<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>localized<sp/>string<sp/>representing<sp/>the<sp/>value<sp/>for<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal">wxAccStatus<sp/>AButtonAx::GetValue(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString*<sp/>WXUNUSED(strValue))</highlight></codeline>
<codeline lineno="763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/AButton.cpp"/>
  </compounddef>
</doxygen>
