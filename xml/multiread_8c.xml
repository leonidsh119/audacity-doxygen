<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="multiread_8c" kind="file" language="C++">
    <compoundname>multiread.c</compoundname>
    <includes local="yes">stdio.h</includes>
    <includes local="yes">stdlib.h</includes>
    <includes refid="sndfmt_8h" local="yes">sndfmt.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <includes refid="falloc_8h" local="yes">falloc.h</includes>
    <includes local="yes">sndfile.h</includes>
    <includes refid="sndread_8h" local="yes">sndread.h</includes>
    <includes refid="multiread_8h" local="yes">multiread.h</includes>
    <incdepgraph>
      <node id="12590">
        <label>stdlib.h</label>
      </node>
      <node id="12594">
        <label>setjmp.h</label>
      </node>
      <node id="12608">
        <label>sndread.h</label>
        <link refid="sndread_8h"/>
      </node>
      <node id="12604">
        <label>falloc.h</label>
        <link refid="falloc_8h"/>
        <childnode refid="12605" relation="include">
        </childnode>
        <childnode refid="12606" relation="include">
        </childnode>
      </node>
      <node id="12592">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="12590" relation="include">
        </childnode>
        <childnode refid="12589" relation="include">
        </childnode>
        <childnode refid="12593" relation="include">
        </childnode>
        <childnode refid="12594" relation="include">
        </childnode>
        <childnode refid="12595" relation="include">
        </childnode>
      </node>
      <node id="12603">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="12607">
        <label>sndfile.h</label>
      </node>
      <node id="12602">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="12601">
        <label>string.h</label>
      </node>
      <node id="12605">
        <label>cque.h</label>
        <link refid="cque_8h"/>
      </node>
      <node id="12591">
        <label>sndfmt.h</label>
        <link refid="sndfmt_8h"/>
      </node>
      <node id="12596">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="12597" relation="include">
        </childnode>
        <childnode refid="12598" relation="include">
        </childnode>
      </node>
      <node id="12597">
        <label>math.h</label>
      </node>
      <node id="12600">
        <label>switches.h</label>
      </node>
      <node id="12598">
        <label>stdefs.h</label>
        <link refid="stdefs_8h"/>
        <childnode refid="12599" relation="include">
        </childnode>
      </node>
      <node id="12595">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="12593">
        <label>ctype.h</label>
      </node>
      <node id="12606">
        <label>debug.h</label>
        <link refid="libnyquist_2nyquist_2nyqsrc_2debug_8h"/>
      </node>
      <node id="12588">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c</label>
        <link refid="multiread.c"/>
        <childnode refid="12589" relation="include">
        </childnode>
        <childnode refid="12590" relation="include">
        </childnode>
        <childnode refid="12591" relation="include">
        </childnode>
        <childnode refid="12592" relation="include">
        </childnode>
        <childnode refid="12596" relation="include">
        </childnode>
        <childnode refid="12604" relation="include">
        </childnode>
        <childnode refid="12607" relation="include">
        </childnode>
        <childnode refid="12608" relation="include">
        </childnode>
        <childnode refid="12609" relation="include">
        </childnode>
      </node>
      <node id="12609">
        <label>multiread.h</label>
        <link refid="multiread_8h"/>
      </node>
      <node id="12589">
        <label>stdio.h</label>
      </node>
      <node id="12599">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="12600" relation="include">
        </childnode>
        <childnode refid="12589" relation="include">
        </childnode>
        <childnode refid="12601" relation="include">
        </childnode>
        <childnode refid="12597" relation="include">
        </childnode>
        <childnode refid="12602" relation="include">
        </childnode>
        <childnode refid="12603" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="multiread_8c_1a5baa88fb571f6a804072f14c419c4c21" prot="public" static="no">
        <name>max_bytes_per_frame</name>
        <initializer>(sizeof(float) * 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c" line="27" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="multiread_8c_1a3a790c289ad8cc8797663404a478ffcd" prot="public" static="no">
        <name>input_buffer_max</name>
        <initializer>(<ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref> * <ref refid="multiread_8c_1a5baa88fb571f6a804072f14c419c4c21" kindref="member">max_bytes_per_frame</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c" line="28" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="multiread_8c_1ae7b8184a806d41a1d2baa0c4e973badb" prot="public" static="no">
        <name>input_buffer_samps</name>
        <initializer>(<ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref> * 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c" line="29" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="multiread_8c_1a531d38f97da42f5b5694a78d87266e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void multiread_fetch</definition>
        <argsstring>(snd_susp_type a_susp, snd_list_type snd_list)</argsstring>
        <name>multiread_fetch</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c" line="47" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c" bodystart="47" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="multiread_8c_1a40aaec90cff37c5e0ee19ea2ea2858a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void multiread_free</definition>
        <argsstring>(snd_susp_type a_susp)</argsstring>
        <name>multiread_free</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c" line="254" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c" bodystart="254" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="multiread_8c_1ac16117c57e61662bb30033c5e2b94d64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL multiread_create</definition>
        <argsstring>(read_susp_type susp)</argsstring>
        <name>multiread_create</name>
        <param>
          <type><ref refid="sndread_8h_1a0a8629c0c64d285fcb81aa43348edc2a" kindref="member">read_susp_type</ref></type>
          <declname>susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c" line="276" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c" bodystart="276" bodyend="298"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>multiread.c<sp/>--<sp/>read<sp/>multichannel<sp/>sound<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CHANGE<sp/>LOG</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>28Apr03<sp/><sp/>dm<sp/><sp/>changes<sp/>for<sp/>portability<sp/>and<sp/>fix<sp/>compiler<sp/>warnings</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sys/file.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>mips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sndfmt_8h" kindref="compound">sndfmt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sound_8h" kindref="compound">sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="falloc_8h" kindref="compound">falloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sndfile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sndread_8h" kindref="compound">sndread.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="multiread_8h" kindref="compound">multiread.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>allocate<sp/>input<sp/>buffer<sp/>space<sp/>for<sp/>this<sp/>many<sp/>bytes/frame,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>e.g.<sp/>8<sp/>allows<sp/>2<sp/>channels</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>If<sp/>frames<sp/>are<sp/>bigger,<sp/>then<sp/>multiple<sp/>reads<sp/>will<sp/>be<sp/>issued.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="multiread_8c_1a5baa88fb571f6a804072f14c419c4c21" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>max_bytes_per_frame<sp/>(sizeof(float)<sp/>*<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="multiread_8c_1a3a790c289ad8cc8797663404a478ffcd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>input_buffer_max<sp/>(max_sample_block_len<sp/>*<sp/>max_bytes_per_frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="multiread_8c_1ae7b8184a806d41a1d2baa0c4e973badb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>input_buffer_samps<sp/>(max_sample_block_len<sp/>*<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>multiread_fetch<sp/>-<sp/>read<sp/>samples<sp/>into<sp/>multiple<sp/>channels.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>The<sp/>susp<sp/>is<sp/>shared<sp/>by<sp/>all<sp/>channels.<sp/><sp/>The<sp/>susp<sp/>has<sp/>backpointers</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>to<sp/>the<sp/>tail-most<sp/>snd_list<sp/>node<sp/>of<sp/>each<sp/>channels,<sp/>and<sp/>it<sp/>is<sp/>by</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>extending<sp/>the<sp/>list<sp/>at<sp/>these<sp/>nodes<sp/>that<sp/>sounds<sp/>are<sp/>read<sp/>in.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>To<sp/>avoid<sp/>a<sp/>circularity,<sp/>the<sp/>reference<sp/>counts<sp/>on<sp/>snd_list<sp/>nodes</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>do<sp/>not<sp/>include<sp/>the<sp/>backpointers<sp/>from<sp/>this<sp/>susp.<sp/><sp/>When<sp/>a<sp/>snd_list</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>node<sp/>refcount<sp/>goes<sp/>to<sp/>zero,<sp/>the<sp/>multiread<sp/>susp&apos;s<sp/>free<sp/>routine</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>is<sp/>called.<sp/><sp/>This<sp/>must<sp/>scan<sp/>the<sp/>backpointers<sp/>to<sp/>find<sp/>the<sp/>node<sp/>that</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>has<sp/>a<sp/>zero<sp/>refcount<sp/>(the<sp/>free<sp/>routine<sp/>is<sp/>called<sp/>before<sp/>the<sp/>node</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>is<sp/>deallocated,<sp/>so<sp/>this<sp/>is<sp/>safe).<sp/><sp/>The<sp/>backpointer<sp/>is<sp/>then<sp/>set</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>to<sp/>NULL.<sp/><sp/>When<sp/>all<sp/>backpointers<sp/>are<sp/>NULL,<sp/>the<sp/>susp<sp/>itself<sp/>is</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>deallocated,<sp/>because<sp/>it<sp/>can<sp/>only<sp/>be<sp/>referenced<sp/>through<sp/>the</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>snd_list<sp/>nodes<sp/>to<sp/>which<sp/>there<sp/>are<sp/>backpointers.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="multiread_8h_1a531d38f97da42f5b5694a78d87266e75" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="multiread_8c_1a531d38f97da42f5b5694a78d87266e75" kindref="member">multiread_fetch</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structread__susp__struct" kindref="compound">read_susp_type</ref><sp/>susp<sp/>=<sp/>(<ref refid="sndread_8h_1a0a8629c0c64d285fcb81aa43348edc2a" kindref="member">read_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frames_read<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>total<sp/>frames<sp/>read<sp/>in<sp/>this<sp/>call<sp/>to<sp/>fetch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char<sp/>input_buffer[input_buffer_max];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="winstuff_8c_1a60b74a5db85ed596a1233a6620a9bebc" kindref="member">input_buffer</ref>[<ref refid="multiread_8c_1ae7b8184a806d41a1d2baa0c4e973badb" kindref="member">input_buffer_samps</ref>];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file_frame_size;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>when<sp/>we<sp/>are<sp/>called,<sp/>the<sp/>caller<sp/>(SND_get_first)<sp/>will<sp/>insert<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>snd_list<sp/>node.<sp/><sp/>We<sp/>need<sp/>to<sp/>do<sp/>this<sp/>here<sp/>for<sp/>all<sp/>other<sp/>channels.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>susp-&gt;<ref refid="structread__susp__struct_1a4b43e49319e316b165cc2d1badfbc367" kindref="member">sf_info</ref>.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nyquist_printf(&quot;multiread_fetch:<sp/>chan[%d]<sp/>=<sp/>&quot;,<sp/>j);</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_snd_list_type(susp-&gt;chan[j]);</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdputstr(&quot;\n&quot;);</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j])<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>non-existent<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nyquist_printf(&quot;multiread_fetch:<sp/>ignore<sp/>channel<sp/>%d\n&quot;,<sp/>j);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aed8e636a68eb95ea3c7dc90189e78b43" kindref="member">falloc_sample_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;multiread_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>nyquist_printf(&quot;multiread:<sp/>allocated<sp/>block<sp/>%x\n&quot;,<sp/>out);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Since<sp/>susp-&gt;chan[i]<sp/>exists,<sp/>we<sp/>want<sp/>to<sp/>append<sp/>a<sp/>block<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>block,<sp/>out,<sp/>has<sp/>been<sp/>allocated.<sp/><sp/>Before<sp/>we<sp/>insert<sp/>the<sp/>block,</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>must<sp/>figure<sp/>out<sp/>whether<sp/>to<sp/>insert<sp/>a<sp/>new<sp/>snd_list_type<sp/>node<sp/>for</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>block.<sp/><sp/>Recall<sp/>that<sp/>before<sp/>SND_get_next<sp/>is<sp/>called,<sp/>the<sp/>last</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>snd_list_type<sp/>in<sp/>the<sp/>list<sp/>will<sp/>have<sp/>a<sp/>null<sp/>block<sp/>pointer,<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>snd_list_type&apos;s<sp/>susp<sp/>field<sp/>points<sp/>to<sp/>the<sp/>suspension<sp/>(in<sp/>this<sp/>case,</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>susp).<sp/><sp/>When<sp/>SND_get_next<sp/>(in<sp/>sound.c)<sp/>is<sp/>called,<sp/>it<sp/>appends<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>snd_list_type<sp/>and<sp/>points<sp/>the<sp/>previous<sp/>one<sp/>to<sp/>internal_zero_block<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>before<sp/>calling<sp/>this<sp/>fetch<sp/>routine.<sp/><sp/>On<sp/>the<sp/>other<sp/>hand,<sp/>since<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>SND_get_next<sp/>is<sp/>only<sp/>going<sp/>to<sp/>be<sp/>called<sp/>on<sp/>one<sp/>of<sp/>the<sp/>channels,<sp/>the</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>other<sp/>channels<sp/>will<sp/>not<sp/>have<sp/>had<sp/>a<sp/>snd_list_type<sp/>appended.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>SND_get_next<sp/>does<sp/>not<sp/>tell<sp/>us<sp/>directly<sp/>which<sp/>channel<sp/>it<sp/>wants<sp/>(it</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>doesn&apos;t<sp/>know),<sp/>but<sp/>we<sp/>can<sp/>test<sp/>by<sp/>looking<sp/>for<sp/>a<sp/>non-null<sp/>block<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>snd_list_type<sp/>pointed<sp/>to<sp/>by<sp/>our<sp/>back-pointers<sp/>in<sp/>susp-&gt;chan[].<sp/><sp/>If</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>block<sp/>is<sp/>null,<sp/>the<sp/>channel<sp/>was<sp/>untouched<sp/>by<sp/>SND_get_next,<sp/>and</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>should<sp/>append<sp/>a<sp/>snd_list_type.<sp/><sp/>If<sp/>it<sp/>is<sp/>non-null,<sp/>then<sp/>it</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>points<sp/>to<sp/>internal_zero_block<sp/>(the<sp/>block<sp/>inserted<sp/>by<sp/>SND_get_next)</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>a<sp/>new<sp/>snd_list_type<sp/>has<sp/>already<sp/>been<sp/>appended.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Before<sp/>proceeding,<sp/>it<sp/>may<sp/>be<sp/>that<sp/>garbage<sp/>collection<sp/>ran<sp/>when<sp/>we</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>allocated<sp/>out,<sp/>so<sp/>check<sp/>again<sp/>to<sp/>see<sp/>if<sp/>susp-&gt;chan[j]<sp/>is<sp/>Null:</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j])<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a4d9aacbd9b154378f51f57e3459a04b1" kindref="member">ffree_sample_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;multiread_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j]-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list<sp/>=<sp/><ref refid="sound_8c_1a58f82dfd9acaae997e982fd56e81e11d" kindref="member">snd_list_create</ref>((<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)<sp/>susp);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>we<sp/>have<sp/>a<sp/>snd_list<sp/>to<sp/>append<sp/>to<sp/>the<sp/>channel,<sp/>but<sp/>a<sp/>very</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>interesting<sp/>thing<sp/>can<sp/>happen<sp/>here.<sp/><sp/>snd_list_create,<sp/>which</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>just<sp/>called,<sp/>MAY<sp/>have<sp/>invoked<sp/>the<sp/>garbage<sp/>collector,<sp/>and</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>GC<sp/>MAY<sp/>have<sp/>freed<sp/>all<sp/>references<sp/>to<sp/>this<sp/>channel,<sp/>in<sp/>which</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>case<sp/>multread_free(susp)<sp/>will<sp/>have<sp/>been<sp/>called,<sp/>and<sp/>susp-&gt;chan[j]</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>will<sp/>now<sp/>be<sp/>NULL!</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;chan[j])<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;susp<sp/>%p<sp/>Channel<sp/>%d<sp/>disappeared!\n&quot;</highlight><highlight class="normal">,<sp/>susp,<sp/>j);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a794da1cd6568e8738bc0d988adf38b6e" kindref="member">ffree_snd_list</ref>(snd_list,<sp/></highlight><highlight class="stringliteral">&quot;multiread_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;chan[j]-&gt;u.next<sp/>=<sp/>snd_list;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>see<sp/>the<sp/>note<sp/>above:<sp/>we<sp/>don&apos;t<sp/>know<sp/>if<sp/>susp-&gt;chan<sp/>still<sp/>exists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>We<sp/>DO<sp/>know<sp/>that<sp/>susp<sp/>still<sp/>exists<sp/>because<sp/>even<sp/>if<sp/>we<sp/>lost</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>some<sp/>channels<sp/>in<sp/>a<sp/>GC,<sp/>someone<sp/>is<sp/>still<sp/>calling<sp/>SND_get_next<sp/>on</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>some<sp/>channel.<sp/><sp/>I<sp/>suppose<sp/>that<sp/>there<sp/>might<sp/>be<sp/>some<sp/>very<sp/>pathological</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>code<sp/>that<sp/>could<sp/>free<sp/>a<sp/>global<sp/>reference<sp/>to<sp/>a<sp/>sound<sp/>that<sp/>is<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>midst<sp/>of<sp/>being<sp/>computed,<sp/>perhaps<sp/>by<sp/>doing<sp/>something<sp/>bizarre<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>closure<sp/>that<sp/>snd_seq<sp/>activates<sp/>at<sp/>the<sp/>logical<sp/>stop<sp/>time<sp/>of<sp/>its<sp/>first</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sound,<sp/>but<sp/>I<sp/>haven&apos;t<sp/>thought<sp/>that<sp/>one<sp/>through.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j])<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j]-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>some<sp/>assertions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j]-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref><sp/>!=<sp/>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)<sp/>susp)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;didn&apos;t<sp/>find<sp/>susp<sp/>at<sp/>end<sp/>of<sp/>list<sp/>for<sp/>chan<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>j);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>allocated<sp/>out,<sp/>but<sp/>don&apos;t<sp/>need<sp/>it<sp/>anymore<sp/>due<sp/>to<sp/>GC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a4d9aacbd9b154378f51f57e3459a04b1" kindref="member">ffree_sample_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;multiread_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>file_frame_size<sp/>=<sp/>susp-&gt;<ref refid="structread__susp__struct_1a4b43e49319e316b165cc2d1badfbc367" kindref="member">sf_info</ref>.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>fill<sp/>sample<sp/>blocks<sp/>with<sp/>frames<sp/>from<sp/>the<sp/>file<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>until<sp/>eof<sp/>or<sp/>end<sp/>of<sp/>blocks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>how<sp/>many<sp/>frames<sp/>to<sp/>read<sp/>to<sp/>fill<sp/>sample<sp/>blocks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frame_count<sp/>=<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref><sp/>-<sp/>frames_read;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>actual;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>frames<sp/>actually<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>frames<sp/>will<sp/>fit<sp/>in<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame_count<sp/>*<sp/>file_frame_size<sp/>&gt;<sp/><ref refid="multiread_8c_1ae7b8184a806d41a1d2baa0c4e973badb" kindref="member">input_buffer_samps</ref>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_count<sp/>=<sp/><ref refid="multiread_8c_1ae7b8184a806d41a1d2baa0c4e973badb" kindref="member">input_buffer_samps</ref><sp/>/<sp/>file_frame_size;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual<sp/>=<sp/><ref refid="sndfile_8c_1aee45e707761d55cc2111328451ffc760" kindref="member">sf_readf_float</ref>(susp-&gt;<ref refid="structread__susp__struct_1a5462b07a95b5b8ba5a8cc23d017daf48" kindref="member">sndfile</ref>,<sp/>input_buffer,<sp/>frame_count);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>actual;<sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>read<sp/>too<sp/>many<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>(susp-&gt;<ref refid="structread__susp__struct_1ad2d502eafdfec2f25b8bda4e3cd383c9" kindref="member">cnt</ref><sp/>-<sp/>susp-&gt;<ref refid="structread__susp__struct_1aa93f8c26d4f72c3b69fc682e65948b55" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref>))<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>susp-&gt;<ref refid="structread__susp__struct_1ad2d502eafdfec2f25b8bda4e3cd383c9" kindref="member">cnt</ref><sp/>-<sp/>susp-&gt;<ref refid="structread__susp__struct_1aa93f8c26d4f72c3b69fc682e65948b55" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>process<sp/>one<sp/>channel<sp/>at<sp/>a<sp/>time,<sp/>multiple<sp/>passes<sp/>through<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>susp-&gt;<ref refid="structread__susp__struct_1a4b43e49319e316b165cc2d1badfbc367" kindref="member">sf_info</ref>.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>offset<sp/>by<sp/>channel<sp/>number:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*float_ptr<sp/>=<sp/>input_buffer<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>nonexistent<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j])<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>pointer<sp/>to<sp/>sample<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr<sp/>=<sp/>susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j]-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref><sp/>+<sp/>frames_read;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ptr++<sp/>=<sp/>*float_ptr;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float_ptr<sp/>+=<sp/>susp-&gt;<ref refid="structread__susp__struct_1a4b43e49319e316b165cc2d1badfbc367" kindref="member">sf_info</ref>.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j]-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/>frames_read<sp/>+<sp/>n;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>jlh<sp/>BECAUSE,<sp/>at<sp/>this<sp/>point,<sp/>all<sp/>the<sp/>code<sp/>cares<sp/>about<sp/>is</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>n<sp/>frames<sp/>have<sp/>been<sp/>read<sp/>and<sp/>the<sp/>samples<sp/>put<sp/>into<sp/>their</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appropriate<sp/>snd_node<sp/>buffers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frames_read<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structread__susp__struct_1aa93f8c26d4f72c3b69fc682e65948b55" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frames_read<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>this<sp/>code<sp/>should<sp/>probably<sp/>be<sp/>removed<sp/>--<sp/>how<sp/>could<sp/>we</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ever<sp/>get<sp/>here?<sp/>Since<sp/>file<sp/>formats<sp/>know<sp/>the<sp/>sample<sp/>count,<sp/>we&apos;ll</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>always<sp/>read<sp/>frames.<sp/>When<sp/>we<sp/>hit<sp/>the<sp/>end-of-file,<sp/>the<sp/>else</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clause<sp/>below<sp/>will<sp/>run<sp/>and<sp/>terminate<sp/>the<sp/>sound,<sp/>so<sp/>we&apos;ll<sp/>never</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try<sp/>and<sp/>read<sp/>samples<sp/>that<sp/>are<sp/>not<sp/>there.<sp/>The<sp/>only<sp/>exception<sp/>is</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>empty<sp/>sound<sp/>file<sp/>with<sp/>no<sp/>samples,<sp/>in<sp/>which<sp/>case<sp/>we<sp/>could<sp/>omit</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>if<sp/>test<sp/>and<sp/>execute<sp/>the<sp/>else<sp/>part<sp/>below.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"></highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>code<sp/>*might*<sp/>be<sp/>good<sp/>for<sp/>formats<sp/>that<sp/>do<sp/>not<sp/>encode<sp/>a</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample<sp/>count<sp/>and<sp/>where<sp/>reading<sp/>the<sp/>end<sp/>of<sp/>file<sp/>is<sp/>the<sp/>only<sp/>way</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>detect<sp/>the<sp/>end<sp/>of<sp/>the<sp/>data.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"></highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Since<sp/>it<sp/>seeems<sp/>to<sp/>work,<sp/>I&apos;m<sp/>going<sp/>to<sp/>leave<sp/>this<sp/>in<sp/>place.</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>One<sp/>tricky<sp/>point<sp/>of<sp/>the<sp/>algorithm:<sp/>when<sp/>we<sp/>get<sp/>here,<sp/>we<sp/>set<sp/>up</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;chan[j]<sp/>to<sp/>point<sp/>to<sp/>the<sp/>right<sp/>place<sp/>and<sp/>then<sp/>call</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list_terminate().<sp/>This<sp/>deletes<sp/>the<sp/>snd_list<sp/>that<sp/>chan[j]</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>pointing<sp/>to,<sp/>but<sp/>not<sp/>before<sp/>calling<sp/>multiread_free(),<sp/>which</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upon<sp/>detecting<sp/>that<sp/>the<sp/>sound<sp/>is<sp/>being<sp/>freed,<sp/>sets<sp/>chan[j]<sp/>to</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL.<sp/>This<sp/>works<sp/>sequentially<sp/>on<sp/>each<sp/>channel<sp/>and<sp/>than<sp/>last</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time,<sp/>this<sp/>susp<sp/>is<sp/>freed<sp/>because<sp/>no<sp/>channels<sp/>are<sp/>active.</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>didn&apos;t<sp/>read<sp/>anything,<sp/>but<sp/>can&apos;t<sp/>return<sp/>length<sp/>zero,<sp/>so</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>convert<sp/>snd_list&apos;s<sp/>to<sp/>pointer<sp/>to<sp/>zero<sp/>block.<sp/><sp/>This<sp/>loop</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>will<sp/>free<sp/>the<sp/>susp<sp/>via<sp/>snd_list_unref().</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>susp-&gt;<ref refid="structread__susp__struct_1a4b43e49319e316b165cc2d1badfbc367" kindref="member">sf_info</ref>.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j])<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>the_snd_list<sp/>=<sp/>susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>done<sp/>so<sp/>that<sp/>multiread_free<sp/>works<sp/>right:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j]<sp/>=<sp/>susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j]-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;end<sp/>of<sp/>file,<sp/>terminating<sp/>channel<sp/>%d\n&quot;,<sp/>j);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>fixes<sp/>up<sp/>the<sp/>tail<sp/>of<sp/>channel<sp/>j<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a64f075d27a7672293c0c8d657aa51647" kindref="member">snd_list_terminate</ref>(the_snd_list);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structread__susp__struct_1ad2d502eafdfec2f25b8bda4e3cd383c9" kindref="member">cnt</ref><sp/>==<sp/>susp-&gt;<ref refid="structread__susp__struct_1aa93f8c26d4f72c3b69fc682e65948b55" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>||<sp/>actual<sp/>&lt;<sp/>frame_count)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;ve<sp/>read<sp/>the<sp/>requested<sp/>number<sp/>of<sp/>frames<sp/>or<sp/>we</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>reached<sp/>end<sp/>of<sp/>file</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>last<sp/>iteration<sp/>will<sp/>close<sp/>file<sp/>and<sp/>free<sp/>susp:</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>susp-&gt;<ref refid="structread__susp__struct_1a4b43e49319e316b165cc2d1badfbc367" kindref="member">sf_info</ref>.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>the_snd_list<sp/>=<sp/>susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;reached<sp/>susp-&gt;cnt,<sp/>terminating<sp/>chan<sp/>%d\n&quot;,<sp/>j);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(the_snd_list)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>assert:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(the_snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref><sp/>!=<sp/>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)<sp/>susp)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;assertion<sp/>violation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>done<sp/>so<sp/>that<sp/>multiread_free<sp/>works<sp/>right:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;chan[j]<sp/>=<sp/>the_snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aad7d8d5bb2bb14c5ba0c435f4ea20ebb" kindref="member">snd_list_unref</ref>(the_snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>terminate<sp/>by<sp/>pointing<sp/>to<sp/>zero<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the_snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref><sp/>=<sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1aa08a9bd03e22919769a8f33094756c97" kindref="member">zero_snd_list</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frames_read<sp/>&gt;=<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>to<sp/>next<sp/>list<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>susp-&gt;<ref refid="structread__susp__struct_1a4b43e49319e316b165cc2d1badfbc367" kindref="member">sf_info</ref>.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j])<sp/>susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j]<sp/>=<sp/>susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j]-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>multiread__fetch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="multiread_8h_1a40aaec90cff37c5e0ee19ea2ea2858a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="multiread_8c_1a40aaec90cff37c5e0ee19ea2ea2858a9" kindref="member">multiread_free</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structread__susp__struct" kindref="compound">read_susp_type</ref><sp/>susp<sp/>=<sp/>(<ref refid="sndread_8h_1a0a8629c0c64d285fcb81aa43348edc2a" kindref="member">read_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a3acee43f445ecc4630f3ed3419730515" kindref="member">active</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>stdputstr(&quot;multiread_free:<sp/>&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>susp-&gt;<ref refid="structread__susp__struct_1a4b43e49319e316b165cc2d1badfbc367" kindref="member">sf_info</ref>.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j])<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j]-&gt;<ref refid="structsnd__list__struct_1a27044dc0ac840d508156da70b7b8eec5" kindref="member">refcnt</ref>)<sp/>active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structread__susp__struct_1ab9f474a086054c5202af805c2bb92a67" kindref="member">chan</ref>[j]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;deactivating<sp/>channel<sp/>%d\n&quot;,<sp/>j);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!active)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stdputstr(&quot;all<sp/>channels<sp/>freed,<sp/>freeing<sp/>susp<sp/>now\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndread_8c_1a04a7b4551dfc448703d6bc49d570f8fa" kindref="member">read_free</ref>(susp);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="multiread_8h_1ac16117c57e61662bb30033c5e2b94d64" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="multiread_8c_1ac16117c57e61662bb30033c5e2b94d64" kindref="member">multiread_create</ref>(susp)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="structread__susp__struct" kindref="compound">read_susp_type</ref><sp/>susp;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>result;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(result);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="xldmem_8c_1aff7eb5a000567061935089b85eaa3c1a" kindref="member">newvector</ref>(susp-&gt;sf_info.channels);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>array<sp/>for<sp/>sounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1ac70e25680d1a7e6897d599b4c04cd26b" kindref="member">falloc_generic_n</ref>(susp-&gt;chan,<sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref>,<sp/>susp-&gt;sf_info.channels,<sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;multiread_create&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>sounds<sp/>to<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>susp-&gt;sf_info.channels;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>snd<sp/>=<sp/><ref refid="sound_8c_1a11255fe781080fb7915f6ab9a5afc4ae" kindref="member">sound_create</ref>((<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)susp,<sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;susp.<ref refid="structsnd__susp__struct_1a5e783b62d30b458070fb80dc0e112594" kindref="member">t0</ref>,<sp/>susp-&gt;susp.<ref refid="structsnd__susp__struct_1a89e4d9a7c1f50a9a0b4bca5ec1c253be" kindref="member">sr</ref>,<sp/>1.0);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>snd_lval<sp/>=<sp/><ref refid="sound_8c_1a6ff362fbe32a9dfef6c14f1adc52f3b7" kindref="member">cvsound</ref>(snd);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>nyquist_printf(&quot;multiread_create:<sp/>sound<sp/>%d<sp/>is<sp/>%x,<sp/>LVAL<sp/>%x\n&quot;,<sp/>j,<sp/>snd,<sp/>snd_lval);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a14c2a197abaade2dfe3bd8ec204530ef" kindref="member">setelement</ref>(result,<sp/>j,<sp/>snd_lval);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;chan[j]<sp/>=<sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c"/>
  </compounddef>
</doxygen>
