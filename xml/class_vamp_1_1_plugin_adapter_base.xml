<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_vamp_1_1_plugin_adapter_base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Vamp::PluginAdapterBase</compoundname>
    <derivedcompoundref refid="class_vamp_1_1_plugin_adapter" prot="public" virt="non-virtual">Vamp::PluginAdapter&lt; P &gt;</derivedcompoundref>
    <includes refid="_plugin_adapter_8h" local="no">vamp-sdk/PluginAdapter.h</includes>
    <innerclass refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" prot="public">Vamp::PluginAdapterBase::Impl</innerclass>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_vamp_1_1_plugin_adapter_base_1a0e3594c54884efd5a7ef38030645745b" prot="protected" static="no" mutable="no">
        <type><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref> *</type>
        <definition>Impl* Vamp::PluginAdapterBase::m_impl</definition>
        <argsstring></argsstring>
        <name>m_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginAdapter.h" line="82" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginAdapter.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_vamp_1_1_plugin_adapter_base_1ae39492abdca4b588a582962fdeab819d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Vamp::PluginAdapterBase::~PluginAdapterBase</definition>
        <argsstring>()</argsstring>
        <name>~PluginAdapterBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginAdapter.h" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-sdk/PluginAdapter.cpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_adapter_base_1a7ff5c9374a8dc43f977c3707d1da45b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="vamp_8h_1aa1d6e0792099b9516a89b5fb7ed2ad2b" kindref="member">VampPluginDescriptor</ref> *</type>
        <definition>const VampPluginDescriptor * Vamp::PluginAdapterBase::getDescriptor</definition>
        <argsstring>()</argsstring>
        <name>getDescriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a VampPluginDescriptor describing the plugin that is wrapped by this adapter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginAdapter.h" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-sdk/PluginAdapter.cpp" bodystart="147" bodyend="150"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_vamp_1_1_plugin_adapter_base_1a5dad6a9b4b170c0f284962e125ac988e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vamp::PluginAdapterBase::PluginAdapterBase</definition>
        <argsstring>()</argsstring>
        <name>PluginAdapterBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginAdapter.h" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-sdk/PluginAdapter.cpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_vamp_1_1_plugin_adapter_base_1a9116adb9b7a426f4f0ded15e45a5531b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref> *</type>
        <definition>virtual Plugin* Vamp::PluginAdapterBase::createPlugin</definition>
        <argsstring>(float inputSampleRate)=0</argsstring>
        <name>createPlugin</name>
        <reimplementedby refid="class_vamp_1_1_plugin_adapter_1a3f387e7e37409e00d32477903b5b13d3">createPlugin</reimplementedby>
        <param>
          <type>float</type>
          <declname>inputSampleRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginAdapter.h" line="79" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_vamp_1_1_plugin_adapter" kindref="compound">PluginAdapter</ref> and <ref refid="class_vamp_1_1_plugin_adapter_base" kindref="compound">PluginAdapterBase</ref> provide a wrapper class that a plugin library can use to make its C++ <ref refid="class_vamp_1_1_plugin" kindref="compound">Vamp::Plugin</ref> objects available through the <ref refid="namespace_vamp" kindref="compound">Vamp</ref> C API.</para><para>Almost all <ref refid="namespace_vamp" kindref="compound">Vamp</ref> plugin libraries will want to make use of this. To do so, all they need to do is declare a PluginAdapter&lt;T&gt; for each plugin class T in their library. It&apos;s very simple, and you need to know absolutely nothing about how it works in order to use it. Just cut and paste from an existing plugin&apos;s discovery function. <simplesect kind="see"><para><ref refid="vamp_8h_1a50cf6f17d0718f02093be6c7f63fcf30" kindref="member">vampGetPluginDescriptor</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="8868">
        <label>Vamp::PluginAdapter&lt; P &gt;</label>
        <link refid="class_vamp_1_1_plugin_adapter"/>
        <childnode refid="8867" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8867">
        <label>Vamp::PluginAdapterBase</label>
        <link refid="class_vamp_1_1_plugin_adapter_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8872">
        <label>_VampFeatureList</label>
        <link refid="struct___vamp_feature_list"/>
        <childnode refid="8873" relation="usage">
          <edgelabel>features</edgelabel>
        </childnode>
      </node>
      <node id="8873">
        <label>_VampFeatureUnion</label>
        <link refid="union___vamp_feature_union"/>
        <childnode refid="8874" relation="usage">
          <edgelabel>v2</edgelabel>
        </childnode>
        <childnode refid="8875" relation="usage">
          <edgelabel>v1</edgelabel>
        </childnode>
      </node>
      <node id="8876">
        <label>_VampOutputDescriptor</label>
        <link refid="struct___vamp_output_descriptor"/>
      </node>
      <node id="8875">
        <label>_VampFeature</label>
        <link refid="struct___vamp_feature"/>
      </node>
      <node id="8877">
        <label>_VampParameterDescriptor</label>
        <link refid="struct___vamp_parameter_descriptor"/>
      </node>
      <node id="8874">
        <label>_VampFeatureV2</label>
        <link refid="struct___vamp_feature_v2"/>
      </node>
      <node id="8871">
        <label>_VampPluginDescriptor</label>
        <link refid="struct___vamp_plugin_descriptor"/>
        <childnode refid="8872" relation="usage">
          <edgelabel>getRemainingFeatures</edgelabel>
          <edgelabel>process</edgelabel>
        </childnode>
        <childnode refid="8876" relation="usage">
          <edgelabel>getOutputDescriptor</edgelabel>
        </childnode>
        <childnode refid="8877" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
      </node>
      <node id="8870">
        <label>Vamp::PluginAdapterBase::Impl</label>
        <link refid="class_vamp_1_1_plugin_adapter_base_1_1_impl"/>
        <childnode refid="8871" relation="usage">
          <edgelabel>m_descriptor</edgelabel>
        </childnode>
        <childnode refid="8869" relation="usage">
          <edgelabel>m_base</edgelabel>
        </childnode>
      </node>
      <node id="8869">
        <label>Vamp::PluginAdapterBase</label>
        <link refid="class_vamp_1_1_plugin_adapter_base"/>
        <childnode refid="8870" relation="usage">
          <edgelabel>m_impl</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginAdapter.h" line="66" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/vamp-sdk/PluginAdapter.h" bodystart="65" bodyend="83"/>
    <listofallmembers>
      <member refid="class_vamp_1_1_plugin_adapter_base_1a9116adb9b7a426f4f0ded15e45a5531b" prot="protected" virt="pure-virtual"><scope>Vamp::PluginAdapterBase</scope><name>createPlugin</name></member>
      <member refid="class_vamp_1_1_plugin_adapter_base_1a7ff5c9374a8dc43f977c3707d1da45b5" prot="public" virt="non-virtual"><scope>Vamp::PluginAdapterBase</scope><name>getDescriptor</name></member>
      <member refid="class_vamp_1_1_plugin_adapter_base_1a0e3594c54884efd5a7ef38030645745b" prot="protected" virt="non-virtual"><scope>Vamp::PluginAdapterBase</scope><name>m_impl</name></member>
      <member refid="class_vamp_1_1_plugin_adapter_base_1a5dad6a9b4b170c0f284962e125ac988e" prot="protected" virt="non-virtual"><scope>Vamp::PluginAdapterBase</scope><name>PluginAdapterBase</name></member>
      <member refid="class_vamp_1_1_plugin_adapter_base_1ae39492abdca4b588a582962fdeab819d" prot="public" virt="virtual"><scope>Vamp::PluginAdapterBase</scope><name>~PluginAdapterBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
