<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pvshell_8h" kind="file" language="C++">
    <compoundname>pvshell.h</compoundname>
    <includedby refid="phasevocoder_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/phasevocoder.c</includedby>
    <includedby refid="pvshell_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.c</includedby>
    <includedby refid="sndfnint_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sndfnint.c</includedby>
    <invincdepgraph>
      <node id="12810">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.c</label>
        <link refid="pvshell_8c"/>
      </node>
      <node id="12808">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h</label>
        <link refid="pvshell.h"/>
        <childnode refid="12809" relation="include">
        </childnode>
        <childnode refid="12810" relation="include">
        </childnode>
        <childnode refid="12811" relation="include">
        </childnode>
      </node>
      <node id="12809">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/phasevocoder.c</label>
        <link refid="phasevocoder_8c"/>
      </node>
      <node id="12811">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sndfnint.c</label>
        <link refid="sndfnint_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structpvshell__struct" prot="public">pvshell_struct</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pvshell_8h_1a86a0a2d0a2ffe84fdbd39d7090e08096" prot="public" static="no">
        <name>PVSHELL_STATE_MAX</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" line="4" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pvshell_8h_1adf84824a2aa6347c069b281fde277e98" prot="public" static="no">
        <name>PVSHELL_FLAG_TERMINATE</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" line="7" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pvshell_8h_1a2d6f89176cc99619e67ad4da1e0e808e" prot="public" static="no">
        <name>PVSHELL_FLAG_LOGICAL_STOP</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" line="8" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pvshell_8h_1a6e39fda86379fcb1b843cc33322b0125" prot="public" static="no">
        <name>PVSHELL_TEST_F</name>
        <param><defname>susp</defname></param>
        <initializer>((susp)-&gt;f_cnt == 0 ? <ref refid="pvshell_8h_1aa6507d2faec068b17d835e4b9d6628ea" kindref="member">pvshell_test_f</ref>(susp) : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" line="72" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pvshell_8h_1a10535d9ee94461d7ad4008d761d403f4" prot="public" static="no">
        <name>PVSHELL_FETCH_F</name>
        <param><defname>susp</defname></param>
        <initializer>((susp)-&gt;f_cnt--, (*(susp)-&gt;f_ptr++))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" line="73" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pvshell_8h_1aef2156e6a929c9bc9e5c99c86f5c2b99" prot="public" static="no">
        <name>PVSHELL_TEST_G</name>
        <param><defname>susp</defname></param>
        <initializer>((susp)-&gt;g_cnt == 0 ? <ref refid="pvshell_8h_1a9cb2ff5f507ade3a45c2c3af9c44ef4b" kindref="member">pvshell_test_g</ref>(susp) : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" line="75" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pvshell_8h_1a358fbb29bea1d40ef5a647471d665b5f" prot="public" static="no">
        <name>PVSHELL_FETCH_G</name>
        <param><defname>susp</defname></param>
        <initializer>((susp)-&gt;g_cnt--, (*(susp)-&gt;<ref refid="twolame_2libtwolame_2common_8h_1a9df74e827c067b555fc5b8cf7c203a32" kindref="member">g_ptr</ref>++))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" line="76" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pvshell_8h_1a848f4f236adfdce731002b4ec48a883f" prot="public" static="no">
        <type>long(*</type>
        <definition>typedef long(* h_fn_type) (struct pvshell_struct *susp, sample_block_values_type out, long *n)</definition>
        <argsstring>)(struct pvshell_struct *susp, sample_block_values_type out, long *n)</argsstring>
        <name>h_fn_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" line="29" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pvshell_8h_1aa82c0d37f9bf23d98d3295259d5294b4" prot="public" static="no">
        <type>struct <ref refid="structpvshell__struct" kindref="compound">pvshell_struct</ref></type>
        <definition>typedef struct pvshell_struct  pvshell_node</definition>
        <argsstring></argsstring>
        <name>pvshell_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pvshell_8h_1a2abbe679bcf7d1af7475c74dc44c9d35" prot="public" static="no">
        <type>struct <ref refid="structpvshell__struct" kindref="compound">pvshell_struct</ref> *</type>
        <definition>typedef struct pvshell_struct * pvshell_type</definition>
        <argsstring></argsstring>
        <name>pvshell_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" line="48" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pvshell_8h_1aa6507d2faec068b17d835e4b9d6628ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long pvshell_test_f</definition>
        <argsstring>(pvshell_type susp)</argsstring>
        <name>pvshell_test_f</name>
        <param>
          <type><ref refid="pvshell_8h_1a2abbe679bcf7d1af7475c74dc44c9d35" kindref="member">pvshell_type</ref></type>
          <declname>susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.c" bodystart="48" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="pvshell_8h_1a9cb2ff5f507ade3a45c2c3af9c44ef4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long pvshell_test_g</definition>
        <argsstring>(pvshell_type susp)</argsstring>
        <name>pvshell_test_g</name>
        <param>
          <type><ref refid="pvshell_8h_1a2abbe679bcf7d1af7475c74dc44c9d35" kindref="member">pvshell_type</ref></type>
          <declname>susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.c" bodystart="66" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="pvshell_8h_1a4df96702e4184ba02abfa9d9cbdddd75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type snd_make_pvshell</definition>
        <argsstring>(char *name, rate_type sr, time_type t0, h_fn_type h, sound_type f, sound_type g, double *state, long n)</argsstring>
        <name>snd_make_pvshell</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="pvshell_8h_1a848f4f236adfdce731002b4ec48a883f" kindref="member">h_fn_type</ref></type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.c" bodystart="165" bodyend="206"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>pvshell.h<sp/>--<sp/>a<sp/>generic<sp/>Nyquist<sp/>primitive,<sp/>esp.<sp/>for<sp/>phase<sp/>vocoder<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>doubles<sp/>to<sp/>provide<sp/>for<sp/>miscellaneous<sp/>state<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="pvshell_8h_1a86a0a2d0a2ffe84fdbd39d7090e08096" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PVSHELL_STATE_MAX<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>define<sp/>some<sp/>bits<sp/>to<sp/>return<sp/>conditions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="pvshell_8h_1adf84824a2aa6347c069b281fde277e98" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PVSHELL_FLAG_TERMINATE<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="pvshell_8h_1a2d6f89176cc99619e67ad4da1e0e808e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PVSHELL_FLAG_LOGICAL_STOP<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>function<sp/>is<sp/>called<sp/>to<sp/>compute<sp/>samples.<sp/>It<sp/>should<sp/>compute<sp/>n</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>samples<sp/>(floats<sp/>==<sp/>sample_type)<sp/>and<sp/>store<sp/>them<sp/>at<sp/>out[i].<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>return<sp/>less<sp/>than<sp/>n<sp/>samples<sp/>by<sp/>writing<sp/>the<sp/>actual<sp/>number</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>of<sp/>samples<sp/>computed<sp/>into<sp/>*n.<sp/>Normally,<sp/>you<sp/>return<sp/>zero.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>To<sp/>indicate<sp/>that<sp/>the<sp/>time<sp/>of<sp/>the<sp/>FIRST<sp/>sample<sp/>is<sp/>the<sp/>logical<sp/>stop<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>time,<sp/>return<sp/>PVSHELL_FLAG_LOGICAL_STOP.<sp/>(If<sp/>the<sp/>logical<sp/>stop<sp/>time</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>is<sp/>not<sp/>at<sp/>the<sp/>first<sp/>sample,<sp/>but<sp/>instead<sp/>at<sp/>sample<sp/>j,<sp/>then<sp/>just</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>return<sp/>j<sp/>samples<sp/>(from<sp/>0<sp/>to<sp/>j-1),<sp/>save<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>samples,<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>and<sp/>the<sp/>next<sp/>time,<sp/>the<sp/>first<sp/>sample<sp/>will<sp/>correspond<sp/>to<sp/>the<sp/>logical</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>stop<sp/>time,<sp/>so<sp/>you<sp/>can<sp/>return<sp/>PVSHELL_FLAG_LOGICAL_STOP.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>To<sp/>indicate<sp/>that<sp/>the<sp/>sound<sp/>has<sp/>terminated,<sp/>return<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>PVSHELL_FLAG_TERMINATE.<sp/>This<sp/>should<sp/>be<sp/>the<sp/>only<sp/>time<sp/>you<sp/>return</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>zero<sp/>samples.<sp/>(As<sp/>with<sp/>logical<sp/>stop<sp/>time,<sp/>if<sp/>you<sp/>have<sp/>samples<sp/>to</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>return<sp/>before<sp/>termination,<sp/>then<sp/>do<sp/>it,<sp/>and<sp/>return<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>PVSHELL_FLAG_TERMINATE<sp/>the<sp/>next<sp/>time<sp/>you<sp/>are<sp/>called,<sp/>at<sp/>which</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>point<sp/>you&apos;ve<sp/>returned<sp/>all<sp/>the<sp/>samples,<sp/>so<sp/>you<sp/>can<sp/>set<sp/>*n<sp/>=<sp/>0.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpvshell__struct" kindref="compound">pvshell_struct</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="pvshell_8h_1a848f4f236adfdce731002b4ec48a883f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>long<sp/>(*<ref refid="pvshell_8h_1a848f4f236adfdce731002b4ec48a883f" kindref="member">h_fn_type</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpvshell__struct" kindref="compound">pvshell_struct</ref><sp/>*susp,<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*n);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structpvshell__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpvshell__struct" kindref="compound">pvshell_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="33" refid="structpvshell__struct_1a5af3be8603e108a163e017a1cf5a7d7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="structpvshell__struct_1a5af3be8603e108a163e017a1cf5a7d7f" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="34" refid="structpvshell__struct_1a07873e37cb14ce9e4d14cef2e2e78897" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structpvshell__struct_1a07873e37cb14ce9e4d14cef2e2e78897" kindref="member">f_cnt</ref>;</highlight></codeline>
<codeline lineno="35" refid="structpvshell__struct_1af12d5a7427471dd6b17c57a0531f038c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/><ref refid="structpvshell__struct_1af12d5a7427471dd6b17c57a0531f038c" kindref="member">f_ptr</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structpvshell__struct_1a9d9b8958ca305d3038b5ac9878e13707" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="structpvshell__struct_1a9d9b8958ca305d3038b5ac9878e13707" kindref="member">g</ref>;</highlight></codeline>
<codeline lineno="38" refid="structpvshell__struct_1a04a10cd96eb9d74618eee306689a7721" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structpvshell__struct_1a04a10cd96eb9d74618eee306689a7721" kindref="member">g_cnt</ref>;</highlight></codeline>
<codeline lineno="39" refid="structpvshell__struct_1a354dd94621d1cb0d45b20f59f9fe712b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/><ref refid="structpvshell__struct_1a354dd94621d1cb0d45b20f59f9fe712b" kindref="member">g_ptr</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structpvshell__struct_1ad3e2e526c433ea8cc6ba1e500ece9020" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structpvshell__struct_1ad3e2e526c433ea8cc6ba1e500ece9020" kindref="member">flags</ref>;<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>terminated<sp/>and<sp/>logically<sp/>stopped<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>state<sp/>is<sp/>extra<sp/>storage<sp/>for<sp/>whatever<sp/>you<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structpvshell__struct_1afc01b285127c630e7edd2772104baa3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structpvshell__struct_1afc01b285127c630e7edd2772104baa3e" kindref="member">state</ref>[<ref refid="pvshell_8h_1a86a0a2d0a2ffe84fdbd39d7090e08096" kindref="member">PVSHELL_STATE_MAX</ref>];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>h<sp/>is<sp/>a<sp/>function<sp/>that<sp/>computes<sp/>sound<sp/>from<sp/>f,<sp/>g,<sp/>x,<sp/>y,<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structpvshell__struct_1a7c4363e3b607eec2630a9ffd3dd276a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pvshell_8h_1a848f4f236adfdce731002b4ec48a883f" kindref="member">h_fn_type</ref><sp/><ref refid="structpvshell__struct_1a7c4363e3b607eec2630a9ffd3dd276a3" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}<sp/><ref refid="pvshell_8h_1aa82c0d37f9bf23d98d3295259d5294b4" kindref="member">pvshell_node</ref>,<sp/>*<ref refid="pvshell_8h_1a2abbe679bcf7d1af7475c74dc44c9d35" kindref="member">pvshell_type</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>to<sp/>get<sp/>samples<sp/>from<sp/>f<sp/>or<sp/>g,<sp/>use<sp/>these<sp/>macros.<sp/>For<sp/>each<sp/>sample,<sp/>call</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>PVSHELL_TEST_X<sp/>to<sp/>get<sp/>logical<sp/>stop<sp/>and<sp/>terminate<sp/>flags<sp/>(but<sp/>do<sp/>not</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>fetch<sp/>a<sp/>sample).<sp/>Then,<sp/>if<sp/>you<sp/>want,<sp/>call<sp/>PVSHELL_FETCH_X<sp/>to<sp/>get<sp/>the</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>next<sp/>sample.<sp/>You<sp/>can<sp/>call<sp/>PVSHELL_TEST_X<sp/>multiple<sp/>times<sp/>before</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>calling<sp/>PVSHELL_FETCH_X,<sp/>e.g.<sp/>you<sp/>can<sp/>return<sp/>exit<sp/>a<sp/>loop<sp/>when<sp/>you</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>see<sp/>a<sp/>logical<sp/>stop<sp/>flag<sp/>and<sp/>later<sp/>call<sp/>PVSHELL_TEST_X<sp/>again.<sp/>You</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>CANNOT<sp/>call<sp/>PVSHELL_FETCH_X<sp/>multiples<sp/>times<sp/>without<sp/>an<sp/>intervening</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>call<sp/>to<sp/>PVSHELL_TEST_X.<sp/>Finally,<sp/>the<sp/>logical<sp/>stop<sp/>flag<sp/>is<sp/>only</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>returned<sp/>once.<sp/>Normally<sp/>you<sp/>should<sp/>write<sp/>something<sp/>like:</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>new_flags<sp/>=<sp/>PVSHELL_TEST_F(susp);</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>susp-&gt;flags<sp/>|<sp/>=<sp/>new_flags;<sp/>//<sp/>remember<sp/>flags</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>if<sp/>(new_flags)<sp/>break;</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>sample<sp/>loop<sp/>so<sp/>that<sp/>you<sp/>will<sp/>break<sp/>when<sp/>you<sp/>see<sp/>logical_stop.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>Outside<sp/>the<sp/>loop,<sp/>you<sp/>can<sp/>return<sp/>(*n<sp/>?<sp/>0<sp/>:<sp/>susp-&gt;flags)<sp/>which<sp/>will</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>return<sp/>0<sp/>if<sp/>you<sp/>computed<sp/>samples<sp/>before<sp/>the<sp/>logical<sp/>stop<sp/>was<sp/>detected.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>Then<sp/>the<sp/>next<sp/>time<sp/>you<sp/>are<sp/>called,<sp/>you<sp/>will<sp/>return<sp/>the<sp/>logical_stop</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>flag<sp/>because<sp/>you<sp/>saved<sp/>it<sp/>in<sp/>susp-&gt;flags,<sp/>and<sp/>the<sp/>flag<sp/>applies<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>*beginning*<sp/>of<sp/>the<sp/>sample<sp/>block.<sp/>This<sp/>code<sp/>handles<sp/>terminate<sp/>too.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pvshell_8h_1aa6507d2faec068b17d835e4b9d6628ea" kindref="member">pvshell_test_f</ref>(pvshell_type<sp/>susp);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pvshell_8h_1a9cb2ff5f507ade3a45c2c3af9c44ef4b" kindref="member">pvshell_test_g</ref>(pvshell_type<sp/>susp);</highlight></codeline>
<codeline lineno="72" refid="pvshell_8h_1a6e39fda86379fcb1b843cc33322b0125" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PVSHELL_TEST_F(susp)<sp/>((susp)-&gt;f_cnt<sp/>==<sp/>0<sp/>?<sp/>pvshell_test_f(susp)<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="pvshell_8h_1a10535d9ee94461d7ad4008d761d403f4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PVSHELL_FETCH_F(susp)<sp/>((susp)-&gt;f_cnt--,<sp/>(*(susp)-&gt;f_ptr++))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="pvshell_8h_1aef2156e6a929c9bc9e5c99c86f5c2b99" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PVSHELL_TEST_G(susp)<sp/>((susp)-&gt;g_cnt<sp/>==<sp/>0<sp/>?<sp/>pvshell_test_g(susp)<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="pvshell_8h_1a358fbb29bea1d40ef5a647471d665b5f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PVSHELL_FETCH_G(susp)<sp/>((susp)-&gt;g_cnt--,<sp/>(*(susp)-&gt;g_ptr++))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>snd_make_pvshell<sp/>--<sp/>create<sp/>an<sp/>instance<sp/>of<sp/>pvshell.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/>name<sp/>--<sp/>string<sp/>name<sp/>of<sp/>the<sp/>operation,<sp/>for<sp/>debugging<sp/>&amp;<sp/>printing</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(name<sp/>is<sp/>not<sp/>copied.<sp/>It<sp/>must<sp/>be<sp/>a<sp/>permanent,<sp/>immutable<sp/>string.)</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/>sr<sp/>--<sp/>sample<sp/>rate<sp/>of<sp/>output<sp/>sound</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/>t0<sp/>--<sp/>start<sp/>time<sp/>of<sp/>output<sp/>sound</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/>h<sp/>--<sp/>function<sp/>that<sp/>computes<sp/>samples<sp/>of<sp/>output</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/>f<sp/>--<sp/>first<sp/>input<sp/>sound,<sp/>e.g.<sp/>sound<sp/>to<sp/>be<sp/>time-stretched</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/>g<sp/>--<sp/>second<sp/>input<sp/>sound,<sp/>e.g.<sp/>sound<sp/>to<sp/>control<sp/>varying<sp/>stretch<sp/>factor</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/>state<sp/>--<sp/>initial<sp/>state<sp/>information<sp/>needed<sp/>by<sp/>h</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/>n<sp/>--<sp/>number<sp/>of<sp/>doubles<sp/>in<sp/>state<sp/>(&lt;<sp/>PVSHELL_STATE_MAX)</highlight></codeline>
<codeline lineno="88"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="pvshell_8h_1a4df96702e4184ba02abfa9d9cbdddd75" kindref="member">snd_make_pvshell</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr,<sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pvshell_8h_1a848f4f236adfdce731002b4ec48a883f" kindref="member">h_fn_type</ref><sp/><ref refid="structpvshell__struct_1a7c4363e3b607eec2630a9ffd3dd276a3" kindref="member">h</ref>,<sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="structpvshell__struct_1a5af3be8603e108a163e017a1cf5a7d7f" kindref="member">f</ref>,<sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="structpvshell__struct_1a9d9b8958ca305d3038b5ac9878e13707" kindref="member">g</ref>,<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="structpvshell__struct_1afc01b285127c630e7edd2772104baa3e" kindref="member">state</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/pvshell.h"/>
  </compounddef>
</doxygen>
