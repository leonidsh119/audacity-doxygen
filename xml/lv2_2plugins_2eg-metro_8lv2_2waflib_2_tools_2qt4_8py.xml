<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lv2_2plugins_2eg-metro_8lv2_2waflib_2_tools_2qt4_8py" kind="file" language="Python">
    <compoundname>qt4.py</compoundname>
    <innerclass refid="classwaflib_1_1_tools_1_1qt4_1_1qxx" prot="public">waflib::Tools::qt4::qxx</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1qt4_1_1trans__update" prot="public">waflib::Tools::qt4::trans_update</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler" prot="public">waflib::Tools::qt4::XMLHandler</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1qt4_1_1rcc" prot="public">waflib::Tools::qt4::rcc</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1qt4_1_1moc" prot="public">waflib::Tools::qt4::moc</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1qt4_1_1ui4" prot="public">waflib::Tools::qt4::ui4</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1qt4_1_1ts2qm" prot="public">waflib::Tools::qt4::ts2qm</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1qt4_1_1qm2rcc" prot="public">waflib::Tools::qt4::qm2rcc</innerclass>
    <innernamespace refid="namespacewaflib_1_1_tools_1_1qt4">waflib::Tools::qt4</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>encoding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WARNING!<sp/>Do<sp/>not<sp/>edit!<sp/>http://waf.googlecode.com/git/docs/wafbook/single.html#_obtaining_the_waf_file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>xml.sax<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>make_parser</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>xml.sax.handler<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ContentHandler</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>has_xml=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>ContentHandler=object</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>has_xml=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os,sys</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools" kindref="compound">waflib.Tools</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>c_preproc,cxx</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>waflib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Task,Utils,Options,Errors</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_task_gen" kindref="compound">waflib.TaskGen</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>feature,after_method,extension</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_configure" kindref="compound">waflib.Configure</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>conf</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>waflib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Logs</highlight></codeline>
<codeline lineno="19"><highlight class="normal">MOC_H=[</highlight><highlight class="stringliteral">&apos;.h&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;.hpp&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;.hxx&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;.hh&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="20"><highlight class="normal">EXT_RCC=[</highlight><highlight class="stringliteral">&apos;.qrc&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="21"><highlight class="normal">EXT_UI=[</highlight><highlight class="stringliteral">&apos;.ui&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="22"><highlight class="normal">EXT_QT4=[</highlight><highlight class="stringliteral">&apos;.cpp&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;.cc&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;.cxx&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;.C&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="23"><highlight class="normal">QT4_LIBS=</highlight><highlight class="stringliteral">&quot;QtCore<sp/>QtGui<sp/>QtUiTools<sp/>QtNetwork<sp/>QtOpenGL<sp/>QtSql<sp/>QtSvg<sp/>QtTest<sp/>QtXml<sp/>QtXmlPatterns<sp/>QtWebKit<sp/>Qt3Support<sp/>QtHelp<sp/>QtScript<sp/>QtDeclarative<sp/>QtDesigner&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">qxx(Task.classes[</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="25" refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1a7bc6ffa8a31c2b612eb2fac82ab4c052" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1a7bc6ffa8a31c2b612eb2fac82ab4c052" kindref="member">__init__</ref>(self,*k,**kw):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Task.Task.__init__(self,*k,**kw)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1a671993f2eb119aeff79f5f3563844166" kindref="member">moc_done</ref>=0</highlight></codeline>
<codeline lineno="28" refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1acdd5c674e2585b425a25735b665eeb14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1acdd5c674e2585b425a25735b665eeb14" kindref="member">scan</ref>(self):</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nodes,names)=c_preproc.scan(self)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst=[]</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nodes:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x.name.endswith(</highlight><highlight class="stringliteral">&apos;.moc&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s=x.path_from(self.inputs[0].parent.get_bld())</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>names:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names.append(s)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.append(x)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref>(lst,names)</highlight></codeline>
<codeline lineno="39" refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1aa3fd0759668664632f019ae7c118406d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1aa3fd0759668664632f019ae7c118406d" kindref="member">runnable_status</ref>(self):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1a671993f2eb119aeff79f5f3563844166" kindref="member">moc_done</ref>:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Task.Task.runnable_status(self)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.run_after:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>t.hasrun:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Task.ASK_LATER</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1aec5aad1a23675343a8b270b0e8c15b0c" kindref="member">add_moc_tasks</ref>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Task.Task.runnable_status(self)</highlight></codeline>
<codeline lineno="48" refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1aff019276ea1c24be0da32fb4a6d3da06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1aff019276ea1c24be0da32fb4a6d3da06" kindref="member">create_moc_task</ref>(self,h_node,m_node):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moc_cache=self.generator.bld.moc_cache</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moc_cache=self.generator.bld.moc_cache={}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>moc_cache[h_node]</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk=moc_cache[h_node]=Task.classes[</highlight><highlight class="stringliteral">&apos;moc&apos;</highlight><highlight class="normal">](env=self.env,generator=self.generator)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk.set_inputs(h_node)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk.set_outputs(m_node)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gen=self.generator.bld.producer</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gen.outstanding.insert(0,tsk)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gen.total+=1</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tsk</highlight></codeline>
<codeline lineno="63" refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1aec5aad1a23675343a8b270b0e8c15b0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1aec5aad1a23675343a8b270b0e8c15b0c" kindref="member">add_moc_tasks</ref>(self):</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node=self.inputs[0]</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld=self.generator.bld</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.signature()</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delattr(self,</highlight><highlight class="stringliteral">&apos;cache_sig&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moctasks=[]</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mocfiles=[]</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_lst=bld.raw_deps[self.uid()]</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld.raw_deps[self.uid()]=[]</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_lst=[]</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tmp_lst:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>d.endswith(</highlight><highlight class="stringliteral">&apos;.moc&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mocfiles:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.error(</highlight><highlight class="stringliteral">&quot;paranoia<sp/>owns&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mocfiles.append(d)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_node=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:ext=Options.options.qt_header_ext.split()</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ext:ext=MOC_H</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base2=d[:-4]</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal">[node.parent]+self.generator.includes_nodes:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>e<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ext:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_node=x.find_node(base2+e)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>h_node:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>h_node:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_node=h_node.change_ext(</highlight><highlight class="stringliteral">&apos;.moc&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>EXT_QT4:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>base2.endswith(k):</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal">[node.parent]+self.generator.includes_nodes:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_node=x.find_node(base2)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>h_node:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>h_node:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_node=h_node.change_ext(k+</highlight><highlight class="stringliteral">&apos;.moc&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>h_node:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classwaflib_1_1_errors_1_1_waf_error" kindref="compound">Errors.WafError</ref>(</highlight><highlight class="stringliteral">&apos;no<sp/>header<sp/>found<sp/>for<sp/>%r<sp/>which<sp/>is<sp/>a<sp/>moc<sp/>file&apos;</highlight><highlight class="normal">%d)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld.node_deps[(self.inputs[0].parent.abspath(),m_node.name)]=h_node</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task=self.<ref refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1aff019276ea1c24be0da32fb4a6d3da06" kindref="member">create_moc_task</ref>(h_node,m_node)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moctasks.append(task)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_lst=bld.raw_deps[self.uid()]=mocfiles</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst=bld.node_deps.get(self.uid(),())</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lst:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=d.name</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name.endswith(</highlight><highlight class="stringliteral">&apos;.moc&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task=self.<ref refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1aff019276ea1c24be0da32fb4a6d3da06" kindref="member">create_moc_task</ref>(bld.node_deps[(self.inputs[0].parent.abspath(),name)],d)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moctasks.append(task)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.run_after.update(set(moctasks))</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_tools_1_1qt4_1_1qxx_1a671993f2eb119aeff79f5f3563844166" kindref="member">moc_done</ref>=1</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>run=Task.classes[</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="normal">].__dict__[</highlight><highlight class="stringliteral">&apos;run&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1trans__update" kindref="compound">trans_update</ref>(<ref refid="classwaflib_1_1_task_1_1_task" kindref="compound">Task.Task</ref>):</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${QT_LUPDATE}<sp/>${SRC}<sp/>-ts<sp/>${TGT}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">Task.update_outputs(trans_update)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler" kindref="compound">XMLHandler</ref>(<ref refid="namespacewaflib_1_1_tools_1_1qt4_1a5275b334927657caa38f9c801f034dcd" kindref="member">ContentHandler</ref>):</highlight></codeline>
<codeline lineno="129" refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler_1a5090e66a9c76416e54d5865ed285df61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler_1a5090e66a9c76416e54d5865ed285df61" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler_1abd305305f5abf7e30f8bd4bea925204c" kindref="member">buf</ref>=[]</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler_1a1f0071e960728156e3c13be1e82c48f8" kindref="member">files</ref>=[]</highlight></codeline>
<codeline lineno="132" refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler_1a4900b3c2d71e27909fd142618371e0dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler_1a4900b3c2d71e27909fd142618371e0dd" kindref="member">startElement</ref>(self,name,attrs):</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name==</highlight><highlight class="stringliteral">&apos;file&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler_1abd305305f5abf7e30f8bd4bea925204c" kindref="member">buf</ref>=[]</highlight></codeline>
<codeline lineno="135" refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler_1a3ca61314858104050be53bd23a672e74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler_1a3ca61314858104050be53bd23a672e74" kindref="member">endElement</ref>(self,name):</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name==</highlight><highlight class="stringliteral">&apos;file&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.files.append(<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">.join(self.<ref refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler_1abd305305f5abf7e30f8bd4bea925204c" kindref="member">buf</ref>)))</highlight></codeline>
<codeline lineno="138" refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler_1acdb9a245e889b637bb45442c4be487d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler_1acdb9a245e889b637bb45442c4be487d1" kindref="member">characters</ref>(self,cars):</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.buf.append(cars)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref>(*EXT_RCC)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1qt4_1a474b0d2fbfa3f41d0be506bd012b75fb" kindref="member">create_rcc_task</ref>(self,node):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>rcnode=node.change_ext(</highlight><highlight class="stringliteral">&apos;_rc.cpp&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>rcctask=self.create_task(</highlight><highlight class="stringliteral">&apos;rcc&apos;</highlight><highlight class="normal">,node,rcnode)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>cpptask=self.create_task(</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="normal">,rcnode,rcnode.change_ext(</highlight><highlight class="stringliteral">&apos;.o&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.compiled_tasks.append(cpptask)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.compiled_tasks=[cpptask]</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cpptask</highlight></codeline>
<codeline lineno="150"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref>(*EXT_UI)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1qt4_1ad4a5580d4638234e662477361f0fda9b" kindref="member">create_uic_task</ref>(self,node):</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>uictask=self.create_task(</highlight><highlight class="stringliteral">&apos;ui4&apos;</highlight><highlight class="normal">,node)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>uictask.outputs=[self.path.find_or_declare(self.env[</highlight><highlight class="stringliteral">&apos;ui_PATTERN&apos;</highlight><highlight class="normal">]%node.name[:-3])]</highlight></codeline>
<codeline lineno="154"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref>(</highlight><highlight class="stringliteral">&apos;.ts&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1qt4_1a5b0b5d1bfcb4a4029118af0264dfa58e" kindref="member">add_lang</ref>(self,node):</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>self.lang=self.to_list(getattr(self,</highlight><highlight class="stringliteral">&apos;lang&apos;</highlight><highlight class="normal">,[]))+[node]</highlight></codeline>
<codeline lineno="157"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;qt4&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a3411cecc8687a44154a45078c3224fb7" kindref="member">after_method</ref>(</highlight><highlight class="stringliteral">&apos;apply_link&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1qt4_1ade7298e4ce0fa4005d38b089e4cc24e8" kindref="member">apply_qt4</ref>(self):</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;lang&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qmtasks=[]</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.to_list(self.lang):</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(x,str):</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=self.path.find_resource(x+</highlight><highlight class="stringliteral">&apos;.ts&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qmtasks.append(self.create_task(</highlight><highlight class="stringliteral">&apos;ts2qm&apos;</highlight><highlight class="normal">,x,x.change_ext(</highlight><highlight class="stringliteral">&apos;.qm&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;update&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>Options.options.trans_qt4:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cxxnodes=[a.inputs[0]</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.compiled_tasks]+[a.inputs[0]</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.tasks<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(a,</highlight><highlight class="stringliteral">&apos;inputs&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a.inputs[0].name.endswith(</highlight><highlight class="stringliteral">&apos;.ui&apos;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>qmtasks:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.create_task(</highlight><highlight class="stringliteral">&apos;trans_update&apos;</highlight><highlight class="normal">,cxxnodes,x.inputs)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;langname&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qmnodes=[x.outputs[0]</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>qmtasks]</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcnode=self.langname</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(rcnode,str):</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcnode=self.path.find_or_declare(rcnode+</highlight><highlight class="stringliteral">&apos;.qrc&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t=self.create_task(</highlight><highlight class="stringliteral">&apos;qm2rcc&apos;</highlight><highlight class="normal">,qmnodes,rcnode)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k=<ref refid="namespacewaflib_1_1_tools_1_1qt4_1a474b0d2fbfa3f41d0be506bd012b75fb" kindref="member">create_rcc_task</ref>(self,t.outputs[0])</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.link_task.inputs.append(k.outputs[0])</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>lst=[]</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.to_list(self.env[</highlight><highlight class="stringliteral">&apos;CXXFLAGS&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(flag)&lt;2:</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f=flag[0:2]</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&apos;-D&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-I&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;/D&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;/I&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref>(f[0]==</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.append(</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">+flag[1:])</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.append(flag)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>self.env.append_value(</highlight><highlight class="stringliteral">&apos;MOC_FLAGS&apos;</highlight><highlight class="normal">,lst)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref>(*EXT_QT4)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1qt4_1a9e77ad1c524ba2462aae1027b92d847e" kindref="member">cxx_hook</ref>(self,node):</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.create_compiled_task(</highlight><highlight class="stringliteral">&apos;qxx&apos;</highlight><highlight class="normal">,node)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1rcc" kindref="compound">rcc</ref>(<ref refid="classwaflib_1_1_task_1_1_task" kindref="compound">Task.Task</ref>):</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${QT_RCC}<sp/>-name<sp/>${SRC[0].name}<sp/>${SRC[0].abspath()}<sp/>${RCC_ST}<sp/>-o<sp/>${TGT}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>ext_out=[</highlight><highlight class="stringliteral">&apos;.h&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="195" refid="classwaflib_1_1_tools_1_1qt4_1_1rcc_1a415ac4933f0d9f29fdc23cc0f487bd94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1rcc_1a415ac4933f0d9f29fdc23cc0f487bd94" kindref="member">scan</ref>(self):</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node=self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>[0]</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>has_xml:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.error(</highlight><highlight class="stringliteral">&apos;no<sp/>xml<sp/>support<sp/>was<sp/>found,<sp/>the<sp/>rcc<sp/>dependencies<sp/>will<sp/>be<sp/>incomplete!&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref>([],[])</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser=make_parser()</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curHandler=<ref refid="classwaflib_1_1_tools_1_1qt4_1_1_x_m_l_handler" kindref="compound">XMLHandler</ref>()</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.setContentHandler(curHandler)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fi=open(self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>[0].abspath(),</highlight><highlight class="stringliteral">&apos;r&apos;)</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.parse(fi)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fi.close()</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes=[]</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names=[]</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root=self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>[0].parent</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>curHandler.files:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nd=root.find_resource(x)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nd:nodes.append(nd)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:names.append(x)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref>(nodes,names)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1moc" kindref="compound">moc</ref>(<ref refid="classwaflib_1_1_task_1_1_task" kindref="compound">Task.Task</ref>):</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${QT_MOC}<sp/>${MOC_FLAGS}<sp/>${MOCCPPPATH_ST:INCPATHS}<sp/>${MOCDEFINES_ST:DEFINES}<sp/>${SRC}<sp/>${MOC_ST}<sp/>${TGT}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1ui4" kindref="compound">ui4</ref>(<ref refid="classwaflib_1_1_task_1_1_task" kindref="compound">Task.Task</ref>):</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${QT_UIC}<sp/>${SRC}<sp/>-o<sp/>${TGT}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>ext_out=[</highlight><highlight class="stringliteral">&apos;.h&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1ts2qm" kindref="compound">ts2qm</ref>(<ref refid="classwaflib_1_1_task_1_1_task" kindref="compound">Task.Task</ref>):</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${QT_LRELEASE}<sp/>${QT_LRELEASE_FLAGS}<sp/>${SRC}<sp/>-qm<sp/>${TGT}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1qm2rcc" kindref="compound">qm2rcc</ref>(<ref refid="classwaflib_1_1_task_1_1_task" kindref="compound">Task.Task</ref>):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>after=</highlight><highlight class="stringliteral">&apos;ts2qm&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classwaflib_1_1_tools_1_1qt4_1_1qm2rcc_1ab1c0d29ea939b55d544105a9fad18a9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1qt4_1_1qm2rcc_1ab1c0d29ea939b55d544105a9fad18a9c" kindref="member">run</ref>(self):</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txt=</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">.join([</highlight><highlight class="stringliteral">&apos;&lt;file&gt;%s&lt;/file&gt;&apos;</highlight><highlight class="normal">%k.path_from(self.<ref refid="classwaflib_1_1_task_1_1_task_1a7183c692f1eb01b9f7e66daca035bce4" kindref="member">outputs</ref>[0].parent)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>])</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code=</highlight><highlight class="stringliteral">&apos;&lt;!DOCTYPE<sp/>RCC&gt;&lt;RCC<sp/>version=&quot;1.0&quot;&gt;\n&lt;qresource&gt;\n%s\n&lt;/qresource&gt;\n&lt;/RCC&gt;&apos;</highlight><highlight class="normal">%txt</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a7183c692f1eb01b9f7e66daca035bce4" kindref="member">outputs</ref>[0].write(code)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1qt4_1ab06091d89d2419c0bdcc1a8b4e8a5708" kindref="member">configure</ref>(self):</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>self.find_qt4_binaries()</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>self.set_qt4_libs_to_check()</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>self.set_qt4_defines()</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>self.find_qt4_libraries()</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>self.add_qt4_rpath()</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>self.simplify_qt4_libs()</highlight></codeline>
<codeline lineno="240"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1qt4_1a9d713f54dfc0b93695e51d28b677c38c" kindref="member">find_qt4_binaries</ref>(self):</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>env=self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>opt=Options.options</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>qtdir=getattr(opt,</highlight><highlight class="stringliteral">&apos;qtdir&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>qtbin=getattr(opt,</highlight><highlight class="stringliteral">&apos;qtbin&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>paths=[]</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>qtdir:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qtbin=os.path.join(qtdir,</highlight><highlight class="stringliteral">&apos;bin&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>qtdir:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qtdir=os.environ.get(</highlight><highlight class="stringliteral">&apos;QT4_ROOT&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qtbin=os.environ.get(</highlight><highlight class="stringliteral">&apos;QT4_BIN&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>os.path.join(qtdir,</highlight><highlight class="stringliteral">&apos;bin&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>qtbin:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paths=[qtbin]</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>qtdir:</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paths=os.environ.get(</highlight><highlight class="stringliteral">&apos;PATH&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">).split(os.pathsep)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paths.append(</highlight><highlight class="stringliteral">&apos;/usr/share/qt4/bin/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst=Utils.listdir(</highlight><highlight class="stringliteral">&apos;/usr/local/Trolltech/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>OSError:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lst:</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.sort()</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.reverse()</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qtdir=</highlight><highlight class="stringliteral">&apos;/usr/local/Trolltech/%s/&apos;</highlight><highlight class="normal">%lst[0]</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qtbin=os.path.join(qtdir,</highlight><highlight class="stringliteral">&apos;bin&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paths.append(qtbin)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>cand=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_ver=[</highlight><highlight class="stringliteral">&apos;4&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>qmk<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&apos;qmake-qt4&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;qmake4&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;qmake&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qmake=self.find_program(qmk,path_list=paths)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>self.errors.ConfigurationError:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version=self.cmd_and_log([qmake,</highlight><highlight class="stringliteral">&apos;-query&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;QT_VERSION&apos;</highlight><highlight class="normal">]).strip()</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>self.errors.WafError:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>version:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_ver=version.split(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>new_ver&gt;prev_ver:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cand=qmake</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_ver=new_ver</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cand:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.QMAKE=cand</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>find<sp/>qmake<sp/>for<sp/>qt4&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>qtbin=self.cmd_and_log([self.env.QMAKE,</highlight><highlight class="stringliteral">&apos;-query&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;QT_INSTALL_BINS&apos;</highlight><highlight class="normal">]).strip()+os.sep</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">find_bin(lst,var):</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>env:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lst:</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret=self.find_program(f,path_list=paths)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>self.errors.ConfigurationError:</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env[var]=ret</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>find_bin([</highlight><highlight class="stringliteral">&apos;uic-qt3&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;uic3&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;QT_UIC3&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>find_bin([</highlight><highlight class="stringliteral">&apos;uic-qt4&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;uic&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;QT_UIC&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>env[</highlight><highlight class="stringliteral">&apos;QT_UIC&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;cannot<sp/>find<sp/>the<sp/>uic<sp/>compiler<sp/>for<sp/>qt4&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uicver=self.cmd_and_log(env[</highlight><highlight class="stringliteral">&apos;QT_UIC&apos;</highlight><highlight class="normal">]+</highlight><highlight class="stringliteral">&quot;<sp/>-version<sp/>2&gt;&amp;1&quot;</highlight><highlight class="normal">).strip()</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>self.errors.ConfigurationError:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;this<sp/>uic<sp/>compiler<sp/>is<sp/>for<sp/>qt3,<sp/>add<sp/>uic<sp/>for<sp/>qt4<sp/>to<sp/>your<sp/>path&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>uicver=uicver.replace(</highlight><highlight class="stringliteral">&apos;Qt<sp/>User<sp/>Interface<sp/>Compiler<sp/>&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">).<ref refid="namespacewaflib_1_1_tools_1_1errcheck_1a3c373d095646ee41f81dd43ade9e0b63" kindref="member">replace</ref>(</highlight><highlight class="stringliteral">&apos;User<sp/>Interface<sp/>Compiler<sp/>for<sp/>Qt&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>self.msg(</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>uic<sp/>version&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;%s&apos;</highlight><highlight class="normal">%uicver)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>uicver.find(</highlight><highlight class="stringliteral">&apos;<sp/>3.&apos;</highlight><highlight class="normal">)!=-1:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;this<sp/>uic<sp/>compiler<sp/>is<sp/>for<sp/>qt3,<sp/>add<sp/>uic<sp/>for<sp/>qt4<sp/>to<sp/>your<sp/>path&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>find_bin([</highlight><highlight class="stringliteral">&apos;moc-qt4&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;moc&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;QT_MOC&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>find_bin([</highlight><highlight class="stringliteral">&apos;rcc-qt4&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;rcc&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;QT_RCC&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>find_bin([</highlight><highlight class="stringliteral">&apos;lrelease-qt4&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;lrelease&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;QT_LRELEASE&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>find_bin([</highlight><highlight class="stringliteral">&apos;lupdate-qt4&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;lupdate&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;QT_LUPDATE&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;UIC3_ST&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;%s<sp/>-o<sp/>%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;UIC_ST&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;%s<sp/>-o<sp/>%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;MOC_ST&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-o&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;ui_PATTERN&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;ui_%s.h&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;QT_LRELEASE_FLAGS&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;-silent&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>env.MOCCPPPATH_ST=</highlight><highlight class="stringliteral">&apos;-I%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>env.MOCDEFINES_ST=</highlight><highlight class="stringliteral">&apos;-D%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1qt4_1aaf43095cd0a568379de0c83453ffb82c" kindref="member">find_qt4_libraries</ref>(self):</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>qtlibs=getattr(Options.options,</highlight><highlight class="stringliteral">&apos;qtlibs&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>os.environ.get(</highlight><highlight class="stringliteral">&quot;QT4_LIBDIR&quot;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>qtlibs:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qtlibs=self.cmd_and_log([self.env.QMAKE,</highlight><highlight class="stringliteral">&apos;-query&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;QT_INSTALL_LIBS&apos;</highlight><highlight class="normal">]).strip()</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/><ref refid="classwaflib_1_1_errors_1_1_waf_error" kindref="compound">Errors.WafError</ref>:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qtdir=self.cmd_and_log([self.env.QMAKE,</highlight><highlight class="stringliteral">&apos;-query&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;QT_INSTALL_PREFIX&apos;</highlight><highlight class="normal">]).strip()+os.sep</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qtlibs=os.path.join(qtdir,</highlight><highlight class="stringliteral">&apos;lib&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>self.msg(</highlight><highlight class="stringliteral">&apos;Found<sp/>the<sp/>Qt4<sp/>libraries<sp/>in&apos;</highlight><highlight class="normal">,qtlibs)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>qtincludes=os.environ.get(</highlight><highlight class="stringliteral">&quot;QT4_INCLUDES&quot;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.cmd_and_log([self.env.QMAKE,</highlight><highlight class="stringliteral">&apos;-query&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;QT_INSTALL_HEADERS&apos;</highlight><highlight class="normal">]).strip()</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>env=self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;PKG_CONFIG_PATH&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>os.environ:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.environ[</highlight><highlight class="stringliteral">&apos;PKG_CONFIG_PATH&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;%s:%s/pkgconfig:/usr/lib/qt4/lib/pkgconfig:/opt/qt4/lib/pkgconfig:/usr/lib/qt4/lib:/opt/qt4/lib&apos;</highlight><highlight class="normal">%(qtlibs,qtlibs)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.environ.get(</highlight><highlight class="stringliteral">&quot;QT4_XCOMPILE&quot;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>self.errors.ConfigurationError()</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.check_cfg(atleast_pkgconfig_version=</highlight><highlight class="stringliteral">&apos;0.1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>self.errors.ConfigurationError:</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.qt4_vars:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uselib=i.upper()</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Utils.unversioned_sys_platform()==</highlight><highlight class="stringliteral">&quot;darwin&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameworkName=i+</highlight><highlight class="stringliteral">&quot;.framework&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qtDynamicLib=os.path.join(qtlibs,frameworkName,i)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(qtDynamicLib):</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;FRAMEWORK_&apos;</highlight><highlight class="normal">+uselib,i)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.msg(</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>%s&apos;</highlight><highlight class="normal">%i,qtDynamicLib,</highlight><highlight class="stringliteral">&apos;GREEN&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.msg(</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>%s&apos;</highlight><highlight class="normal">%i,</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;YELLOW&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;INCLUDES_&apos;</highlight><highlight class="normal">+uselib,os.path.join(qtlibs,frameworkName,</highlight><highlight class="stringliteral">&apos;Headers&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>env.DEST_OS!=</highlight><highlight class="stringliteral">&quot;win32&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qtDynamicLib=os.path.join(qtlibs,</highlight><highlight class="stringliteral">&quot;lib&quot;</highlight><highlight class="normal">+i+</highlight><highlight class="stringliteral">&quot;.so&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qtStaticLib=os.path.join(qtlibs,</highlight><highlight class="stringliteral">&quot;lib&quot;</highlight><highlight class="normal">+i+</highlight><highlight class="stringliteral">&quot;.a&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(qtDynamicLib):</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;LIB_&apos;</highlight><highlight class="normal">+uselib,i)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.msg(</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>%s&apos;</highlight><highlight class="normal">%i,qtDynamicLib,</highlight><highlight class="stringliteral">&apos;GREEN&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>os.path.exists(qtStaticLib):</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;LIB_&apos;</highlight><highlight class="normal">+uselib,i)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.msg(</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>%s&apos;</highlight><highlight class="normal">%i,qtStaticLib,</highlight><highlight class="stringliteral">&apos;GREEN&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.msg(</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>%s&apos;</highlight><highlight class="normal">%i,</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;YELLOW&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;LIBPATH_&apos;</highlight><highlight class="normal">+uselib,qtlibs)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;INCLUDES_&apos;</highlight><highlight class="normal">+uselib,qtincludes)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;INCLUDES_&apos;</highlight><highlight class="normal">+uselib,os.path.join(qtincludes,i))</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>(</highlight><highlight class="stringliteral">&quot;lib%s.a&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;lib%s4.a&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;%s.lib&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;%s4.lib&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lib=os.path.join(qtlibs,k%i)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(lib):</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;LIB_&apos;</highlight><highlight class="normal">+uselib,i+k[k.find(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">)+2:k.find(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)])</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.msg(</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>%s&apos;</highlight><highlight class="normal">%i,lib,</highlight><highlight class="stringliteral">&apos;GREEN&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.msg(</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>%s&apos;</highlight><highlight class="normal">%i,</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;YELLOW&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;LIBPATH_&apos;</highlight><highlight class="normal">+uselib,qtlibs)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;INCLUDES_&apos;</highlight><highlight class="normal">+uselib,qtincludes)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;INCLUDES_&apos;</highlight><highlight class="normal">+uselib,os.path.join(qtincludes,i))</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uselib=i.upper()+</highlight><highlight class="stringliteral">&quot;_debug&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>(</highlight><highlight class="stringliteral">&quot;lib%sd.a&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;lib%sd4.a&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;%sd.lib&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;%sd4.lib&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lib=os.path.join(qtlibs,k%i)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(lib):</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;LIB_&apos;</highlight><highlight class="normal">+uselib,i+k[k.find(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">)+2:k.find(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)])</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.msg(</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>%s&apos;</highlight><highlight class="normal">%i,lib,</highlight><highlight class="stringliteral">&apos;GREEN&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.msg(</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>%s&apos;</highlight><highlight class="normal">%i,</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;YELLOW&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;LIBPATH_&apos;</highlight><highlight class="normal">+uselib,qtlibs)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;INCLUDES_&apos;</highlight><highlight class="normal">+uselib,qtincludes)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.append_unique(</highlight><highlight class="stringliteral">&apos;INCLUDES_&apos;</highlight><highlight class="normal">+uselib,os.path.join(qtincludes,i))</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.qt4_vars_debug+self.qt4_vars:</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.check_cfg(package=i,args=</highlight><highlight class="stringliteral">&apos;--cflags<sp/>--libs&apos;</highlight><highlight class="normal">,mandatory=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="396"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1qt4_1a1ca1a6f71a509166d314de0b090fd631" kindref="member">simplify_qt4_libs</ref>(self):</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>env=self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1ccroot_1a0c7dd6dd8e041dce2cadf0354606dfb1" kindref="member">process_lib</ref>(vars_,coreval):</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vars_:</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var=d.upper()</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>var==</highlight><highlight class="stringliteral">&apos;QTCORE&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value=env[</highlight><highlight class="stringliteral">&apos;LIBPATH_&apos;</highlight><highlight class="normal">+var]</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value:</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>core=env[coreval]</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accu=[]</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lib<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>value:</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lib<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>core:</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accu.append(lib)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;LIBPATH_&apos;</highlight><highlight class="normal">+var]=accu</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_tools_1_1ccroot_1a0c7dd6dd8e041dce2cadf0354606dfb1" kindref="member">process_lib</ref>(self.qt4_vars,</highlight><highlight class="stringliteral">&apos;LIBPATH_QTCORE&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_tools_1_1ccroot_1a0c7dd6dd8e041dce2cadf0354606dfb1" kindref="member">process_lib</ref>(self.qt4_vars_debug,</highlight><highlight class="stringliteral">&apos;LIBPATH_QTCORE_DEBUG&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1qt4_1ac51854ca134dd7809a306fa60e1e3011" kindref="member">add_qt4_rpath</ref>(self):</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>env=self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(Options.options,</highlight><highlight class="stringliteral">&apos;want_rpath&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">process_rpath(vars_,coreval):</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vars_:</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var=d.upper()</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value=env[</highlight><highlight class="stringliteral">&apos;LIBPATH_&apos;</highlight><highlight class="normal">+var]</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value:</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>core=env[coreval]</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accu=[]</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lib<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>value:</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>var!=</highlight><highlight class="stringliteral">&apos;QTCORE&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lib<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>core:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accu.append(</highlight><highlight class="stringliteral">&apos;-Wl,--rpath=&apos;</highlight><highlight class="normal">+lib)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;RPATH_&apos;</highlight><highlight class="normal">+var]=accu</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process_rpath(self.qt4_vars,</highlight><highlight class="stringliteral">&apos;LIBPATH_QTCORE&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process_rpath(self.qt4_vars_debug,</highlight><highlight class="stringliteral">&apos;LIBPATH_QTCORE_DEBUG&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="434"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1qt4_1ac7cb8f87b4c5e024cf1f935043896c86" kindref="member">set_qt4_libs_to_check</ref>(self):</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>hasattr(self,</highlight><highlight class="stringliteral">&apos;qt4_vars&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.qt4_vars=QT4_LIBS</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>self.qt4_vars=Utils.to_list(self.qt4_vars)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>hasattr(self,</highlight><highlight class="stringliteral">&apos;qt4_vars_debug&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.qt4_vars_debug=[a+</highlight><highlight class="stringliteral">&apos;_debug&apos;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.qt4_vars]</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>self.qt4_vars_debug=Utils.to_list(self.qt4_vars_debug)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1qt4_1a6e8e47988cb2379f9a8c1eafb7d1adfb" kindref="member">set_qt4_defines</ref>(self):</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sys.platform!=</highlight><highlight class="stringliteral">&apos;win32&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.qt4_vars:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=x[2:].upper()</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.append_unique(</highlight><highlight class="stringliteral">&apos;DEFINES_%s&apos;</highlight><highlight class="normal">%x.upper(),</highlight><highlight class="stringliteral">&apos;QT_%s_LIB&apos;</highlight><highlight class="normal">%y)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.append_unique(</highlight><highlight class="stringliteral">&apos;DEFINES_%s_DEBUG&apos;</highlight><highlight class="normal">%x.upper(),</highlight><highlight class="stringliteral">&apos;QT_%s_LIB&apos;</highlight><highlight class="normal">%y)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1qt4_1afee9bc1a5bd6ad0a2b0ed1d645c477b1" kindref="member">options</ref>(opt):</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--want-rpath&apos;</highlight><highlight class="normal">,action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;want_rpath&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&apos;enable<sp/>the<sp/>rpath<sp/>for<sp/>qt<sp/>libraries&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--header-ext&apos;</highlight><highlight class="normal">,type=</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&apos;header<sp/>extension<sp/>for<sp/>moc<sp/>files&apos;</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;qt_header_ext&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="stringliteral">&apos;qtdir<sp/>qtbin<sp/>qtlibs&apos;</highlight><highlight class="normal">.split():</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--&apos;</highlight><highlight class="normal">+i,type=</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,dest=i)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--translate&apos;</highlight><highlight class="normal">,action=</highlight><highlight class="stringliteral">&quot;store_true&quot;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;collect<sp/>translation<sp/>strings&quot;</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&quot;trans_qt4&quot;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-metro.lv2/waflib/Tools/qt4.py"/>
  </compounddef>
</doxygen>
