<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_o_d_p_c_m_alias_block_file_8cpp" kind="file" language="C++">
    <compoundname>ODPCMAliasBlockFile.cpp</compoundname>
    <includes refid="float_8h" local="no">float.h</includes>
    <includes refid="_o_d_p_c_m_alias_block_file_8h" local="yes">ODPCMAliasBlockFile.h</includes>
    <includes local="no">wx/file.h</includes>
    <includes local="no">wx/utils.h</includes>
    <includes local="no">wx/wxchar.h</includes>
    <includes local="no">wx/log.h</includes>
    <includes local="no">wx/thread.h</includes>
    <includes local="no">sndfile.h</includes>
    <includes refid="_audacity_app_8h" local="yes">../AudacityApp.h</includes>
    <includes refid="_p_c_m_alias_block_file_8h" local="yes">PCMAliasBlockFile.h</includes>
    <includes refid="_file_formats_8h" local="yes">../FileFormats.h</includes>
    <includes refid="_internat_8h" local="yes">../Internat.h</includes>
    <includes refid="_o_d_manager_8h" local="yes">../ondemand/ODManager.h</includes>
    <includes refid="_audio_i_o_8h" local="yes">../AudioIO.h</includes>
    <incdepgraph>
      <node id="35630">
        <label>wx/dir.h</label>
      </node>
      <node id="35638">
        <label>wx/choice.h</label>
      </node>
      <node id="35619">
        <label>wx/hashmap.h</label>
      </node>
      <node id="35681">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="35679">
        <label>wx/gauge.h</label>
      </node>
      <node id="35631">
        <label>wx/event.h</label>
      </node>
      <node id="35606">
        <label>wx/ffile.h</label>
      </node>
      <node id="35670">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="35616" relation="include">
        </childnode>
        <childnode refid="35662" relation="include">
        </childnode>
        <childnode refid="35671" relation="include">
        </childnode>
      </node>
      <node id="35647">
        <label>ODTask.h</label>
        <link refid="_o_d_task_8h"/>
        <childnode refid="35621" relation="include">
        </childnode>
        <childnode refid="35604" relation="include">
        </childnode>
        <childnode refid="35648" relation="include">
        </childnode>
        <childnode refid="35646" relation="include">
        </childnode>
        <childnode refid="35688" relation="include">
        </childnode>
      </node>
      <node id="35686">
        <label>wx/dcclient.h</label>
      </node>
      <node id="35629">
        <label>wx/cmdline.h</label>
      </node>
      <node id="35600">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="35601" relation="include">
        </childnode>
      </node>
      <node id="35689">
        <label>../AudioIO.h</label>
        <link refid="_audio_i_o_8h"/>
        <childnode refid="35690" relation="include">
        </childnode>
        <childnode refid="35609" relation="include">
        </childnode>
        <childnode refid="35641" relation="include">
        </childnode>
        <childnode refid="35631" relation="include">
        </childnode>
        <childnode refid="35605" relation="include">
        </childnode>
        <childnode refid="35622" relation="include">
        </childnode>
        <childnode refid="35614" relation="include">
        </childnode>
      </node>
      <node id="35661">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="35616" relation="include">
        </childnode>
        <childnode refid="35662" relation="include">
        </childnode>
        <childnode refid="35663" relation="include">
        </childnode>
        <childnode refid="35664" relation="include">
        </childnode>
        <childnode refid="35659" relation="include">
        </childnode>
      </node>
      <node id="35643">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="35612" relation="include">
        </childnode>
        <childnode refid="35605" relation="include">
        </childnode>
        <childnode refid="35644" relation="include">
        </childnode>
      </node>
      <node id="35608">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="35609" relation="include">
        </childnode>
        <childnode refid="35605" relation="include">
        </childnode>
        <childnode refid="35610" relation="include">
        </childnode>
        <childnode refid="35611" relation="include">
        </childnode>
      </node>
      <node id="35601">
        <label>stdint.h</label>
      </node>
      <node id="35652">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="35624">
        <label>wx/wxchar.h</label>
      </node>
      <node id="35602">
        <label>ODPCMAliasBlockFile.h</label>
        <link refid="_o_d_p_c_m_alias_block_file_8h"/>
        <childnode refid="35603" relation="include">
        </childnode>
        <childnode refid="35604" relation="include">
        </childnode>
        <childnode refid="35621" relation="include">
        </childnode>
        <childnode refid="35617" relation="include">
        </childnode>
        <childnode refid="35622" relation="include">
        </childnode>
      </node>
      <node id="35685">
        <label>wx/frame.h</label>
      </node>
      <node id="35621">
        <label>../ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="35622" relation="include">
        </childnode>
        <childnode refid="35609" relation="include">
        </childnode>
      </node>
      <node id="35663">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="35616" relation="include">
        </childnode>
      </node>
      <node id="35620">
        <label>wx/utils.h</label>
      </node>
      <node id="35645">
        <label>../ondemand/ODManager.h</label>
        <link refid="_o_d_manager_8h"/>
        <childnode refid="35646" relation="include">
        </childnode>
        <childnode refid="35647" relation="include">
        </childnode>
        <childnode refid="35621" relation="include">
        </childnode>
        <childnode refid="35622" relation="include">
        </childnode>
        <childnode refid="35688" relation="include">
        </childnode>
      </node>
      <node id="35678">
        <label>wx/evtloop.h</label>
      </node>
      <node id="35641">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="35615" relation="include">
        </childnode>
      </node>
      <node id="35636">
        <label>wx/timer.h</label>
      </node>
      <node id="35649">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="35646" relation="include">
        </childnode>
        <childnode refid="35650" relation="include">
        </childnode>
      </node>
      <node id="35676">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="35666">
        <label>wx/fileconf.h</label>
      </node>
      <node id="35668">
        <label>map</label>
      </node>
      <node id="35671">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="35616" relation="include">
        </childnode>
        <childnode refid="35663" relation="include">
        </childnode>
        <childnode refid="35661" relation="include">
        </childnode>
        <childnode refid="35662" relation="include">
        </childnode>
        <childnode refid="35669" relation="include">
        </childnode>
        <childnode refid="35670" relation="include">
        </childnode>
      </node>
      <node id="35682">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="35609" relation="include">
        </childnode>
      </node>
      <node id="35680">
        <label>wx/stattext.h</label>
      </node>
      <node id="35642">
        <label>../FileFormats.h</label>
        <link refid="_file_formats_8h"/>
        <childnode refid="35618" relation="include">
        </childnode>
        <childnode refid="35612" relation="include">
        </childnode>
        <childnode refid="35605" relation="include">
        </childnode>
        <childnode refid="35609" relation="include">
        </childnode>
        <childnode refid="35626" relation="include">
        </childnode>
      </node>
      <node id="35635">
        <label>wx/socket.h</label>
      </node>
      <node id="35684">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="35662">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="35616" relation="include">
        </childnode>
      </node>
      <node id="35618">
        <label>wx/list.h</label>
      </node>
      <node id="35657">
        <label>wx/menu.h</label>
      </node>
      <node id="35615">
        <label>wx/defs.h</label>
      </node>
      <node id="35640">
        <label>wx/window.h</label>
      </node>
      <node id="35626">
        <label>sndfile.h</label>
      </node>
      <node id="35633">
        <label>wx/intl.h</label>
      </node>
      <node id="35677">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="35609" relation="include">
        </childnode>
        <childnode refid="35615" relation="include">
        </childnode>
        <childnode refid="35659" relation="include">
        </childnode>
        <childnode refid="35678" relation="include">
        </childnode>
        <childnode refid="35679" relation="include">
        </childnode>
        <childnode refid="35680" relation="include">
        </childnode>
        <childnode refid="35620" relation="include">
        </childnode>
      </node>
      <node id="35674">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="35616">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="35605" relation="include">
        </childnode>
        <childnode refid="35612" relation="include">
        </childnode>
      </node>
      <node id="35604">
        <label>../BlockFile.h</label>
        <link refid="_block_file_8h"/>
        <childnode refid="35605" relation="include">
        </childnode>
        <childnode refid="35606" relation="include">
        </childnode>
        <childnode refid="35607" relation="include">
        </childnode>
        <childnode refid="35608" relation="include">
        </childnode>
        <childnode refid="35611" relation="include">
        </childnode>
        <childnode refid="35614" relation="include">
        </childnode>
      </node>
      <node id="35667">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="35615" relation="include">
        </childnode>
        <childnode refid="35613" relation="include">
        </childnode>
        <childnode refid="35666" relation="include">
        </childnode>
        <childnode refid="35605" relation="include">
        </childnode>
        <childnode refid="35668" relation="include">
        </childnode>
        <childnode refid="35661" relation="include">
        </childnode>
        <childnode refid="35669" relation="include">
        </childnode>
        <childnode refid="35670" relation="include">
        </childnode>
        <childnode refid="35671" relation="include">
        </childnode>
      </node>
      <node id="35659">
        <label>wx/dialog.h</label>
      </node>
      <node id="35607">
        <label>wx/filename.h</label>
      </node>
      <node id="35658">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="35641" relation="include">
        </childnode>
        <childnode refid="35638" relation="include">
        </childnode>
        <childnode refid="35659" relation="include">
        </childnode>
        <childnode refid="35631" relation="include">
        </childnode>
        <childnode refid="35660" relation="include">
        </childnode>
        <childnode refid="35605" relation="include">
        </childnode>
        <childnode refid="35661" relation="include">
        </childnode>
        <childnode refid="35667" relation="include">
        </childnode>
        <childnode refid="35672" relation="include">
        </childnode>
      </node>
      <node id="35603">
        <label>PCMAliasBlockFile.h</label>
        <link refid="_p_c_m_alias_block_file_8h"/>
        <childnode refid="35604" relation="include">
        </childnode>
        <childnode refid="35617" relation="include">
        </childnode>
      </node>
      <node id="35664">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="35665" relation="include">
        </childnode>
        <childnode refid="35629" relation="include">
        </childnode>
        <childnode refid="35666" relation="include">
        </childnode>
        <childnode refid="35633" relation="include">
        </childnode>
      </node>
      <node id="35654">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="35641" relation="include">
        </childnode>
        <childnode refid="35655" relation="include">
        </childnode>
        <childnode refid="35646" relation="include">
        </childnode>
        <childnode refid="35605" relation="include">
        </childnode>
        <childnode refid="35613" relation="include">
        </childnode>
        <childnode refid="35657" relation="include">
        </childnode>
        <childnode refid="35619" relation="include">
        </childnode>
        <childnode refid="35627" relation="include">
        </childnode>
        <childnode refid="35608" relation="include">
        </childnode>
        <childnode refid="35616" relation="include">
        </childnode>
      </node>
      <node id="35609">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="35639">
        <label>wx/grid.h</label>
      </node>
      <node id="35599">
        <label>float.h</label>
        <link refid="float_8h"/>
        <childnode refid="35600" relation="include">
        </childnode>
      </node>
      <node id="35646">
        <label>vector</label>
      </node>
      <node id="35672">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="35609" relation="include">
        </childnode>
        <childnode refid="35655" relation="include">
        </childnode>
        <childnode refid="35673" relation="include">
        </childnode>
        <childnode refid="35674" relation="include">
        </childnode>
        <childnode refid="35613" relation="include">
        </childnode>
        <childnode refid="35633" relation="include">
        </childnode>
        <childnode refid="35605" relation="include">
        </childnode>
        <childnode refid="35675" relation="include">
        </childnode>
        <childnode refid="35663" relation="include">
        </childnode>
        <childnode refid="35661" relation="include">
        </childnode>
        <childnode refid="35641" relation="include">
        </childnode>
        <childnode refid="35650" relation="include">
        </childnode>
        <childnode refid="35676" relation="include">
        </childnode>
        <childnode refid="35643" relation="include">
        </childnode>
        <childnode refid="35677" relation="include">
        </childnode>
      </node>
      <node id="35613">
        <label>wx/dynarray.h</label>
      </node>
      <node id="35598">
        <label>C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODPCMAliasBlockFile.cpp</label>
        <link refid="ODPCMAliasBlockFile.cpp"/>
        <childnode refid="35599" relation="include">
        </childnode>
        <childnode refid="35602" relation="include">
        </childnode>
        <childnode refid="35623" relation="include">
        </childnode>
        <childnode refid="35620" relation="include">
        </childnode>
        <childnode refid="35624" relation="include">
        </childnode>
        <childnode refid="35625" relation="include">
        </childnode>
        <childnode refid="35622" relation="include">
        </childnode>
        <childnode refid="35626" relation="include">
        </childnode>
        <childnode refid="35627" relation="include">
        </childnode>
        <childnode refid="35603" relation="include">
        </childnode>
        <childnode refid="35642" relation="include">
        </childnode>
        <childnode refid="35643" relation="include">
        </childnode>
        <childnode refid="35645" relation="include">
        </childnode>
        <childnode refid="35689" relation="include">
        </childnode>
      </node>
      <node id="35648">
        <label>../Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="35609" relation="include">
        </childnode>
        <childnode refid="35641" relation="include">
        </childnode>
        <childnode refid="35617" relation="include">
        </childnode>
        <childnode refid="35649" relation="include">
        </childnode>
        <childnode refid="35652" relation="include">
        </childnode>
        <childnode refid="35653" relation="include">
        </childnode>
        <childnode refid="35654" relation="include">
        </childnode>
        <childnode refid="35658" relation="include">
        </childnode>
        <childnode refid="35608" relation="include">
        </childnode>
        <childnode refid="35681" relation="include">
        </childnode>
        <childnode refid="35682" relation="include">
        </childnode>
        <childnode refid="35615" relation="include">
        </childnode>
        <childnode refid="35631" relation="include">
        </childnode>
        <childnode refid="35625" relation="include">
        </childnode>
        <childnode refid="35683" relation="include">
        </childnode>
        <childnode refid="35684" relation="include">
        </childnode>
        <childnode refid="35685" relation="include">
        </childnode>
        <childnode refid="35633" relation="include">
        </childnode>
        <childnode refid="35686" relation="include">
        </childnode>
        <childnode refid="35687" relation="include">
        </childnode>
      </node>
      <node id="35669">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="35616" relation="include">
        </childnode>
        <childnode refid="35663" relation="include">
        </childnode>
        <childnode refid="35662" relation="include">
        </childnode>
      </node>
      <node id="35605">
        <label>wx/string.h</label>
      </node>
      <node id="35627">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="35609" relation="include">
        </childnode>
        <childnode refid="35628" relation="include">
        </childnode>
        <childnode refid="35629" relation="include">
        </childnode>
        <childnode refid="35630" relation="include">
        </childnode>
        <childnode refid="35631" relation="include">
        </childnode>
        <childnode refid="35632" relation="include">
        </childnode>
        <childnode refid="35633" relation="include">
        </childnode>
        <childnode refid="35634" relation="include">
        </childnode>
        <childnode refid="35625" relation="include">
        </childnode>
        <childnode refid="35635" relation="include">
        </childnode>
        <childnode refid="35636" relation="include">
        </childnode>
        <childnode refid="35637" relation="include">
        </childnode>
        <childnode refid="35621" relation="include">
        </childnode>
        <childnode refid="35641" relation="include">
        </childnode>
      </node>
      <node id="35660">
        <label>wx/listbox.h</label>
      </node>
      <node id="35690">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="35625">
        <label>wx/log.h</label>
      </node>
      <node id="35651">
        <label>math.h</label>
      </node>
      <node id="35617">
        <label>../DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="35618" relation="include">
        </childnode>
        <childnode refid="35605" relation="include">
        </childnode>
        <childnode refid="35607" relation="include">
        </childnode>
        <childnode refid="35619" relation="include">
        </childnode>
        <childnode refid="35620" relation="include">
        </childnode>
        <childnode refid="35616" relation="include">
        </childnode>
        <childnode refid="35608" relation="include">
        </childnode>
      </node>
      <node id="35650">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="35609" relation="include">
        </childnode>
        <childnode refid="35641" relation="include">
        </childnode>
        <childnode refid="35615" relation="include">
        </childnode>
        <childnode refid="35624" relation="include">
        </childnode>
        <childnode refid="35651" relation="include">
        </childnode>
      </node>
      <node id="35612">
        <label>wx/arrstr.h</label>
      </node>
      <node id="35688">
        <label>wx/wx.h</label>
      </node>
      <node id="35634">
        <label>wx/snglinst.h</label>
      </node>
      <node id="35622">
        <label>wx/thread.h</label>
      </node>
      <node id="35623">
        <label>wx/file.h</label>
      </node>
      <node id="35683">
        <label>wx/dragimag.h</label>
      </node>
      <node id="35675">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="35655">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="35656" relation="include">
        </childnode>
      </node>
      <node id="35637">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="35615" relation="include">
        </childnode>
        <childnode refid="35638" relation="include">
        </childnode>
        <childnode refid="35613" relation="include">
        </childnode>
        <childnode refid="35631" relation="include">
        </childnode>
        <childnode refid="35639" relation="include">
        </childnode>
        <childnode refid="35605" relation="include">
        </childnode>
        <childnode refid="35640" relation="include">
        </childnode>
      </node>
      <node id="35673">
        <label>set</label>
      </node>
      <node id="35687">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="35641" relation="include">
        </childnode>
      </node>
      <node id="35628">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="35644">
        <label>wx/longlong.h</label>
      </node>
      <node id="35610">
        <label>stdio.h</label>
      </node>
      <node id="35614">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="35609" relation="include">
        </childnode>
        <childnode refid="35615" relation="include">
        </childnode>
        <childnode refid="35616" relation="include">
        </childnode>
      </node>
      <node id="35665">
        <label>locale.h</label>
      </node>
      <node id="35632">
        <label>wx/docview.h</label>
      </node>
      <node id="35656">
        <label>memory</label>
      </node>
      <node id="35611">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="35612" relation="include">
        </childnode>
        <childnode refid="35613" relation="include">
        </childnode>
        <childnode refid="35606" relation="include">
        </childnode>
      </node>
      <node id="35653">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="35605" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_o_d_p_c_m_alias_block_file_8cpp_1a142d4fde5f1429059adcac9ea1f63425" prot="public" static="no" mutable="no">
        <type><ref refid="class_audio_i_o" kindref="compound">AudioIO</ref> *</type>
        <definition>AudioIO* gAudioIO</definition>
        <argsstring></argsstring>
        <name>gAudioIO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODPCMAliasBlockFile.cpp" line="39" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/AudioIO.cpp" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_o_d_p_c_m_alias_block_file_8cpp_1a130dda61f65207d55452120d615e46d9" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>const int aheaderTagLen</definition>
        <argsstring></argsstring>
        <name>aheaderTagLen</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODPCMAliasBlockFile.cpp" line="41" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODPCMAliasBlockFile.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_o_d_p_c_m_alias_block_file_8cpp_1a9910ce99054b5f8f6cb113b9680aacb7" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char aheaderTag[aheaderTagLen+1]</definition>
        <argsstring>[aheaderTagLen+1]</argsstring>
        <name>aheaderTag</name>
        <initializer>= &quot;AudacityBlockFile112&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODPCMAliasBlockFile.cpp" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODPCMAliasBlockFile.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>ODPCMAliasBlockFile.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Created<sp/>by<sp/>Michael<sp/>Chinen<sp/>(mchinen)</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Audacity(R)<sp/>is<sp/>copyright<sp/>(c)<sp/>1999-2008<sp/>Audacity<sp/>Team.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>License:<sp/>GPL<sp/>v2.<sp/><sp/>See<sp/>License.txt.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="float_8h" kindref="compound">float.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_p_c_m_alias_block_file_8h" kindref="compound">ODPCMAliasBlockFile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/file.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/utils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/wxchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/thread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sndfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../AudacityApp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_p_c_m_alias_block_file_8h" kindref="compound">PCMAliasBlockFile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../FileFormats.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Internat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ondemand/ODManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../AudioIO.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_audio_i_o" kindref="compound">AudioIO</ref><sp/>*<ref refid="_o_d_p_c_m_alias_block_file_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="_o_d_p_c_m_alias_block_file_8cpp_1a130dda61f65207d55452120d615e46d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_o_d_p_c_m_alias_block_file_8cpp_1a130dda61f65207d55452120d615e46d9" kindref="member">aheaderTagLen</ref><sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="42" refid="_o_d_p_c_m_alias_block_file_8cpp_1a9910ce99054b5f8f6cb113b9680aacb7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="_o_d_p_c_m_alias_block_file_8cpp_1a9910ce99054b5f8f6cb113b9680aacb7" kindref="member">aheaderTag</ref>[<ref refid="_o_d_p_c_m_alias_block_file_8cpp_1a130dda61f65207d55452120d615e46d9" kindref="member">aheaderTagLen</ref><sp/>+<sp/>1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AudacityBlockFile112&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_o_d_p_c_m_alias_block_file_1a897e40c43be66ae6169c282b0b5ddea6" refkind="member"><highlight class="normal"><ref refid="class_o_d_p_c_m_alias_block_file_1a897e40c43be66ae6169c282b0b5ddea6" kindref="member">ODPCMAliasBlockFile::ODPCMAliasBlockFile</ref>(</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFileName<sp/>fileName,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFileName<sp/>aliasedFileName,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>aliasStart,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>aliasLen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aliasChannel)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">:<sp/><ref refid="class_p_c_m_alias_block_file" kindref="compound">PCMAliasBlockFile</ref>(fileName,<sp/>aliasedFileName,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliasStart,<sp/>aliasLen,<sp/>aliasChannel,<ref refid="ordinals_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>mSummaryAvailable<sp/>=<sp/>mSummaryBeingComputed<sp/>=<sp/>mHasBeenSaved<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_o_d_p_c_m_alias_block_file_1a701414f66e2eeda52c58c118c9b1214c" refkind="member"><highlight class="normal"><ref refid="class_o_d_p_c_m_alias_block_file_1a897e40c43be66ae6169c282b0b5ddea6" kindref="member">ODPCMAliasBlockFile::ODPCMAliasBlockFile</ref>(</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFileName<sp/>existingSummaryFileName,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFileName<sp/>aliasedFileName,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>aliasStart,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>aliasLen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aliasChannel,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rms,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>summaryAvailable)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">:<sp/><ref refid="class_p_c_m_alias_block_file" kindref="compound">PCMAliasBlockFile</ref>(existingSummaryFileName,<sp/>aliasedFileName,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliasStart,<sp/>aliasLen,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliasChannel,<sp/>min,<sp/>max,<sp/>rms)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>mSummaryAvailable=summaryAvailable;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>mSummaryBeingComputed=mHasBeenSaved=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_o_d_p_c_m_alias_block_file_1afc726191a4b8d805fed7693992a8f003" refkind="member"><highlight class="normal"><ref refid="class_o_d_p_c_m_alias_block_file_1afc726191a4b8d805fed7693992a8f003" kindref="member">ODPCMAliasBlockFile::~ODPCMAliasBlockFile</ref>()</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ODPCMAliasBlockFile::Ref()</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>mRefMutex.Lock();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>BlockFile::Ref();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/>mRefMutex.Unlock();</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ODPCMAliasBlockFile::Deref()</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/>mDerefMutex.Lock();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>ret<sp/>=<sp/>BlockFile::Deref();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ret)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Deref<sp/>returns<sp/>true<sp/>when<sp/>deleted,<sp/>in<sp/>which<sp/>case<sp/>we<sp/>should<sp/>not<sp/>be<sp/>touching<sp/>instance<sp/>variables,<sp/>or<sp/>ever<sp/>calling<sp/>this<sp/>function<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDerefMutex.Unlock();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>we<sp/>have<sp/>the<sp/>file<sp/>for<sp/>these<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_o_d_p_c_m_alias_block_file_1a6a84ebdbd41ecd17ef690f9067b66305" refkind="member"><highlight class="normal">wxLongLong<sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a6a84ebdbd41ecd17ef690f9067b66305" kindref="member">ODPCMAliasBlockFile::GetSpaceUsage</ref>()</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLongLong<sp/>ret;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFileNameMutex.Lock();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFFile<sp/>summaryFile(<ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret=<sp/>summaryFile.Length();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFileNameMutex.Unlock();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_o_d_p_c_m_alias_block_file_1a7af813c1503fdc98db4cc69a524e5679" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a7af813c1503fdc98db4cc69a524e5679" kindref="member">ODPCMAliasBlockFile::Lock</ref>()</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2" kindref="member">IsSummaryAvailable</ref>()&amp;&amp;mHasBeenSaved)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a5380b2450594af576dfd122cad12be1c" kindref="member">PCMAliasBlockFile::Lock</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//when<sp/>the<sp/>file<sp/>closes,<sp/>it<sp/>locks<sp/>the<sp/>blockfiles,<sp/>but<sp/>it<sp/>calls<sp/>this<sp/>so<sp/>we<sp/>can<sp/>check<sp/>if<sp/>it<sp/>has<sp/>been<sp/>saved<sp/>before.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_o_d_p_c_m_alias_block_file_1a24fc4b6e1e0200e23d1ba746d1f666f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a24fc4b6e1e0200e23d1ba746d1f666f2" kindref="member">ODPCMAliasBlockFile::CloseLock</ref>()</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mHasBeenSaved)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a5380b2450594af576dfd122cad12be1c" kindref="member">PCMAliasBlockFile::Lock</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="class_o_d_p_c_m_alias_block_file_1a0533a1608bf3986e73e0eccea7fff703" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a0533a1608bf3986e73e0eccea7fff703" kindref="member">ODPCMAliasBlockFile::Unlock</ref>()</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2" kindref="member">IsSummaryAvailable</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_block_file_1a6f4769dbd80bb4a14e7d28fdad672ded" kindref="member">IsLocked</ref>())</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1addbc143efdfd7f74a7c6beed6023745f" kindref="member">PCMAliasBlockFile::Unlock</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="class_o_d_p_c_m_alias_block_file_1afc0a91ff2adba499ab67c165386c9fed" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1afc0a91ff2adba499ab67c165386c9fed" kindref="member">ODPCMAliasBlockFile::GetMinMax</ref>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outMax,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outRMS)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1ab69b57d79727454d7cea8d1f204791ba" kindref="member">PCMAliasBlockFile::GetMinMax</ref>(start,len,outMin,outMax,outRMS);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fake<sp/>values.<sp/><sp/>These<sp/>values<sp/>are<sp/>used<sp/>usually<sp/>for<sp/>normalization<sp/>and<sp/>amplifying,<sp/>so<sp/>we<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>max<sp/>to<sp/>be<sp/>maximal<sp/>and<sp/>the<sp/>min<sp/>to<sp/>be<sp/>minimal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outMin<sp/>=<sp/>-1.0*<ref refid="_audacity_app_8h_1a1328a434e1b0396053109865b5426f29" kindref="member">JUST_BELOW_MAX_AUDIO</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outMax<sp/>=<sp/>1.0*<ref refid="_audacity_app_8h_1a1328a434e1b0396053109865b5426f29" kindref="member">JUST_BELOW_MAX_AUDIO</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outRMS<sp/>=<sp/>(float)0.707;</highlight><highlight class="comment">//sin<sp/>with<sp/>amp<sp/>of<sp/>1<sp/>rms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="class_o_d_p_c_m_alias_block_file_1ade47540564fbe9ff526e33b49507275c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1afc0a91ff2adba499ab67c165386c9fed" kindref="member">ODPCMAliasBlockFile::GetMinMax</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outMax,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outRMS)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1ab69b57d79727454d7cea8d1f204791ba" kindref="member">PCMAliasBlockFile::GetMinMax</ref>(outMin,outMax,outRMS);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fake<sp/>values.<sp/><sp/>These<sp/>values<sp/>are<sp/>used<sp/>usually<sp/>for<sp/>normalization<sp/>and<sp/>amplifying,<sp/>so<sp/>we<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>max<sp/>to<sp/>be<sp/>maximal<sp/>and<sp/>the<sp/>min<sp/>to<sp/>be<sp/>minimal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outMin<sp/>=<sp/>-1.0*<ref refid="_audacity_app_8h_1a1328a434e1b0396053109865b5426f29" kindref="member">JUST_BELOW_MAX_AUDIO</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outMax<sp/>=<sp/>1.0*<ref refid="_audacity_app_8h_1a1328a434e1b0396053109865b5426f29" kindref="member">JUST_BELOW_MAX_AUDIO</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outRMS<sp/>=<sp/>(float)0.707;</highlight><highlight class="comment">//sin<sp/>with<sp/>amp<sp/>of<sp/>1<sp/>rms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="class_o_d_p_c_m_alias_block_file_1add9c7cca332ca0b0be4a61c55881369a" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1add9c7cca332ca0b0be4a61c55881369a" kindref="member">ODPCMAliasBlockFile::Read256</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1a3f7acc98f1761d78cccbd031314a33ea" kindref="member">PCMAliasBlockFile::Read256</ref>(buffer,start,len);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="class_o_d_p_c_m_alias_block_file_1a50e25f64944b108d82c7d1a14901571f" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a50e25f64944b108d82c7d1a14901571f" kindref="member">ODPCMAliasBlockFile::Read64K</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1acf929dfa98eab1cbd93b7d79394bc141" kindref="member">PCMAliasBlockFile::Read64K</ref>(buffer,start,len);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>nothing<sp/>-<sp/>it<sp/>hasn&apos;t<sp/>been<sp/>calculated<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="class_o_d_p_c_m_alias_block_file_1ad438dbf015da43581f8b5d218cc83ff2" refkind="member"><highlight class="normal"><ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*<ref refid="class_o_d_p_c_m_alias_block_file_1ad438dbf015da43581f8b5d218cc83ff2" kindref="member">ODPCMAliasBlockFile::Copy</ref>(wxFileName<sp/>newFileName)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*newBlockFile;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//mAliasedFile<sp/>can<sp/>change<sp/>so<sp/>we<sp/>lock<sp/>readdatamutex,<sp/>which<sp/>is<sp/>responsible<sp/>for<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a4a88dd841ed537ddccd37d503b2642a6" kindref="member">LockRead</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>file<sp/>has<sp/>been<sp/>written<sp/>AND<sp/>it<sp/>has<sp/>been<sp/>saved,<sp/>we<sp/>create<sp/>a<sp/>PCM<sp/>alias<sp/>blockfile<sp/>because<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//all<sp/>intents<sp/>and<sp/>purposes,<sp/>it<sp/>is<sp/>the<sp/>same.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//However,<sp/>if<sp/>it<sp/>hasn&apos;t<sp/>been<sp/>saved<sp/>yet,<sp/>we<sp/>shouldn&apos;t<sp/>create<sp/>one<sp/>because<sp/>the<sp/>default<sp/>behavior<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//PCMAliasBlockFile<sp/>is<sp/>to<sp/>lock<sp/>on<sp/>exit,<sp/>and<sp/>this<sp/>will<sp/>cause<sp/>orphaned<sp/>blockfiles..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2" kindref="member">IsSummaryAvailable</ref>()<sp/>&amp;&amp;<sp/>mHasBeenSaved)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newBlockFile<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_p_c_m_alias_block_file_1a7fd7930fee9ced8129b4fd073ab590eb" kindref="member">PCMAliasBlockFile</ref>(newFileName,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alias_block_file_1a8c098b2f0b168462fcaa45a6dad4682c" kindref="member">mAliasedFileName</ref>,<sp/><ref refid="class_alias_block_file_1a25ce7e8f04c9bc5300395c4eb4ebd5f4" kindref="member">mAliasStart</ref>,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>,<sp/><ref refid="class_alias_block_file_1afe28fdf0e410949f7957c8bab52358df" kindref="member">mAliasChannel</ref>,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a733757c3a2c9d2e51beab8acbc86f913" kindref="member">mMin</ref>,<sp/><ref refid="class_block_file_1abda14ef73ea31a585b26e289a99ac356" kindref="member">mMax</ref>,<sp/><ref refid="class_block_file_1a9b863f624b2d76a5ec29390cebed698f" kindref="member">mRMS</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Summary<sp/>File<sp/>might<sp/>exist<sp/>in<sp/>this<sp/>case,<sp/>but<sp/>it<sp/>might<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newBlockFile<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a897e40c43be66ae6169c282b0b5ddea6" kindref="member">ODPCMAliasBlockFile</ref>(newFileName,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alias_block_file_1a8c098b2f0b168462fcaa45a6dad4682c" kindref="member">mAliasedFileName</ref>,<sp/><ref refid="class_alias_block_file_1a25ce7e8f04c9bc5300395c4eb4ebd5f4" kindref="member">mAliasStart</ref>,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>,<sp/><ref refid="class_alias_block_file_1afe28fdf0e410949f7957c8bab52358df" kindref="member">mAliasChannel</ref>,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a733757c3a2c9d2e51beab8acbc86f913" kindref="member">mMin</ref>,<sp/><ref refid="class_block_file_1abda14ef73ea31a585b26e289a99ac356" kindref="member">mMax</ref>,<sp/><ref refid="class_block_file_1a9b863f624b2d76a5ec29390cebed698f" kindref="member">mRMS</ref>,<ref refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2" kindref="member">IsSummaryAvailable</ref>());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>client<sp/>code<sp/>will<sp/>need<sp/>to<sp/>schedule<sp/>this<sp/>blockfile<sp/>for<sp/>OD<sp/>summarizing<sp/>if<sp/>it<sp/>is<sp/>going<sp/>to<sp/>a<sp/>NEW<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a1165611735ce562282971dada1623f85" kindref="member">UnlockRead</ref>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newBlockFile;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="class_o_d_p_c_m_alias_block_file_1a2693e00c383ef58a4febd44eafaf2c6a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a2693e00c383ef58a4febd44eafaf2c6a" kindref="member">ODPCMAliasBlockFile::SaveXML</ref>(<ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref><sp/>&amp;xmlFile)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>lock<sp/>this<sp/>so<sp/>that<sp/>mAliasedFileName<sp/>doesn&apos;t<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a4a88dd841ed537ddccd37d503b2642a6" kindref="member">LockRead</ref>();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_p_c_m_alias_block_file_1ab20853be8b5afdcb0573ff82e92fbe96" kindref="member">PCMAliasBlockFile::SaveXML</ref>(xmlFile);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHasBeenSaved<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a38abb8ecc4a15db0272d43ff8bec1369" kindref="member">StartTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;odpcmaliasblockfile&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//unlock<sp/>to<sp/>prevent<sp/>deadlock<sp/>and<sp/>resume<sp/>lock<sp/>after.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a1165611735ce562282971dada1623f85" kindref="member">UnlockRead</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFileNameMutex.Lock();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;summaryfile&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullName());</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFileNameMutex.Unlock();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a4a88dd841ed537ddccd37d503b2642a6" kindref="member">LockRead</ref>();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;aliasfile&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_alias_block_file_1a8c098b2f0b168462fcaa45a6dad4682c" kindref="member">mAliasedFileName</ref>.GetFullPath());</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;aliasstart&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_alias_block_file_1a25ce7e8f04c9bc5300395c4eb4ebd5f4" kindref="member">mAliasStart</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;aliaslen&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;aliaschannel&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_alias_block_file_1afe28fdf0e410949f7957c8bab52358df" kindref="member">mAliasChannel</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a5c4e63c2c9762b6a04ad4e48bb117678" kindref="member">EndTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;odpcmaliasblockfile&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a1165611735ce562282971dada1623f85" kindref="member">UnlockRead</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="comment">//<sp/>BuildFromXML<sp/>methods<sp/>should<sp/>always<sp/>return<sp/>a<sp/>BlockFile,<sp/>not<sp/>NULL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>even<sp/>if<sp/>the<sp/>result<sp/>is<sp/>flawed<sp/>(e.g.,<sp/>refers<sp/>to<sp/>nonexistent<sp/>file),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>testing<sp/>will<sp/>be<sp/>done<sp/>in<sp/>DirManager::ProjectFSCK().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="class_o_d_p_c_m_alias_block_file_1ab73f4756dd8d977510a3ab15f909a996" refkind="member"><highlight class="normal"><ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*<ref refid="class_o_d_p_c_m_alias_block_file_1ab73f4756dd8d977510a3ab15f909a996" kindref="member">ODPCMAliasBlockFile::BuildFromXML</ref>(<ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>&amp;dm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>**attrs)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/>summaryFileName;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/>aliasFileName;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>aliasStart=0,<sp/>aliasLen=0;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aliasChannel=0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nValue;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*attrs)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*attr<sp/>=<sp/><sp/>*attrs++;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>strValue<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;summaryfile&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>XMLValueChecker::IsGoodFileName<sp/>here,<sp/>but<sp/>do<sp/>part<sp/>of<sp/>its<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1a05d805de92f483d377f1822839dd3700" kindref="member">XMLValueChecker::IsGoodFileString</ref>(strValue)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strValue.Length()<sp/>+<sp/>1<sp/>+<sp/>dm.<ref refid="class_dir_manager_1a48fbc0b9327fdbcad0486eaba94f27db" kindref="member">GetProjectDataDir</ref>().Length()<sp/>&lt;=<sp/><ref refid="_audacity_8h_1a374d1a54d41c48ed6cb67cb2b912fed2" kindref="member">PLATFORM_MAX_PATH</ref>))</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dm.<ref refid="class_dir_manager_1a9d9857b644d36aa53b8a670c3589e0ad" kindref="member">AssignFile</ref>(summaryFileName,<sp/>strValue,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>summaryFileName<sp/>is<sp/>back<sp/>to<sp/>uninitialized<sp/>state<sp/>so<sp/>we<sp/>can<sp/>detect<sp/>problem<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summaryFileName.Clear();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;aliasfile&quot;</highlight><highlight class="normal">))<sp/>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_x_m_l_value_checker_1a97ca6cdce1f85f74fff3bd59dcc28d48" kindref="member">XMLValueChecker::IsGoodPathName</ref>(strValue))</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliasFileName.Assign(strValue);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_x_m_l_value_checker_1ace939107688c8886ec015cfbbab8cebe" kindref="member">XMLValueChecker::IsGoodFileName</ref>(strValue,<sp/>dm.<ref refid="class_dir_manager_1a48fbc0b9327fdbcad0486eaba94f27db" kindref="member">GetProjectDataDir</ref>()))</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>fallback<sp/>of<sp/>looking<sp/>for<sp/>the<sp/>file<sp/>name,<sp/>located<sp/>in<sp/>the<sp/>data<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliasFileName.Assign(dm.<ref refid="class_dir_manager_1a48fbc0b9327fdbcad0486eaba94f27db" kindref="member">GetProjectDataDir</ref>(),<sp/>strValue);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_x_m_l_value_checker_1a67526db38314c2ca8ddfa4e9d8f311ee" kindref="member">XMLValueChecker::IsGoodPathString</ref>(strValue))</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>aliased<sp/>file<sp/>is<sp/>missing,<sp/>we<sp/>failed<sp/>XMLValueChecker::IsGoodPathName()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>XMLValueChecker::IsGoodFileName,<sp/>because<sp/>both<sp/>do<sp/>existence<sp/>tests,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>want<sp/>to<sp/>keep<sp/>the<sp/>reference<sp/>to<sp/>the<sp/>missing<sp/>file<sp/>because<sp/>it&apos;s<sp/>a<sp/>good<sp/>path<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliasFileName.Assign(strValue);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>&amp;&amp;<sp/>strValue.ToLong(&amp;nValue))</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>integer<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;aliasstart&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>(nValue<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliasStart<sp/>=<sp/>nValue;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;aliaslen&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>(nValue<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliasLen<sp/>=<sp/>nValue;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;aliaschannel&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/><ref refid="class_x_m_l_value_checker_1a391cb5648030e28716d3775e8b4dd955" kindref="member">XMLValueChecker::IsValidChannel</ref>(aliasChannel))</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliasChannel<sp/>=<sp/>nValue;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a897e40c43be66ae6169c282b0b5ddea6" kindref="member">ODPCMAliasBlockFile</ref>(summaryFileName,<sp/>aliasFileName,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliasStart,<sp/>aliasLen,<sp/>aliasChannel,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,0,0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="class_o_d_p_c_m_alias_block_file_1a645b0cb82890afcd09f20c5b110c1b10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a645b0cb82890afcd09f20c5b110c1b10" kindref="member">ODPCMAliasBlockFile::Recover</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1acb8de98382b5fa4932c431d33adbd8f9" kindref="member">WriteSummary</ref>();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2" kindref="member">ODPCMAliasBlockFile::IsSummaryAvailable</ref>()</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/>mSummaryAvailableMutex.Lock();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/>retval=<sp/>mSummaryAvailable;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/>mSummaryAvailableMutex.Unlock();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="class_o_d_p_c_m_alias_block_file_1a4294c50df9862c688da8d15035215f88" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a4294c50df9862c688da8d15035215f88" kindref="member">ODPCMAliasBlockFile::DoWriteSummary</ref>()</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/>mWriteSummaryMutex.Lock();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1acb8de98382b5fa4932c431d33adbd8f9" kindref="member">WriteSummary</ref>();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/>mWriteSummaryMutex.Unlock();</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="class_o_d_p_c_m_alias_block_file_1ab34483f6450bf17d5f3ff0d97adc7915" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1ab34483f6450bf17d5f3ff0d97adc7915" kindref="member">ODPCMAliasBlockFile::SetFileName</ref>(wxFileName<sp/>&amp;<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/>mFileNameMutex.Lock();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>=<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/>mFileNameMutex.Unlock();</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="class_o_d_p_c_m_alias_block_file_1a6f5c7b27e19ac3f4734fa67cd8425ddd" refkind="member"><highlight class="normal">wxFileName<sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a6f5c7b27e19ac3f4734fa67cd8425ddd" kindref="member">ODPCMAliasBlockFile::GetFileName</ref>()</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/>mFileNameMutex.Lock();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/>mFileNameMutex.Unlock();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="class_o_d_p_c_m_alias_block_file_1acb8de98382b5fa4932c431d33adbd8f9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1acb8de98382b5fa4932c431d33adbd8f9" kindref="member">ODPCMAliasBlockFile::WriteSummary</ref>()</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>mFileName<sp/>path<sp/>may<sp/>change,<sp/>for<sp/>example,<sp/>when<sp/>the<sp/>project<sp/>is<sp/>saved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//(it<sp/>moves<sp/>from<sp/>/tmp/<sp/>to<sp/>wherever<sp/>it<sp/>is<sp/>saved<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/>mFileNameMutex.Lock();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//wxFFile<sp/>is<sp/>not<sp/>thread-safe<sp/>-<sp/>if<sp/>any<sp/>error<sp/>occurs<sp/>in<sp/>opening<sp/>the<sp/>file,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>posts<sp/>a<sp/>wxlog<sp/>message<sp/>which<sp/>WILL<sp/>crash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Audacity<sp/>because<sp/>it<sp/>goes<sp/>into<sp/>the<sp/>wx<sp/>GUI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>this<sp/>reason<sp/>I<sp/>left<sp/>the<sp/>wxFFile<sp/>method<sp/>commented<sp/>out.<sp/>(mchinen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>wxFFile<sp/>summaryFile(mFileName.GetFullPath(),<sp/>wxT(&quot;wb&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...and<sp/>we<sp/>use<sp/>fopen<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>sFullPath<sp/>=<sp/><ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileNameChar<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[strlen(sFullPath.mb_str(wxConvFile))<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(fileNameChar,<sp/>sFullPath.mb_str(wxConvFile));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/>FILE*<sp/>summaryFile<sp/>=<sp/>fopen(fileNameChar,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/>mFileNameMutex.Unlock();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!summaryFile){</highlight><highlight class="comment">//.IsOpened()<sp/>){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Never<sp/>silence<sp/>the<sp/>Log<sp/>w.r.t<sp/>write<sp/>errors;<sp/>they<sp/>always<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//however,<sp/>this<sp/>is<sp/>going<sp/>to<sp/>be<sp/>called<sp/>from<sp/>a<sp/>non-main<sp/>thread,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>wxLog<sp/>calls<sp/>are<sp/>not<sp/>thread<sp/>safe.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>write<sp/>summary<sp/>data<sp/>to<sp/>file:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>fileNameChar);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>fileNameChar;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>fileNameChar;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>build<sp/>the<sp/>summary<sp/>data,<sp/>call<sp/>ReadData<sp/>(implemented<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>derived<sp/>classes)<sp/>to<sp/>get<sp/>the<sp/>sample<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_sample_buffer" kindref="compound">SampleBuffer</ref><sp/>sampleData(<ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/>this-&gt;<ref refid="class_o_d_p_c_m_alias_block_file_1a52ff6c8c85016d45e39e33eea8956ba7" kindref="member">ReadData</ref>(sampleData.<ref refid="class_sample_buffer_1a67109e75aa852d6196692e683d248dcd" kindref="member">ptr</ref>(),<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>0,<sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*summaryData<sp/>=<sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a12bb8dca9c683e2634a38187c2db2000" kindref="member">CalcSummary</ref>(sampleData.<ref refid="class_sample_buffer_1a67109e75aa852d6196692e683d248dcd" kindref="member">ptr</ref>(),<sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//summaryFile.Write(summaryData,<sp/>mSummaryInfo.totalSummaryBytes);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/>fwrite(summaryData,<sp/>1,<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>,<sp/>summaryFile);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(summaryFile);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>summaryData;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>printf(&quot;write<sp/>successful.<sp/>filename:<sp/>%s\n&quot;,<sp/>fileNameChar);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/>mSummaryAvailableMutex.Lock();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/>mSummaryAvailable=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/>mSummaryAvailableMutex.Unlock();</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="class_o_d_p_c_m_alias_block_file_1a12bb8dca9c683e2634a38187c2db2000" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_o_d_p_c_m_alias_block_file_1a12bb8dca9c683e2634a38187c2db2000" kindref="member">ODPCMAliasBlockFile::CalcSummary</ref>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>localFullSummary<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>];</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/>memcpy(localFullSummary,<sp/><ref refid="_o_d_p_c_m_alias_block_file_8cpp_1a9910ce99054b5f8f6cb113b9680aacb7" kindref="member">aheaderTag</ref>,<sp/><ref refid="_o_d_p_c_m_alias_block_file_8cpp_1a130dda61f65207d55452120d615e46d9" kindref="member">aheaderTagLen</ref>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*summary64K<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)(localFullSummary<sp/>+<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1aca2983511bb953ffa03d1d007fac7ab7" kindref="member">offset64K</ref>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*summary256<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)(localFullSummary<sp/>+<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1ab41427f2e0bf3978ffec891676cdd794" kindref="member">offset256</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*fbuffer;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//mchinen:<sp/>think<sp/>we<sp/>can<sp/>hack<sp/>this<sp/>-<sp/>don&apos;t<sp/>allocate<sp/>and<sp/>copy<sp/>if<sp/>we<sp/>don&apos;t<sp/>need<sp/>to.,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(format==<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fbuffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)buffer;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fbuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>];</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_sample_format_8cpp_1a2819d83a15a7623e52e6562b3329471c" kindref="member">CopySamples</ref>(buffer,<sp/>format,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)fbuffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>sumLen;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j,<sp/>jcount;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sumsq;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recalc<sp/>256<sp/>summaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/>sumLen<sp/>=<sp/>(len<sp/>+<sp/>255)<sp/>/<sp/>256;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sumLen;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>fbuffer[i<sp/>*<sp/>256];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>fbuffer[i<sp/>*<sp/>256];</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>=<sp/>((float)min)<sp/>*<sp/>((float)min);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jcount<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>*<sp/>256<sp/>+<sp/>jcount<sp/>&gt;<sp/>len)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jcount<sp/>=<sp/>len<sp/>-<sp/>i<sp/>*<sp/>256;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>jcount;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f1<sp/>=<sp/>fbuffer[i<sp/>*<sp/>256<sp/>+<sp/>j];</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>+=<sp/>((float)f1)<sp/>*<sp/>((float)f1);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f1<sp/>&lt;<sp/>min)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>f1;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f1<sp/>&gt;<sp/>max)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>f1;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rms<sp/>=<sp/>(float)sqrt(sumsq<sp/>/<sp/>jcount);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3]<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3<sp/>+<sp/>1]<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3<sp/>+<sp/>2]<sp/>=<sp/>rms;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>sumLen;<sp/>i<sp/>&lt;<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a00a14b80fc6fd53b1a487d3c330e5ab0" kindref="member">frames256</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filling<sp/>in<sp/>the<sp/>remaining<sp/>bits<sp/>with<sp/>non-harming/contributing<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3]<sp/>=<sp/>FLT_MAX;<sp/><sp/></highlight><highlight class="comment">//<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3<sp/>+<sp/>1]<sp/>=<sp/>-FLT_MAX;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3<sp/>+<sp/>2]<sp/>=<sp/>0.0f;<sp/></highlight><highlight class="comment">//<sp/>rms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recalc<sp/>64K<sp/>summaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/>sumLen<sp/>=<sp/>(len<sp/>+<sp/>65535)<sp/>/<sp/>65536;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sumLen;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>summary256[3<sp/>*<sp/>i<sp/>*<sp/>256];</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>summary256[3<sp/>*<sp/>i<sp/>*<sp/>256<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>=<sp/>(float)summary256[3<sp/>*<sp/>i<sp/>*<sp/>256<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>*=<sp/>sumsq;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>256;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)]<sp/>&lt;<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)];</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)<sp/>+<sp/>1]<sp/>&gt;<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref><sp/>=<sp/>summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>+=<sp/>r1*<ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rms<sp/>=<sp/>(float)sqrt(sumsq<sp/>/<sp/>256);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3]<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3<sp/>+<sp/>1]<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3<sp/>+<sp/>2]<sp/>=<sp/>rms;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>sumLen;<sp/>i<sp/>&lt;<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a20e734e06be335e039aeedc1c2833ece" kindref="member">frames64K</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3<sp/>+<sp/>1]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3<sp/>+<sp/>2]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recalc<sp/>block-level<sp/>summary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/>min<sp/>=<sp/>summary64K[0];</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/>max<sp/>=<sp/>summary64K[1];</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/>sumsq<sp/>=<sp/>(float)summary64K[2];</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/>sumsq<sp/>*=<sp/>sumsq;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>sumLen;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary64K[3*i]<sp/>&lt;<sp/>min)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>summary64K[3*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary64K[3*i+1]<sp/>&gt;<sp/>max)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>summary64K[3*i+1];</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref><sp/>=<sp/>(float)summary64K[3*i+2];</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>+=<sp/>(r1*<ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1a733757c3a2c9d2e51beab8acbc86f913" kindref="member">mMin</ref><sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1abda14ef73ea31a585b26e289a99ac356" kindref="member">mMax</ref><sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1a9b863f624b2d76a5ec29390cebed698f" kindref="member">mRMS</ref><sp/>=<sp/>sqrt(sumsq<sp/>/<sp/>sumLen);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>we&apos;ve<sp/>used<sp/>the<sp/>float<sp/>sample..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(format!=<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>fbuffer;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>localFullSummary;</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="class_o_d_p_c_m_alias_block_file_1a52ff6c8c85016d45e39e33eea8956ba7" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a52ff6c8c85016d45e39e33eea8956ba7" kindref="member">ODPCMAliasBlockFile::ReadData</ref>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a4a88dd841ed537ddccd37d503b2642a6" kindref="member">LockRead</ref>();</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_s_f___i_n_f_o" kindref="compound">SF_INFO</ref><sp/><ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_alias_block_file_1a8c098b2f0b168462fcaa45a6dad4682c" kindref="member">mAliasedFileName</ref>.IsOk()){<sp/></highlight><highlight class="comment">//<sp/>intentionally<sp/>silenced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(data,0,<ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(format)*len);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a1165611735ce562282971dada1623f85" kindref="member">UnlockRead</ref>();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/>memset(&amp;info,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(info));</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>aliasPath<sp/>=<sp/><ref refid="class_alias_block_file_1a8c098b2f0b168462fcaa45a6dad4682c" kindref="member">mAliasedFileName</ref>.GetFullPath();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//there<sp/>are<sp/>thread-unsafe<sp/>crashes<sp/>here<sp/>-<sp/>not<sp/>sure<sp/>why.<sp/><sp/>sf_open<sp/>may<sp/>be<sp/>called<sp/>on<sp/>the<sp/>same<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//from<sp/>different<sp/>threads,<sp/>but<sp/>this<sp/>seems<sp/>okay,<sp/>unless<sp/>it<sp/>is<sp/>implemented<sp/>strangely..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_o_d_lock" kindref="compound">ODLock</ref><sp/>sfMutex;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/>wxFile<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>closed<sp/>when<sp/>it<sp/>goes<sp/>out<sp/>of<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac14209bc83d532b06a8cdf9ade6d544a" kindref="member">SNDFILE</ref><sp/>*sf<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.Exists(aliasPath)<sp/>&amp;&amp;<sp/>f.Open(aliasPath))<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>there<sp/>is<sp/>an<sp/>sf_open()<sp/>that<sp/>takes<sp/>a<sp/>filename,<sp/>use<sp/>the<sp/>one<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>takes<sp/>a<sp/>file<sp/>descriptor<sp/>since<sp/>wxWidgets<sp/>can<sp/>open<sp/>a<sp/>file<sp/>with<sp/>a<sp/>Unicode<sp/>name<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>libsndfile<sp/>can&apos;t<sp/>(under<sp/>Windows).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1a9229bb31acd18ddc7c3e75dd78e4d263" kindref="member">ODManager::LockLibSndFileMutex</ref>();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/><ref refid="sndfile_8c_1a0480812421818e88cc6032834ec14431" kindref="member">sf_open_fd</ref>(f.fd(),<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a125531fe9c895237bccd35736370e815" kindref="member">SFM_READ</ref>,<sp/>&amp;<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref>,<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1a046fb8a887ed44e9a6a2497b21ddd8fc" kindref="member">ODManager::UnlockLibSndFileMutex</ref>();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sf){</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(data,0,<ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(format)*len);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alias_block_file_1a5c0cb39191f74e9941bd614fbd5d9a35" kindref="member">mSilentAliasLog</ref>=<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>marker<sp/>to<sp/>display<sp/>an<sp/>error<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().ShouldShowMissingAliasedFileWarning())</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a05e03a9a9caa436a87a803a4eea19d51" kindref="member">MarkAliasedFilesMissingWarning</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a1165611735ce562282971dada1623f85" kindref="member">UnlockRead</ref>();</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_alias_block_file_1a5c0cb39191f74e9941bd614fbd5d9a35" kindref="member">mSilentAliasLog</ref>=<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_manager_1a9229bb31acd18ddc7c3e75dd78e4d263" kindref="member">ODManager::LockLibSndFileMutex</ref>();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a73cc07589d395d7e36a2cecd1510f9f0" kindref="member">sf_seek</ref>(sf,<sp/><ref refid="class_alias_block_file_1a25ce7e8f04c9bc5300395c4eb4ebd5f4" kindref="member">mAliasStart</ref><sp/>+<sp/>start,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_manager_1a046fb8a887ed44e9a6a2497b21ddd8fc" kindref="member">ODManager::UnlockLibSndFileMutex</ref>();</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_sample_buffer" kindref="compound">SampleBuffer</ref><sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>(len<sp/>*<sp/>info.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba99d110ae36be71bbf3cb9ad3af4550" kindref="member">int16Sample</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="_file_formats_8cpp_1a4894b4d75ca7490835d92bc0c852ba27" kindref="member">sf_subtype_more_than_16_bits</ref>(info.<ref refid="struct_s_f___i_n_f_o_1a36a7c3ae9a8229797f19267b4ba07361" kindref="member">format</ref>))<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>case:<sp/>if<sp/>the<sp/>file<sp/>is<sp/>in<sp/>16-bit<sp/>(or<sp/>less)<sp/>format,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>calling<sp/>method<sp/>wants<sp/>16-bit<sp/>data,<sp/>go<sp/>ahead<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>16-bit<sp/>data<sp/>directly.<sp/><sp/>This<sp/>is<sp/>a<sp/>pretty<sp/>common</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case,<sp/>as<sp/>most<sp/>audio<sp/>files<sp/>are<sp/>16-bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1a9229bb31acd18ddc7c3e75dd78e4d263" kindref="member">ODManager::LockLibSndFileMutex</ref>();</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>framesRead<sp/>=<sp/><ref refid="sndfile_8c_1aa82f7bc9ad5058e9910c88c49a389777" kindref="member">sf_readf_short</ref>(sf,<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)buffer.<ref refid="class_sample_buffer_1a67109e75aa852d6196692e683d248dcd" kindref="member">ptr</ref>(),<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1a046fb8a887ed44e9a6a2497b21ddd8fc" kindref="member">ODManager::UnlockLibSndFileMutex</ref>();</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>framesRead;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)data)[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)buffer.<ref refid="class_sample_buffer_1a67109e75aa852d6196692e683d248dcd" kindref="member">ptr</ref>())[(info.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref><sp/>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>+<sp/><ref refid="class_alias_block_file_1afe28fdf0e410949f7957c8bab52358df" kindref="member">mAliasChannel</ref>];</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>let<sp/>libsndfile<sp/>handle<sp/>the<sp/>conversion<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scaling,<sp/>and<sp/>pass<sp/>us<sp/>normalized<sp/>data<sp/>as<sp/>floats.<sp/><sp/>We<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>convert<sp/>to<sp/>whatever<sp/>format<sp/>we<sp/>want.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1a9229bb31acd18ddc7c3e75dd78e4d263" kindref="member">ODManager::LockLibSndFileMutex</ref>();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>framesRead<sp/>=<sp/><ref refid="sndfile_8c_1aee45e707761d55cc2111328451ffc760" kindref="member">sf_readf_float</ref>(sf,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)buffer.<ref refid="class_sample_buffer_1a67109e75aa852d6196692e683d248dcd" kindref="member">ptr</ref>(),<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1a046fb8a887ed44e9a6a2497b21ddd8fc" kindref="member">ODManager::UnlockLibSndFileMutex</ref>();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="xmlparse_8c_1af0e9c27e1d82202b57e87eebacf0dccf" kindref="member">bufferPtr</ref><sp/>=<sp/>&amp;((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)buffer.<ref refid="class_sample_buffer_1a67109e75aa852d6196692e683d248dcd" kindref="member">ptr</ref>())[<ref refid="class_alias_block_file_1afe28fdf0e410949f7957c8bab52358df" kindref="member">mAliasChannel</ref>];</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_sample_format_8cpp_1a2819d83a15a7623e52e6562b3329471c" kindref="member">CopySamples</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)bufferPtr,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)data,<sp/>format,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesRead,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>info.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_manager_1a9229bb31acd18ddc7c3e75dd78e4d263" kindref="member">ODManager::LockLibSndFileMutex</ref>();</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a276b87553823c937c62492206f0ed81e" kindref="member">sf_close</ref>(sf);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_manager_1a046fb8a887ed44e9a6a2497b21ddd8fc" kindref="member">ODManager::UnlockLibSndFileMutex</ref>();</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a1165611735ce562282971dada1623f85" kindref="member">UnlockRead</ref>();</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>framesRead;</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="class_o_d_p_c_m_alias_block_file_1abd6dc5b3aaa8b3ba396bb08cf4b29026" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1abd6dc5b3aaa8b3ba396bb08cf4b29026" kindref="member">ODPCMAliasBlockFile::ReadSummary</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/>mFileNameMutex.Lock();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/>wxFFile<sp/>summaryFile(<ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!summaryFile.IsOpened()<sp/>){</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NEW<sp/>model;<sp/>we<sp/>need<sp/>to<sp/>return<sp/>valid<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(data,0,(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>silence<sp/>the<sp/>logging<sp/>for<sp/>this<sp/>operation<sp/>in<sp/>this<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>first<sp/>occurrence<sp/>of<sp/>error;<sp/>it&apos;s<sp/>already<sp/>reported<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spewing<sp/>at<sp/>the<sp/>user<sp/>will<sp/>complicate<sp/>the<sp/>user&apos;s<sp/>ability<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" kindref="member">mSilentLog</ref>=<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFileNameMutex.Unlock();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" kindref="member">mSilentLog</ref>=<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/></highlight><highlight class="comment">//<sp/>worked<sp/>properly,<sp/>any<sp/>future<sp/>error<sp/>is<sp/>NEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read<sp/>=<sp/>summaryFile.Read(data,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1abb3580667f6451b2ab0d4cc1a45f7a7a" kindref="member">FixSummary</ref>(data);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/>mFileNameMutex.Unlock();</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(read<sp/>==<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="723" refid="class_o_d_p_c_m_alias_block_file_1a4a88dd841ed537ddccd37d503b2642a6" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a4a88dd841ed537ddccd37d503b2642a6" kindref="member">ODPCMAliasBlockFile::LockRead</ref>()</highlight></codeline>
<codeline lineno="724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/>mReadDataMutex.Lock();</highlight></codeline>
<codeline lineno="726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728" refid="class_o_d_p_c_m_alias_block_file_1a1165611735ce562282971dada1623f85" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_p_c_m_alias_block_file_1a1165611735ce562282971dada1623f85" kindref="member">ODPCMAliasBlockFile::UnlockRead</ref>()</highlight></codeline>
<codeline lineno="729"><highlight class="normal">{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/>mReadDataMutex.Unlock();</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODPCMAliasBlockFile.cpp"/>
  </compounddef>
</doxygen>
