<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_project_8cpp" kind="file" language="C++">
    <compoundname>Project.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">Audacity.h</includes>
    <includes refid="_project_8h" local="yes">Project.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">wx/wxprec.h</includes>
    <includes local="no">wx/apptrait.h</includes>
    <includes local="no">wx/defs.h</includes>
    <includes refid="app_8h" local="no">wx/app.h</includes>
    <includes local="no">wx/dc.h</includes>
    <includes local="no">wx/dcmemory.h</includes>
    <includes local="no">wx/dnd.h</includes>
    <includes local="no">wx/docview.h</includes>
    <includes local="no">wx/event.h</includes>
    <includes local="no">wx/ffile.h</includes>
    <includes local="no">wx/filedlg.h</includes>
    <includes local="no">wx/filefn.h</includes>
    <includes local="no">wx/filename.h</includes>
    <includes local="no">wx/intl.h</includes>
    <includes local="no">wx/log.h</includes>
    <includes local="no">wx/menu.h</includes>
    <includes local="no">wx/msgdlg.h</includes>
    <includes local="no">wx/notebook.h</includes>
    <includes local="no">wx/progdlg.h</includes>
    <includes local="no">wx/scrolbar.h</includes>
    <includes local="no">wx/sizer.h</includes>
    <includes local="no">wx/statusbr.h</includes>
    <includes local="no">wx/string.h</includes>
    <includes local="no">wx/textfile.h</includes>
    <includes local="no">wx/timer.h</includes>
    <includes local="no">wx/display.h</includes>
    <includes local="no">wx/arrimpl.cpp</includes>
    <includes refid="_freq_window_8h" local="yes">FreqWindow.h</includes>
    <includes refid="_contrast_8h" local="yes">effects/Contrast.h</includes>
    <includes refid="_auto_recovery_8h" local="yes">AutoRecovery.h</includes>
    <includes refid="_audacity_app_8h" local="yes">AudacityApp.h</includes>
    <includes refid="_a_color_8h" local="yes">AColor.h</includes>
    <includes refid="_audio_i_o_8h" local="yes">AudioIO.h</includes>
    <includes refid="_dependencies_8h" local="yes">Dependencies.h</includes>
    <includes refid="_diags_8h" local="yes">Diags.h</includes>
    <includes refid="_history_window_8h" local="yes">HistoryWindow.h</includes>
    <includes refid="_lyrics_8h" local="yes">Lyrics.h</includes>
    <includes refid="_lyrics_window_8h" local="yes">LyricsWindow.h</includes>
    <includes refid="_mixer_board_8h" local="yes">MixerBoard.h</includes>
    <includes refid="_internat_8h" local="yes">Internat.h</includes>
    <includes refid="_import_8h" local="yes">import/Import.h</includes>
    <includes refid="_label_track_8h" local="yes">LabelTrack.h</includes>
    <includes refid="_legacy_8h" local="yes">Legacy.h</includes>
    <includes refid="_mix_8h" local="yes">Mix.h</includes>
    <includes refid="_note_track_8h" local="yes">NoteTrack.h</includes>
    <includes refid="_prefs_8h" local="yes">Prefs.h</includes>
    <includes refid="_sequence_8h" local="yes">Sequence.h</includes>
    <includes refid="_snap_8h" local="yes">Snap.h</includes>
    <includes refid="src_2tags_8h" local="yes">Tags.h</includes>
    <includes refid="_time_track_8h" local="yes">TimeTrack.h</includes>
    <includes refid="_track_panel_8h" local="yes">TrackPanel.h</includes>
    <includes refid="_wave_track_8h" local="yes">WaveTrack.h</includes>
    <includes refid="_dir_manager_8h" local="yes">DirManager.h</includes>
    <includes refid="src_2effects_2_effect_8h" local="yes">effects/Effect.h</includes>
    <includes refid="_prefs_dialog_8h" local="yes">prefs/PrefsDialog.h</includes>
    <includes refid="_linking_html_window_8h" local="yes">widgets/LinkingHtmlWindow.h</includes>
    <includes refid="_a_slider_8h" local="yes">widgets/ASlider.h</includes>
    <includes refid="_error_dialog_8h" local="yes">widgets/ErrorDialog.h</includes>
    <includes refid="_ruler_8h" local="yes">widgets/Ruler.h</includes>
    <includes refid="_warning_8h" local="yes">widgets/Warning.h</includes>
    <includes refid="_x_m_l_file_reader_8h" local="yes">xml/XMLFileReader.h</includes>
    <includes refid="_platform_compatibility_8h" local="yes">PlatformCompatibility.h</includes>
    <includes refid="_experimental_8h" local="yes">Experimental.h</includes>
    <includes refid="src_2export_2export_8h" local="yes">export/Export.h</includes>
    <includes refid="_file_names_8h" local="yes">FileNames.h</includes>
    <includes refid="_block_file_8h" local="yes">BlockFile.h</includes>
    <includes refid="_o_d_manager_8h" local="yes">ondemand/ODManager.h</includes>
    <includes refid="_o_d_task_8h" local="yes">ondemand/ODTask.h</includes>
    <includes refid="_o_d_compute_summary_task_8h" local="yes">ondemand/ODComputeSummaryTask.h</includes>
    <includes refid="_module_manager_8h" local="yes">ModuleManager.h</includes>
    <includes refid="_theme_8h" local="yes">Theme.h</includes>
    <includes refid="_all_theme_resources_8h" local="yes">AllThemeResources.h</includes>
    <includes refid="_file_dialog_8h" local="yes">FileDialog.h</includes>
    <includes refid="_undo_manager_8h" local="yes">UndoManager.h</includes>
    <includes refid="_tool_manager_8h" local="yes">toolbars/ToolManager.h</includes>
    <includes refid="_control_tool_bar_8h" local="yes">toolbars/ControlToolBar.h</includes>
    <includes refid="_device_tool_bar_8h" local="yes">toolbars/DeviceToolBar.h</includes>
    <includes refid="_edit_tool_bar_8h" local="yes">toolbars/EditToolBar.h</includes>
    <includes refid="_meter_tool_bar_8h" local="yes">toolbars/MeterToolBar.h</includes>
    <includes refid="_mixer_tool_bar_8h" local="yes">toolbars/MixerToolBar.h</includes>
    <includes refid="_selection_bar_8h" local="yes">toolbars/SelectionBar.h</includes>
    <includes refid="_spectral_selection_bar_8h" local="yes">toolbars/SpectralSelectionBar.h</includes>
    <includes refid="_tools_tool_bar_8h" local="yes">toolbars/ToolsToolBar.h</includes>
    <includes refid="_transcription_tool_bar_8h" local="yes">toolbars/TranscriptionToolBar.h</includes>
    <includes refid="_script_command_relay_8h" local="yes">commands/ScriptCommandRelay.h</includes>
    <includes refid="_command_directory_8h" local="yes">commands/CommandDirectory.h</includes>
    <includes refid="_command_targets_8h" local="yes">commands/CommandTargets.h</includes>
    <includes refid="_command_8h" local="yes">commands/Command.h</includes>
    <includes refid="_command_type_8h" local="yes">commands/CommandType.h</includes>
    <includes local="yes">../images/AudacityLogoAlpha.xpm</includes>
    <incdepgraph>
      <node id="52703">
        <label>wx/dir.h</label>
      </node>
      <node id="52712">
        <label>wx/choice.h</label>
      </node>
      <node id="52756">
        <label>wx/filefn.h</label>
      </node>
      <node id="52785">
        <label>Dependencies.h</label>
        <link refid="_dependencies_8h"/>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52679" relation="include">
        </childnode>
      </node>
      <node id="52824">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52784" relation="include">
        </childnode>
        <childnode refid="52738" relation="include">
        </childnode>
        <childnode refid="52715" relation="include">
        </childnode>
        <childnode refid="52684" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52825" relation="include">
        </childnode>
        <childnode refid="52770" relation="include">
        </childnode>
        <childnode refid="52737" relation="include">
        </childnode>
        <childnode refid="52677" relation="include">
        </childnode>
        <childnode refid="52757" relation="include">
        </childnode>
        <childnode refid="52690" relation="include">
        </childnode>
      </node>
      <node id="52827">
        <label>wx/treebook.h</label>
      </node>
      <node id="52846">
        <label>ModuleManager.h</label>
        <link refid="_module_manager_8h"/>
        <childnode refid="52847" relation="include">
        </childnode>
        <childnode refid="52727" relation="include">
        </childnode>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52729" relation="include">
        </childnode>
        <childnode refid="52726" relation="include">
        </childnode>
      </node>
      <node id="52829">
        <label>wx/html/htmlwin.h</label>
      </node>
      <node id="52828">
        <label>widgets/LinkingHtmlWindow.h</label>
        <link refid="_linking_html_window_8h"/>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52829" relation="include">
        </childnode>
        <childnode refid="52746" relation="include">
        </childnode>
        <childnode refid="52830" relation="include">
        </childnode>
      </node>
      <node id="52810">
        <label>effects/TimeWarper.h</label>
        <link refid="_time_warper_8h"/>
      </node>
      <node id="52873">
        <label>queue</label>
      </node>
      <node id="52856">
        <label>toolbars/ControlToolBar.h</label>
        <link refid="_control_tool_bar_8h"/>
        <childnode refid="52855" relation="include">
        </childnode>
        <childnode refid="52848" relation="include">
        </childnode>
      </node>
      <node id="52764">
        <label>wx/display.h</label>
      </node>
      <node id="52680">
        <label>wx/hashmap.h</label>
      </node>
      <node id="52742">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="52763">
        <label>wx/textfile.h</label>
      </node>
      <node id="52809">
        <label>NoteTrack.h</label>
        <link refid="_note_track_8h"/>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52804" relation="include">
        </childnode>
        <childnode refid="52810" relation="include">
        </childnode>
      </node>
      <node id="52832">
        <label>widgets/Warning.h</label>
        <link refid="_warning_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52714" relation="include">
        </childnode>
      </node>
      <node id="52740">
        <label>wx/gauge.h</label>
      </node>
      <node id="52861">
        <label>toolbars/SelectionBar.h</label>
        <link refid="_selection_bar_8h"/>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52855" relation="include">
        </childnode>
      </node>
      <node id="52704">
        <label>wx/event.h</label>
      </node>
      <node id="52688">
        <label>wx/ffile.h</label>
      </node>
      <node id="52772">
        <label>wx/font.h</label>
      </node>
      <node id="52729">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="52682" relation="include">
        </childnode>
        <childnode refid="52721" relation="include">
        </childnode>
        <childnode refid="52730" relation="include">
        </childnode>
      </node>
      <node id="52816">
        <label>Tags.h</label>
        <link refid="src_2tags_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52817" relation="include">
        </childnode>
        <childnode refid="52684" relation="include">
        </childnode>
        <childnode refid="52697" relation="include">
        </childnode>
        <childnode refid="52818" relation="include">
        </childnode>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52680" relation="include">
        </childnode>
        <childnode refid="52758" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
      </node>
      <node id="52843">
        <label>ODTask.h</label>
        <link refid="_o_d_task_8h"/>
        <childnode refid="52715" relation="include">
        </childnode>
        <childnode refid="52841" relation="include">
        </childnode>
        <childnode refid="52673" relation="include">
        </childnode>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52844" relation="include">
        </childnode>
      </node>
      <node id="52747">
        <label>wx/dcclient.h</label>
      </node>
      <node id="52702">
        <label>wx/cmdline.h</label>
      </node>
      <node id="52803">
        <label>LabelTrack.h</label>
        <link refid="_label_track_8h"/>
        <childnode refid="52691" relation="include">
        </childnode>
        <childnode refid="52804" relation="include">
        </childnode>
        <childnode refid="52767" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52772" relation="include">
        </childnode>
        <childnode refid="52771" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52805" relation="include">
        </childnode>
      </node>
      <node id="52798">
        <label>ImageRoll.h</label>
        <link refid="_image_roll_8h"/>
        <childnode refid="52752" relation="include">
        </childnode>
        <childnode refid="52747" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52768" relation="include">
        </childnode>
        <childnode refid="52799" relation="include">
        </childnode>
      </node>
      <node id="52782">
        <label>AudioIO.h</label>
        <link refid="_audio_i_o_8h"/>
        <childnode refid="52783" relation="include">
        </childnode>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52716" relation="include">
        </childnode>
        <childnode refid="52784" relation="include">
        </childnode>
      </node>
      <node id="52773">
        <label>wx/slider.h</label>
      </node>
      <node id="52720">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="52682" relation="include">
        </childnode>
        <childnode refid="52721" relation="include">
        </childnode>
        <childnode refid="52722" relation="include">
        </childnode>
        <childnode refid="52723" relation="include">
        </childnode>
        <childnode refid="52718" relation="include">
        </childnode>
      </node>
      <node id="52866">
        <label>commands/CommandDirectory.h</label>
        <link refid="_command_directory_8h"/>
        <childnode refid="52867" relation="include">
        </childnode>
        <childnode refid="52870" relation="include">
        </childnode>
      </node>
      <node id="52870">
        <label>CommandType.h</label>
        <link refid="_command_type_8h"/>
        <childnode refid="52867" relation="include">
        </childnode>
      </node>
      <node id="52834">
        <label>expat.h</label>
      </node>
      <node id="52736">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="52683" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52737" relation="include">
        </childnode>
      </node>
      <node id="52821">
        <label>TrackPanel.h</label>
        <link refid="_track_panel_8h"/>
        <childnode refid="52697" relation="include">
        </childnode>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52753" relation="include">
        </childnode>
        <childnode refid="52768" relation="include">
        </childnode>
        <childnode refid="52710" relation="include">
        </childnode>
        <childnode refid="52714" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52682" relation="include">
        </childnode>
        <childnode refid="52815" relation="include">
        </childnode>
        <childnode refid="52691" relation="include">
        </childnode>
        <childnode refid="52822" relation="include">
        </childnode>
        <childnode refid="52814" relation="include">
        </childnode>
        <childnode refid="52804" relation="include">
        </childnode>
      </node>
      <node id="52684">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52685" relation="include">
        </childnode>
        <childnode refid="52686" relation="include">
        </childnode>
      </node>
      <node id="52694">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="52692">
        <label>wx/wxchar.h</label>
      </node>
      <node id="52794">
        <label>wx/image.h</label>
      </node>
      <node id="52847">
        <label>wx/dynlib.h</label>
      </node>
      <node id="52771">
        <label>wx/pen.h</label>
      </node>
      <node id="52867">
        <label>CommandMisc.h</label>
        <link refid="_command_misc_8h"/>
        <childnode refid="52727" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52868" relation="include">
        </childnode>
        <childnode refid="52869" relation="include">
        </childnode>
      </node>
      <node id="52746">
        <label>wx/frame.h</label>
      </node>
      <node id="52715">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="52716" relation="include">
        </childnode>
        <childnode refid="52672" relation="include">
        </childnode>
      </node>
      <node id="52722">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="52682" relation="include">
        </childnode>
      </node>
      <node id="52806">
        <label>Legacy.h</label>
        <link refid="_legacy_8h"/>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52679" relation="include">
        </childnode>
      </node>
      <node id="52681">
        <label>wx/utils.h</label>
      </node>
      <node id="52801">
        <label>import/Import.h</label>
        <link refid="_import_8h"/>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52683" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52719" relation="include">
        </childnode>
        <childnode refid="52802" relation="include">
        </childnode>
      </node>
      <node id="52842">
        <label>ondemand/ODManager.h</label>
        <link refid="_o_d_manager_8h"/>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52843" relation="include">
        </childnode>
        <childnode refid="52715" relation="include">
        </childnode>
        <childnode refid="52716" relation="include">
        </childnode>
        <childnode refid="52844" relation="include">
        </childnode>
      </node>
      <node id="52791">
        <label>Lyrics.h</label>
        <link refid="_lyrics_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52768" relation="include">
        </childnode>
        <childnode refid="52774" relation="include">
        </childnode>
      </node>
      <node id="52739">
        <label>wx/evtloop.h</label>
      </node>
      <node id="52674">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="52675" relation="include">
        </childnode>
      </node>
      <node id="52710">
        <label>wx/timer.h</label>
      </node>
      <node id="52845">
        <label>ondemand/ODComputeSummaryTask.h</label>
        <link refid="_o_d_compute_summary_task_8h"/>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52843" relation="include">
        </childnode>
        <childnode refid="52715" relation="include">
        </childnode>
      </node>
      <node id="52874">
        <label>string</label>
      </node>
      <node id="52868">
        <label>wx/variant.h</label>
      </node>
      <node id="52770">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="52689">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52691" relation="include">
        </childnode>
      </node>
      <node id="52735">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="52725">
        <label>wx/fileconf.h</label>
      </node>
      <node id="52727">
        <label>map</label>
      </node>
      <node id="52786">
        <label>Diags.h</label>
        <link refid="_diags_8h"/>
      </node>
      <node id="52851">
        <label>MacroMagic.h</label>
        <link refid="_macro_magic_8h"/>
        <childnode refid="52848" relation="include">
        </childnode>
      </node>
      <node id="52822">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="52730">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="52682" relation="include">
        </childnode>
        <childnode refid="52722" relation="include">
        </childnode>
        <childnode refid="52720" relation="include">
        </childnode>
        <childnode refid="52721" relation="include">
        </childnode>
        <childnode refid="52728" relation="include">
        </childnode>
        <childnode refid="52729" relation="include">
        </childnode>
      </node>
      <node id="52760">
        <label>wx/scrolbar.h</label>
      </node>
      <node id="52752">
        <label>wx/dc.h</label>
      </node>
      <node id="52825">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="52674" relation="include">
        </childnode>
      </node>
      <node id="52853">
        <label>toolbars/ToolManager.h</label>
        <link refid="_tool_manager_8h"/>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52746" relation="include">
        </childnode>
        <childnode refid="52710" relation="include">
        </childnode>
        <childnode refid="52854" relation="include">
        </childnode>
        <childnode refid="52855" relation="include">
        </childnode>
      </node>
      <node id="52831">
        <label>widgets/ErrorDialog.h</label>
        <link refid="_error_dialog_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52714" relation="include">
        </childnode>
      </node>
      <node id="52743">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
      </node>
      <node id="52741">
        <label>wx/stattext.h</label>
      </node>
      <node id="52709">
        <label>wx/socket.h</label>
      </node>
      <node id="52745">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="52850">
        <label>AllThemeResources.h</label>
        <link refid="_all_theme_resources_8h"/>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52851" relation="include">
        </childnode>
      </node>
      <node id="52836">
        <label>export/Export.h</label>
        <link refid="src_2export_2export_8h"/>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52679" relation="include">
        </childnode>
        <childnode refid="52768" relation="include">
        </childnode>
        <childnode refid="52837" relation="include">
        </childnode>
        <childnode refid="52816" relation="include">
        </childnode>
        <childnode refid="52784" relation="include">
        </childnode>
        <childnode refid="52838" relation="include">
        </childnode>
      </node>
      <node id="52721">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="52682" relation="include">
        </childnode>
      </node>
      <node id="52677">
        <label>wx/list.h</label>
      </node>
      <node id="52769">
        <label>wx/checkbox.h</label>
      </node>
      <node id="52699">
        <label>wx/menu.h</label>
      </node>
      <node id="52830">
        <label>HtmlWindow.h</label>
        <link refid="_html_window_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52829" relation="include">
        </childnode>
      </node>
      <node id="52750">
        <label>wx/wxprec.h</label>
      </node>
      <node id="52857">
        <label>toolbars/DeviceToolBar.h</label>
        <link refid="_device_tool_bar_8h"/>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52855" relation="include">
        </childnode>
      </node>
      <node id="52876">
        <label>commands/Command.h</label>
        <link refid="_command_8h"/>
        <childnode refid="52701" relation="include">
        </childnode>
        <childnode refid="52673" relation="include">
        </childnode>
        <childnode refid="52867" relation="include">
        </childnode>
        <childnode refid="52877" relation="include">
        </childnode>
      </node>
      <node id="52751">
        <label>wx/apptrait.h</label>
      </node>
      <node id="52865">
        <label>commands/ScriptCommandRelay.h</label>
        <link refid="_script_command_relay_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
      </node>
      <node id="52675">
        <label>wx/defs.h</label>
      </node>
      <node id="52714">
        <label>wx/window.h</label>
      </node>
      <node id="52706">
        <label>wx/intl.h</label>
      </node>
      <node id="52738">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52739" relation="include">
        </childnode>
        <childnode refid="52740" relation="include">
        </childnode>
        <childnode refid="52741" relation="include">
        </childnode>
        <childnode refid="52681" relation="include">
        </childnode>
      </node>
      <node id="52733">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="52792">
        <label>LyricsWindow.h</label>
        <link refid="_lyrics_window_8h"/>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52746" relation="include">
        </childnode>
      </node>
      <node id="52682">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52683" relation="include">
        </childnode>
      </node>
      <node id="52841">
        <label>BlockFile.h</label>
        <link refid="_block_file_8h"/>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52688" relation="include">
        </childnode>
        <childnode refid="52679" relation="include">
        </childnode>
        <childnode refid="52684" relation="include">
        </childnode>
        <childnode refid="52686" relation="include">
        </childnode>
        <childnode refid="52784" relation="include">
        </childnode>
      </node>
      <node id="52800">
        <label>widgets/ASlider.h</label>
        <link refid="_a_slider_8h"/>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52714" relation="include">
        </childnode>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52768" relation="include">
        </childnode>
        <childnode refid="52710" relation="include">
        </childnode>
      </node>
      <node id="52726">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52725" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52727" relation="include">
        </childnode>
        <childnode refid="52720" relation="include">
        </childnode>
        <childnode refid="52728" relation="include">
        </childnode>
        <childnode refid="52729" relation="include">
        </childnode>
        <childnode refid="52730" relation="include">
        </childnode>
      </node>
      <node id="52718">
        <label>wx/dialog.h</label>
      </node>
      <node id="52789">
        <label>wx/listctrl.h</label>
      </node>
      <node id="52797">
        <label>widgets/AButton.h</label>
        <link refid="_a_button_8h"/>
        <childnode refid="52697" relation="include">
        </childnode>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52794" relation="include">
        </childnode>
        <childnode refid="52714" relation="include">
        </childnode>
        <childnode refid="52798" relation="include">
        </childnode>
      </node>
      <node id="52780">
        <label>wx/mstream.h</label>
      </node>
      <node id="52679">
        <label>wx/filename.h</label>
      </node>
      <node id="52717">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52712" relation="include">
        </childnode>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52719" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52720" relation="include">
        </childnode>
        <childnode refid="52726" relation="include">
        </childnode>
        <childnode refid="52731" relation="include">
        </childnode>
      </node>
      <node id="52862">
        <label>toolbars/SpectralSelectionBar.h</label>
        <link refid="_spectral_selection_bar_8h"/>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52855" relation="include">
        </childnode>
      </node>
      <node id="52814">
        <label>Snap.h</label>
        <link refid="_snap_8h"/>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52815" relation="include">
        </childnode>
      </node>
      <node id="52839">
        <label>wx/filectrl.h</label>
      </node>
      <node id="52849">
        <label>wx/colour.h</label>
      </node>
      <node id="52813">
        <label>Sequence.h</label>
        <link refid="_sequence_8h"/>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52784" relation="include">
        </childnode>
        <childnode refid="52684" relation="include">
        </childnode>
        <childnode refid="52686" relation="include">
        </childnode>
        <childnode refid="52715" relation="include">
        </childnode>
        <childnode refid="52682" relation="include">
        </childnode>
      </node>
      <node id="52815">
        <label>widgets/NumericTextCtrl.h</label>
        <link refid="_numeric_text_ctrl_8h"/>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52768" relation="include">
        </childnode>
        <childnode refid="52741" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52774" relation="include">
        </childnode>
        <childnode refid="52672" relation="include">
        </childnode>
      </node>
      <node id="52723">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="52724" relation="include">
        </childnode>
        <childnode refid="52702" relation="include">
        </childnode>
        <childnode refid="52725" relation="include">
        </childnode>
        <childnode refid="52706" relation="include">
        </childnode>
      </node>
      <node id="52811">
        <label>Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52812" relation="include">
        </childnode>
        <childnode refid="52725" relation="include">
        </childnode>
      </node>
      <node id="52767">
        <label>wx/brush.h</label>
      </node>
      <node id="52802">
        <label>wx/tokenzr.h</label>
      </node>
      <node id="52779">
        <label>wx/debug.h</label>
      </node>
      <node id="52766">
        <label>FreqWindow.h</label>
        <link refid="_freq_window_8h"/>
        <childnode refid="52697" relation="include">
        </childnode>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52767" relation="include">
        </childnode>
        <childnode refid="52753" relation="include">
        </childnode>
        <childnode refid="52746" relation="include">
        </childnode>
        <childnode refid="52768" relation="include">
        </childnode>
        <childnode refid="52769" relation="include">
        </childnode>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52770" relation="include">
        </childnode>
        <childnode refid="52771" relation="include">
        </childnode>
        <childnode refid="52772" relation="include">
        </childnode>
        <childnode refid="52760" relation="include">
        </childnode>
        <childnode refid="52761" relation="include">
        </childnode>
        <childnode refid="52773" relation="include">
        </childnode>
        <childnode refid="52741" relation="include">
        </childnode>
        <childnode refid="52762" relation="include">
        </childnode>
        <childnode refid="52774" relation="include">
        </childnode>
        <childnode refid="52681" relation="include">
        </childnode>
        <childnode refid="52775" relation="include">
        </childnode>
      </node>
      <node id="52696">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52697" relation="include">
        </childnode>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52699" relation="include">
        </childnode>
        <childnode refid="52680" relation="include">
        </childnode>
        <childnode refid="52700" relation="include">
        </childnode>
        <childnode refid="52684" relation="include">
        </childnode>
        <childnode refid="52682" relation="include">
        </childnode>
      </node>
      <node id="52672">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="52713">
        <label>wx/grid.h</label>
      </node>
      <node id="52860">
        <label>toolbars/MixerToolBar.h</label>
        <link refid="_mixer_tool_bar_8h"/>
        <childnode refid="52855" relation="include">
        </childnode>
      </node>
      <node id="52795">
        <label>wx/scrolwin.h</label>
      </node>
      <node id="52837">
        <label>wx/simplebook.h</label>
      </node>
      <node id="52690">
        <label>vector</label>
      </node>
      <node id="52731">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52697" relation="include">
        </childnode>
        <childnode refid="52732" relation="include">
        </childnode>
        <childnode refid="52733" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52706" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52734" relation="include">
        </childnode>
        <childnode refid="52722" relation="include">
        </childnode>
        <childnode refid="52720" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52691" relation="include">
        </childnode>
        <childnode refid="52735" relation="include">
        </childnode>
        <childnode refid="52736" relation="include">
        </childnode>
        <childnode refid="52738" relation="include">
        </childnode>
      </node>
      <node id="52755">
        <label>wx/filedlg.h</label>
      </node>
      <node id="52854">
        <label>ToolDock.h</label>
        <link refid="_tool_dock_8h"/>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52768" relation="include">
        </childnode>
        <childnode refid="52855" relation="include">
        </childnode>
      </node>
      <node id="52855">
        <label>ToolBar.h</label>
        <link refid="_tool_bar_8h"/>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52768" relation="include">
        </childnode>
        <childnode refid="52761" relation="include">
        </childnode>
        <childnode refid="52848" relation="include">
        </childnode>
      </node>
      <node id="52687">
        <label>wx/dynarray.h</label>
      </node>
      <node id="52826">
        <label>prefs/PrefsDialog.h</label>
        <link refid="_prefs_dialog_8h"/>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52788" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52827" relation="include">
        </childnode>
        <childnode refid="52714" relation="include">
        </childnode>
      </node>
      <node id="52673">
        <label>Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52676" relation="include">
        </childnode>
        <childnode refid="52689" relation="include">
        </childnode>
        <childnode refid="52694" relation="include">
        </childnode>
        <childnode refid="52695" relation="include">
        </childnode>
        <childnode refid="52696" relation="include">
        </childnode>
        <childnode refid="52717" relation="include">
        </childnode>
        <childnode refid="52684" relation="include">
        </childnode>
        <childnode refid="52742" relation="include">
        </childnode>
        <childnode refid="52743" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52708" relation="include">
        </childnode>
        <childnode refid="52744" relation="include">
        </childnode>
        <childnode refid="52745" relation="include">
        </childnode>
        <childnode refid="52746" relation="include">
        </childnode>
        <childnode refid="52706" relation="include">
        </childnode>
        <childnode refid="52747" relation="include">
        </childnode>
        <childnode refid="52748" relation="include">
        </childnode>
      </node>
      <node id="52818">
        <label>utility</label>
      </node>
      <node id="52835">
        <label>PlatformCompatibility.h</label>
        <link refid="_platform_compatibility_8h"/>
        <childnode refid="52678" relation="include">
        </childnode>
      </node>
      <node id="52728">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="52682" relation="include">
        </childnode>
        <childnode refid="52722" relation="include">
        </childnode>
        <childnode refid="52721" relation="include">
        </childnode>
      </node>
      <node id="52872">
        <label>../commands/ResponseQueue.h</label>
        <link refid="_response_queue_8h"/>
        <childnode refid="52873" relation="include">
        </childnode>
        <childnode refid="52874" relation="include">
        </childnode>
        <childnode refid="52716" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
      </node>
      <node id="52875">
        <label>../src/Project.h</label>
      </node>
      <node id="52778">
        <label>AutoRecovery.h</label>
        <link refid="_auto_recovery_8h"/>
        <childnode refid="52673" relation="include">
        </childnode>
        <childnode refid="52684" relation="include">
        </childnode>
        <childnode refid="52686" relation="include">
        </childnode>
        <childnode refid="52779" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52688" relation="include">
        </childnode>
        <childnode refid="52680" relation="include">
        </childnode>
        <childnode refid="52780" relation="include">
        </childnode>
      </node>
      <node id="52848">
        <label>Theme.h</label>
        <link refid="_theme_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52776" relation="include">
        </childnode>
        <childnode refid="52849" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52772" relation="include">
        </childnode>
        <childnode refid="52794" relation="include">
        </childnode>
      </node>
      <node id="52781">
        <label>AColor.h</label>
        <link refid="_a_color_8h"/>
        <childnode refid="52767" relation="include">
        </childnode>
        <childnode refid="52771" relation="include">
        </childnode>
      </node>
      <node id="52678">
        <label>wx/string.h</label>
      </node>
      <node id="52700">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52701" relation="include">
        </childnode>
        <childnode refid="52702" relation="include">
        </childnode>
        <childnode refid="52703" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52705" relation="include">
        </childnode>
        <childnode refid="52706" relation="include">
        </childnode>
        <childnode refid="52707" relation="include">
        </childnode>
        <childnode refid="52708" relation="include">
        </childnode>
        <childnode refid="52709" relation="include">
        </childnode>
        <childnode refid="52710" relation="include">
        </childnode>
        <childnode refid="52711" relation="include">
        </childnode>
        <childnode refid="52715" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
      </node>
      <node id="52719">
        <label>wx/listbox.h</label>
      </node>
      <node id="52757">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="52783">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="52708">
        <label>wx/log.h</label>
      </node>
      <node id="52693">
        <label>math.h</label>
      </node>
      <node id="52793">
        <label>MixerBoard.h</label>
        <link refid="_mixer_board_8h"/>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52746" relation="include">
        </childnode>
        <childnode refid="52733" relation="include">
        </childnode>
        <childnode refid="52680" relation="include">
        </childnode>
        <childnode refid="52794" relation="include">
        </childnode>
        <childnode refid="52768" relation="include">
        </childnode>
        <childnode refid="52795" relation="include">
        </childnode>
        <childnode refid="52796" relation="include">
        </childnode>
        <childnode refid="52741" relation="include">
        </childnode>
        <childnode refid="52797" relation="include">
        </childnode>
        <childnode refid="52800" relation="include">
        </childnode>
      </node>
      <node id="52671">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Project.cpp</label>
        <link refid="Project.cpp"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52673" relation="include">
        </childnode>
        <childnode refid="52685" relation="include">
        </childnode>
        <childnode refid="52749" relation="include">
        </childnode>
        <childnode refid="52750" relation="include">
        </childnode>
        <childnode refid="52751" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52701" relation="include">
        </childnode>
        <childnode refid="52752" relation="include">
        </childnode>
        <childnode refid="52753" relation="include">
        </childnode>
        <childnode refid="52754" relation="include">
        </childnode>
        <childnode refid="52705" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52688" relation="include">
        </childnode>
        <childnode refid="52755" relation="include">
        </childnode>
        <childnode refid="52756" relation="include">
        </childnode>
        <childnode refid="52679" relation="include">
        </childnode>
        <childnode refid="52706" relation="include">
        </childnode>
        <childnode refid="52708" relation="include">
        </childnode>
        <childnode refid="52699" relation="include">
        </childnode>
        <childnode refid="52757" relation="include">
        </childnode>
        <childnode refid="52758" relation="include">
        </childnode>
        <childnode refid="52759" relation="include">
        </childnode>
        <childnode refid="52760" relation="include">
        </childnode>
        <childnode refid="52761" relation="include">
        </childnode>
        <childnode refid="52762" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52763" relation="include">
        </childnode>
        <childnode refid="52710" relation="include">
        </childnode>
        <childnode refid="52764" relation="include">
        </childnode>
        <childnode refid="52765" relation="include">
        </childnode>
        <childnode refid="52766" relation="include">
        </childnode>
        <childnode refid="52777" relation="include">
        </childnode>
        <childnode refid="52778" relation="include">
        </childnode>
        <childnode refid="52700" relation="include">
        </childnode>
        <childnode refid="52781" relation="include">
        </childnode>
        <childnode refid="52782" relation="include">
        </childnode>
        <childnode refid="52785" relation="include">
        </childnode>
        <childnode refid="52786" relation="include">
        </childnode>
        <childnode refid="52787" relation="include">
        </childnode>
        <childnode refid="52791" relation="include">
        </childnode>
        <childnode refid="52792" relation="include">
        </childnode>
        <childnode refid="52793" relation="include">
        </childnode>
        <childnode refid="52736" relation="include">
        </childnode>
        <childnode refid="52801" relation="include">
        </childnode>
        <childnode refid="52803" relation="include">
        </childnode>
        <childnode refid="52806" relation="include">
        </childnode>
        <childnode refid="52807" relation="include">
        </childnode>
        <childnode refid="52809" relation="include">
        </childnode>
        <childnode refid="52811" relation="include">
        </childnode>
        <childnode refid="52813" relation="include">
        </childnode>
        <childnode refid="52814" relation="include">
        </childnode>
        <childnode refid="52816" relation="include">
        </childnode>
        <childnode refid="52819" relation="include">
        </childnode>
        <childnode refid="52821" relation="include">
        </childnode>
        <childnode refid="52823" relation="include">
        </childnode>
        <childnode refid="52676" relation="include">
        </childnode>
        <childnode refid="52731" relation="include">
        </childnode>
        <childnode refid="52826" relation="include">
        </childnode>
        <childnode refid="52828" relation="include">
        </childnode>
        <childnode refid="52800" relation="include">
        </childnode>
        <childnode refid="52831" relation="include">
        </childnode>
        <childnode refid="52775" relation="include">
        </childnode>
        <childnode refid="52832" relation="include">
        </childnode>
        <childnode refid="52833" relation="include">
        </childnode>
        <childnode refid="52835" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52836" relation="include">
        </childnode>
        <childnode refid="52840" relation="include">
        </childnode>
        <childnode refid="52841" relation="include">
        </childnode>
        <childnode refid="52842" relation="include">
        </childnode>
        <childnode refid="52843" relation="include">
        </childnode>
        <childnode refid="52845" relation="include">
        </childnode>
        <childnode refid="52846" relation="include">
        </childnode>
        <childnode refid="52848" relation="include">
        </childnode>
        <childnode refid="52850" relation="include">
        </childnode>
        <childnode refid="52838" relation="include">
        </childnode>
        <childnode refid="52852" relation="include">
        </childnode>
        <childnode refid="52853" relation="include">
        </childnode>
        <childnode refid="52856" relation="include">
        </childnode>
        <childnode refid="52857" relation="include">
        </childnode>
        <childnode refid="52858" relation="include">
        </childnode>
        <childnode refid="52859" relation="include">
        </childnode>
        <childnode refid="52860" relation="include">
        </childnode>
        <childnode refid="52861" relation="include">
        </childnode>
        <childnode refid="52862" relation="include">
        </childnode>
        <childnode refid="52863" relation="include">
        </childnode>
        <childnode refid="52864" relation="include">
        </childnode>
        <childnode refid="52865" relation="include">
        </childnode>
        <childnode refid="52866" relation="include">
        </childnode>
        <childnode refid="52871" relation="include">
        </childnode>
        <childnode refid="52876" relation="include">
        </childnode>
        <childnode refid="52870" relation="include">
        </childnode>
        <childnode refid="52878" relation="include">
        </childnode>
      </node>
      <node id="52878">
        <label>../images/AudacityLogoAlpha.xpm</label>
      </node>
      <node id="52676">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="52677" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52679" relation="include">
        </childnode>
        <childnode refid="52680" relation="include">
        </childnode>
        <childnode refid="52681" relation="include">
        </childnode>
        <childnode refid="52682" relation="include">
        </childnode>
        <childnode refid="52684" relation="include">
        </childnode>
      </node>
      <node id="52777">
        <label>effects/Contrast.h</label>
        <link refid="_contrast_8h"/>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52773" relation="include">
        </childnode>
      </node>
      <node id="52758">
        <label>wx/notebook.h</label>
      </node>
      <node id="52691">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52692" relation="include">
        </childnode>
        <childnode refid="52693" relation="include">
        </childnode>
      </node>
      <node id="52754">
        <label>wx/dnd.h</label>
      </node>
      <node id="52683">
        <label>wx/arrstr.h</label>
      </node>
      <node id="52812">
        <label>wx/config.h</label>
      </node>
      <node id="52749">
        <label>iostream</label>
      </node>
      <node id="52761">
        <label>wx/sizer.h</label>
      </node>
      <node id="52817">
        <label>widgets/Grid.h</label>
        <link refid="_grid_8h"/>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52712" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52713" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52714" relation="include">
        </childnode>
      </node>
      <node id="52844">
        <label>wx/wx.h</label>
      </node>
      <node id="52707">
        <label>wx/snglinst.h</label>
      </node>
      <node id="52819">
        <label>TimeTrack.h</label>
        <link refid="_time_track_8h"/>
        <childnode refid="52804" relation="include">
        </childnode>
        <childnode refid="52767" relation="include">
        </childnode>
        <childnode refid="52771" relation="include">
        </childnode>
        <childnode refid="52820" relation="include">
        </childnode>
      </node>
      <node id="52804">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52697" relation="include">
        </childnode>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52770" relation="include">
        </childnode>
        <childnode refid="52737" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52784" relation="include">
        </childnode>
        <childnode refid="52684" relation="include">
        </childnode>
      </node>
      <node id="52716">
        <label>wx/thread.h</label>
      </node>
      <node id="52744">
        <label>wx/dragimag.h</label>
      </node>
      <node id="52877">
        <label>CommandSignature.h</label>
        <link refid="_command_signature_8h"/>
        <childnode refid="52867" relation="include">
        </childnode>
      </node>
      <node id="52871">
        <label>commands/CommandTargets.h</label>
        <link refid="_command_targets_8h"/>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52757" relation="include">
        </childnode>
        <childnode refid="52762" relation="include">
        </childnode>
        <childnode refid="52738" relation="include">
        </childnode>
        <childnode refid="52872" relation="include">
        </childnode>
        <childnode refid="52875" relation="include">
        </childnode>
      </node>
      <node id="52762">
        <label>wx/statusbr.h</label>
      </node>
      <node id="52840">
        <label>FileNames.h</label>
        <link refid="_file_names_8h"/>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52672" relation="include">
        </childnode>
      </node>
      <node id="52796">
        <label>wx/statbmp.h</label>
      </node>
      <node id="52734">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="52805">
        <label>wx/clipbrd.h</label>
      </node>
      <node id="52864">
        <label>toolbars/TranscriptionToolBar.h</label>
        <link refid="_transcription_tool_bar_8h"/>
        <childnode refid="52855" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52767" relation="include">
        </childnode>
        <childnode refid="52771" relation="include">
        </childnode>
        <childnode refid="52682" relation="include">
        </childnode>
        <childnode refid="52848" relation="include">
        </childnode>
      </node>
      <node id="52788">
        <label>wx/button.h</label>
      </node>
      <node id="52697">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="52698" relation="include">
        </childnode>
      </node>
      <node id="52869">
        <label>Validators.h</label>
        <link refid="_validators_8h"/>
      </node>
      <node id="52808">
        <label>Resample.h</label>
        <link refid="_resample_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52706" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52784" relation="include">
        </childnode>
      </node>
      <node id="52790">
        <label>wx/spinctrl.h</label>
      </node>
      <node id="52711">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52712" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52713" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52714" relation="include">
        </childnode>
      </node>
      <node id="52732">
        <label>set</label>
      </node>
      <node id="52748">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="52674" relation="include">
        </childnode>
      </node>
      <node id="52701">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="52737">
        <label>wx/longlong.h</label>
      </node>
      <node id="52768">
        <label>wx/panel.h</label>
      </node>
      <node id="52823">
        <label>WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="52804" relation="include">
        </childnode>
        <childnode refid="52784" relation="include">
        </childnode>
        <childnode refid="52824" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
        <childnode refid="52738" relation="include">
        </childnode>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52770" relation="include">
        </childnode>
        <childnode refid="52737" relation="include">
        </childnode>
        <childnode refid="52716" relation="include">
        </childnode>
        <childnode refid="52822" relation="include">
        </childnode>
      </node>
      <node id="52838">
        <label>FileDialog.h</label>
        <link refid="_file_dialog_8h"/>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52839" relation="include">
        </childnode>
        <childnode refid="52755" relation="include">
        </childnode>
      </node>
      <node id="52776">
        <label>wx/bitmap.h</label>
      </node>
      <node id="52859">
        <label>toolbars/MeterToolBar.h</label>
        <link refid="_meter_tool_bar_8h"/>
        <childnode refid="52855" relation="include">
        </childnode>
        <childnode refid="52673" relation="include">
        </childnode>
      </node>
      <node id="52820">
        <label>algorithm</label>
      </node>
      <node id="52852">
        <label>UndoManager.h</label>
        <link refid="_undo_manager_8h"/>
        <childnode refid="52697" relation="include">
        </childnode>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52715" relation="include">
        </childnode>
        <childnode refid="52691" relation="include">
        </childnode>
      </node>
      <node id="52863">
        <label>toolbars/ToolsToolBar.h</label>
        <link refid="_tools_tool_bar_8h"/>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52855" relation="include">
        </childnode>
        <childnode refid="52848" relation="include">
        </childnode>
      </node>
      <node id="52685">
        <label>stdio.h</label>
      </node>
      <node id="52799">
        <label>wx/version.h</label>
      </node>
      <node id="52774">
        <label>wx/textctrl.h</label>
      </node>
      <node id="52858">
        <label>toolbars/EditToolBar.h</label>
        <link refid="_edit_tool_bar_8h"/>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52855" relation="include">
        </childnode>
        <childnode refid="52848" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
      </node>
      <node id="52784">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52675" relation="include">
        </childnode>
        <childnode refid="52682" relation="include">
        </childnode>
      </node>
      <node id="52787">
        <label>HistoryWindow.h</label>
        <link refid="_history_window_8h"/>
        <childnode refid="52788" relation="include">
        </childnode>
        <childnode refid="52718" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52746" relation="include">
        </childnode>
        <childnode refid="52789" relation="include">
        </childnode>
        <childnode refid="52790" relation="include">
        </childnode>
        <childnode refid="52774" relation="include">
        </childnode>
      </node>
      <node id="52724">
        <label>locale.h</label>
      </node>
      <node id="52705">
        <label>wx/docview.h</label>
      </node>
      <node id="52753">
        <label>wx/dcmemory.h</label>
      </node>
      <node id="52759">
        <label>wx/progdlg.h</label>
      </node>
      <node id="52765">
        <label>wx/arrimpl.cpp</label>
      </node>
      <node id="52775">
        <label>widgets/Ruler.h</label>
        <link refid="_ruler_8h"/>
        <childnode refid="52776" relation="include">
        </childnode>
        <childnode refid="52752" relation="include">
        </childnode>
        <childnode refid="52753" relation="include">
        </childnode>
        <childnode refid="52704" relation="include">
        </childnode>
        <childnode refid="52772" relation="include">
        </childnode>
        <childnode refid="52768" relation="include">
        </childnode>
        <childnode refid="52714" relation="include">
        </childnode>
        <childnode refid="52674" relation="include">
        </childnode>
      </node>
      <node id="52698">
        <label>memory</label>
      </node>
      <node id="52686">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="52683" relation="include">
        </childnode>
        <childnode refid="52687" relation="include">
        </childnode>
        <childnode refid="52688" relation="include">
        </childnode>
      </node>
      <node id="52807">
        <label>Mix.h</label>
        <link refid="_mix_8h"/>
        <childnode refid="52678" relation="include">
        </childnode>
        <childnode refid="52784" relation="include">
        </childnode>
        <childnode refid="52808" relation="include">
        </childnode>
      </node>
      <node id="52833">
        <label>xml/XMLFileReader.h</label>
        <link refid="_x_m_l_file_reader_8h"/>
        <childnode refid="52672" relation="include">
        </childnode>
        <childnode refid="52690" relation="include">
        </childnode>
        <childnode refid="52834" relation="include">
        </childnode>
        <childnode refid="52684" relation="include">
        </childnode>
      </node>
      <node id="52695">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="52678" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_var_setter" prot="public">VarSetter</innerclass>
    <innerclass refid="class_scroll_bar" prot="public">ScrollBar</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5c" prot="public" static="no">
        <name>@328</name>
        <enumvalue id="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5cafdd3cb42d7ff8fd19f8ae0626e2b371e" prot="public">
          <name>FirstID</name>
          <initializer>= 1000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5ca8c461577a9db8f48725189723b88eb7f" prot="public">
          <name>HSBarID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5ca4edf9a6fe4ea5bf2b1868d87a19d7eaa" prot="public">
          <name>VSBarID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5ca7b42851ecbdaec527a4268321c678cb1" prot="public">
          <name>TrackPanelID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="754" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="754" bodyend="762"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_project_8cpp_1aa8df4dce9db755699519dab9fc5f0be2" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>const int sbarSpaceWidth</definition>
        <argsstring></argsstring>
        <name>sbarSpaceWidth</name>
        <initializer>= 15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="184" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_project_8cpp_1a4a191634e7a5dde1f3e08587b62ffae8" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>const int sbarControlWidth</definition>
        <argsstring></argsstring>
        <name>sbarControlWidth</name>
        <initializer>= 15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="185" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_project_8cpp_1a10ce9c52032cf86b533734c0fc580c6d" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>const int sbarExtraLen</definition>
        <argsstring></argsstring>
        <name>sbarExtraLen</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="186" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_project_8cpp_1a8416fbcad75677d27992d858a74b889c" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>const int sbarHjump</definition>
        <argsstring></argsstring>
        <name>sbarHjump</name>
        <initializer>= 30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="187" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_project_8cpp_1a311a299c5a6b7d46ab78a737ce75fc29" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int gAudacityOffsetInc</definition>
        <argsstring></argsstring>
        <name>gAudacityOffsetInc</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="255" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_project_8cpp_1a8659173489174df5d664b5ad77605b26" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int gAudacityPosInc</definition>
        <argsstring></argsstring>
        <name>gAudacityPosInc</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="256" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_project_8cpp_1a79d4aaeb2f33e2bcab237c395b06bc64" prot="public" static="yes" mutable="no">
        <type><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref> *</type>
        <definition>AudacityProject* gActiveProject</definition>
        <argsstring></argsstring>
        <name>gActiveProject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="258" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" prot="public" static="no" mutable="no">
        <type>AProjectArray</type>
        <definition>AProjectArray gAudacityProjects</definition>
        <argsstring></argsstring>
        <name>gAudacityProjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="260" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_project_8cpp_1a4db6fccc0675bf6d898ea5f183321365" prot="public" static="yes" mutable="no">
        <type>wxString</type>
        <definition>wxString gsLegacyFileWarning</definition>
        <argsstring></argsstring>
        <name>gsLegacyFileWarning</name>
        <initializer>=
<ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref>(&quot;This file was saved by Audacity <ref refid="lib_2expat_8h_1aec5db107b91447a96c47961ce9df2660" kindref="member">version</ref> %s. The <ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref> has changed. \
\n\nAudacity can try to open and save this file, but saving <ref refid="rfft2d_test_m_l_8m_1a79243ab43ef4b6642e0d2fb9c2919961" kindref="member">it</ref> <ref refid="latency_8c_1a7d946209d777cb95fe30364b8d321207" kindref="member">in</ref> this \
\nversion will then prevent any 1.2 or earlier <ref refid="lib_2expat_8h_1aec5db107b91447a96c47961ce9df2660" kindref="member">version</ref> opening it. \
\n\nAudacity might corrupt <ref refid="nasm_8h_1aaf57ffcfef0bee04f46c6ada2a905a8c" kindref="member">the</ref> file <ref refid="latency_8c_1a7d946209d777cb95fe30364b8d321207" kindref="member">in</ref> opening <ref refid="rfft2d_test_m_l_8m_1a79243ab43ef4b6642e0d2fb9c2919961" kindref="member">it</ref>, so you should \
back <ref refid="rfft2d_test_m_l_8m_1a79243ab43ef4b6642e0d2fb9c2919961" kindref="member">it</ref> up first. \
\n\nOpen this file now?&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="2547" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="2547" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_project_8cpp_1aea409aa4efe5bc935fe41cec30fcc0a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_EVENT_TYPE</definition>
        <argsstring>(EVT_CAPTURE_KEY)</argsstring>
        <name>DEFINE_EVENT_TYPE</name>
        <param>
          <type>EVT_CAPTURE_KEY</type>
        </param>
        <briefdescription>
<para>Custom events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_project_8cpp_1ad4069e76f5a95fa8104f98b884dd09d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void SetActiveProject</definition>
        <argsstring>(AudacityProject *project)</argsstring>
        <name>SetActiveProject</name>
        <param>
          <type><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref> *</type>
          <declname>project</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="263" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="270" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AUDACITY_DLL_API <ref refid="class_audacity_project" kindref="compound">AudacityProject</ref> *</type>
        <definition>AUDACITY_DLL_API AudacityProject* GetActiveProject</definition>
        <argsstring>()</argsstring>
        <name>GetActiveProject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="265" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="_project_8cpp_1a28032264c981ed85265ad34afc761335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref> *</type>
        <definition>AudacityProject* CreateNewAudacityProject</definition>
        <argsstring>()</argsstring>
        <name>CreateNewAudacityProject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="488" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="488" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="_project_8cpp_1ac760dc03d578e17cb9884e8ba08d9150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void RedrawAllProjects</definition>
        <argsstring>()</argsstring>
        <name>RedrawAllProjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="530" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="530" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="_project_8cpp_1aa4ecd0f61e775319c4f8ac6e56a4c536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void RefreshCursorForAllProjects</definition>
        <argsstring>()</argsstring>
        <name>RefreshCursorForAllProjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="537" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="537" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="_project_8cpp_1a36d2528285e2271390219ccbf583c72b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AUDACITY_DLL_API <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>AUDACITY_DLL_API void CloseAllProjects</definition>
        <argsstring>()</argsstring>
        <name>CloseAllProjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="544" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="544" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="_project_8cpp_1a7145ee06a051e1b8f33a2c6c9e9932e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void GetDefaultWindowRect</definition>
        <argsstring>(wxRect *defRect)</argsstring>
        <name>GetDefaultWindowRect</name>
        <param>
          <type>wxRect *</type>
          <declname>defRect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="556" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="556" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="_project_8cpp_1a7e546d886ff554604ba8657b83dbe203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool IsWindowAccessible</definition>
        <argsstring>(wxRect *requestedRect)</argsstring>
        <name>IsWindowAccessible</name>
        <param>
          <type>wxRect *</type>
          <declname>requestedRect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="599" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="599" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="_project_8cpp_1aa9784a13cfc98f9a0e03026b6a80402d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void GetNextWindowPlacement</definition>
        <argsstring>(wxRect *nextRect, bool *pMaximized, bool *pIconized)</argsstring>
        <name>GetNextWindowPlacement</name>
        <param>
          <type>wxRect *</type>
          <declname>nextRect</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>pMaximized</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref> *</type>
          <declname>pIconized</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="624" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="624" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="_project_8cpp_1a975c884dedc5a7e698701ad8d9ea5f44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>static wxString CreateUniqueName</definition>
        <argsstring>()</argsstring>
        <name>CreateUniqueName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" line="747" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp" bodystart="747" bodyend="752"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements <ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>, <ref refid="class_drop_target" kindref="compound">DropTarget</ref>, and FileObject.F Includes <ref refid="_menus_8cpp" kindref="compound">Menus.cpp</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Project.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Vaughan<sp/>Johnson</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_8h" kindref="compound">Audacity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_project_8h" kindref="compound">Project.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/wxprec.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/apptrait.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/defs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="app_8h" kindref="compound">wx/app.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcmemory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dnd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/docview.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/event.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/ffile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/filedlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/filefn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/filename.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/menu.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/msgdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/notebook.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/progdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/scrolbar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/sizer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/statusbr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/textfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/timer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/display.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/arrimpl.cpp&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>allows<sp/>for<sp/>creation<sp/>of<sp/>wxObjArray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!wxCHECK_VERSION(3,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CoreServices/CoreServices.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/mac/private.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_freq_window_8h" kindref="compound">FreqWindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_contrast_8h" kindref="compound">effects/Contrast.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_auto_recovery_8h" kindref="compound">AutoRecovery.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_app_8h" kindref="compound">AudacityApp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_color_8h" kindref="compound">AColor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audio_i_o_8h" kindref="compound">AudioIO.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_dependencies_8h" kindref="compound">Dependencies.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_diags_8h" kindref="compound">Diags.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_history_window_8h" kindref="compound">HistoryWindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_lyrics_8h" kindref="compound">Lyrics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_lyrics_window_8h" kindref="compound">LyricsWindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mixer_board_8h" kindref="compound">MixerBoard.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_internat_8h" kindref="compound">Internat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_8h" kindref="compound">import/Import.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_label_track_8h" kindref="compound">LabelTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_legacy_8h" kindref="compound">Legacy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mix_8h" kindref="compound">Mix.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_note_track_8h" kindref="compound">NoteTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_prefs_8h" kindref="compound">Prefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sequence_8h" kindref="compound">Sequence.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_snap_8h" kindref="compound">Snap.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="src_2tags_8h" kindref="compound">Tags.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_time_track_8h" kindref="compound">TimeTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_track_panel_8h" kindref="compound">TrackPanel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wave_track_8h" kindref="compound">WaveTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_dir_manager_8h" kindref="compound">DirManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="src_2effects_2_effect_8h" kindref="compound">effects/Effect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_prefs_dialog_8h" kindref="compound">prefs/PrefsDialog.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_linking_html_window_8h" kindref="compound">widgets/LinkingHtmlWindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_slider_8h" kindref="compound">widgets/ASlider.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_error_dialog_8h" kindref="compound">widgets/ErrorDialog.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_ruler_8h" kindref="compound">widgets/Ruler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_warning_8h" kindref="compound">widgets/Warning.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_x_m_l_file_reader_8h" kindref="compound">xml/XMLFileReader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_platform_compatibility_8h" kindref="compound">PlatformCompatibility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_experimental_8h" kindref="compound">Experimental.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="src_2export_2export_8h" kindref="compound">export/Export.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_file_names_8h" kindref="compound">FileNames.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_block_file_8h" kindref="compound">BlockFile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_manager_8h" kindref="compound">ondemand/ODManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_task_8h" kindref="compound">ondemand/ODTask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_compute_summary_task_8h" kindref="compound">ondemand/ODComputeSummaryTask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OD_FLAC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_decode_flac_task_8h" kindref="compound">ondemand/ODDecodeFlacTask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_module_manager_8h" kindref="compound">ModuleManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_theme_8h" kindref="compound">Theme.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_all_theme_resources_8h" kindref="compound">AllThemeResources.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_file_dialog_8h" kindref="compound">FileDialog.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_undo_manager_8h" kindref="compound">UndoManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_tool_manager_8h" kindref="compound">toolbars/ToolManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_control_tool_bar_8h" kindref="compound">toolbars/ControlToolBar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_device_tool_bar_8h" kindref="compound">toolbars/DeviceToolBar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_edit_tool_bar_8h" kindref="compound">toolbars/EditToolBar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_meter_tool_bar_8h" kindref="compound">toolbars/MeterToolBar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mixer_tool_bar_8h" kindref="compound">toolbars/MixerToolBar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_selection_bar_8h" kindref="compound">toolbars/SelectionBar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_spectral_selection_bar_8h" kindref="compound">toolbars/SpectralSelectionBar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_tools_tool_bar_8h" kindref="compound">toolbars/ToolsToolBar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_transcription_tool_bar_8h" kindref="compound">toolbars/TranscriptionToolBar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_script_command_relay_8h" kindref="compound">commands/ScriptCommandRelay.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_directory_8h" kindref="compound">commands/CommandDirectory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_targets_8h" kindref="compound">commands/CommandTargets.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_8h" kindref="compound">commands/Command.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_type_8h" kindref="compound">commands/CommandType.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../images/AudacityLogoAlpha.xpm&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*AudacityProject::msClipboard<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>AudacityProject::msClipT0<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>AudacityProject::msClipT1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*AudacityProject::msClipProject<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="class_o_d_lock" kindref="compound">ODLock</ref><sp/><sp/><sp/>*AudacityProject::msAllProjectDeleteMutex<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_o_d_lock" kindref="compound">ODLock</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1aa8df4dce9db755699519dab9fc5f0be2" kindref="member">sbarSpaceWidth</ref><sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1a4a191634e7a5dde1f3e08587b62ffae8" kindref="member">sbarControlWidth</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1a10ce9c52032cf86b533734c0fc580c6d" kindref="member">sbarExtraLen</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1a8416fbcad75677d27992d858a74b889c" kindref="member">sbarHjump</ref><sp/>=<sp/>30;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//STM:<sp/>This<sp/>is<sp/>how<sp/>far<sp/>the<sp/>thumb<sp/>jumps<sp/>when<sp/>the<sp/>l/r<sp/>buttons<sp/>are<sp/>pressed,<sp/>or<sp/>auto-scrolling<sp/>occurs<sp/>--<sp/>in<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1aa8df4dce9db755699519dab9fc5f0be2" kindref="member">sbarSpaceWidth</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1a4a191634e7a5dde1f3e08587b62ffae8" kindref="member">sbarControlWidth</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1a10ce9c52032cf86b533734c0fc580c6d" kindref="member">sbarExtraLen</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1a8416fbcad75677d27992d858a74b889c" kindref="member">sbarHjump</ref><sp/>=<sp/>30;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//STM:<sp/>This<sp/>is<sp/>how<sp/>far<sp/>the<sp/>thumb<sp/>jumps<sp/>when<sp/>the<sp/>l/r<sp/>buttons<sp/>are<sp/>pressed,<sp/>or<sp/>auto-scrolling<sp/>occurs<sp/>--<sp/>in<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>wxGTK,<sp/>wxMOTIF,<sp/>wxX11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="_project_8cpp_1aa8df4dce9db755699519dab9fc5f0be2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1aa8df4dce9db755699519dab9fc5f0be2" kindref="member">sbarSpaceWidth</ref><sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="185" refid="_project_8cpp_1a4a191634e7a5dde1f3e08587b62ffae8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1a4a191634e7a5dde1f3e08587b62ffae8" kindref="member">sbarControlWidth</ref><sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="186" refid="_project_8cpp_1a10ce9c52032cf86b533734c0fc580c6d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1a10ce9c52032cf86b533734c0fc580c6d" kindref="member">sbarExtraLen</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="187" refid="_project_8cpp_1a8416fbcad75677d27992d858a74b889c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1a8416fbcad75677d27992d858a74b889c" kindref="member">sbarHjump</ref><sp/>=<sp/>30;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//STM:<sp/>This<sp/>is<sp/>how<sp/>far<sp/>the<sp/>thumb<sp/>jumps<sp/>when<sp/>the<sp/>l/r<sp/>buttons<sp/>are<sp/>pressed,<sp/>or<sp/>auto-scrolling<sp/>occurs<sp/>--<sp/>in<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_theme_8h" kindref="compound">Theme.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_all_theme_resources_8h" kindref="compound">AllThemeResources.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="_project_8cpp_1aea409aa4efe5bc935fe41cec30fcc0a2" kindref="member">DEFINE_EVENT_TYPE</ref>(EVT_CAPTURE_KEY);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>small<sp/>template<sp/>class<sp/>resembles<sp/>a<sp/>try-finally<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>sets<sp/>var<sp/>to<sp/>val_entry<sp/>in<sp/>the<sp/>constructor<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>var<sp/>to<sp/>val_exit<sp/>in<sp/>the<sp/>destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="204" refid="class_var_setter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_var_setter" kindref="compound">VarSetter</ref></highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="207" refid="class_var_setter_1a839e522148b46f12aafc8139f9584490" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_var_setter_1a839e522148b46f12aafc8139f9584490" kindref="member">VarSetter</ref>(<ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref>*<sp/>var,<sp/><ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref><sp/>val_entry,<sp/><ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref><sp/>val_exit)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mVar<sp/>=<sp/>var;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mValExit<sp/>=<sp/>val_exit;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*var<sp/>=<sp/>val_entry;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="class_var_setter_1a289e59be3427eeb29be8af47137be08c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_var_setter_1a289e59be3427eeb29be8af47137be08c" kindref="member">~VarSetter</ref>()</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*mVar<sp/>=<sp/>mValExit;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref>*<sp/>mVar;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref><sp/>mValExit;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>wrapper<sp/>prevents<sp/>the<sp/>scrollbars<sp/>from<sp/>retaining<sp/>focus<sp/>after<sp/>being</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>used.<sp/><sp/>Otherwise,<sp/>the<sp/>only<sp/>way<sp/>back<sp/>to<sp/>the<sp/>track<sp/>panel<sp/>is<sp/>to<sp/>click<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>that<sp/>causes<sp/>your<sp/>original<sp/>location<sp/>to<sp/>be<sp/>lost.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="class_scroll_bar" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_scroll_bar" kindref="compound">ScrollBar</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>wxScrollBar</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="229" refid="class_scroll_bar_1a78b08db4bb2b79179df63a0c4d4b0d2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_scroll_bar_1a78b08db4bb2b79179df63a0c4d4b0d2d" kindref="member">ScrollBar</ref>(wxWindow*<sp/>parent,<sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a5a176513c7f83ab7518d32ef1dba5b81" kindref="member">style</ref>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/>:<sp/><sp/><sp/>wxScrollBar(parent,<sp/>id,<sp/>wxDefaultPosition,<sp/>wxDefaultSize,<sp/>style)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="class_scroll_bar_1a1a851a14bc2726317b475a07f0ac2f14" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_scroll_bar_1a1a851a14bc2726317b475a07f0ac2f14" kindref="member">OnSetFocus</ref>(wxFocusEvent<sp/>&amp;<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxWindow<sp/>*w<sp/>=<sp/>e.GetWindow();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w-&gt;SetFocus();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/>DECLARE_EVENT_TABLE()</highlight></codeline>
<codeline lineno="244"><highlight class="normal">};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_scroll_bar" kindref="compound">ScrollBar</ref>,<sp/>wxScrollBar)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>EVT_SET_FOCUS(<ref refid="class_scroll_bar_1a1a851a14bc2726317b475a07f0ac2f14" kindref="member">ScrollBar::OnSetFocus</ref>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Define<sp/>Global<sp/>Variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//The<sp/>following<sp/>global<sp/>counts<sp/>the<sp/>number<sp/>of<sp/>documents<sp/>that<sp/>have<sp/>been<sp/>opened</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//for<sp/>the<sp/>purpose<sp/>of<sp/>project<sp/>placement<sp/>(not<sp/>to<sp/>keep<sp/>track<sp/>of<sp/>the<sp/>number)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//It<sp/>is<sp/>only<sp/>accurate<sp/>modulo<sp/>ten,<sp/>and<sp/>does<sp/>not<sp/>decrement<sp/>when<sp/>a<sp/>project<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//closed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gAudacityOffsetInc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gAudacityPosInc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//This<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>currently-active<sp/>project.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*gActiveProject;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//This<sp/>array<sp/>holds<sp/>onto<sp/>all<sp/>of<sp/>the<sp/>projects<sp/>currently<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="_project_8h_1abc1207c91a492b32e9c5971ddd301671" refkind="member"><highlight class="normal">AProjectArray<sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Declare<sp/>Static<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetActiveProject(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*<sp/>project);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="_project_8h_1a897aa047b58617a9acc187fc882e3bb4" refkind="member"><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*<ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>()</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gActiveProject;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetActiveProject(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*<sp/>project)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>gActiveProject<sp/>=<sp/>project;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;<ref refid="classwx_app_1a39033ec4c79bc1871c91ada7b31941e6" kindref="member">SetTopWindow</ref>(project);</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>wxUSE_DRAG_AND_DROP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_file_object" kindref="compound">FileObject</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>wxFileDataObject</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_file_object" kindref="compound">FileObject</ref>()</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsSupportedFormat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxDataFormat<sp/>&amp;<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/>Direction<sp/>WXUNUSED(dir<sp/>=<sp/>Get))</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="285"><highlight class="keyword"><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format.GetType()<sp/>==<sp/>wxDF_FILENAME)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!wxCHECK_VERSION(3,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format.GetFormatId()<sp/>==<sp/>kDragPromisedFlavorFindFile)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal">};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_drop_target" kindref="compound">DropTarget</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>wxFileDropTarget</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_drop_target" kindref="compound">DropTarget</ref>(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*proj)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProject<sp/>=<sp/>proj;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetDataObject(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_file_object" kindref="compound">FileObject</ref>());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>~<ref refid="class_drop_target" kindref="compound">DropTarget</ref>()</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetData()</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundSupported<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!wxCHECK_VERSION(3,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstFileAdded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OSErr<sp/>result;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt16<sp/>items<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CountDragItems((DragReference)m_currentDrag,<sp/>&amp;items);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UInt16<sp/>index<sp/>=<sp/>1;<sp/>index<sp/>&lt;=<sp/>items;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragItemRef<sp/>theItem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetDragItemReferenceNumber((DragReference)m_currentDrag,<sp/>index,<sp/>&amp;theItem);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UInt16<sp/>flavors<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountDragItemFlavors((DragReference)m_currentDrag,<sp/>theItem<sp/>,<sp/>&amp;flavors<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UInt16<sp/>flavor<sp/>=<sp/>1<sp/>;flavor<sp/>&lt;=<sp/>flavors;<sp/>flavor++)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlavorType<sp/>theType<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>GetFlavorType((DragReference)m_currentDrag,<sp/>theItem,<sp/>flavor,<sp/>&amp;theType);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theType<sp/>!=<sp/>kDragPromisedFlavorFindFile<sp/>&amp;&amp;<sp/>theType<sp/>!=<sp/>kDragFlavorTypeHFS)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundSupported<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size<sp/>dataSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetFlavorDataSize((DragReference)m_currentDrag,<sp/>theItem,<sp/>theType,<sp/>&amp;dataSize);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ptr<sp/>theData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[dataSize];</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetFlavorData((DragReference)m_currentDrag,<sp/>theItem,<sp/>theType,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>theData,<sp/>&amp;dataSize,<sp/>0L);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theType<sp/>==<sp/>kDragPromisedFlavorFindFile)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>wxMacFSSpec2MacFilename((FSSpec<sp/>*)theData);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theType<sp/>==<sp/>kDragFlavorTypeHFS)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>wxMacFSSpec2MacFilename(&amp;((HFSFlavor<sp/>*)theData)-&gt;fileSpec);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>theData;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!firstFileAdded)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>file<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((wxFileDataObject*)GetDataObject())-&gt;SetData(0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstFileAdded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((wxFileDataObject*)GetDataObject())-&gt;AddFile(name);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>want<sp/>to<sp/>process<sp/>one<sp/>flavor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>foundSupported;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>OnDrop(wxCoord<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/>wxCoord<sp/>y)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundSupported<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!wxCHECK_VERSION(3,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstFileAdded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OSErr<sp/>result;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt16<sp/>items<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CountDragItems((DragReference)m_currentDrag,<sp/>&amp;items);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UInt16<sp/>index<sp/>=<sp/>1;<sp/>index<sp/>&lt;=<sp/>items;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DragItemRef<sp/>theItem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetDragItemReferenceNumber((DragReference)m_currentDrag,<sp/>index,<sp/>&amp;theItem);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UInt16<sp/>flavors<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountDragItemFlavors((DragReference)m_currentDrag,<sp/>theItem<sp/>,<sp/>&amp;flavors<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UInt16<sp/>flavor<sp/>=<sp/>1<sp/>;flavor<sp/>&lt;=<sp/>flavors;<sp/>flavor++)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlavorType<sp/>theType<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>GetFlavorType((DragReference)m_currentDrag,<sp/>theItem,<sp/>flavor,<sp/>&amp;theType);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theType<sp/>!=<sp/>kDragPromisedFlavorFindFile<sp/>&amp;&amp;<sp/>theType<sp/>!=<sp/>kDragFlavorTypeHFS)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CurrentDragHasSupportedFormat();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>OnDropFiles(wxCoord<sp/>WXUNUSED(x),<sp/>wxCoord<sp/>WXUNUSED(y),<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxArrayString&amp;<sp/><ref refid="src_2flac_2main_8c_1a4a0ffc3e2bb1095cee8ee5e31a24c6fe" kindref="member">filenames</ref>)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sort<sp/>by<sp/>OD<sp/>non<sp/>OD.<sp/><sp/>load<sp/>Non<sp/>OD<sp/>first<sp/>so<sp/>user<sp/>can<sp/>start<sp/>editing<sp/>asap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>sortednames(filenames);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1a396dd3991addcafba105966dbe00e163" kindref="member">ODManager::Pause</ref>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sortednames.Sort(<ref refid="_o_d_manager_8cpp_1a92ca2bae75f35c742f41ab7074bfe18f" kindref="member">CompareNoCaseFileName</ref>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>sortednames.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;Import(sortednames[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProject-&gt;HandleResize();<sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>scrollers<sp/>for<sp/>NEW<sp/>track<sp/>sizes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1acb332656b440294d52b48bbf6bf1b2fc" kindref="member">ODManager::Resume</ref>();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*mProject;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">};</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="class_import_x_m_l_tag_handler_1aa02d1d8f0fb0a22ffdcf2215fb291d6b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_import_x_m_l_tag_handler_1aa02d1d8f0fb0a22ffdcf2215fb291d6b" kindref="member">ImportXMLTagHandler::HandleXMLTag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="structtag" kindref="compound">tag</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>**attrs)</highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;import&quot;</highlight><highlight class="normal">))<sp/>||<sp/>attrs==<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>(*attrs)==<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>wxStrcmp(*attrs++,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>strAttr<sp/>=<sp/>*attrs;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_x_m_l_value_checker_1a97ca6cdce1f85f74fff3bd59dcc28d48" kindref="member">XMLValueChecker::IsGoodPathName</ref>(strAttr))</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maybe<sp/>strAttr<sp/>is<sp/>just<sp/>a<sp/>fileName,<sp/>not<sp/>the<sp/>full<sp/>path.<sp/>Try<sp/>the<sp/>project<sp/>data<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFileName<sp/>fileName(mProject-&gt;GetDirManager()-&gt;GetProjectDataDir(),<sp/>strAttr);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_x_m_l_value_checker_1ace939107688c8886ec015cfbbab8cebe" kindref="member">XMLValueChecker::IsGoodFileName</ref>(strAttr,<sp/>fileName.GetPath(wxPATH_GET_VOLUME)))</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strAttr<sp/>=<sp/>fileName.GetFullPath();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogWarning(wxT(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>import<sp/>file:<sp/>%s&quot;</highlight><highlight class="normal">),<sp/>strAttr.c_str());</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track_array" kindref="compound">WaveTrackArray</ref><sp/>trackArray;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/>mProject-&gt;Import(strAttr,<sp/>&amp;trackArray);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trackArray.empty())</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>other<sp/>attributes,<sp/>now<sp/>that<sp/>we<sp/>have<sp/>the<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/>attrs++;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar**<sp/>pAttr;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSuccess<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>trackArray.size();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Most<sp/>of<sp/>the<sp/>&quot;import&quot;<sp/>tag<sp/>attributes<sp/>are<sp/>the<sp/>same<sp/>as<sp/>for<sp/>&quot;wavetrack&quot;<sp/>tags,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>apply<sp/>them<sp/>via<sp/>WaveTrack::HandleXMLTag().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bSuccess<sp/>=<sp/>trackArray[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;HandleXMLTag(wxT(</highlight><highlight class="stringliteral">&quot;wavetrack&quot;</highlight><highlight class="normal">),<sp/>attrs);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;offset&quot;<sp/>tag<sp/>is<sp/>ignored<sp/>in<sp/>WaveTrack::HandleXMLTag<sp/>except<sp/>for<sp/>legacy<sp/>projects,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>handle<sp/>it<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dblValue;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pAttr<sp/>=<sp/>attrs;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*pAttr)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*attr<sp/>=<sp/>*pAttr++;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>*pAttr++;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>strValue<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;offset&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adf2bcfece118875538ca2bdd528b8c23" kindref="member">XMLValueChecker::IsGoodString</ref>(strValue)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(strValue,<sp/>&amp;dblValue))</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trackArray[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;SetOffset(dblValue);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bSuccess;</highlight></codeline>
<codeline lineno="486"><highlight class="normal">};</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="_project_8h_1a7ed9e8421d58eab17daaf58d4a78b279" refkind="member"><highlight class="normal"><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*<ref refid="_project_8cpp_1a28032264c981ed85265ad34afc761335" kindref="member">CreateNewAudacityProject</ref>()</highlight></codeline>
<codeline lineno="489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bMaximized;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>wndRect;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIconized;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><ref refid="_project_8cpp_1aa9784a13cfc98f9a0e03026b6a80402d" kindref="member">GetNextWindowPlacement</ref>(&amp;wndRect,<sp/>&amp;bMaximized,<sp/>&amp;bIconized);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>and<sp/>show<sp/>a<sp/>NEW<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>-1,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDefaultPosition,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxSize(wndRect.width,<sp/>wndRect.height));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>.Add(p);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wxGTK3<sp/>seems<sp/>to<sp/>need<sp/>to<sp/>require<sp/>creating<sp/>the<sp/>window<sp/>using<sp/>default<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>manually<sp/>positioning<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/>p-&gt;SetPosition(wndRect.GetPosition());</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bMaximized)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;Maximize(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bIconized)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>user<sp/>close<sp/>down<sp/>and<sp/>iconized<sp/>state<sp/>we<sp/>could<sp/>start<sp/>back<sp/>up<sp/>and<sp/>iconized<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>p-&gt;Iconize(TRUE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Initialise<sp/>the<sp/>Listener</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a8d9df4aba253fa43612ac02bafa994fd" kindref="member">SetListener</ref>(p);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>NEW<sp/>project<sp/>as<sp/>active:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/>SetActiveProject(p);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Okay,<sp/>GetActiveProject()<sp/>is<sp/>ready.<sp/>Now<sp/>we<sp/>can<sp/>get<sp/>its<sp/>CommandManager,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>add<sp/>the<sp/>shortcut<sp/>keys<sp/>to<sp/>the<sp/>tooltips.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/>p-&gt;<ref refid="class_audacity_project_1a42b3845e8ab4f0e32fa04be54562d0c1" kindref="member">GetControlToolBar</ref>()-&gt;<ref refid="class_control_tool_bar_1a14eea71db3441ed660fbad1ffba73419" kindref="member">RegenerateToolsTooltips</ref>();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_module_manager_1a3820c2a8ad37e263b7fb2ed3b3aa46eb" kindref="member">ModuleManager::Get</ref>().<ref refid="class_module_manager_1a570d7a26f2684ca2eb0dc1daedd18145" kindref="member">Dispatch</ref>(<ref refid="_scripter_callback_8cpp_1a9f2f762f76ca014f9381eeabccdef359aca65a88d8918628a543db101c2cadd01" kindref="member">ProjectInitialized</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/>p-&gt;Show(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="_project_8h_1ac760dc03d578e17cb9884e8ba08d9150" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1ac760dc03d578e17cb9884e8ba08d9150" kindref="member">RedrawAllProjects</ref>()</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>.GetCount();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;RedrawProject();</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537" refid="_project_8h_1aa4ecd0f61e775319c4f8ac6e56a4c536" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1aa4ecd0f61e775319c4f8ac6e56a4c536" kindref="member">RefreshCursorForAllProjects</ref>()</highlight></codeline>
<codeline lineno="538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>.GetCount();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;RefreshCursor();</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="_project_8h_1a36d2528285e2271390219ccbf583c72b" refkind="member"><highlight class="normal">AUDACITY_DLL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1a36d2528285e2271390219ccbf583c72b" kindref="member">CloseAllProjects</ref>()</highlight></codeline>
<codeline lineno="545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>.GetCount();</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="portburn__winxp_8cpp_1ad6f32ac62ea277a3e8a068ed1faeee1f" kindref="member">Close</ref>();</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>Offset<sp/>and<sp/>Position<sp/>increments<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/>gAudacityOffsetInc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/>gAudacityPosInc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BG:<sp/>The<sp/>default<sp/>size<sp/>and<sp/>position<sp/>of<sp/>the<sp/>first<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="_project_8h_1a7145ee06a051e1b8f33a2c6c9e9932e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1a7145ee06a051e1b8f33a2c6c9e9932e4" kindref="member">GetDefaultWindowRect</ref>(wxRect<sp/>*defRect)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/>*defRect<sp/>=<sp/>wxGetClientDisplayRect();</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>940;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>674;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//These<sp/>conditional<sp/>values<sp/>assist<sp/>in<sp/>improving<sp/>placement<sp/>and<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//of<sp/>NEW<sp/>windows<sp/>on<sp/>different<sp/>platforms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WXGTK__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/>height<sp/>+=<sp/>20;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WXMSW__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/>height<sp/>+=<sp/>40;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WXMAC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/>height<sp/>+=<sp/>55;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>screen<sp/>size<sp/>where<sp/>it<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>values<sp/>we<sp/>would<sp/>like.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>use<sp/>the<sp/>values<sp/>we<sp/>would<sp/>like,<sp/>and<sp/>centred.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&lt;<sp/>defRect-&gt;width)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>defRect-&gt;x<sp/>=<sp/>(defRect-&gt;width<sp/>-<sp/>width)/2;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>defRect-&gt;width<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height<sp/>&lt;<sp/>defRect-&gt;height)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>defRect-&gt;y<sp/>=<sp/>(defRect-&gt;height<sp/>-<sp/>height)/2;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bug<sp/>1119<sp/>workaround</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Small<sp/>adjustment<sp/>for<sp/>very<sp/>small<sp/>Mac<sp/>screens.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>only<sp/>a<sp/>tiny<sp/>space<sp/>at<sp/>the<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>instead<sp/>of<sp/>vertical<sp/>centre,<sp/>align<sp/>to<sp/>bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixelsFormenu<sp/>=<sp/>60;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>defRect-&gt;y<sp/>&lt;<sp/>pixelsFormenu<sp/>)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defRect-&gt;y<sp/>*=2;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>defRect-&gt;height<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599" refid="_project_8h_1a7e546d886ff554604ba8657b83dbe203" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1a7e546d886ff554604ba8657b83dbe203" kindref="member">IsWindowAccessible</ref>(wxRect<sp/>*requestedRect)</highlight></codeline>
<codeline lineno="600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/>wxDisplay<sp/>display;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>targetTitleRect(requestedRect-&gt;GetLeftTop(),<sp/>requestedRect-&gt;GetBottomRight());</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/>targetTitleRect.x<sp/>+=<sp/>15;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/>targetTitleRect.width<sp/>-=<sp/>100;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(targetTitleRect.width<sp/>&lt;<sp/><sp/>165)<sp/>targetTitleRect.width<sp/>=<sp/>165;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/>targetTitleRect.height<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>targetBottom<sp/>=<sp/>targetTitleRect.GetBottom();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>targetRight<sp/>=<sp/>targetTitleRect.GetRight();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><sp/>targetTitleRect.GetLeft();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>targetRight;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>targetTitleRect.GetTop();<sp/>j<sp/>&lt;<sp/>targetBottom;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="midithread_8c_1a46fa1969de5714507943035793d36269" kindref="member">monitor</ref><sp/>=<sp/>display.GetFromPoint(wxPoint(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(monitor<sp/>!=<sp/>wxNOT_FOUND)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BG:<sp/>Calculate<sp/>where<sp/>to<sp/>place<sp/>the<sp/>next<sp/>window<sp/>(could<sp/>be<sp/>the<sp/>first<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BG:<sp/>Does<sp/>not<sp/>store<sp/>X<sp/>and<sp/>Y<sp/>in<sp/>prefs.<sp/>This<sp/>is<sp/>intentional.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LL:<sp/>This<sp/>should<sp/>NOT<sp/>need<sp/>to<sp/>be<sp/>this<sp/>complicated...FIXME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="_project_8h_1aa9784a13cfc98f9a0e03026b6a80402d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_project_8cpp_1aa9784a13cfc98f9a0e03026b6a80402d" kindref="member">GetNextWindowPlacement</ref>(wxRect<sp/>*nextRect,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*pMaximized,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*pIconized)</highlight></codeline>
<codeline lineno="625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inc<sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>defaultRect;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><ref refid="_project_8cpp_1a7145ee06a051e1b8f33a2c6c9e9932e4" kindref="member">GetDefaultWindowRect</ref>(&amp;defaultRect);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Window/Maximized&quot;</highlight><highlight class="normal">),<sp/>pMaximized,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Window/Iconized&quot;</highlight><highlight class="normal">),<sp/>pIconized,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>windowRect;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Window/X&quot;</highlight><highlight class="normal">),<sp/>&amp;windowRect.x,<sp/>defaultRect.x);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Window/Y&quot;</highlight><highlight class="normal">),<sp/>&amp;windowRect.y,<sp/>defaultRect.y);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Window/Width&quot;</highlight><highlight class="normal">),<sp/>&amp;windowRect.width,<sp/>defaultRect.width);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Window/Height&quot;</highlight><highlight class="normal">),<sp/>&amp;windowRect.height,<sp/>defaultRect.height);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>normalRect;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Window/Normal_X&quot;</highlight><highlight class="normal">),<sp/>&amp;normalRect.x,<sp/>defaultRect.x);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Window/Normal_Y&quot;</highlight><highlight class="normal">),<sp/>&amp;normalRect.y,<sp/>defaultRect.y);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Window/Normal_Width&quot;</highlight><highlight class="normal">),<sp/>&amp;normalRect.width,<sp/>defaultRect.width);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Window/Normal_Height&quot;</highlight><highlight class="normal">),<sp/>&amp;normalRect.height,<sp/>defaultRect.height);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Workaround<sp/>2.1.1<sp/>and<sp/>earlier<sp/>bug<sp/>on<sp/>OSX...affects<sp/>only<sp/>normalRect,<sp/>but<sp/>let&apos;s<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>for<sp/>all<sp/>rects<sp/>and<sp/>plats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(normalRect.width<sp/>==<sp/>0<sp/>||<sp/>normalRect.height<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalRect<sp/>=<sp/>defaultRect;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(windowRect.width<sp/>==<sp/>0<sp/>||<sp/>windowRect.height<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>windowRect<sp/>=<sp/>defaultRect;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>screenRect<sp/>=<sp/>wxGetClientDisplayRect();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>OSX,<sp/>the<sp/>top<sp/>of<sp/>the<sp/>window<sp/>should<sp/>never<sp/>be<sp/>less<sp/>than<sp/>the<sp/>menu<sp/>height,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>something<sp/>is<sp/>amiss<sp/>if<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(normalRect.y<sp/>&lt;<sp/>screenRect.y)<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalRect<sp/>=<sp/>defaultRect;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(windowRect.y<sp/>&lt;<sp/>screenRect.y)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>windowRect<sp/>=<sp/>defaultRect;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>initial<sp/>sizes<sp/>fit<sp/>within<sp/>the<sp/>display<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>used<sp/>to<sp/>trim<sp/>the<sp/>sizes<sp/>which<sp/>could<sp/>result<sp/>in<sp/>ridiculously<sp/>small<sp/>windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>contributing<sp/>to<sp/>bug<sp/>1243.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>instead<sp/>if<sp/>the<sp/>window<sp/>doesn&apos;t<sp/>fit<sp/>the<sp/>screen,<sp/>we<sp/>use<sp/>the<sp/>default<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>window<sp/>instead,<sp/>which<sp/>we<sp/>know<sp/>does.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!screenRect.Contains(<sp/>normalRect<sp/>))<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalRect<sp/>=<sp/>defaultRect;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!screenRect.Contains(<sp/>windowRect<sp/>))<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>windowRect<sp/>=<sp/>defaultRect;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pMaximized<sp/>||<sp/>*pIconized)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*nextRect<sp/>=<sp/>normalRect;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*nextRect<sp/>=<sp/>windowRect;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_project_8cpp_1a7e546d886ff554604ba8657b83dbe203" kindref="member">IsWindowAccessible</ref>(nextRect))<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*nextRect<sp/>=<sp/>defaultRect;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>validWindowSize<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*<sp/>validProject<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numProjects<sp/>=<sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>.Count();</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>numProjects;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&gt;<sp/>0<sp/>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>--)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-1]-&gt;IsIconized())<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validWindowSize<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validProject<sp/>=<sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-1];</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(validWindowSize)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*nextRect<sp/>=<sp/>validProject-&gt;GetRect();</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pMaximized<sp/>=<sp/>validProject-&gt;IsMaximized();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pIconized<sp/>=<sp/>validProject-&gt;IsIconized();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*nextRect<sp/>=<sp/>normalRect;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Placement<sp/>depends<sp/>on<sp/>the<sp/>increments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nextRect-&gt;x<sp/>+=<sp/>inc;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nextRect-&gt;y<sp/>+=<sp/>inc;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Have<sp/>we<sp/>hit<sp/>the<sp/>right<sp/>side<sp/>of<sp/>the<sp/>screen?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/>wxPoint<sp/>bottomRight<sp/>=<sp/>nextRect-&gt;GetBottomRight();</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottomRight.x<sp/>&gt;<sp/>screenRect.GetRight())<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newWidth<sp/>=<sp/>screenRect.GetWidth()<sp/>-<sp/>nextRect-&gt;GetLeft();</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newWidth<sp/>&lt;<sp/>defaultRect.GetWidth())<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextRect-&gt;x<sp/>=<sp/>windowRect.x;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextRect-&gt;y<sp/>=<sp/>windowRect.y;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextRect-&gt;width<sp/>=<sp/>windowRect.width;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextRect-&gt;width<sp/>=<sp/>newWidth;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Have<sp/>we<sp/>hit<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>screen?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/>bottomRight<sp/>=<sp/>nextRect-&gt;GetBottomRight();</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottomRight.y<sp/>&gt;<sp/>screenRect.GetBottom())<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nextRect-&gt;y<sp/>-=<sp/>inc;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bottomRight<sp/>=<sp/>nextRect-&gt;GetBottomRight();</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottomRight.y<sp/>&gt;<sp/>screenRect.GetBottom())<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextRect-&gt;SetBottom(screenRect.GetBottom());</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_project_8cpp_1a7e546d886ff554604ba8657b83dbe203" kindref="member">IsWindowAccessible</ref>(nextRect))<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*nextRect<sp/>=<sp/>defaultRect;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>wxString<sp/>CreateUniqueName()</highlight></codeline>
<codeline lineno="748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxDateTime::Now().Format(wxT(</highlight><highlight class="stringliteral">&quot;%Y-%m-%d<sp/>%H-%M-%S&quot;</highlight><highlight class="normal">))<sp/>+</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;<sp/>N-%i&quot;</highlight><highlight class="normal">),<sp/>++count);</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="755" refid="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5cafdd3cb42d7ff8fd19f8ae0626e2b371e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5cafdd3cb42d7ff8fd19f8ae0626e2b371e" kindref="member">FirstID</ref><sp/>=<sp/>1000,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Window<sp/>controls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759" refid="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5ca8c461577a9db8f48725189723b88eb7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5ca8c461577a9db8f48725189723b88eb7f" kindref="member">HSBarID</ref>,</highlight></codeline>
<codeline lineno="760" refid="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5ca4edf9a6fe4ea5bf2b1868d87a19d7eaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5ca4edf9a6fe4ea5bf2b1868d87a19d7eaa" kindref="member">VSBarID</ref>,</highlight></codeline>
<codeline lineno="761" refid="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5ca7b42851ecbdaec527a4268321c678cb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5ca7b42851ecbdaec527a4268321c678cb1" kindref="member">TrackPanelID</ref></highlight></codeline>
<codeline lineno="762"><highlight class="normal">};</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>,<sp/>wxFrame)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/>EVT_MENU(wxID_ANY,<sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnMenu)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/>EVT_MOUSE_EVENTS(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnMouseEvent)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/>EVT_CLOSE(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnCloseWindow)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/>EVT_SIZE(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnSize)</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/>EVT_SHOW(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnShow)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/>EVT_MOVE(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnMove)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/>EVT_ACTIVATE(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnActivate)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/>EVT_COMMAND_SCROLL_LINEUP(<ref refid="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5ca8c461577a9db8f48725189723b88eb7f" kindref="member">HSBarID</ref>,<sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnScrollLeftButton)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/>EVT_COMMAND_SCROLL_LINEDOWN(HSBarID,<sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnScrollRightButton)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/>EVT_COMMAND_SCROLL(HSBarID,<sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnScroll)</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/>EVT_COMMAND_SCROLL(<ref refid="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5ca4edf9a6fe4ea5bf2b1868d87a19d7eaa" kindref="member">VSBarID</ref>,<sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnScroll)</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/>EVT_TIMER(<ref refid="_project_8h_1ac7eb5f4f1d4f4875ce2cf1b429c8196a" kindref="member">AudacityProjectTimerID</ref>,<sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnTimer)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fires<sp/>for<sp/>menu<sp/>with<sp/>ID<sp/>#1...first<sp/>menu<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/>EVT_UPDATE_UI(1,<sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnUpdateUI)</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/>EVT_ICONIZE(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnIconize)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/>EVT_COMMAND(wxID_ANY,<sp/>EVT_OPEN_AUDIO_FILE,<sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnOpenAudioFile)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/>EVT_COMMAND(wxID_ANY,<sp/>EVT_TOOLBAR_UPDATED,<sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnToolBarUpdate)</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//mchinen:multithreaded<sp/>calls<sp/>-<sp/>may<sp/>not<sp/>be<sp/>threadsafe<sp/>with<sp/>CommandEvent:<sp/>may<sp/>have<sp/>to<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/>EVT_COMMAND(wxID_ANY,<sp/>EVT_ODTASK_UPDATE,<sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnODTaskUpdate)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/>EVT_COMMAND(wxID_ANY,<sp/>EVT_ODTASK_COMPLETE,<sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::OnODTaskComplete)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788" refid="class_audacity_project_1a23eca8d8cf7b00514867ed496091c65f" refkind="member"><highlight class="normal"><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>::<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>(wxWindow<sp/>*<sp/>parent,<sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxPoint<sp/>&amp;<sp/>pos,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxSize<sp/>&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/>:<sp/>wxFrame(parent,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>wxT(&quot;Audacity&quot;),<sp/>pos,<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>),</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mRate((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(&quot;/SamplingRate/DefaultProjectSampleRate&quot;),<sp/><ref refid="class_audio_i_o" kindref="compound">AudioIO</ref>::GetOptimalSupportedSampleRate())),</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mDefaultFormat((<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref>)<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Read(wxT(&quot;/SamplingRate/DefaultProjectSampleFormat&quot;),<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>)),</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mSnapTo(<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(&quot;/SnapTo&quot;),<sp/><ref refid="_snap_8h_1ae6cdb622357fec6e889e47579a078524ac234091642d89d6cd00db5015f0d8e82" kindref="member">SNAP_OFF</ref>)),</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mSelectionFormat(<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(&quot;/SelectionFormat&quot;),<sp/>wxT(&quot;&quot;))),</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mFrequencySelectionFormatName(<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(&quot;/FrequencySelectionFormatName&quot;),<sp/>wxT(&quot;&quot;))),</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mBandwidthSelectionFormatName(<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(&quot;/BandwidthSelectionFormatName&quot;),<sp/>wxT(&quot;&quot;))),</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mUndoManager(<ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_undo_manager" kindref="compound">UndoManager</ref>),</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mViewInfo(0.0,<sp/>1.0,<sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref>::GetDefaultZoom())</highlight></codeline>
<codeline lineno="801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>first<sp/>field<sp/>of<sp/>the<sp/>status<sp/>bar<sp/>is<sp/>a<sp/>dummy,<sp/>and<sp/>it&apos;s<sp/>width<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>zero<sp/>latter<sp/>in<sp/>the<sp/>code.<sp/>This<sp/>field<sp/>is<sp/>needed<sp/>for<sp/>wxWidgets<sp/>2.8.12<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>you<sp/>move<sp/>to<sp/>the<sp/>menu<sp/>bar,<sp/>the<sp/>first<sp/>field<sp/>of<sp/>the<sp/>menu<sp/>bar<sp/>is<sp/>cleared,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>undesirable<sp/>behaviour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>addition,<sp/>the<sp/>help<sp/>strings<sp/>of<sp/>menu<sp/>items<sp/>are<sp/>by<sp/>default<sp/>sent<sp/>to<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>field.<sp/>Currently<sp/>there<sp/>are<sp/>no<sp/>such<sp/>help<sp/>strings,<sp/>but<sp/>it<sp/>they<sp/>were<sp/>introduced,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>would<sp/>need<sp/>to<sp/>be<sp/>an<sp/>event<sp/>handler<sp/>to<sp/>send<sp/>them<sp/>to<sp/>the<sp/>appropriate<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/>mStatusBar<sp/>=<sp/>CreateStatusBar(4);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1aeb08d650377a0607ac251da0293813a7" kindref="member">SetMissingAliasedFileWarningShouldShow</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MM:<sp/>DirManager<sp/>is<sp/>created<sp/>dynamically,<sp/>freed<sp/>on<sp/>demand<sp/>via<sp/>ref-counting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MM:<sp/>We<sp/>don&apos;t<sp/>need<sp/>to<sp/>Ref()<sp/>here<sp/>because<sp/>it<sp/>start<sp/>with<sp/>refcount=1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/>mDirManager<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_dir_manager" kindref="compound">DirManager</ref>();</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>track<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/>mTracks<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref>();</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/>mLastSavedTracks<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>for<sp/>tracklist<sp/>updates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/>mTracks-&gt;Connect(EVT_TRACKLIST_UPDATED,</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(<ref refid="class_audacity_project_1a68f2dfdcdd7e5726f8c996be1f50ea7c" kindref="member">AudacityProject::OnTrackListUpdated</ref>),</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>view<sp/>info<sp/>(shared<sp/>with<sp/>TrackPanel)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/>UpdatePrefs();</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/>mLockPlayRegion<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>valgrind<sp/>sees<sp/>mIsSyncLocked<sp/>is<sp/>initialized,<sp/>even</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>though<sp/>we&apos;re<sp/>about<sp/>to<sp/>set<sp/>it<sp/>from<sp/>prefs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/>mIsSyncLocked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/SyncLockTracks&quot;</highlight><highlight class="normal">),<sp/>&amp;mIsSyncLocked,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/>CreateMenusAndCommands();</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLL:<sp/><sp/>Read<sp/>this!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Until<sp/>the<sp/>time<sp/>(and<sp/>cpu)<sp/>required<sp/>to<sp/>refresh<sp/>the<sp/>track<sp/>panel<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reduced,<sp/>leave<sp/>the<sp/>following<sp/>window<sp/>creations<sp/>in<sp/>the<sp/>order<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>place<sp/>the<sp/>refresh<sp/>of<sp/>the<sp/>track<sp/>panel<sp/>last,<sp/>allowing<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>others<sp/>to<sp/>get<sp/>done<sp/>quickly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Near<sp/>as<sp/>I<sp/>can<sp/>tell,<sp/>this<sp/>is<sp/>only<sp/>a<sp/>problem<sp/>under<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>ToolDock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/>mToolManager<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_tool_manager" kindref="compound">ToolManager</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/>GetSelectionBar()-&gt;SetListener(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SPECTRAL_EDITING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/>GetSpectralSelectionBar()-&gt;SetListener(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/>mToolManager-&gt;LayoutToolBars();</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>horizontal<sp/>ruler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/>mRuler<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_adorned_ruler_panel" kindref="compound">AdornedRulerPanel</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxID_ANY,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDefaultPosition,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxSize(<sp/>-1,<sp/><ref refid="class_adorned_ruler_panel_1a125b8ff3a6584fbcf4c352a1e1e5a351" kindref="member">AdornedRulerPanel::GetRulerHeight</ref>()<sp/>),</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;mViewInfo<sp/>);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>TrackPanel<sp/>and<sp/>the<sp/>scrollbars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/>wxWindow<sp/><sp/><sp/><sp/>*<sp/>pPage;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_NOTEBOOK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>using<sp/>a<sp/>notebook<sp/>(tabbed<sp/>panel),<sp/>so<sp/>we<sp/>create<sp/>the<sp/>notebook<sp/>and<sp/>add<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/>GuiFactory<sp/>Factory;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/>wxNotebook<sp/><sp/>*<sp/>pNotebook;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/>mMainPanel<sp/>=<sp/>Factory.AddPanel(</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>wxPoint(<sp/>left,<sp/>top<sp/>),<sp/>wxSize(<sp/>width,<sp/>height<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/>pNotebook<sp/><sp/>=<sp/>Factory.AddNotebook(<sp/>mMainPanel<sp/>);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>This<sp/>is<sp/>an<sp/>experimental<sp/>feature<sp/>where<sp/>the<sp/>main<sp/>panel<sp/>in</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Audacity<sp/>is<sp/>put<sp/>on<sp/>a<sp/>notebook<sp/>tab,<sp/>and<sp/>this<sp/>is<sp/>the<sp/>name<sp/>on<sp/>that<sp/>tab.</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Other<sp/>tabs<sp/>in<sp/>that<sp/>notebook<sp/>may<sp/>have<sp/>instruments,<sp/>patch<sp/>panels<sp/>etc.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/>pPage<sp/>=<sp/>Factory.AddPage(<sp/>pNotebook,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Main<sp/>Mix&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>using<sp/>a<sp/>notebook,<sp/>so<sp/>we<sp/>place<sp/>the<sp/>track<sp/>panel<sp/>inside<sp/>another<sp/>panel,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>keeps<sp/>the<sp/>notebook<sp/>code<sp/>and<sp/>normal<sp/>code<sp/>consistant<sp/>and<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>paves<sp/>the<sp/>way<sp/>for<sp/>adding<sp/>additional<sp/>windows<sp/>inside<sp/>the<sp/>track<sp/>panel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/>mMainPanel<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/>wxPanel(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>-1,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxDefaultPosition,</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxDefaultSize,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxNO_BORDER);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/>mMainPanel-&gt;SetSizer(<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/>wxBoxSizer(wxVERTICAL)<sp/>);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/>pPage<sp/>=<sp/>mMainPanel;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>colour<sp/>here<sp/>to<sp/>the<sp/>track<sp/>panel<sp/>background<sp/>to<sp/>avoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flicker<sp/>when<sp/>Audacity<sp/>starts<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>that<sp/>leads<sp/>to<sp/>areas<sp/>next<sp/>to<sp/>the<sp/>horizontal<sp/>scroller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>being<sp/>painted<sp/>in<sp/>background<sp/>colour<sp/>and<sp/>not<sp/>scroller<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>colour,<sp/>so<sp/>suppress<sp/>this<sp/>for<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//pPage-&gt;SetBackgroundColour(<sp/>theTheme.Colour(<sp/>clrDark<sp/>));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/>wxBoxSizer<sp/>*bs;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ubs<sp/>=<sp/>std::make_unique&lt;wxBoxSizer&gt;(wxVERTICAL);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bs<sp/>=<sp/>ubs.get();</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bs-&gt;Add(mToolManager-&gt;GetTopDock(),<sp/>0,<sp/>wxEXPAND<sp/>|<sp/>wxALIGN_TOP);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bs-&gt;Add(mRuler,<sp/>0,<sp/>wxEXPAND);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bs-&gt;Add(pPage,<sp/>1,<sp/>wxEXPAND);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bs-&gt;Add(mToolManager-&gt;GetBotDock(),<sp/>0,<sp/>wxEXPAND);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetAutoLayout(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetSizer(ubs.release());</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/>bs-&gt;Layout();</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>right<sp/>hand<sp/>side<sp/>translates<sp/>to<sp/>NEW<sp/>TrackPanel(...<sp/>in<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Audacity<sp/>without<sp/>additional<sp/>DLLs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel<sp/>=<sp/><ref refid="class_track_panel_1ab446ba22f650d9366bac877c10ebe4f8" kindref="member">TrackPanel::FactoryFunction</ref>(pPage,</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_project_8cpp_1af96be3e9de53e065a22cd7978e05dc5ca7b42851ecbdaec527a4268321c678cb1" kindref="member">TrackPanelID</ref>,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDefaultPosition,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDefaultSize,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTracks,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;mViewInfo,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRuler);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLL:<sp/>When<sp/>Audacity<sp/>starts<sp/>or<sp/>becomes<sp/>active<sp/>after<sp/>returning<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>another<sp/>application,<sp/>the<sp/>first<sp/>window<sp/>that<sp/>can<sp/>accept<sp/>focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>be<sp/>given<sp/>the<sp/>focus<sp/>even<sp/>if<sp/>we<sp/>try<sp/>to<sp/>SetFocus().<sp/><sp/>By</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>creating<sp/>the<sp/>scrollbars<sp/>after<sp/>the<sp/>TrackPanel,<sp/>we<sp/>resolve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>several<sp/>focus<sp/>problems.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/>mHsbar<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_scroll_bar" kindref="compound">ScrollBar</ref>(pPage,<sp/>HSBarID,<sp/>wxSB_HORIZONTAL);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/>mVsbar<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/>ScrollBar(pPage,<sp/>VSBarID,<sp/>wxSB_VERTICAL);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLL:<sp/>When<sp/>Audacity<sp/>starts<sp/>or<sp/>becomes<sp/>active<sp/>after<sp/>returning<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>another<sp/>application,<sp/>the<sp/>first<sp/>window<sp/>that<sp/>can<sp/>accept<sp/>focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>be<sp/>given<sp/>the<sp/>focus<sp/>even<sp/>if<sp/>we<sp/>try<sp/>to<sp/>SetFocus().<sp/><sp/>By</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>making<sp/>the<sp/>TrackPanel<sp/>that<sp/>first<sp/>window,<sp/>we<sp/>resolve<sp/>several</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>keyboard<sp/>focus<sp/>problems.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/>pPage-&gt;MoveBeforeInTabOrder(mToolManager-&gt;GetTopDock());</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/>bs<sp/>=<sp/>(wxBoxSizer<sp/>*)pPage-&gt;GetSizer();</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Top<sp/>horizontal<sp/>grouping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hs<sp/>=<sp/>std::make_unique&lt;wxBoxSizer&gt;(wxHORIZONTAL);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>panel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hs-&gt;Add(mTrackPanel,<sp/>1,<sp/>wxEXPAND<sp/>|<sp/>wxALIGN_LEFT<sp/>|<sp/>wxALIGN_TOP);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>grouping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vs<sp/>=<sp/>std::make_unique&lt;wxBoxSizer&gt;(wxVERTICAL);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>scroll<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vs-&gt;Add(mVsbar,<sp/>1,<sp/>wxEXPAND<sp/>|<sp/>wxALIGN_TOP);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hs-&gt;Add(vs.release(),<sp/>0,<sp/>wxEXPAND<sp/>|<sp/>wxALIGN_TOP);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bs-&gt;Add(hs.release(),<sp/>1,<sp/>wxEXPAND<sp/>|<sp/>wxALIGN_LEFT<sp/>|<sp/>wxALIGN_TOP);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bottom<sp/>horizontal<sp/>grouping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hs<sp/>=<sp/>std::make_unique&lt;wxBoxSizer&gt;(wxHORIZONTAL);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bottom<sp/>scrollbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hs-&gt;Add(mTrackPanel-&gt;GetLeftOffset()<sp/>-<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hs-&gt;Add(mHsbar,<sp/>1,<sp/>wxALIGN_BOTTOM);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hs-&gt;Add(mVsbar-&gt;GetSize().GetWidth(),<sp/>0);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bs-&gt;Add(hs.release(),<sp/>0,<sp/>wxEXPAND<sp/>|<sp/>wxALIGN_LEFT);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lay<sp/>it<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/>pPage-&gt;SetAutoLayout(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/>pPage-&gt;Layout();</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_NOTEBOOK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/>AddPages(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>Factory,<sp/>pNotebook);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/>mMainPanel-&gt;Layout();</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(<sp/>mTrackPanel-&gt;GetProject()==</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MM:<sp/>Give<sp/>track<sp/>panel<sp/>the<sp/>focus<sp/>to<sp/>ensure<sp/>keyboard<sp/>commands<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;SetFocus();</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>tags<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/>mTags<sp/>=<sp/>std::make_shared&lt;Tags&gt;();</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/>InitialState();</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/>FixScrollbars();</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/>mRuler-&gt;SetLeftOffset(mTrackPanel-&gt;GetLeftOffset());<sp/><sp/></highlight><highlight class="comment">//<sp/>bevel<sp/>on<sp/>AdornedRuler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/>mRuler-&gt;SetProject(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>Icon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loads<sp/>either<sp/>the<sp/>XPM<sp/>or<sp/>the<sp/>windows<sp/>resource,<sp/>depending<sp/>on<sp/>the<sp/>platform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__WXMAC__)<sp/>&amp;&amp;<sp/>!defined(__WXX11__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxIcon<sp/>ic{<sp/>wxICON(AudacityLogo)<sp/>};</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__WXGTK__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxIcon<sp/>ic{wxICON(AudacityLogoAlpha)};</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxIcon<sp/>ic{};</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ic.CopyFromBitmap(<ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a243b237025e874834e0570a9121df35f" kindref="member">Bitmap</ref>(bmpAudacityLogo48x48));</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetIcon(ic);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/>mIconized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/>mTrackFactory<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_track_factory" kindref="compound">TrackFactory</ref>(mDirManager,<sp/>&amp;mViewInfo);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>widths[]<sp/>=<sp/>{0,<sp/>GetControlToolBar()-&gt;WidthForStatusBar(mStatusBar),<sp/>-1,<sp/>150};</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/>mStatusBar-&gt;SetStatusWidths(4,<sp/>widths);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>msg<sp/>=<sp/>wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Welcome<sp/>to<sp/>Audacity<sp/>version<sp/>%s&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1a06785256c5408ee5ae69de8c7dfc57a5" kindref="member">AUDACITY_VERSION_STRING</ref>);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/>mStatusBar-&gt;SetStatusText(msg,<sp/><ref refid="_project_8h_1a788f1f168e5dd2f4411a457639a24674a55c8698cfddd36997feabda8755fc01b" kindref="member">mainStatusBarField</ref>);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/>mStatusBar-&gt;SetStatusText(GetControlToolBar()-&gt;StateForStatusBar(),<sp/><ref refid="_project_8h_1a788f1f168e5dd2f4411a457639a24674ae58eec5286484e499f6cb2c20cc249f3" kindref="member">stateStatusBarField</ref>);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/>mLastStatusUpdateTime<sp/>=<sp/>::wxGetUTCTime();</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/>mTimer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxTimer(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>AudacityProjectTimerID);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/>mTimer-&gt;Start(200);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>wxUSE_DRAG_AND_DROP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>import<sp/>now,<sp/>so<sp/>become<sp/>a<sp/>drag<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>SetDropTarget(new<sp/>AudacityDropTarget(this));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mTrackPanel-&gt;SetDropTarget(new<sp/>AudacityDropTarget(this));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;SetDropTarget(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_drop_target" kindref="compound">DropTarget</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;Connect(EVT_AUDIOIO_CAPTURE,</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(AudacityProject::OnCapture),</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Initialize<sp/>the<sp/>last<sp/>selection<sp/>adjustment<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/>mLastSelectionAdjustment<sp/>=<sp/>::wxGetLocalTimeMillis();</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049" refid="class_audacity_project_1a26d908ec8b9546c1a118d5bebafc8590" refkind="member"><highlight class="normal"><ref refid="class_audacity_project_1a26d908ec8b9546c1a118d5bebafc8590" kindref="member">AudacityProject::~AudacityProject</ref>()</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().GetRecentFiles())</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1ab6855b1bf393074014259f42d06722ba" kindref="member">GetRecentFiles</ref>()-&gt;<ref refid="class_file_history_1ac6c3c839e8e02931d51e43c96be631e7" kindref="member">RemoveMenu</ref>(mRecentFilesMenu);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;Disconnect(EVT_AUDIOIO_CAPTURE,</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(AudacityProject::OnCapture),</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062" refid="class_audacity_project_1aab258cf005aa9ef7df136e8491590c27" refkind="member"><highlight class="normal"><ref refid="struct_audio_i_o_start_stream_options" kindref="compound">AudioIOStartStreamOptions</ref><sp/><ref refid="class_audacity_project_1aab258cf005aa9ef7df136e8491590c27" kindref="member">AudacityProject::GetDefaultPlayOptions</ref>()</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_audio_i_o_start_stream_options" kindref="compound">AudioIOStartStreamOptions</ref><sp/><ref refid="namespacewaflib_1_1_options_1a59b9c00933a268d11c1c960cd109e113" kindref="member">options</ref>;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/>options.<ref refid="struct_audio_i_o_start_stream_options_1a3516f7c72546aa8a73fb25b2e628170f" kindref="member">timeTrack</ref><sp/>=<sp/>GetTracks()-&gt;GetTimeTrack();</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/>options.<ref refid="struct_audio_i_o_start_stream_options_1a326a9c07ece9c6b6ad8be00acc504dac" kindref="member">listener</ref><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_options_1a59b9c00933a268d11c1c960cd109e113" kindref="member">options</ref>;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070" refid="class_audacity_project_1a39312bae27bdd6453363979f93c5a124" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a39312bae27bdd6453363979f93c5a124" kindref="member">AudacityProject::UpdatePrefsVariables</ref>()</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/AudioFiles/ShowId3Dialog&quot;</highlight><highlight class="normal">),<sp/>&amp;mShowId3Dialog,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/AudioFiles/NormalizeOnLoad&quot;</highlight><highlight class="normal">),&amp;mNormalizeOnLoad,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/AutoScroll&quot;</highlight><highlight class="normal">),<sp/>&amp;mViewInfo.bUpdateTrackIndicator,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/EmptyCanBeDirty&quot;</highlight><highlight class="normal">),<sp/>&amp;mEmptyCanBeDirty,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/Help&quot;</highlight><highlight class="normal">),<sp/>&amp;mHelpPref,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;InBrowser&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/SelectAllOnNone&quot;</highlight><highlight class="normal">),<sp/>&amp;mSelectAllOnNone,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/ShowSplashScreen&quot;</highlight><highlight class="normal">),<sp/>&amp;mShowSplashScreen,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/Solo&quot;</highlight><highlight class="normal">),<sp/>&amp;mSoloPref,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Simple&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>old<sp/>default<sp/>to<sp/>the<sp/>NEW<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSoloPref<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Standard&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSoloPref<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Simple&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/TracksFitVerticallyZoomed&quot;</highlight><highlight class="normal">),<sp/>&amp;mTracksFitVerticallyZoomed,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>gPrefs-&gt;Read(wxT(&quot;/GUI/UpdateSpectrogram&quot;),<sp/>&amp;mViewInfo.bUpdateSpectrogram,<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/SamplingRate/DefaultProjectSampleRate&quot;</highlight><highlight class="normal">),<sp/>&amp;mRate,<sp/><ref refid="class_audio_i_o_1a71facd3c7274394b70eaff652e1bc97e" kindref="member">AudioIO::GetOptimalSupportedSampleRate</ref>());</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/>mDefaultFormat<sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref>)<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/SamplingRate/DefaultProjectSampleFormat&quot;</highlight><highlight class="normal">),<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/AudioIO/SeekShortPeriod&quot;</highlight><highlight class="normal">),<sp/>&amp;mSeekShort,<sp/>1.0);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/AudioIO/SeekLongPeriod&quot;</highlight><highlight class="normal">),<sp/>&amp;mSeekLong,<sp/>15.0);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093" refid="class_audacity_project_1ac95c8cb1fb0f6b79a03c68e79e07657a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ac95c8cb1fb0f6b79a03c68e79e07657a" kindref="member">AudacityProject::UpdatePrefs</ref>()</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/>UpdatePrefsVariables();</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/>SetProjectTitle();</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mTrackPanel)<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;UpdatePrefs();</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMixerBoard)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerBoard-&gt;UpdatePrefs();</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mToolManager)<sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mToolManager-&gt;UpdatePrefs();</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRuler)<sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler-&gt;UpdatePrefs();</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>toolbars<sp/>will<sp/>be<sp/>recreated,<sp/>so<sp/>make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>leave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>stale<sp/>pointer<sp/>hanging<sp/>around.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/>mLastFocusedWindow<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118" refid="class_audacity_project_1adbab5b332aa1e4bdf0e9b3c3a173dcb4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1adbab5b332aa1e4bdf0e9b3c3a173dcb4" kindref="member">AudacityProject::SetMissingAliasFileDialog</ref>(wxDialog<sp/>*dialog)</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/>mAliasMissingWarningDialog<sp/>=<sp/>dialog;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123" refid="class_audacity_project_1aa2a9b41d31ff4ab93b6ed2e977812c4d" refkind="member"><highlight class="normal">wxDialog<sp/>*<ref refid="class_audacity_project_1aa2a9b41d31ff4ab93b6ed2e977812c4d" kindref="member">AudacityProject::GetMissingAliasFileDialog</ref>()</highlight></codeline>
<codeline lineno="1124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAliasMissingWarningDialog;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128" refid="class_audacity_project_1ad06c48692cfa4c2e099f1895b98ca7bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ad06c48692cfa4c2e099f1895b98ca7bf" kindref="member">AudacityProject::RedrawProject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bForceWaveTracks<sp/></highlight><highlight class="comment">/*=<sp/>false*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/>FixScrollbars();</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bForceWaveTracks<sp/>&amp;&amp;<sp/>mTracks)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mTracks);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pTrack<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pTrack)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTrack-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pWaveTrack<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)pTrack;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="structnode" kindref="compound">node</ref><sp/>=<sp/>pWaveTrack-&gt;<ref refid="class_wave_track_1a40a351c828128e85e2ba993107b96ef3" kindref="member">GetClipIterator</ref>();</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node)</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/>node-&gt;GetData();</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a272fcb9bb28b53329674c6ba14026c7b" kindref="member">MarkChanged</ref>();</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;GetNext();</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTrack<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154" refid="class_audacity_project_1a0f0afa8b1f18dbba30d5cfa47e141651" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a0f0afa8b1f18dbba30d5cfa47e141651" kindref="member">AudacityProject::RefreshCursor</ref>()</highlight></codeline>
<codeline lineno="1155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;HandleCursorForLastMouseEvent();</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159" refid="class_audacity_project_1a4d97279f9ddf37332418c32d1079ff62" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a4d97279f9ddf37332418c32d1079ff62" kindref="member">AudacityProject::SetSel0</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newSel0)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Bound<sp/>checking<sp/>should<sp/>go<sp/>on<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.selectedRegion.setT0(newSel0);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166" refid="class_audacity_project_1a901e075ad4da1712207988af157b06de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a901e075ad4da1712207988af157b06de" kindref="member">AudacityProject::SetSel1</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newSel1)</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Bound<sp/>checking<sp/>should<sp/>go<sp/>on<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.selectedRegion.setT1(newSel1);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AudacityProject::OnCapture(wxCommandEvent&amp;<sp/>evt)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/>evt.Skip();</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.GetInt()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIsCapturing<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIsCapturing<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184" refid="class_audacity_project_1aa7aadbb20085c8c8631d17e3d81d02bb" refkind="member"><highlight class="normal"><ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*<ref refid="class_audacity_project_1aa7aadbb20085c8c8631d17e3d81d02bb" kindref="member">AudacityProject::GetDirManager</ref>()</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDirManager;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189" refid="class_audacity_project_1a05d3d9ac4cafb63f987d3b2306c9059d" refkind="member"><highlight class="normal"><ref refid="class_track_factory" kindref="compound">TrackFactory</ref><sp/>*<ref refid="class_audacity_project_1a05d3d9ac4cafb63f987d3b2306c9059d" kindref="member">AudacityProject::GetTrackFactory</ref>()</highlight></codeline>
<codeline lineno="1190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTrackFactory;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194" refid="class_audacity_project_1ad937a798d51c487dff6695499304deca" refkind="member"><highlight class="normal"><ref refid="class_adorned_ruler_panel" kindref="compound">AdornedRulerPanel</ref><sp/>*<ref refid="class_audacity_project_1ad937a798d51c487dff6695499304deca" kindref="member">AudacityProject::GetRulerPanel</ref>()</highlight></codeline>
<codeline lineno="1195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRuler;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199" refid="class_audacity_project_1a0c43e740f2b1e8f08d1d74bf38fd8abd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a0c43e740f2b1e8f08d1d74bf38fd8abd" kindref="member">AudacityProject::GetAudioIOToken</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1200"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAudioIOToken;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204" refid="class_audacity_project_1a82a9634b37418bbd1181f81a47f75e7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a82a9634b37418bbd1181f81a47f75e7e" kindref="member">AudacityProject::SetAudioIOToken</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1a472e2484c39e6e56a4c486a7d779841d" kindref="member">token</ref>)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/>mAudioIOToken<sp/>=<sp/><ref refid="seqread_8c_1a472e2484c39e6e56a4c486a7d779841d" kindref="member">token</ref>;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209" refid="class_audacity_project_1a393f7f316ce766e73323d1c92d0b496e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a393f7f316ce766e73323d1c92d0b496e" kindref="member">AudacityProject::IsAudioActive</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1210"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetAudioIOToken()<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a07490d6ae881910c5ea13cdf011835f3" kindref="member">IsStreamActive</ref>(GetAudioIOToken());</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215" refid="class_audacity_project_1abc6fde5083cc3580569a81063fe6c6e8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tags" kindref="compound">Tags</ref><sp/>*<ref refid="class_audacity_project_1abc6fde5083cc3580569a81063fe6c6e8" kindref="member">AudacityProject::GetTags</ref>()</highlight></codeline>
<codeline lineno="1216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTags.get();</highlight></codeline>
<codeline lineno="1218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220" refid="class_audacity_project_1a5afd1b5628e48b849342d8e9290c850c" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_audacity_project_1a5afd1b5628e48b849342d8e9290c850c" kindref="member">AudacityProject::GetName</ref>()</highlight></codeline>
<codeline lineno="1221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>=<sp/><ref refid="filefn_8cpp_1a76a10f9ffbac34e33fa9ca0b2ccc5218" kindref="member">wxFileNameFromPath</ref>(mFileName);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Chop<sp/>off<sp/>the<sp/>extension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>name.Len();</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>4<sp/>&amp;&amp;<sp/>name.Mid(len<sp/>-<sp/>4)<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.aup&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>name.Mid(0,<sp/>len<sp/>-<sp/>4);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232" refid="class_audacity_project_1a8140a0801adef5acd314447acc108083" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a8140a0801adef5acd314447acc108083" kindref="member">AudacityProject::SetProjectTitle</ref>()</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>=<sp/>GetName();</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>name.IsEmpty()<sp/>)</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Audacity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsRecovered)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>E.g<sp/>this<sp/>is<sp/>recovered<sp/>audio<sp/>that<sp/>had<sp/>been<sp/>lost.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>+=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;(Recovered)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/>SetTitle(<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/>SetName(name);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>the<sp/>nvda<sp/>screen<sp/>reader<sp/>read<sp/>the<sp/>correct<sp/>title</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251" refid="class_audacity_project_1acec1b52b86e930d7414cf0f20aefdda7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1acec1b52b86e930d7414cf0f20aefdda7" kindref="member">AudacityProject::GetIsEmpty</ref>()</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTracks-&gt;IsEmpty();</highlight></codeline>
<codeline lineno="1254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AudacityProject::SnapSelection()</highlight></codeline>
<codeline lineno="1257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSnapTo<sp/>!=<sp/><ref refid="_snap_8h_1ae6cdb622357fec6e889e47579a078524ac234091642d89d6cd00db5015f0d8e82" kindref="member">SNAP_OFF</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;selectedRegion<sp/>=<sp/>mViewInfo.selectedRegion;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_numeric_converter" kindref="compound">NumericConverter</ref><sp/>nc(<ref refid="class_numeric_converter_1a2005a4bd0c2a9614868772e37fb9e2fba11037be864bfeacf9e0b8ecc1ae60d12" kindref="member">NumericConverter::TIME</ref>,<sp/>GetSelectionFormat(),<sp/>0,<sp/>GetRate());</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nearest<sp/>=<sp/>(mSnapTo<sp/>==<sp/><ref refid="_snap_8h_1ae6cdb622357fec6e889e47579a078524a38a3d2c850c237444df3d0e5225f58b5" kindref="member">SNAP_NEAREST</ref>);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oldt0<sp/>=<sp/>selectedRegion.<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>();</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oldt1<sp/>=<sp/>selectedRegion.<ref refid="class_selected_region_1aec8e1688714de8fb218d0cf0188360d6" kindref="member">t1</ref>();</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nc.<ref refid="class_numeric_converter_1a2ff0c68d612273c8d19fc3841e6f2f2c" kindref="member">ValueToControls</ref>(oldt0,<sp/>nearest);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nc.<ref refid="class_numeric_converter_1a2686b9c69cf7c8a225f26af59cc89f59" kindref="member">ControlsToValue</ref>();</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/>nc.<ref refid="class_numeric_converter_1ab77d6ab7bae881f93f0686424871841f" kindref="member">GetValue</ref>();</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nc.<ref refid="class_numeric_converter_1a2ff0c68d612273c8d19fc3841e6f2f2c" kindref="member">ValueToControls</ref>(oldt1,<sp/>nearest);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nc.<ref refid="class_numeric_converter_1a2686b9c69cf7c8a225f26af59cc89f59" kindref="member">ControlsToValue</ref>();</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>nc.<ref refid="class_numeric_converter_1ab77d6ab7bae881f93f0686424871841f" kindref="member">GetValue</ref>();</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>!=<sp/>oldt0<sp/>||<sp/>t1<sp/>!=<sp/>oldt1)<sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectedRegion.<ref refid="class_selected_region_1a21a6af7b052d9d6bd39cc1db088e8f5d" kindref="member">setTimes</ref>(t0,<sp/>t1);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TP_DisplaySelection();</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284" refid="class_audacity_project_1adf343bfdba74e29e811b8d66c20b2d5c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1adf343bfdba74e29e811b8d66c20b2d5c" kindref="member">AudacityProject::AS_GetRate</ref>()</highlight></codeline>
<codeline lineno="1285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRate;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289" refid="class_audacity_project_1a4014b7ecc9f2251789d823a9e2816cb9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a4014b7ecc9f2251789d823a9e2816cb9" kindref="member">AudacityProject::AS_SetRate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>)</highlight></codeline>
<codeline lineno="1290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/>mRate<sp/>=<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294" refid="class_audacity_project_1ac8d42a678fc6b089da2ed41f9d664e88" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ac8d42a678fc6b089da2ed41f9d664e88" kindref="member">AudacityProject::AS_GetSnapTo</ref>()</highlight></codeline>
<codeline lineno="1295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetSnapTo();</highlight></codeline>
<codeline lineno="1297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299" refid="class_audacity_project_1a64769c7707980ff5e2df15b5ac8a2c50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a64769c7707980ff5e2df15b5ac8a2c50" kindref="member">AudacityProject::AS_SetSnapTo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>snap)</highlight></codeline>
<codeline lineno="1300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/>mSnapTo<sp/>=<sp/>snap;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LLL:<sp/>TODO<sp/>-<sp/>what<sp/>should<sp/>this<sp/>be<sp/>changed<sp/>to???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mCommandManager.Check(wxT(&quot;Snap&quot;),<sp/>mSnapTo);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/SnapTo&quot;</highlight><highlight class="normal">),<sp/>mSnapTo);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/>SnapSelection();</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/>RedrawProject();</highlight></codeline>
<codeline lineno="1311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313" refid="class_audacity_project_1a4af319b47d3983bf432d719a7e0be638" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="class_audacity_project_1a4af319b47d3983bf432d719a7e0be638" kindref="member">AudacityProject::AS_GetSelectionFormat</ref>()</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetSelectionFormat();</highlight></codeline>
<codeline lineno="1316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318" refid="class_audacity_project_1a38c6a52bc043634095f44c4af4fe4ffc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a38c6a52bc043634095f44c4af4fe4ffc" kindref="member">AudacityProject::AS_SetSelectionFormat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/>mSelectionFormat<sp/>=<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/SelectionFormat&quot;</highlight><highlight class="normal">),<sp/>mSelectionFormat);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SnapSelection()<sp/>&amp;&amp;<sp/>GetTrackPanel())</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetTrackPanel()-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329" refid="class_audacity_project_1a06b9058cccc697f1089d03142562e937" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a06b9058cccc697f1089d03142562e937" kindref="member">AudacityProject::SSBL_GetRate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1330"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>maximum<sp/>of<sp/>project<sp/>rate<sp/>and<sp/>all<sp/>track<sp/>rates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>mRate;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_of_kind_iterator" kindref="compound">TrackListOfKindIterator</ref><sp/>iterWaveTrack(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/>mTracks);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*pWaveTrack<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(iterWaveTrack.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>());</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pWaveTrack)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rate<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(rate,<sp/>pWaveTrack-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>());</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(iterWaveTrack.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>());</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345" refid="class_audacity_project_1a2badac75b3106fc413f0fa699dabe239" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="class_audacity_project_1a2badac75b3106fc413f0fa699dabe239" kindref="member">AudacityProject::SSBL_GetFrequencySelectionFormatName</ref>()</highlight></codeline>
<codeline lineno="1346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetFrequencySelectionFormatName();</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350" refid="class_audacity_project_1ae2820f7a2bc2e9549770904209c9bf4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ae2820f7a2bc2e9549770904209c9bf4d" kindref="member">AudacityProject::SSBL_SetFrequencySelectionFormatName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>formatName)</highlight></codeline>
<codeline lineno="1351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/>mFrequencySelectionFormatName<sp/>=<sp/>formatName;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/FrequencySelectionFormatName&quot;</highlight><highlight class="normal">),<sp/>mFrequencySelectionFormatName);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="1356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358" refid="class_audacity_project_1ab7773f52d4375c511745aa283c643687" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="class_audacity_project_1ab7773f52d4375c511745aa283c643687" kindref="member">AudacityProject::SSBL_GetBandwidthSelectionFormatName</ref>()</highlight></codeline>
<codeline lineno="1359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetBandwidthSelectionFormatName();</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363" refid="class_audacity_project_1a3ea81189c4a96ba0a5520a6545f4d49d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a3ea81189c4a96ba0a5520a6545f4d49d" kindref="member">AudacityProject::SSBL_SetBandwidthSelectionFormatName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>formatName)</highlight></codeline>
<codeline lineno="1364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/>mBandwidthSelectionFormatName<sp/>=<sp/>formatName;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/BandwidthSelectionFormatName&quot;</highlight><highlight class="normal">),<sp/>mBandwidthSelectionFormatName);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="1369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371" refid="class_audacity_project_1a46db026b97c83ee2f7e07a4d17a59a08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a46db026b97c83ee2f7e07a4d17a59a08" kindref="member">AudacityProject::SSBL_ModifySpectralSelection</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;bottom,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;top,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref>)</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SPECTRAL_EDITING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nyq<sp/>=<sp/>SSBL_GetRate()<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottom<sp/>&gt;=<sp/>0.0)</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bottom<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(nyq,<sp/>bottom);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top<sp/>&gt;=<sp/>0.0)</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(nyq,<sp/>top);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.selectedRegion.setFrequencies(bottom,<sp/>top);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(done)<sp/>{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ModifyState(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/>bottom;<sp/>top;<sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref>;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389" refid="class_audacity_project_1a7a0850d0f2f7b4bad006806349cca3db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="class_audacity_project_1a7a0850d0f2f7b4bad006806349cca3db" kindref="member">AudacityProject::GetFrequencySelectionFormatName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1390"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFrequencySelectionFormatName;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394" refid="class_audacity_project_1a01d10beb904d6b9938930ca7c8d1331a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a01d10beb904d6b9938930ca7c8d1331a" kindref="member">AudacityProject::SetFrequencySelectionFormatName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>formatName)</highlight></codeline>
<codeline lineno="1395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/>SSBL_SetFrequencySelectionFormatName(formatName);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SPECTRAL_EDITING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetSpectralSelectionBar())<sp/>{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetSpectralSelectionBar()-&gt;SetFrequencySelectionFormatName(formatName);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404" refid="class_audacity_project_1a6a4dbb2d68d504fc821c913c460e08c2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="class_audacity_project_1a6a4dbb2d68d504fc821c913c460e08c2" kindref="member">AudacityProject::GetBandwidthSelectionFormatName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1405"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBandwidthSelectionFormatName;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409" refid="class_audacity_project_1a09650b7e2b52b38aacfdbcefbc1d11ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a09650b7e2b52b38aacfdbcefbc1d11ef" kindref="member">AudacityProject::SetBandwidthSelectionFormatName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>formatName)</highlight></codeline>
<codeline lineno="1410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/>SSBL_SetBandwidthSelectionFormatName(formatName);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SPECTRAL_EDITING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetSpectralSelectionBar())<sp/>{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetSpectralSelectionBar()-&gt;SetBandwidthSelectionFormatName(formatName);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419" refid="class_audacity_project_1a99f58319fdcd15098f238838e9e08e3e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a99f58319fdcd15098f238838e9e08e3e" kindref="member">AudacityProject::SetSelectionFormat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="1420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/>AS_SetSelectionFormat(format);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetSelectionBar())<sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetSelectionBar()-&gt;SetSelectionFormat(format);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427" refid="class_audacity_project_1a42a41b7b17189f55f41c7a8cc22f4fda" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="class_audacity_project_1a42a41b7b17189f55f41c7a8cc22f4fda" kindref="member">AudacityProject::GetSelectionFormat</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1428"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelectionFormat;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433" refid="class_audacity_project_1a155a2a36aca1beae7570e410d9bae3e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a155a2a36aca1beae7570e410d9bae3e4" kindref="member">AudacityProject::AS_ModifySelection</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref>)</highlight></codeline>
<codeline lineno="1434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.selectedRegion.setTimes(start,<sp/>end);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(done)<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ModifyState(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442" refid="class_audacity_project_1a80b34f5d85341e99ccc56795ed4d0f0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a80b34f5d85341e99ccc56795ed4d0f0d" kindref="member">AudacityProject::FinishAutoScroll</ref>()</highlight></codeline>
<codeline lineno="1443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>flag<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>generate<sp/>two<sp/>update<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/>mAutoScrolling<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>our<sp/>Scroll<sp/>method<sp/>which<sp/>updates<sp/>our<sp/>ViewInfo<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>reflect<sp/>the<sp/>positions<sp/>of<sp/>the<sp/>scrollbars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/>wxScrollEvent<sp/><ref refid="database_8c_1a4497856461b72aa327a367542f73bff3" kindref="member">dummy</ref>;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/>OnScroll(dummy);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/>mAutoScrolling<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460" refid="class_audacity_project_1ad8698a3822fcc5fab28ccb486ec55d8d" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ad8698a3822fcc5fab28ccb486ec55d8d" kindref="member">AudacityProject::OnScrollLeft</ref>()</highlight></codeline>
<codeline lineno="1461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/>wxInt64<sp/>pos<sp/>=<sp/>mHsbar-&gt;GetThumbPosition();</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>at<sp/>least<sp/>one<sp/>scroll<sp/>increment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/>pos<sp/>-=<sp/>wxMax((wxInt64)(<ref refid="_project_8cpp_1a8416fbcad75677d27992d858a74b889c" kindref="member">sbarHjump</ref><sp/>*<sp/>mViewInfo.sbarScale),<sp/>1);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/>pos<sp/>=<sp/>wxMax(pos,<sp/>0);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>!=<sp/>mHsbar-&gt;GetThumbPosition())<sp/>{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHsbar-&gt;SetThumbPosition((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)pos);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FinishAutoScroll();</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477" refid="class_audacity_project_1aa2a7d3dc882bdfa07825a46e4bf1a568" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1aa2a7d3dc882bdfa07825a46e4bf1a568" kindref="member">AudacityProject::OnScrollRight</ref>()</highlight></codeline>
<codeline lineno="1478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/>wxInt64<sp/>pos<sp/>=<sp/>mHsbar-&gt;GetThumbPosition();</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>at<sp/>least<sp/>one<sp/>scroll<sp/>increment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>wxInt64<sp/>for<sp/>calculation<sp/>to<sp/>prevent<sp/>temporary<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/>pos<sp/>+=<sp/>wxMax((wxInt64)(<ref refid="_project_8cpp_1a8416fbcad75677d27992d858a74b889c" kindref="member">sbarHjump</ref><sp/>*<sp/>mViewInfo.sbarScale),<sp/>1);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/>wxInt64<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>=<sp/>mHsbar-&gt;GetRange()<sp/>-<sp/>mHsbar-&gt;GetThumbSize();</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/>pos<sp/>=<sp/>wxMin(pos,<sp/>max);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>!=<sp/>mHsbar-&gt;GetThumbPosition())<sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHsbar-&gt;SetThumbPosition((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)pos);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FinishAutoScroll();</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495" refid="class_audacity_project_1af2fc8fe1f28eaf821bbd7c9aaddabe55" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1af2fc8fe1f28eaf821bbd7c9aaddabe55" kindref="member">AudacityProject::OnScrollLeftButton</ref>(wxScrollEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/>wxInt64<sp/>pos<sp/>=<sp/>mHsbar-&gt;GetThumbPosition();</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>at<sp/>least<sp/>one<sp/>scroll<sp/>increment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/>pos<sp/>-=<sp/>wxMax((wxInt64)(<ref refid="_project_8cpp_1a8416fbcad75677d27992d858a74b889c" kindref="member">sbarHjump</ref><sp/>*<sp/>mViewInfo.sbarScale),<sp/>1);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/>pos<sp/>=<sp/>wxMax(pos,<sp/>0);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>!=<sp/>mHsbar-&gt;GetThumbPosition())<sp/>{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHsbar-&gt;SetThumbPosition((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)pos);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OnScroll(event);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511" refid="class_audacity_project_1ab55531dd843fed002c98c673a27622e8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ab55531dd843fed002c98c673a27622e8" kindref="member">AudacityProject::OnScrollRightButton</ref>(wxScrollEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="1512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/>wxInt64<sp/>pos<sp/>=<sp/>mHsbar-&gt;GetThumbPosition();</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>at<sp/>least<sp/>one<sp/>scroll<sp/>increment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>wxInt64<sp/>for<sp/>calculation<sp/>to<sp/>prevent<sp/>temporary<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/>pos<sp/>+=<sp/>wxMax((wxInt64)(<ref refid="_project_8cpp_1a8416fbcad75677d27992d858a74b889c" kindref="member">sbarHjump</ref><sp/>*<sp/>mViewInfo.sbarScale),<sp/>1);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/>wxInt64<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>=<sp/>mHsbar-&gt;GetRange()<sp/>-<sp/>mHsbar-&gt;GetThumbSize();</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/>pos<sp/>=<sp/>wxMin(pos,<sp/>max);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>!=<sp/>mHsbar-&gt;GetThumbPosition())<sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHsbar-&gt;SetThumbPosition((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)pos);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OnScroll(event);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527" refid="class_audacity_project_1a9c5510ed2154056f5fca4d81a1014157" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a9c5510ed2154056f5fca4d81a1014157" kindref="member">AudacityProject::ScrollingLowerBoundTime</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1528"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mViewInfo.bScrollBeyondZero)</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>screen<sp/>=<sp/>mTrackPanel-&gt;GetScreenEndTime()<sp/>-<sp/>mViewInfo.h;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(mTracks-&gt;GetStartTime(),<sp/>-screen<sp/>/<sp/>2.0);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PRL:<sp/>Bug1197:<sp/>we<sp/>seem<sp/>to<sp/>need<sp/>to<sp/>compute<sp/>all<sp/>in<sp/>double,<sp/>to<sp/>avoid<sp/>differing<sp/>results<sp/>on<sp/>Mac</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="comment">//<sp/>That&apos;s<sp/>why<sp/>ViewInfo::TimeRangeToPixelWidth<sp/>was<sp/>defined,<sp/>with<sp/>some<sp/>regret.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537" refid="class_audacity_project_1a4907e6a4ec832beb7cda931ca3fbcbf8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a4907e6a4ec832beb7cda931ca3fbcbf8" kindref="member">AudacityProject::PixelWidthBeforeTime</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scrollto)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1538"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerBound<sp/>=<sp/>ScrollingLowerBoundTime();</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignoring<sp/>fisheye<sp/>is<sp/>correct<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.TimeRangeToPixelWidth(scrollto<sp/>-<sp/>lowerBound);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545" refid="class_audacity_project_1a5096da98e267de4a88e8b902338d131f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a5096da98e267de4a88e8b902338d131f" kindref="member">AudacityProject::SetHorizontalThumb</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scrollto)</highlight></codeline>
<codeline lineno="1546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>=<sp/>mHsbar-&gt;GetRange()<sp/>-<sp/>mHsbar-&gt;GetThumbSize();</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(max,</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0,</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(floor(0.5<sp/>+<sp/>PixelWidthBeforeTime(scrollto)<sp/>*<sp/>mViewInfo.sbarScale))));</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/>mHsbar-&gt;SetThumbPosition(pos);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>method,<sp/>like<sp/>the<sp/>other<sp/>methods<sp/>prefaced<sp/>with<sp/>TP,<sp/>handles<sp/>TrackPanel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;callback&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559" refid="class_audacity_project_1a6b4df9cdfeb3a20bc6f55d9ed0e6224d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a6b4df9cdfeb3a20bc6f55d9ed0e6224d" kindref="member">AudacityProject::TP_ScrollWindow</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scrollto)</highlight></codeline>
<codeline lineno="1560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/>SetHorizontalThumb(scrollto);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>our<sp/>Scroll<sp/>method<sp/>which<sp/>updates<sp/>our<sp/>ViewInfo<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>reflect<sp/>the<sp/>positions<sp/>of<sp/>the<sp/>scrollbars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/>wxScrollEvent<sp/><ref refid="database_8c_1a4497856461b72aa327a367542f73bff3" kindref="member">dummy</ref>;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/>OnScroll(dummy);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scroll<sp/>vertically.<sp/>This<sp/>is<sp/>called<sp/>for<sp/>example<sp/>by<sp/>the<sp/>mouse<sp/>wheel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="comment">//<sp/>handler<sp/>in<sp/>Track<sp/>Panel.<sp/>A<sp/>positive<sp/>argument<sp/>makes<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scroll<sp/>down,<sp/>while<sp/>a<sp/>negative<sp/>argument<sp/>scrolls<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574" refid="class_audacity_project_1ad9d42a0d80f3d28029f6d92c9291d265" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ad9d42a0d80f3d28029f6d92c9291d265" kindref="member">AudacityProject::TP_ScrollUpDown</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta)</highlight></codeline>
<codeline lineno="1575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldPos<sp/>=<sp/>mVsbar-&gt;GetThumbPosition();</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>oldPos<sp/>+<sp/>delta;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>=<sp/>mVsbar-&gt;GetRange()<sp/>-<sp/>mVsbar-&gt;GetThumbSize();</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>be<sp/>negative<sp/>in<sp/>case<sp/>of<sp/>only<sp/>one<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;<sp/>max)</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>!=<sp/>oldPos)</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mVsbar-&gt;SetThumbPosition(pos);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxScrollEvent<sp/><ref refid="database_8c_1a4497856461b72aa327a367542f73bff3" kindref="member">dummy</ref>;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OnScroll(dummy);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598" refid="class_audacity_project_1adf3f9d557e8b2a9334eed04b3398ad21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1adf3f9d557e8b2a9334eed04b3398ad21" kindref="member">AudacityProject::FixScrollbars</ref>()</highlight></codeline>
<codeline lineno="1599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!mTracks)</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>refresh<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rescroll<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalHeight<sp/>=<sp/>(mTracks-&gt;GetHeight()<sp/>+<sp/>32);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>panelWidth,<sp/>panelHeight;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;GetTracksUsableArea(&amp;panelWidth,<sp/>&amp;panelHeight);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(From<sp/>Debian...at<sp/>least<sp/>I<sp/>think<sp/>this<sp/>is<sp/>the<sp/>change<sp/>cooresponding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>this<sp/>comment)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(2.)<sp/>GTK<sp/>critical<sp/>warning<sp/>&quot;IA__gtk_range_set_range:<sp/>assertion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;min<sp/>&lt;<sp/>max&apos;<sp/>failed&quot;<sp/>because<sp/>of<sp/>negative<sp/>numbers<sp/>as<sp/>result<sp/>of<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>checking.<sp/>Added<sp/>a<sp/>sanity<sp/>check<sp/>that<sp/>straightens<sp/>up<sp/>the<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>edge<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(panelWidth<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>panelWidth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(panelHeight<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>panelHeight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>LastTime<sp/>=</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(mTracks-&gt;GetEndTime(),<sp/>mViewInfo.selectedRegion.t1());</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>screen<sp/>=<sp/>GetScreenEndTime()<sp/>-<sp/>mViewInfo.h;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>halfScreen<sp/>=<sp/>screen<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>can<sp/>scroll<sp/>beyond<sp/>zero,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>1/2<sp/>of<sp/>a<sp/>screen<sp/>of<sp/>blank<sp/>space<sp/>to<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>another<sp/>1/2<sp/>screen<sp/>before<sp/>the<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>any<sp/>point<sp/>within<sp/>the<sp/>union<sp/>of<sp/>the<sp/>selection<sp/>and<sp/>the<sp/>track<sp/>duration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>be<sp/>scrolled<sp/>to<sp/>the<sp/>midline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>May<sp/>add<sp/>even<sp/>more<sp/>to<sp/>the<sp/>end,<sp/>so<sp/>that<sp/>you<sp/>can<sp/>always<sp/>scroll<sp/>the<sp/>starting<sp/>time<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerBound<sp/>=<sp/>ScrollingLowerBoundTime();</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>additional<sp/>=<sp/>mViewInfo.bScrollBeyondZero</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>-lowerBound<sp/>+<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(halfScreen,<sp/>screen<sp/>-<sp/>LastTime)</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>screen<sp/>/<sp/>4.0;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.total<sp/>=<sp/>LastTime<sp/>+<sp/>additional;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>remove<sp/>time<sp/>from<sp/>total<sp/>that&apos;s<sp/>still<sp/>on<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.total<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(mViewInfo.total,<sp/>mViewInfo.h<sp/>+<sp/>screen);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mViewInfo.h<sp/>&lt;<sp/>lowerBound)<sp/>{</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.h<sp/>=<sp/>lowerBound;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rescroll<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.sbarTotal<sp/>=<sp/>(wxInt64)<sp/>(mViewInfo.GetTotalWidth());</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.sbarScreen<sp/>=<sp/>(wxInt64)(panelWidth);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.sbarH<sp/>=<sp/>(wxInt64)<sp/>(mViewInfo.GetBeforeScreenWidth());</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastv<sp/>=<sp/>mViewInfo.vpos;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PRL:<sp/><sp/>Can<sp/>someone<sp/>else<sp/>find<sp/>a<sp/>more<sp/>elegant<sp/>solution<sp/>to<sp/>bug<sp/>812,<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>introducing<sp/>this<sp/>boolean<sp/>member<sp/>variable?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setting<sp/>mVSbar<sp/>earlier,<sp/>int<sp/>HandlXMLTag,<sp/>didn&apos;t<sp/>succeed<sp/>in<sp/>restoring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>vertical<sp/>scrollbar<sp/>to<sp/>its<sp/>saved<sp/>position.<sp/><sp/>So<sp/>defer<sp/>that<sp/>till<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mbInitializingScrollbar<sp/>should<sp/>be<sp/>true<sp/>only<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>life</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>an<sp/>AudacityProject<sp/>reopened<sp/>from<sp/>disk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mbInitializingScrollbar)<sp/>{</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.vpos<sp/>=<sp/>mVsbar-&gt;GetThumbPosition()<sp/>*<sp/>mViewInfo.scrollStep;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/>mbInitializingScrollbar<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mViewInfo.vpos<sp/>&gt;=<sp/>totalHeight)</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.vpos<sp/>=<sp/>totalHeight<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mViewInfo.vpos<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.vpos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>oldhstate;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>oldvstate;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newhstate<sp/>=<sp/>(GetScreenEndTime()<sp/>-<sp/>mViewInfo.h)<sp/>&lt;<sp/>mViewInfo.total;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newvstate<sp/>=<sp/>panelHeight<sp/>&lt;<sp/>totalHeight;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal">#ifdef<sp/>__WXGTK__</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/>oldhstate<sp/>=<sp/>mHsbar-&gt;IsShown();</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/>oldvstate<sp/>=<sp/>mVsbar-&gt;IsShown();</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/>mHsbar-&gt;Show(newhstate);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/>mVsbar-&gt;Show(panelHeight<sp/>&lt;<sp/>totalHeight);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/>oldhstate<sp/>=<sp/>mHsbar-&gt;IsEnabled();</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/>oldvstate<sp/>=<sp/>mVsbar-&gt;IsEnabled();</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/>mHsbar-&gt;Enable(newhstate);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/>mVsbar-&gt;Enable(panelHeight<sp/>&lt;<sp/>totalHeight);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(panelHeight<sp/>&gt;=<sp/>totalHeight<sp/>&amp;&amp;<sp/>mViewInfo.vpos<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.vpos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refresh<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rescroll<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newhstate<sp/>&amp;&amp;<sp/>mViewInfo.sbarH<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.sbarH<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refresh<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rescroll<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastv<sp/>!=<sp/>mViewInfo.vpos)<sp/>{</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UpdateFirstVisible();</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wxScrollbar<sp/>only<sp/>supports<sp/>int<sp/>values<sp/>but<sp/>we<sp/>need<sp/>a<sp/>greater<sp/>range,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>scale<sp/>the<sp/>scrollbar<sp/>coordinates<sp/>on<sp/>demand.<sp/>We<sp/>only<sp/>do<sp/>this<sp/>if<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>would<sp/>exceed<sp/>the<sp/>int<sp/>range,<sp/>so<sp/>we<sp/>can<sp/>always<sp/>use<sp/>the<sp/>maximum<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>use<sp/>the<sp/>full<sp/>2^31<sp/>max<sp/>int<sp/>range<sp/>but<sp/>a<sp/>bit<sp/>less,<sp/>so<sp/>rounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>errors<sp/>in<sp/>calculations<sp/>do<sp/>not<sp/>overflow<sp/>max<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/>wxInt64<sp/>maxScrollbarRange<sp/>=<sp/>(wxInt64)(2147483647<sp/>*<sp/>0.999);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mViewInfo.sbarTotal<sp/>&gt;<sp/>maxScrollbarRange)</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.sbarScale<sp/>=<sp/>((double)maxScrollbarRange)<sp/>/<sp/>mViewInfo.sbarTotal;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.sbarScale<sp/>=<sp/>1.0;<sp/></highlight><highlight class="comment">//<sp/>use<sp/>maximum<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledSbarH<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(mViewInfo.sbarH<sp/>*<sp/>mViewInfo.sbarScale);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledSbarScreen<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(mViewInfo.sbarScreen<sp/>*<sp/>mViewInfo.sbarScale);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledSbarTotal<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(mViewInfo.sbarTotal<sp/>*<sp/>mViewInfo.sbarScale);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref><sp/>=</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(floor(0.5<sp/>+<sp/>mViewInfo.sbarScale<sp/>*<sp/>PixelWidthBeforeTime(0.0)));</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHsbar-&gt;SetScrollbar(scaledSbarH<sp/>+<sp/>offset,<sp/>scaledSbarScreen,<sp/>scaledSbarTotal,</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaledSbarScreen,<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHsbar-&gt;Refresh();</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>scrollbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/>mVsbar-&gt;SetScrollbar(mViewInfo.vpos<sp/>/<sp/>mViewInfo.scrollStep,</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>panelHeight<sp/>/<sp/>mViewInfo.scrollStep,</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalHeight<sp/>/<sp/>mViewInfo.scrollStep,</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>panelHeight<sp/>/<sp/>mViewInfo.scrollStep,<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/>mVsbar-&gt;Refresh();</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refresh<sp/>||<sp/>(rescroll<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetScreenEndTime()<sp/>-<sp/>mViewInfo.h)<sp/>&lt;<sp/>mViewInfo.total))<sp/>{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/>UpdateMenus();</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldhstate<sp/>!=<sp/>newhstate<sp/>||<sp/>oldvstate<sp/>!=<sp/>newvstate)<sp/>{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UpdateLayout();</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1751" refid="class_audacity_project_1aba18bc5ad1c7a45e0beab73e9b6387a1" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_audacity_project_1aba18bc5ad1c7a45e0beab73e9b6387a1" kindref="member">AudacityProject::GetFirstVisible</ref>()</highlight></codeline>
<codeline lineno="1752"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mViewInfo.track<sp/>&amp;&amp;<sp/>mTracks)<sp/>{</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mTracks);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;GetY();</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;GetHeight();</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;=<sp/>mViewInfo.vpos<sp/>||<sp/>y<sp/>+<sp/>h<sp/>&gt;=<sp/>mViewInfo.vpos)<sp/>{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.track<sp/>=<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mViewInfo.track;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768" refid="class_audacity_project_1a94905716d15460f18c2827abedaeae38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a94905716d15460f18c2827abedaeae38" kindref="member">AudacityProject::UpdateFirstVisible</ref>()</highlight></codeline>
<codeline lineno="1769"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mViewInfo.track<sp/>||<sp/>!mTracks)<sp/>{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>mViewInfo.track;</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.track<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" kindref="member">GetY</ref>()<sp/>&gt;<sp/>mViewInfo.vpos)<sp/>{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t<sp/>&amp;&amp;<sp/>t-&gt;<ref refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" kindref="member">GetY</ref>()<sp/>&gt;<sp/>mViewInfo.vpos)<sp/>{</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>mTracks-&gt;GetPrev(t);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>t-&gt;<ref refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" kindref="member">GetY</ref>();</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;=<sp/>mViewInfo.vpos<sp/>||<sp/>y<sp/>+<sp/>h<sp/>&gt;=<sp/>mViewInfo.vpos)<sp/>{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.track<sp/>=<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>mTracks-&gt;GetNext(t);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796" refid="class_audacity_project_1a25702988a5351e81b4c66716505d41bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a25702988a5351e81b4c66716505d41bf" kindref="member">AudacityProject::UpdateLayout</ref>()</highlight></codeline>
<codeline lineno="1797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mTrackPanel)</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/>mToolManager-&gt;LayoutToolBars();</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/>Layout();</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>size<sp/>of<sp/>this<sp/>projects<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/>wxSize<sp/>mainsz<sp/>=<sp/>GetSize();</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>position<sp/>of<sp/>the<sp/>track<sp/>panel<sp/>to<sp/>use<sp/>as<sp/>the<sp/>size<sp/>of<sp/>the<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>third<sp/>of<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/>wxPoint<sp/>tppos<sp/>=<sp/>ClientToScreen(mTrackPanel-&gt;GetParent()-&gt;GetPosition());</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>position<sp/>of<sp/>bottom<sp/>dock<sp/>to<sp/>use<sp/>as<sp/>the<sp/>size<sp/>of<sp/>the<sp/>bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>third<sp/>of<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/>wxPoint<sp/>sbpos<sp/>=<sp/>ClientToScreen(mToolManager-&gt;GetBotDock()-&gt;GetPosition());</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;+<sp/>50&quot;<sp/>is<sp/>the<sp/>minimum<sp/>height<sp/>of<sp/>the<sp/>TrackPanel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/>SetSizeHints(250,<sp/>(mainsz.y<sp/>-<sp/>sbpos.y)<sp/>+<sp/>tppos.y<sp/>+<sp/>50,<sp/>20000,<sp/>20000);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819" refid="class_audacity_project_1ac89fc6540f5749c05b82da0878dd2008" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ac89fc6540f5749c05b82da0878dd2008" kindref="member">AudacityProject::HandleResize</ref>()</highlight></codeline>
<codeline lineno="1820"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mTrackPanel)</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/>FixScrollbars();</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/>UpdateLayout();</highlight></codeline>
<codeline lineno="1827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829" refid="class_audacity_project_1afdc9a2ea0edfa750c1555ac179dcd674" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1afdc9a2ea0edfa750c1555ac179dcd674" kindref="member">AudacityProject::OnIconize</ref>(wxIconizeEvent<sp/>&amp;event)</highlight></codeline>
<codeline lineno="1830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>VisibleProjectCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//JKC:<sp/>On<sp/>Iconizing<sp/>we<sp/>get<sp/>called<sp/>twice.<sp/><sp/>Don&apos;t<sp/>know</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>why<sp/>but<sp/>it<sp/>does<sp/>no<sp/>harm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>we<sp/>be<sp/>returning<sp/>true/false<sp/>rather<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>return?<sp/><sp/>I<sp/>don&apos;t<sp/>know.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/>mIconized<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.IsIconized();</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>.Count();i++){</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>[i]){</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>[i]-&gt;mIconized<sp/>)</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VisibleProjectCount++;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852" refid="class_audacity_project_1ac37c03f7ee8d8e3f4a704539af478eb7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ac37c03f7ee8d8e3f4a704539af478eb7" kindref="member">AudacityProject::OnMove</ref>(wxMoveEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="1853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;IsMaximized()<sp/>&amp;&amp;<sp/>!this-&gt;IsIconized())</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetNormalizedWindowState(this-&gt;GetRect());</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859" refid="class_audacity_project_1a68e5cdb362a83863e48e43c1c8218d6c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a68e5cdb362a83863e48e43c1c8218d6c" kindref="member">AudacityProject::OnSize</ref>(wxSizeEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="1860"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(From<sp/>Debian)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(3.)<sp/>GTK<sp/>critical<sp/>warning<sp/>&quot;IA__gdk_window_get_origin:<sp/>assertion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;GDK_IS_WINDOW<sp/>(window)&apos;<sp/>failed&quot;:<sp/>Received<sp/>events<sp/>of<sp/>type<sp/>wxSizeEvent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>main<sp/>project<sp/>window<sp/>cause<sp/>calls<sp/>to<sp/>&quot;ClientToScreen&quot;<sp/>-<sp/>which<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>available<sp/>until<sp/>the<sp/>window<sp/>is<sp/>first<sp/>shown.<sp/>So<sp/>the<sp/>class<sp/>has<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>track<sp/>of<sp/>wxShowEvent<sp/>events<sp/>and<sp/>inhibit<sp/>those<sp/>actions<sp/>until<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>window<sp/>is<sp/>first<sp/>shown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mShownOnce)<sp/>{</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HandleResize();</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;IsMaximized()<sp/>&amp;&amp;<sp/>!this-&gt;IsIconized())</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetNormalizedWindowState(this-&gt;GetRect());</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877" refid="class_audacity_project_1ad00b92a6b7861534904e1bc97babbb3b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ad00b92a6b7861534904e1bc97babbb3b" kindref="member">AudacityProject::OnShow</ref>(wxShowEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="1878"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>that<sp/>the<sp/>window<sp/>has<sp/>been<sp/>shown<sp/>at<sp/>least<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/>mShownOnce<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(From<sp/>Debian...see<sp/>also<sp/>TrackPanel::OnTimer<sp/>and<sp/>AudacityTimer::Notify)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Description:<sp/>Workaround<sp/>for<sp/>wxWidgets<sp/>bug:<sp/>Reentry<sp/>in<sp/>clipboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>The<sp/>wxWidgets<sp/>bug<sp/>http://trac.wxwidgets.org/ticket/16636<sp/>prevents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>us<sp/>from<sp/>doing<sp/>clipboard<sp/>operations<sp/>in<sp/>wxShowEvent<sp/>and<sp/>wxTimerEvent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>processing<sp/>because<sp/>those<sp/>event<sp/>could<sp/>possibly<sp/>be<sp/>processed<sp/>during</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>the<sp/>(not<sp/>sufficiently<sp/>protected)<sp/>Yield()<sp/>of<sp/>a<sp/>first<sp/>clipboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>operation,<sp/>causing<sp/>reentry.<sp/>Audacity<sp/>had<sp/>a<sp/>workaround<sp/>in<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>for<sp/>this<sp/>problem<sp/>(the<sp/>class<sp/>&quot;CaptureEvents&quot;),<sp/>which<sp/>however<sp/>isn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>applicable<sp/>with<sp/>wxWidgets<sp/>3.0<sp/>because<sp/>it&apos;s<sp/>based<sp/>on<sp/>changing<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>gdk<sp/>event<sp/>handler,<sp/>a<sp/>change<sp/>that<sp/>would<sp/>be<sp/>overridden<sp/>by<sp/>wxWidgets&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>own<sp/>gdk<sp/>event<sp/>handler<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Instead,<sp/>as<sp/>a<sp/>NEW<sp/>workaround,<sp/>specifically<sp/>protect<sp/>those<sp/>processings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>of<sp/>wxShowEvent<sp/>and<sp/>wxTimerEvent<sp/>that<sp/>try<sp/>to<sp/>do<sp/>clipboard<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>from<sp/>being<sp/>executed<sp/>within<sp/>Yield().<sp/>This<sp/>is<sp/>done<sp/>by<sp/>delaying<sp/>their</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>execution<sp/>by<sp/>posting<sp/>pure<sp/>wxWidgets<sp/>events<sp/>-<sp/>which<sp/>are<sp/>never<sp/>executed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>during<sp/>Yield().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Author:<sp/>Martin<sp/>Stegh<sp/><sp/>fer<sp/>&lt;martin@steghoefer.eu&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Bug-Debian:<sp/>https://bugs.debian.org/765341</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>actual<sp/>creation/showing<sp/>of<sp/>the<sp/>window).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Post<sp/>the<sp/>event<sp/>instead<sp/>of<sp/>calling<sp/>OnSize(..)<sp/>directly.<sp/>This<sp/>ensures<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>pure<sp/>wxWidgets<sp/>event<sp/>(no<sp/>GDK<sp/>event<sp/>behind<sp/>it)<sp/>and<sp/>that<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>therefore<sp/>isn&apos;t<sp/>processed<sp/>within<sp/>the<sp/>YieldFor(..)<sp/>of<sp/>the<sp/>clipboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>operations<sp/>(workaround<sp/>for<sp/>Debian<sp/>bug<sp/>#765341).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/>wxSizeEvent<sp/>*sizeEvent<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxSizeEvent(GetSize());</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/>GetEventHandler()-&gt;QueueEvent(sizeEvent);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Further<sp/>processing<sp/>by<sp/>default<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1917" refid="class_audacity_project_1a507bf65799b1755820a8b3f6425c4b30" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a507bf65799b1755820a8b3f6425c4b30" kindref="member">AudacityProject::OnToolBarUpdate</ref>(wxCommandEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="1918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/>HandleResize();</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>need<sp/>to<sp/>propagate<sp/>any<sp/>further<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>projects<sp/>tracklist<sp/>has<sp/>been<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925" refid="class_audacity_project_1a68f2dfdcdd7e5726f8c996be1f50ea7c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a68f2dfdcdd7e5726f8c996be1f50ea7c" kindref="member">AudacityProject::OnTrackListUpdated</ref>(wxCommandEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="1926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.track<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="1930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight></codeline>
<codeline lineno="1933" refid="class_audacity_project_1a66167817d6645121d0bef796d32368cb" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a66167817d6645121d0bef796d32368cb" kindref="member">AudacityProject::AllProjectsDeleteLock</ref>()</highlight></codeline>
<codeline lineno="1934"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/>msAllProjectDeleteMutex-&gt;Lock();</highlight></codeline>
<codeline lineno="1936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight></codeline>
<codeline lineno="1939" refid="class_audacity_project_1a54a02858f8e34c2cda5eb9b3f3ff0522" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a54a02858f8e34c2cda5eb9b3f3ff0522" kindref="member">AudacityProject::AllProjectsDeleteUnlock</ref>()</highlight></codeline>
<codeline lineno="1940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/>msAllProjectDeleteMutex-&gt;Unlock();</highlight></codeline>
<codeline lineno="1942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945" refid="class_audacity_project_1afac85a2191a8d06d9767512a04f7e990" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1afac85a2191a8d06d9767512a04f7e990" kindref="member">AudacityProject::OnODTaskUpdate</ref>(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="1946"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//todo:<sp/>add<sp/>track<sp/>data<sp/>to<sp/>the<sp/>event<sp/>-<sp/>check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>project<sp/>contains<sp/>it<sp/>before<sp/>redrawing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mTrackPanel)</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight><highlight class="comment">//redraws<sp/>the<sp/>task<sp/>and<sp/>does<sp/>other<sp/>book<sp/>keeping<sp/>after<sp/>the<sp/>task<sp/>is<sp/>complete.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954" refid="class_audacity_project_1adb526bd3dfdeb3a6ad4d49cb1b14d927" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1adb526bd3dfdeb3a6ad4d49cb1b14d927" kindref="member">AudacityProject::OnODTaskComplete</ref>(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="1955"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mTrackPanel)</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960" refid="class_audacity_project_1a7b7cceb9ab9114d61e86b3bd819608ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a7b7cceb9ab9114d61e86b3bd819608ab" kindref="member">AudacityProject::OnScroll</ref>(wxScrollEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="1961"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxInt64<sp/>hlast<sp/>=<sp/>mViewInfo.sbarH;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerBound<sp/>=<sp/>ScrollingLowerBoundTime();</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxInt64<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref><sp/>=<sp/>PixelWidthBeforeTime(0.0);</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.sbarH<sp/>=</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(wxInt64)(mHsbar-&gt;GetThumbPosition()<sp/>/<sp/>mViewInfo.sbarScale)<sp/>-<sp/>offset;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mViewInfo.sbarH<sp/>!=<sp/>hlast)<sp/>{</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;GetTracksUsableArea(&amp;width,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.SetBeforeScreenWidth(mViewInfo.sbarH,<sp/>width,<sp/>lowerBound);</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mViewInfo.bScrollBeyondZero)<sp/>{</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>SCROLL_PIXEL_TOLERANCE<sp/>=<sp/>10<sp/>};</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(mViewInfo.TimeToPosition(0.0,<sp/>0</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))<sp/>&lt;<sp/>SCROLL_PIXEL_TOLERANCE)<sp/>{</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Snap<sp/>the<sp/>scrollbar<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.h<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetHorizontalThumb(0.0);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastv<sp/>=<sp/>mViewInfo.vpos;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.vpos<sp/>=<sp/>mVsbar-&gt;GetThumbPosition()<sp/>*<sp/>mViewInfo.scrollStep;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastv<sp/>!=<sp/>mViewInfo.vpos)<sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UpdateFirstVisible();</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//mchinen:<sp/>do<sp/>not<sp/>always<sp/>set<sp/>this<sp/>project<sp/>to<sp/>be<sp/>the<sp/>active<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//a<sp/>project<sp/>may<sp/>autoscroll<sp/>while<sp/>playing<sp/>in<sp/>the<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//I<sp/>think<sp/>this<sp/>is<sp/>okay<sp/>since<sp/>OnMouseEvent<sp/>has<sp/>one<sp/>of<sp/>these.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//SetActiveProject(this);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mAutoScrolling)<sp/>{</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007" refid="class_audacity_project_1ae62e336f7aa67f06583bbfd38aadf2df" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ae62e336f7aa67f06583bbfd38aadf2df" kindref="member">AudacityProject::TryToMakeActionAllowed</ref>(<sp/>wxUint32<sp/>&amp;<sp/>flags,<sp/>wxUint32<sp/>flagsRqd,<sp/>wxUint32<sp/><ref refid="structmask" kindref="compound">mask</ref><sp/>)</highlight></codeline>
<codeline lineno="2008"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllowed;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>flags<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>GetUpdateFlags();</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/>bAllowed<sp/>=<sp/>((flags<sp/>&amp;<sp/>mask)<sp/>==<sp/>(flagsRqd<sp/>&amp;<sp/>mask));</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bAllowed<sp/>)</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Action<sp/>is<sp/>not<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IF<sp/>not<sp/>set<sp/>up<sp/>to<sp/>select<sp/>all<sp/>audio<sp/>in<sp/>that<sp/>case,<sp/>THEN<sp/>return<sp/>with<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!mSelectAllOnNone<sp/>)</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/>wxUint32<sp/>MissingFlags<sp/>=<sp/>(flags<sp/>&amp;<sp/>~flagsRqd)<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IF<sp/>selecting<sp/>all<sp/>audio<sp/>won&apos;t<sp/>do<sp/>any<sp/>good,<sp/>THEN<sp/>return<sp/>with<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(flags<sp/>&amp;<sp/><ref refid="_audacity_app_8h_1ad86178b9def692404403c1e6ef728ceda926605e152a3eaf8c71e05187f10d9ee" kindref="member">WaveTracksExistFlag</ref>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(MissingFlags<sp/>&amp;<sp/>~(<sp/><ref refid="_audacity_app_8h_1ad86178b9def692404403c1e6ef728ceda775f2778cc861290857b1e93b8565365" kindref="member">TimeSelectedFlag</ref><sp/>|<sp/><ref refid="_audacity_app_8h_1ad86178b9def692404403c1e6ef728ceda94ab6f31c15d4a685ee71a8ede1f558d" kindref="member">WaveTracksSelectedFlag</ref>))!=0)</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><ref refid="_menus_8h_1abb2f494101133664a96b149e4c0f9b8b" kindref="member">OnSelectAll</ref>();</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/>flags<sp/>=<sp/>GetUpdateFlags();</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/>bAllowed<sp/>=<sp/>((flags<sp/>&amp;<sp/>mask)<sp/>==<sp/>(flagsRqd<sp/>&amp;<sp/>mask));</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bAllowed;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight></codeline>
<codeline lineno="2037" refid="class_audacity_project_1aa9f096a16e9538f448fcc064a94d7ce9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1aa9f096a16e9538f448fcc064a94d7ce9" kindref="member">AudacityProject::OnMenu</ref>(wxCommandEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="2038"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>handled<sp/>=<sp/>mCommandManager.HandleMenuID(event.GetId(),</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetUpdateFlags(),</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFFFFFFFF);</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handled)</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2050" refid="class_audacity_project_1a756233a092555ee27f287799cdac08c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a756233a092555ee27f287799cdac08c6" kindref="member">AudacityProject::OnUpdateUI</ref>(wxUpdateUIEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2051"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/>UpdateMenus();</highlight></codeline>
<codeline lineno="2053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight></codeline>
<codeline lineno="2055" refid="class_audacity_project_1aca5424fd452a5b968ffc086698e132ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1aca5424fd452a5b968ffc086698e132ee" kindref="member">AudacityProject::OnActivate</ref>(wxActivateEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="2056"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Activate<sp/>events<sp/>can<sp/>fire<sp/>during<sp/>window<sp/>teardown,<sp/>so<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsDeleting)<sp/>{</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/>mActive<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.GetActive();</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXGTK__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>bug<sp/>#294<sp/>for<sp/>explanation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;SetFocus();</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Under<sp/>Windows,<sp/>focus<sp/>can<sp/>be<sp/>&quot;lost&quot;<sp/>when<sp/>returning<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Audacity<sp/>from<sp/>a<sp/>different<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>was<sp/>observed<sp/>by<sp/>minimizing<sp/>all<sp/>windows<sp/>using<sp/>WINDOWS+M<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>ALT+TAB<sp/>to<sp/>return<sp/>to<sp/>Audacity.<sp/><sp/>Focus<sp/>will<sp/>be<sp/>given<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>project<sp/>window<sp/>frame<sp/>which<sp/>is<sp/>not<sp/>at<sp/>all<sp/>useful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So,<sp/>when<sp/>the<sp/>project<sp/>window<sp/>receives<sp/>a<sp/>deactivate<sp/>event,<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remember<sp/>which<sp/>child<sp/>had<sp/>the<sp/>focus.<sp/><sp/>Then,<sp/>when<sp/>we<sp/>receive<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>activate<sp/>event,<sp/>we<sp/>restore<sp/>that<sp/>focus<sp/>to<sp/>the<sp/>child<sp/>or<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>panel<sp/>if<sp/>no<sp/>child<sp/>had<sp/>the<sp/>focus<sp/>(which<sp/>probably<sp/>should<sp/>never<sp/>happen).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mActive)<sp/>{</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>want<sp/>to<sp/>remember<sp/>the<sp/>last<sp/>focused<sp/>window<sp/>if<sp/>FindFocus()<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>window<sp/>within<sp/>the<sp/>current<sp/>project<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxWindow<sp/>*w<sp/>=<sp/>FindFocus();</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wxGetTopLevelParent(w)<sp/>==</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLastFocusedWindow<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveProject(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLastFocusedWindow)<sp/>{</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLastFocusedWindow-&gt;SetFocus();</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mTrackPanel)<sp/>{</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;SetFocus();</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>longer<sp/>need<sp/>to<sp/>remember<sp/>the<sp/>last<sp/>focused<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLastFocusedWindow<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="2103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105" refid="class_audacity_project_1a7458869eb7c6f3a785d31844e848bd1f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a7458869eb7c6f3a785d31844e848bd1f" kindref="member">AudacityProject::IsActive</ref>()</highlight></codeline>
<codeline lineno="2106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mActive;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight></codeline>
<codeline lineno="2110" refid="class_audacity_project_1a23ec058a5efb49bd661ea2c5e0041571" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a23ec058a5efb49bd661ea2c5e0041571" kindref="member">AudacityProject::OnMouseEvent</ref>(wxMouseEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="2111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.ButtonDown())</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveProject(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LL:<sp/>All<sp/>objects<sp/>that<sp/>have<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>DirManager<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>be<sp/>deleted<sp/>before<sp/>the<sp/>final<sp/>mDirManager-&gt;Deref()<sp/>in<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>routine.<sp/><sp/>Failing<sp/>to<sp/>do<sp/>so<sp/>can<sp/>cause<sp/>unwanted<sp/>recursion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>and/or<sp/>attempts<sp/>to<sp/>DELETE<sp/>objects<sp/>twice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2120" refid="class_audacity_project_1aeee32e665f867b2d78f27ab60965c169" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1aeee32e665f867b2d78f27ab60965c169" kindref="member">AudacityProject::OnCloseWindow</ref>(wxCloseEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="2121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>called<sp/>for<sp/>the<sp/>wxEVT_CLOSE_WINDOW,<sp/>wxEVT_END_SESSION,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wxEVT_QUERY_END_SESSION,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>protect<sp/>against<sp/>multiple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entries.<sp/><sp/>This<sp/>is<sp/>a<sp/>hack<sp/>until<sp/>the<sp/>whole<sp/>application<sp/>termination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>can<sp/>be<sp/>reviewed<sp/>and<sp/>reworked.<sp/><sp/>(See<sp/>bug<sp/>#964<sp/>for<sp/>ways</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>exercise<sp/>the<sp/>bug<sp/>that<sp/>instigated<sp/>this<sp/>hack.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsBeingDeleted)</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.CanVeto()<sp/>&amp;&amp;<sp/>(::wxIsBusy()<sp/>||<sp/>mbBusyImporting))</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Veto();</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mFreqWindow)<sp/>{</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFreqWindow-&gt;Destroy();</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFreqWindow<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mContrastDialog)<sp/>{</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mContrastDialog-&gt;Destroy();</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mContrastDialog<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>we<sp/>were<sp/>playing<sp/>or<sp/>recording</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>audio,<sp/>and<sp/>if<sp/>so,<sp/>make<sp/>sure<sp/>Audio<sp/>I/O<sp/>is<sp/>completely<sp/>finished.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>main<sp/>point<sp/>of<sp/>this<sp/>is<sp/>to<sp/>properly<sp/>push<sp/>the<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>flush<sp/>the<sp/>tracks<sp/>once<sp/>we&apos;ve<sp/>completely<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recording<sp/>NEW<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>is<sp/>derived<sp/>from<sp/>similar<sp/>code<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AudacityProject::~AudacityProject()<sp/>and<sp/>TrackPanel::OnTimer().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetAudioIOToken()&gt;0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a07490d6ae881910c5ea13cdf011835f3" kindref="member">IsStreamActive</ref>(GetAudioIOToken()))<sp/>{</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>were<sp/>playing<sp/>or<sp/>recording<sp/>audio,<sp/>but<sp/>we&apos;ve<sp/>stopped<sp/>the<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEvent<sp/>dummyEvent;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetControlToolBar()-&gt;OnStop(dummyEvent);</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FixScrollbars();</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetAudioIOToken(0);</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RedrawProject();</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a81838290ddb586dc13726abf901b8260" kindref="member">IsMonitoring</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a018ef510a8616f1feeb0f542f82b1d44" kindref="member">StopStream</ref>();</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>lines<sp/>test<sp/>for<sp/>an<sp/>&apos;empty&apos;<sp/>project.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>course<sp/>it<sp/>could<sp/>still<sp/>have<sp/>a<sp/>history<sp/>at<sp/>this<sp/>stage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter2(mTracks);</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bHasTracks<sp/>=<sp/>(iter2.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>()<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>may<sp/>not<sp/>bother<sp/>to<sp/>prompt<sp/>the<sp/>user<sp/>to<sp/>save,<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>project<sp/>is<sp/>now<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.CanVeto()<sp/>&amp;&amp;<sp/>(mEmptyCanBeDirty<sp/>||<sp/>bHasTracks))<sp/>{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetUndoManager()-&gt;UnsavedChanges())<sp/>{</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>Message<sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Save<sp/>changes<sp/>before<sp/>closing?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!bHasTracks<sp/>)</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Message<sp/>+=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\nIf<sp/>saved,<sp/>the<sp/>project<sp/>will<sp/>have<sp/>no<sp/>tracks.\n\nTo<sp/>save<sp/>any<sp/>previously<sp/>open<sp/>tracks:\nCancel,<sp/>Edit<sp/>&gt;<sp/>Undo<sp/>until<sp/>all<sp/>tracks\nare<sp/>open,<sp/>then<sp/>File<sp/>&gt;<sp/>Save<sp/>Project.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>wxMessageBox(<sp/>Message,</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Save<sp/>changes?&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxYES_NO<sp/>|<sp/>wxCANCEL<sp/>|<sp/>wxICON_QUESTION,</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>wxCANCEL<sp/>||<sp/>(result<sp/>==<sp/>wxYES<sp/>&amp;&amp;<sp/>!Save()))<sp/>{</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Veto();</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_module_manager_1a3820c2a8ad37e263b7fb2ed3b3aa46eb" kindref="member">ModuleManager::Get</ref>().<ref refid="class_module_manager_1a570d7a26f2684ca2eb0dc1daedd18145" kindref="member">Dispatch</ref>(<ref refid="_scripter_callback_8cpp_1a9f2f762f76ca014f9381eeabccdef359aa9162e1533abf3b36d7eb49ee1dd8848" kindref="member">ProjectClosing</ref>);</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>the<sp/>timer<sp/>since<sp/>there&apos;s<sp/>no<sp/>need<sp/>to<sp/>update<sp/>anything<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mTimer;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/>mTimer<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>project<sp/>is<sp/>now<sp/>either<sp/>saved<sp/>or<sp/>the<sp/>user<sp/>doesn&apos;t<sp/>want<sp/>to<sp/>save<sp/>it,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>there&apos;s<sp/>no<sp/>need<sp/>to<sp/>keep<sp/>auto<sp/>save<sp/>info<sp/>around<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/>DeleteCurrentAutoSaveFile();</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DMM:<sp/>Save<sp/>the<sp/>size<sp/>of<sp/>the<sp/>last<sp/>window<sp/>the<sp/>user<sp/>closes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LL:<sp/>Save<sp/>before<sp/>doing<sp/>anything<sp/>else<sp/>to<sp/>the<sp/>window<sp/>that<sp/>might<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>its<sp/>size<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_app_8cpp_1a5d604abc17aee0ba2059e1132155c124" kindref="member">SaveWindowSize</ref>();</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/>mLastFocusedWindow<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/>mIsDeleting<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mac:<sp/>we<sp/>never<sp/>quit<sp/>as<sp/>the<sp/>result<sp/>of<sp/>a<sp/>close.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>systems:<sp/>we<sp/>quit<sp/>only<sp/>when<sp/>the<sp/>close<sp/>is<sp/>the<sp/>result<sp/>of<sp/>an<sp/>external</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>command<sp/>(on<sp/>Windows,<sp/>those<sp/>are<sp/>taskbar<sp/>closes,<sp/>&quot;X&quot;<sp/>box,<sp/>Alt+F4,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>quitOnClose;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WXMAC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/>quitOnClose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/>quitOnClose<sp/>=<sp/>!mMenuClose;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DanH:<sp/>If<sp/>we&apos;re<sp/>definitely<sp/>about<sp/>to<sp/>quit,<sp/>DELETE<sp/>the<sp/>clipboard.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Doing<sp/>this<sp/>after<sp/>Deref&apos;ing<sp/>the<sp/>DirManager<sp/>causes<sp/>problems.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>.GetCount()<sp/>==<sp/>1)<sp/>&amp;&amp;<sp/>(quitOnClose<sp/>||<sp/><ref refid="_audacity_app_8cpp_1a18ed05b54d97bcecaa6e1201d89cf9da" kindref="member">gIsQuitting</ref>))</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DeleteClipboard();</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JKC:<sp/>For<sp/>Win98<sp/>and<sp/>Linux<sp/>do<sp/>not<sp/>detach<sp/>the<sp/>menu<sp/>bar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>want<sp/>wxWidgets<sp/>to<sp/>clean<sp/>it<sp/>up<sp/>for<sp/>us.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Is<sp/>there<sp/>a<sp/>Mac<sp/>issue<sp/>here??</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SetMenuBar(NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>all<sp/>blocks<sp/>in<sp/>all<sp/>tracks<sp/>of<sp/>the<sp/>last<sp/>saved<sp/>version,<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>blockfiles<sp/>aren&apos;t<sp/>deleted<sp/>on<sp/>disk<sp/>when<sp/>we<sp/>DELETE<sp/>the<sp/>blockfiles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>memory.<sp/><sp/>After<sp/>it&apos;s<sp/>locked,<sp/>DELETE<sp/>the<sp/>data<sp/>structure<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there&apos;s<sp/>no<sp/>memory<sp/>leak.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLastSavedTracks)<sp/>{</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mLastSavedTracks);</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)-&gt;CloseLock();</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLastSavedTracks-&gt;<ref refid="class_track_1a725fa0a27976e10fd01859baa2f29ff7" kindref="member">Clear</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mLastSavedTracks;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLastSavedTracks<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>rid<sp/>of<sp/>the<sp/>history<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LL:<sp/><sp/>Destroy<sp/>it<sp/>before<sp/>the<sp/>TrackPanel<sp/>and<sp/>ToolBars<sp/>since<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>may/will<sp/>get<sp/>additional<sp/>wxEVT_PAINT<sp/>events<sp/>since<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>destruction<sp/>may<sp/>be<sp/>queued.<sp/><sp/>This<sp/>seems<sp/>to<sp/>only<sp/>be<sp/>a<sp/>problem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>the<sp/>Mac.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mHistoryWindow)<sp/>{</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHistoryWindow-&gt;Destroy();</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHistoryWindow<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroy<sp/>the<sp/>TrackPanel<sp/>early<sp/>so<sp/>it&apos;s<sp/>not<sp/>around<sp/>once<sp/>we<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deleting<sp/>things<sp/>like<sp/>tracks<sp/>and<sp/>such<sp/>out<sp/>from<sp/>underneath<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>validity<sp/>of<sp/>mTrackPanel<sp/>per<sp/>bug<sp/>584<sp/>Comment<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deeper<sp/>fix<sp/>is<sp/>in<sp/>the<sp/>Import<sp/>code,<sp/>but<sp/>this<sp/>failsafes<sp/>against<sp/>crash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mTrackPanel)</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;Destroy();</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>this<sp/>gets<sp/>set...see<sp/>HandleResize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>tool<sp/>manager<sp/>before<sp/>the<sp/>children<sp/>since<sp/>it<sp/>needs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>save<sp/>the<sp/>state<sp/>of<sp/>the<sp/>toolbars.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mToolManager;</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/>mToolManager<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/>DestroyChildren();</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mTrackFactory;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/>mTrackFactory<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/>mTags.reset();</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mImportXMLTagHandler;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/>mImportXMLTagHandler<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unregister<sp/>for<sp/>tracklist<sp/>updates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/>mTracks-&gt;Disconnect(EVT_TRACKLIST_UPDATED,</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(<ref refid="class_audacity_project_1a68f2dfdcdd7e5726f8c996be1f50ea7c" kindref="member">AudacityProject::OnTrackListUpdated</ref>),</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>all<sp/>the<sp/>tracks<sp/>to<sp/>free<sp/>up<sp/>memory<sp/>and<sp/>DirManager<sp/>references.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/>mTracks-&gt;Clear(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mTracks;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/>mTracks<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>must<sp/>be<sp/>done<sp/>before<sp/>the<sp/>following<sp/>Deref()<sp/>since<sp/>it<sp/>holds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>references<sp/>to<sp/>the<sp/>DirManager.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/>GetUndoManager()-&gt;ClearStates();</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MM:<sp/>Tell<sp/>the<sp/>DirManager<sp/>it<sp/>can<sp/>now<sp/>DELETE<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>finds<sp/>it<sp/>is<sp/>no<sp/>longer<sp/>needed.<sp/>If<sp/>it<sp/>is<sp/>still</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>(f.e.<sp/>by<sp/>the<sp/>clipboard),<sp/>it<sp/>will<sp/>recognize<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>will<sp/>destroy<sp/>itself<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LL:<sp/>All<sp/>objects<sp/>with<sp/>references<sp/>to<sp/>the<sp/>DirManager<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>have<sp/>been<sp/>deleted<sp/>before<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/>mDirManager-&gt;Deref();</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/>AllProjectsDeleteLock();</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>.Remove(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/>AllProjectsDeleteUnlock();</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gActiveProject<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>a<sp/>NEW<sp/>active<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>.Count()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveProject(<ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>[0]);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveProject(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>we&apos;re<sp/>going<sp/>to<sp/>be<sp/>destroyed,<sp/>make<sp/>sure<sp/>we&apos;re<sp/>not<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>receive<sp/>audio<sp/>notifications<sp/>anymore.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a78477917ca8c9800ce6f5074a7044399" kindref="member">GetListener</ref>()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a8d9df4aba253fa43612ac02bafa994fd" kindref="member">SetListener</ref>(gActiveProject);</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>.IsEmpty()<sp/>&amp;&amp;<sp/>!<ref refid="_audacity_app_8cpp_1a18ed05b54d97bcecaa6e1201d89cf9da" kindref="member">gIsQuitting</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__WXMAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quitOnClose)<sp/>{</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1aa0b4149f5dec489d58712e2271fb7f99" kindref="member">QuitAudacity</ref>();</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1ac063acdbedfc07101331440a4973ca14" kindref="member">SetWindowRectAlreadySaved</ref>(<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_project_8cpp_1a28032264c981ed85265ad34afc761335" kindref="member">CreateNewAudacityProject</ref>();</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/>Destroy();</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/>mIsBeingDeleted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight></codeline>
<codeline lineno="2352" refid="class_audacity_project_1ad152eb7e927eddb42467e19ed1f50221" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ad152eb7e927eddb42467e19ed1f50221" kindref="member">AudacityProject::OnOpenAudioFile</ref>(wxCommandEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="2353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="sndfile__play_8m_1adfc5ba7e22f5e4a6221c12a70503bef3" kindref="member">cmd</ref><sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.GetString();</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cmd.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OpenFile(cmd);</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/>RequestUserAttention();</highlight></codeline>
<codeline lineno="2361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static<sp/>method,<sp/>can<sp/>be<sp/>called<sp/>outside<sp/>of<sp/>a<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2364" refid="class_audacity_project_1a65235dc29daa87831b26fa78c41c9366" refkind="member"><highlight class="normal">wxArrayString<sp/><ref refid="class_audacity_project_1a65235dc29daa87831b26fa78c41c9366" kindref="member">AudacityProject::ShowOpenDialog</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;extraformat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;extrafilter)</highlight></codeline>
<codeline lineno="2365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><ref refid="_import_8h_1a9595e9ab21ee91497995586e444c5ccf" kindref="member">FormatList</ref><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="mm_8c_1a2719b8cbe8dc1a5064a418269c72e528" kindref="member">filter</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>all;<sp/><sp/></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extraformat<sp/>!=<sp/>wxEmptyString)</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>additional<sp/>format<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>=<sp/>extrafilter<sp/>+<sp/>wxT(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>it<sp/>to<sp/>the<sp/>&quot;all<sp/>supported<sp/>files&quot;<sp/>filter<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_importer_1a22d282adad95bbdce627953259d9d48c" kindref="member">Importer::Get</ref>().<ref refid="class_importer_1ae0261a30962ae08e339841aa298dc4b7" kindref="member">GetSupportedImportFormats</ref>(&amp;l);</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref><sp/>:<sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>loop<sp/>runs<sp/>once<sp/>per<sp/>supported<sp/>_format_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_format" kindref="compound">Format</ref><sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>=<sp/>&amp;<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>newfilter<sp/>=<sp/>f-&gt;<ref refid="class_format_1aae1cd6db88df2126f153365b30c2196e" kindref="member">formatName</ref><sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bung<sp/>format<sp/>name<sp/>into<sp/>string<sp/>plus<sp/>|<sp/>separator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>f-&gt;<ref refid="class_format_1a9001e0d4c9ff3cd9247089209c75d804" kindref="member">formatExtensions</ref>.size();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>loop<sp/>runs<sp/>once<sp/>per<sp/>valid<sp/>_file<sp/>extension_<sp/>for<sp/>file<sp/>containing</highlight></codeline>
<codeline lineno="2390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>current<sp/>_format_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newfilter.Contains(wxT(</highlight><highlight class="stringliteral">&quot;*.&quot;</highlight><highlight class="normal">)<sp/>+<sp/>f-&gt;<ref refid="class_format_1a9001e0d4c9ff3cd9247089209c75d804" kindref="member">formatExtensions</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newfilter<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;*.&quot;</highlight><highlight class="normal">)<sp/>+<sp/>f-&gt;<ref refid="class_format_1a9001e0d4c9ff3cd9247089209c75d804" kindref="member">formatExtensions</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!all.Contains(wxT(</highlight><highlight class="stringliteral">&quot;*.&quot;</highlight><highlight class="normal">)<sp/>+<sp/>f-&gt;<ref refid="class_format_1a9001e0d4c9ff3cd9247089209c75d804" kindref="member">formatExtensions</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;*.&quot;</highlight><highlight class="normal">)<sp/>+<sp/>f-&gt;<ref refid="class_format_1a9001e0d4c9ff3cd9247089209c75d804" kindref="member">formatExtensions</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newfilter.RemoveLast(1);</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filter<sp/>+=<sp/>newfilter;</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filter<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/>all.RemoveLast(1);</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/>filter.RemoveLast(1);</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>testing<sp/>long<sp/>filters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="patest__multi__sine_8c_1a4e1a7dd05b97e23b3dd1aed354405b63" kindref="member">test</ref><sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;*.aaa;*.bbb;*.ccc;*.ddd;*.eee&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/>all<sp/>=<sp/>test<sp/>+<sp/>wxT(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">)<sp/>+<sp/>test<sp/>+<sp/>wxT(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">)<sp/>+<sp/>test<sp/>+<sp/>wxT(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test<sp/>+<sp/>wxT(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">)<sp/>+<sp/>test<sp/>+<sp/>wxT(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">)<sp/>+<sp/>test<sp/>+<sp/>wxT(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test<sp/>+<sp/>wxT(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">)<sp/>+<sp/>test<sp/>+<sp/>wxT(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">)<sp/>+<sp/>test<sp/>+<sp/>wxT(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all;</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>The<sp/>vertical<sp/>bars<sp/>and<sp/>*<sp/>are<sp/>essential<sp/>here.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="structmask" kindref="compound">mask</ref><sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;All<sp/>files|*|All<sp/>supported<sp/>files|&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>&quot;all&quot;<sp/>and<sp/>&quot;all<sp/>supported&quot;<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extraformat<sp/>!=<sp/>wxEmptyString)</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>append<sp/>caller-defined<sp/>format<sp/>if<sp/>supplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>+=<sp/><sp/>extraformat<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">)<sp/>+<sp/>extrafilter<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/>mask<sp/>+=<sp/><ref refid="mm_8c_1a2719b8cbe8dc1a5064a418269c72e528" kindref="member">filter</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>put<sp/>the<sp/>names<sp/>and<sp/>extensions<sp/>of<sp/>all<sp/>the<sp/>importer<sp/>formats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>built<sp/>up<sp/>earlier<sp/>into<sp/>the<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>saved<sp/>path<sp/>and<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref><sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/DefaultOpenPath&quot;</highlight><highlight class="normal">),::<ref refid="filefn_8cpp_1ab0cc6ceca11d23f61cba353c01eeac06" kindref="member">wxGetCwd</ref>());</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/DefaultOpenType&quot;</highlight><highlight class="normal">),mask.BeforeFirst(wxT(</highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>type<sp/>to<sp/>the<sp/>filter<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>mask.First(type<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/>wxNOT_FOUND)<sp/>{</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>mask.Left(index).Freq(wxT(</highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">))<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>and<sp/>display<sp/>the<sp/>file<sp/>dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>selected;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_file_dialog" kindref="compound">FileDialog</ref><sp/>dlog(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Select<sp/>one<sp/>or<sp/>more<sp/>audio<sp/>files...&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path,</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFD_OPEN<sp/>|<sp/>wxFD_MULTIPLE<sp/>|<sp/>wxRESIZE_BORDER);</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/>dlog.<ref refid="class_file_dialog_1ab76858e3c52e455d9c3f7e4986a8d19d" kindref="member">SetFilterIndex</ref>(index);</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dialogResult<sp/>=<sp/>dlog.<ref refid="class_file_dialog_1aed3d914162dc51d27750d067f3b420dc" kindref="member">ShowModal</ref>();</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>filter<sp/>index<sp/>to<sp/>type<sp/>and<sp/>save</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/>index<sp/>=<sp/>dlog.<ref refid="class_file_dialog_1ab6f82cc8bb39eca960b525fb50249e43" kindref="member">GetFilterIndex</ref>();</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>index;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>mask.AfterFirst(wxT(</highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">)).AfterFirst(wxT(</highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/DefaultOpenType&quot;</highlight><highlight class="normal">),<sp/>mask.BeforeFirst(wxT(</highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/LastOpenType&quot;</highlight><highlight class="normal">),<sp/>mask.BeforeFirst(wxT(</highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dialogResult<sp/>==<sp/>wxID_OK)<sp/>{</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>selected<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dlog.<ref refid="class_file_dialog_1ad1892eab8140bb1e254b3dc1aa027db4" kindref="member">GetPaths</ref>(selected);</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>selected;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static<sp/>method,<sp/>can<sp/>be<sp/>called<sp/>outside<sp/>of<sp/>a<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2469" refid="class_audacity_project_1a62798ced0fe2dcbd09aa219fd0258501" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a62798ced0fe2dcbd09aa219fd0258501" kindref="member">AudacityProject::IsAlreadyOpen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>projPathName)</highlight></codeline>
<codeline lineno="2470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/>newProjPathName(projPathName);</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numProjects<sp/>=<sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>.Count();</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>numProjects;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newProjPathName.SameAs(<ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;mFileName))</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>errMsg<sp/>=</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>is<sp/>already<sp/>open<sp/>in<sp/>another<sp/>window.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newProjPathName.GetName().c_str());</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogError(errMsg);</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(errMsg,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Opening<sp/>Project&quot;</highlight><highlight class="normal">),<sp/>wxOK<sp/>|<sp/>wxCENTRE);</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static<sp/>method,<sp/>can<sp/>be<sp/>called<sp/>outside<sp/>of<sp/>a<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2489" refid="class_audacity_project_1a425f97194452a8e9753f3190386ba822" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a425f97194452a8e9753f3190386ba822" kindref="member">AudacityProject::OpenFiles</ref>(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*proj)</highlight></codeline>
<codeline lineno="2490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>This<sp/>string<sp/>is<sp/>a<sp/>label<sp/>in<sp/>the<sp/>file<sp/>type<sp/>filter<sp/>in<sp/>the<sp/>open</highlight></codeline>
<codeline lineno="2492"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>and<sp/>save<sp/>dialogues,<sp/>for<sp/>the<sp/>option<sp/>that<sp/>only<sp/>shows<sp/>project<sp/>files<sp/>created</highlight></codeline>
<codeline lineno="2493"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>with<sp/>Audacity.<sp/>Do<sp/>not<sp/>include<sp/>pipe<sp/>symbols<sp/>or<sp/>.aup<sp/>(this<sp/>extension<sp/>will</highlight></codeline>
<codeline lineno="2494"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>now<sp/>be<sp/>added<sp/>automatically<sp/>for<sp/>the<sp/>Save<sp/>Projects<sp/>dialogues).*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>selectedFiles<sp/>=<sp/>ShowOpenDialog(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Audacity<sp/>projects&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;*.aup&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectedFiles.GetCount()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/LastOpenType&quot;</highlight><highlight class="normal">),wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//sort<sp/>selected<sp/>files<sp/>by<sp/>OD<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//For<sp/>the<sp/>open<sp/>menu<sp/>we<sp/>load<sp/>OD<sp/>first<sp/>so<sp/>user<sp/>can<sp/>edit<sp/>asap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//first<sp/>sort<sp/>selectedFiles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/>selectedFiles.Sort(<ref refid="_o_d_manager_8cpp_1a92ca2bae75f35c742f41ab7074bfe18f" kindref="member">CompareNoCaseFileName</ref>);</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_manager_1a396dd3991addcafba105966dbe00e163" kindref="member">ODManager::Pause</ref>();</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ff<sp/>=<sp/>0;<sp/>ff<sp/>&lt;<sp/>selectedFiles.GetCount();<sp/>ff++)<sp/>{</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>fileName<sp/>=<sp/>selectedFiles[ff];</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>it<sp/>isn&apos;t<sp/>already<sp/>open.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_audacity_project_1a62798ced0fe2dcbd09aa219fd0258501" kindref="member">AudacityProject::IsAlreadyOpen</ref>(fileName))</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>ones<sp/>that<sp/>are<sp/>already<sp/>open.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/DefaultOpenPath&quot;</highlight><highlight class="normal">),<sp/><ref refid="filefn_8cpp_1ac51030bd42f56198d4cc482ace51dbb6" kindref="member">wxPathOnly</ref>(fileName));</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DMM:<sp/>If<sp/>the<sp/>project<sp/>is<sp/>dirty,<sp/>that<sp/>means<sp/>it&apos;s<sp/>been<sp/>touched<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all,<sp/>and<sp/>it&apos;s<sp/>not<sp/>safe<sp/>to<sp/>open<sp/>a<sp/>NEW<sp/>project<sp/>directly<sp/>in<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>place.<sp/><sp/>Only<sp/>if<sp/>the<sp/>project<sp/>is<sp/>brand-NEW<sp/>clean<sp/>and<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hasn&apos;t<sp/>done<sp/>any<sp/>action<sp/>at<sp/>all<sp/>is<sp/>it<sp/>safe<sp/>for<sp/>Open<sp/>to<sp/>take<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inside<sp/>the<sp/>current<sp/>project.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>try<sp/>to<sp/>Open<sp/>a<sp/>NEW<sp/>project<sp/>inside<sp/>the<sp/>current<sp/>window<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>are<sp/>no<sp/>tracks,<sp/>but<sp/>there&apos;s<sp/>an<sp/>Undo<sp/>history,<sp/>etc,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bad<sp/>things<sp/>can<sp/>happen,<sp/>including<sp/>data<sp/>files<sp/>moving<sp/>to<sp/>the<sp/>NEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>project<sp/>directory,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!proj<sp/>||<sp/>proj-&gt;mDirty<sp/>||<sp/>!proj-&gt;mTracks-&gt;<ref refid="class_track_list_1a493bcaaad93c4b0c3468d6b33737eaa0" kindref="member">IsEmpty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>in<sp/>a<sp/>NEW<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj<sp/>=<sp/><ref refid="_project_8cpp_1a28032264c981ed85265ad34afc761335" kindref="member">CreateNewAudacityProject</ref>();</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>project<sp/>is<sp/>clean;<sp/>it&apos;s<sp/>never<sp/>been<sp/>touched.<sp/><sp/>Therefore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>relevant<sp/>member<sp/>variables<sp/>are<sp/>in<sp/>their<sp/>initial<sp/>state,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>it&apos;s<sp/>okay<sp/>to<sp/>open<sp/>a<sp/>NEW<sp/>project<sp/>inside<sp/>this<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>proj-&gt;<ref refid="class_audacity_project_1a967e90b06c1c965d7f7d4b8cbd32dc76" kindref="member">OpenFile</ref>(fileName);</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/LastOpenType&quot;</highlight><highlight class="normal">),wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_manager_1acb332656b440294d52b48bbf6bf1b2fc" kindref="member">ODManager::Resume</ref>();</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Most<sp/>of<sp/>this<sp/>string<sp/>was<sp/>duplicated<sp/>3<sp/>places.<sp/>Made<sp/>the<sp/>warning<sp/>consistent<sp/>in<sp/>this<sp/>global.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>%s<sp/>is<sp/>to<sp/>be<sp/>filled<sp/>with<sp/>the<sp/>version<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>wxString<sp/>gsLegacyFileWarning<sp/>=</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>file<sp/>was<sp/>saved<sp/>by<sp/>Audacity<sp/>version<sp/>%s.<sp/>The<sp/>format<sp/>has<sp/>changed.<sp/>\</highlight></codeline>
<codeline lineno="2549"><highlight class="stringliteral">\n\nAudacity<sp/>can<sp/>try<sp/>to<sp/>open<sp/>and<sp/>save<sp/>this<sp/>file,<sp/>but<sp/>saving<sp/>it<sp/>in<sp/>this<sp/>\</highlight></codeline>
<codeline lineno="2550"><highlight class="stringliteral">\nversion<sp/>will<sp/>then<sp/>prevent<sp/>any<sp/>1.2<sp/>or<sp/>earlier<sp/>version<sp/>opening<sp/>it.<sp/>\</highlight></codeline>
<codeline lineno="2551"><highlight class="stringliteral">\n\nAudacity<sp/>might<sp/>corrupt<sp/>the<sp/>file<sp/>in<sp/>opening<sp/>it,<sp/>so<sp/>you<sp/>should<sp/>\</highlight></codeline>
<codeline lineno="2552"><highlight class="stringliteral">back<sp/>it<sp/>up<sp/>first.<sp/>\</highlight></codeline>
<codeline lineno="2553"><highlight class="stringliteral">\n\nOpen<sp/>this<sp/>file<sp/>now?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"></highlight></codeline>
<codeline lineno="2555" refid="class_audacity_project_1a4c554aecb92911298234ec199f46a1c8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a4c554aecb92911298234ec199f46a1c8" kindref="member">AudacityProject::WarnOfLegacyFile</ref>(<sp/>)</highlight></codeline>
<codeline lineno="2556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>msg;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/>msg.Printf(gsLegacyFileWarning,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;1.0<sp/>or<sp/>earlier&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>icon,<sp/>and<sp/>choose<sp/>&apos;NO&apos;<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a7dac92a6e76f9cbfb25e902b88b09867" kindref="member">action</ref><sp/>=</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(msg,</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Warning<sp/>-<sp/>Opening<sp/>Old<sp/>Project<sp/>File&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxYES_NO<sp/>|<sp/>wxICON_STOP<sp/>|<sp/>wxNO_DEFAULT<sp/>|<sp/>wxCENTRE,</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(action<sp/>!=<sp/>wxNO);</highlight></codeline>
<codeline lineno="2567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME?<sp/>This<sp/>should<sp/>return<sp/>a<sp/>result<sp/>that<sp/>is<sp/>checked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>See<sp/>comment<sp/>in<sp/>AudacityApp::MRUOpen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2572" refid="class_audacity_project_1a967e90b06c1c965d7f7d4b8cbd32dc76" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a967e90b06c1c965d7f7d4b8cbd32dc76" kindref="member">AudacityProject::OpenFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;fileNameArg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addtohistory)</highlight></codeline>
<codeline lineno="2573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>fileName(fileNameArg);</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>Win32,<sp/>we<sp/>may<sp/>be<sp/>given<sp/>a<sp/>short<sp/>(DOS-compatible)<sp/>file<sp/>name<sp/>on<sp/>rare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>occassions<sp/>(e.g.<sp/>stuff<sp/>like<sp/>&quot;C:\PROGRA~1\AUDACI~1\PROJEC~1.AUP&quot;).<sp/>We</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>these<sp/>to<sp/>long<sp/>file<sp/>name<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/>fileName<sp/>=<sp/><ref refid="class_platform_compatibility_1a5719205ea76ef146b19bf3fd82459b81" kindref="member">PlatformCompatibility::ConvertSlashInFileName</ref>(</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_platform_compatibility_1a7b715c71033d539b2a39d82a6093bd58" kindref="member">PlatformCompatibility::GetLongFileName</ref>(fileName));</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>it<sp/>isn&apos;t<sp/>already<sp/>open.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vaughan,<sp/>2011-03-25:<sp/>This<sp/>was<sp/>done<sp/>previously<sp/>in<sp/>AudacityProject::OpenFiles()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>AudacityApp::MRUOpen(),<sp/>but<sp/>if<sp/>you<sp/>open<sp/>an<sp/>aup<sp/>file<sp/>by<sp/>double-clicking<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>from,<sp/>e.g.,<sp/>Win<sp/>Explorer,<sp/>it<sp/>would<sp/>bypass<sp/>those,<sp/>get<sp/>to<sp/>here<sp/>with<sp/>no<sp/>check,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>then<sp/>open<sp/>a<sp/>NEW<sp/>project<sp/>from<sp/>the<sp/>same<sp/>data<sp/>with<sp/>no<sp/>warning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>This<sp/>was<sp/>reported<sp/>in<sp/>http://bugzilla.audacityteam.org/show_bug.cgi?id=137#c17,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>but<sp/>is<sp/>not<sp/>really<sp/>part<sp/>of<sp/>that<sp/>bug.<sp/>Anyway,<sp/>prevent<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_audacity_project_1a62798ced0fe2dcbd09aa219fd0258501" kindref="member">AudacityProject::IsAlreadyOpen</ref>(fileName))</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>loss<sp/>may<sp/>occur<sp/>if<sp/>users<sp/>mistakenly<sp/>try<sp/>to<sp/>open<sp/>&quot;.aup.bak&quot;<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>over<sp/>from<sp/>an<sp/>unsuccessful<sp/>save<sp/>or<sp/>by<sp/>previous<sp/>versions<sp/>of<sp/>Audacity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>we<sp/>always<sp/>refuse<sp/>to<sp/>open<sp/>such<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileName.Lower().EndsWith(wxT(</highlight><highlight class="stringliteral">&quot;.aup.bak&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;You<sp/>are<sp/>trying<sp/>to<sp/>open<sp/>an<sp/>automatically<sp/>created<sp/>backup<sp/>file.\nDoing<sp/>this<sp/>may<sp/>result<sp/>in<sp/>severe<sp/>data<sp/>loss.\n\nPlease<sp/>open<sp/>the<sp/>actual<sp/>Audacity<sp/>project<sp/>file<sp/>instead.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Warning<sp/>-<sp/>Backup<sp/>File<sp/>Detected&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!::<ref refid="filefn_8cpp_1a72d2e4ef03d51c0d59c2cb788462d600" kindref="member">wxFileExists</ref>(fileName))<sp/>{</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>file:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fileName,</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Opening<sp/>File&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>want<sp/>to<sp/>open<sp/>projects<sp/>using<sp/>wxTextFile,<sp/>but<sp/>if<sp/>it&apos;s<sp/>NOT<sp/>a<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>(but<sp/>actually<sp/>a<sp/>WAV<sp/>file,<sp/>for<sp/>example),<sp/>then<sp/>wxTextFile<sp/>will<sp/>spin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>a<sp/>long<sp/>time<sp/>searching<sp/>for<sp/>line<sp/>breaks.<sp/><sp/>So,<sp/>we<sp/>look<sp/>for<sp/>our</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signature<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>file<sp/>first:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>[16];</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFFile<sp/>ff(fileName,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ff.IsOpened())<sp/>{</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>file:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fileName,</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>file&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRead<sp/>=<sp/>ff.Read(buf,<sp/>15);</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numRead<sp/>!=<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;File<sp/>may<sp/>be<sp/>invalid<sp/>or<sp/>corrupted:<sp/>\n%s&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar*)fileName),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Opening<sp/>File<sp/>or<sp/>Project&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff.Close();</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf[15]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>temp<sp/>=<sp/><ref refid="_internat_8h_1a5ed4c8747b1c367321f0494f01dd61fa" kindref="member">LAT1CTOWX</ref>(buf);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;AudacityProject&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>an<sp/>Audacity<sp/>1.0<sp/>(or<sp/>earlier)<sp/>project<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>they<sp/>bail<sp/>out,<sp/>return<sp/>and<sp/>do<sp/>no<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!WarnOfLegacyFile()<sp/>)</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>the<sp/>NEW<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/><ref refid="_legacy_8cpp_1a29c2f458aacab6d1d50c78ccbebc288d" kindref="member">ConvertLegacyProjectFile</ref>(wxFileName(fileName));</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Audacity<sp/>was<sp/>unable<sp/>to<sp/>convert<sp/>an<sp/>Audacity<sp/>1.0<sp/>project<sp/>to<sp/>the<sp/>new<sp/>project<sp/>format.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Opening<sp/>Project&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&lt;?xml<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//FIXME:<sp/>//v<sp/>Surely<sp/>we<sp/>could<sp/>be<sp/>smarter<sp/>about<sp/>this,<sp/>like<sp/>checking<sp/>much<sp/>earlier<sp/>that<sp/>this<sp/>is<sp/>a<sp/>.aup<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp.Mid(0,<sp/>6)<sp/>!=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&lt;?xml<sp/>&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>not<sp/>XML,<sp/>try<sp/>opening<sp/>it<sp/>as<sp/>any<sp/>other<sp/>form<sp/>of<sp/>audio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Import(fileName);</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/>mFileName<sp/>=<sp/>fileName;</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/>mRecoveryAutoSaveDataDir<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/>mIsRecovered<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/>SetProjectTitle();</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>autoSaveExt<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.autosave&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mFileName.Length()<sp/>&gt;=<sp/>autoSaveExt.Length()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFileName.Right(autoSaveExt.Length())<sp/>==<sp/>autoSaveExt)</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_auto_save_file" kindref="compound">AutoSaveFile</ref><sp/>asf;</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!asf.<ref refid="class_auto_save_file_1a32fef2c7202bfc52499c4b96b7ba2f9d" kindref="member">Decode</ref>(fileName))</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>decode<sp/>file:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fileName,</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>decoding<sp/>file&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_x_m_l_file_reader" kindref="compound">XMLFileReader</ref><sp/>xmlFile;</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bParseSuccess<sp/>=<sp/>xmlFile.<ref refid="class_x_m_l_file_reader_1a00c578f6fa3a9a883ef5ced465404642" kindref="member">Parse</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>fileName);</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bParseSuccess)<sp/>{</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>making<sp/>a<sp/>duplicate<sp/>set<sp/>of<sp/>pointers<sp/>to<sp/>the<sp/>existing<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>disk,<sp/>we<sp/>add<sp/>one<sp/>to<sp/>their<sp/>reference<sp/>count,<sp/>guaranteeing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>their<sp/>reference<sp/>counts<sp/>will<sp/>never<sp/>reach<sp/>zero<sp/>and<sp/>thus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>version<sp/>saved<sp/>on<sp/>disk<sp/>will<sp/>be<sp/>preserved<sp/>until<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>selects<sp/>Save().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>err<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mTracks);</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLastSavedTracks<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref>();</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad4f4b2a5e9fb7ea7cf337010424775f2" kindref="member">GetErrorOpening</ref>())</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogWarning(</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;Track<sp/>%s<sp/>had<sp/>error<sp/>reading<sp/>clip<sp/>values<sp/>from<sp/>project<sp/>file.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a670b88686f99e151d6a305a709f130b1" kindref="member">GetName</ref>().c_str());</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>checks<sp/>for<sp/>linked<sp/>tracks;<sp/>unsetting<sp/>the<sp/>linked<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>fix<sp/>the<sp/>problem,<sp/>but<sp/>it<sp/>likely<sp/>leaves<sp/>us<sp/>with<sp/>orphaned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blockfiles<sp/>instead<sp/>of<sp/>much<sp/>worse<sp/>problems.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=<sp/>t-&gt;<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>();</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l)</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>linked<sp/>track&apos;s<sp/>partner<sp/>should<sp/>never<sp/>itself<sp/>be<sp/>linked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogWarning(</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;Left<sp/>track<sp/>%s<sp/>had<sp/>linked<sp/>right<sp/>track<sp/>%s<sp/>with<sp/>extra<sp/>right<sp/>track<sp/>link.\n<sp/><sp/><sp/>Removing<sp/>extra<sp/>link<sp/>from<sp/>right<sp/>track.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a670b88686f99e151d6a305a709f130b1" kindref="member">GetName</ref>().c_str(),<sp/>l-&gt;<ref refid="class_track_1a670b88686f99e151d6a305a709f130b1" kindref="member">GetName</ref>().c_str());</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l-&gt;<ref refid="class_track_1a23dc5f6265d0383f860d099f44e7d74c" kindref="member">SetLinked</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Channels<sp/>should<sp/>be<sp/>left<sp/>and<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(<sp/><sp/>(t-&gt;<ref refid="class_track_1a9c988f7695a546bf52ee2dc859db0345" kindref="member">GetChannel</ref>()<sp/>==<sp/><ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fa4cc8a2bb7bc243eab53ba2abd757d9da" kindref="member">Track::LeftChannel</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l-&gt;<ref refid="class_track_1a9c988f7695a546bf52ee2dc859db0345" kindref="member">GetChannel</ref>()<sp/>==<sp/><ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362faa9c6ea023df4504361ffa1a31238c87e" kindref="member">Track::RightChannel</ref>)<sp/>||</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t-&gt;<ref refid="class_track_1a9c988f7695a546bf52ee2dc859db0345" kindref="member">GetChannel</ref>()<sp/>==<sp/><ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362faa9c6ea023df4504361ffa1a31238c87e" kindref="member">Track::RightChannel</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l-&gt;<ref refid="class_track_1a9c988f7695a546bf52ee2dc859db0345" kindref="member">GetChannel</ref>()<sp/>==<sp/><ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fa4cc8a2bb7bc243eab53ba2abd757d9da" kindref="member">Track::LeftChannel</ref>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogWarning(</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;Track<sp/>%s<sp/>and<sp/>%s<sp/>had<sp/>left/right<sp/>track<sp/>links<sp/>out<sp/>of<sp/>order.<sp/>Setting<sp/>tracks<sp/>to<sp/>not<sp/>be<sp/>linked.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a670b88686f99e151d6a305a709f130b1" kindref="member">GetName</ref>().c_str(),<sp/>l-&gt;<ref refid="class_track_1a670b88686f99e151d6a305a709f130b1" kindref="member">GetName</ref>().c_str());</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a23dc5f6265d0383f860d099f44e7d74c" kindref="member">SetLinked</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogWarning(</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;Track<sp/>%s<sp/>had<sp/>link<sp/>to<sp/>NULL<sp/>track.<sp/>Setting<sp/>it<sp/>to<sp/>not<sp/>be<sp/>linked.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a670b88686f99e151d6a305a709f130b1" kindref="member">GetName</ref>().c_str());</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a23dc5f6265d0383f860d099f44e7d74c" kindref="member">SetLinked</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"></highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLastSavedTracks-&gt;Add(t-&gt;<ref refid="class_track_1a7de9a5b87c0309271bc2620c9ed54545" kindref="member">Duplicate</ref>());</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"></highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InitialState();</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;SetFocusedTrack(iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>());</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HandleResize();</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;Update();<sp/></highlight><highlight class="comment">//<sp/>force<sp/>any<sp/>repaint<sp/>to<sp/>happen<sp/>now,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>any<sp/>asynch<sp/>calls<sp/>into<sp/>the<sp/>blockfile<sp/>code<sp/>will<sp/>not<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finished<sp/>logging<sp/>errors<sp/>(if<sp/>any)<sp/>before<sp/>the<sp/>call<sp/>to<sp/>ProjectFSCK()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"></highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addtohistory)<sp/>{</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1aa9461c56195b9a1b8eb931293d0b491f" kindref="member">AddFileToHistory</ref>(fileName);</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsRecovered)</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>project<sp/>has<sp/>been<sp/>recovered,<sp/>so<sp/>write<sp/>a<sp/>NEW<sp/>auto-save<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>and<sp/>then<sp/>DELETE<sp/>the<sp/>old<sp/>one<sp/>in<sp/>the<sp/>auto-save<sp/>folder.<sp/>Note<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>this<sp/>point<sp/>mFileName<sp/>!=<sp/>fileName,<sp/>because<sp/>when<sp/>opening<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recovered<sp/>file<sp/>mFileName<sp/>is<sp/>faked<sp/>to<sp/>point<sp/>to<sp/>the<sp/>original<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>has<sp/>been<sp/>recovered,<sp/>not<sp/>the<sp/>one<sp/>in<sp/>the<sp/>auto-save<sp/>folder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetDirManager()-&gt;ProjectFSCK(err,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Correct<sp/>problems<sp/>in<sp/>auto-recover<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal"></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PushState<sp/>calls<sp/>AutoSave(),<sp/>so<sp/>no<sp/>longer<sp/>need<sp/>to<sp/>do<sp/>so<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;PushState(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Project<sp/>was<sp/>recovered&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Recover&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="filefn_8cpp_1a147f3601590c8c29a97d1101e03b2b90" kindref="member">wxRemoveFile</ref>(fileName))</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>remove<sp/>old<sp/>auto<sp/>save<sp/>file&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">),<sp/>wxICON_STOP,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>regular<sp/>project,<sp/>check<sp/>it<sp/>and<sp/>ask<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref><sp/>=<sp/>GetDirManager()-&gt;ProjectFSCK(err,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>&amp;<sp/><ref refid="_dir_manager_8h_1aa5b644531d2283f39637eeb78e31d79f" kindref="member">FSCKstatus_CLOSE_REQ</ref>)</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vaughan,<sp/>2010-08-23:<sp/>Note<sp/>this<sp/>did<sp/>not<sp/>do<sp/>a<sp/>real<sp/>close.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>could<sp/>cause<sp/>problems<sp/>if<sp/>you<sp/>get<sp/>this,<sp/>say<sp/>on<sp/>missing<sp/>alias<sp/>files,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>try<sp/>to<sp/>open<sp/>a<sp/>project<sp/>with,<sp/>e.g.,<sp/>missing<sp/>blockfiles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>then<sp/>failed<sp/>in<sp/>SetProject,<sp/>saying<sp/>it<sp/>cannot<sp/>find<sp/>the<sp/>files,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>never<sp/>go<sp/>through<sp/>ProjectFSCK<sp/>to<sp/>give<sp/>more<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Going<sp/>through<sp/>OnClose()<sp/>may<sp/>be<sp/>overkill,<sp/>but<sp/>it&apos;s<sp/>safe.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>There<sp/>was<sp/>an<sp/>error<sp/>in<sp/>the<sp/>load/check<sp/>and<sp/>the<sp/>user</highlight></codeline>
<codeline lineno="2800"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>explictly<sp/>opted<sp/>to<sp/>close<sp/>the<sp/>project.</highlight></codeline>
<codeline lineno="2801"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTracks-&gt;Clear(true);</highlight></codeline>
<codeline lineno="2802"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFileName<sp/>=<sp/>wxT(&quot;&quot;);</highlight></codeline>
<codeline lineno="2803"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetProjectTitle();</highlight></codeline>
<codeline lineno="2804"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(true);</highlight></codeline>
<codeline lineno="2805"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="_menus_8h_1a48108383cbd57d9e29591a05f4991bb7" kindref="member">OnClose</ref>();</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>&amp;<sp/><ref refid="_dir_manager_8h_1a04eefe625cc475e0d852d1f587d45538" kindref="member">FSCKstatus_CHANGED</ref>)</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>the<sp/>wave<sp/>tracks<sp/>as<sp/>changed<sp/>and<sp/>redraw.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>wave<sp/>tracks<sp/>have<sp/>a<sp/>notion<sp/>of<sp/>&quot;changed&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/>clipIter<sp/>=<sp/>((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)t)-&gt;GetClipIterator();</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipIter;</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipIter=clipIter-&gt;GetNext())</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipIter-&gt;GetData()-&gt;MarkChanged();</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vaughan,<sp/>2010-08-20:<sp/>This<sp/>was<sp/>bogus,<sp/>as<sp/>all<sp/>the<sp/>actions<sp/>in<sp/>DirManager::ProjectFSCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>return<sp/>FSCKstatus_CHANGED<sp/>cannot<sp/>be<sp/>undone.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>this-&gt;PushState(_(&quot;Project<sp/>checker<sp/>repaired<sp/>file&quot;),<sp/>_(&quot;Project<sp/>Repair&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>&amp;<sp/><ref refid="_dir_manager_8h_1adb5b522e67e5a45c5693991f1d945d0b" kindref="member">FSCKstatus_SAVE_AUP</ref>)</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;Save();</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vaughan,<sp/>2011-10-30:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>first<sp/>topic<sp/>at<sp/>http://bugzilla.audacityteam.org/show_bug.cgi?id=451#c16.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calling<sp/>mTracks-&gt;Clear()<sp/>with<sp/>deleteTracks<sp/>true<sp/>results<sp/>in<sp/>data<sp/>loss.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTracks-&gt;Clear();<sp/></highlight><highlight class="comment">//mTracks-&gt;Clear(true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFileName<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetProjectTitle();</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogError(wxT(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>parse<sp/>file<sp/>\&quot;%s\&quot;.<sp/>\nError:<sp/>%s&quot;</highlight><highlight class="normal">),<sp/>fileName.c_str(),<sp/>xmlFile.<ref refid="class_x_m_l_file_reader_1a923720cb3b6e405d82ccfa8c71b4dc57" kindref="member">GetErrorStr</ref>().c_str());</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(xmlFile.<ref refid="class_x_m_l_file_reader_1a923720cb3b6e405d82ccfa8c71b4dc57" kindref="member">GetErrorStr</ref>(),</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Opening<sp/>Project&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>now<sp/>unused<sp/>recording<sp/>recovery<sp/>handler<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRecordingRecoveryHandler)</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mRecordingRecoveryHandler;</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRecordingRecoveryHandler<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bParseSuccess)</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>No<sp/>need<sp/>to<sp/>do<sp/>further<sp/>processing<sp/>if<sp/>parse<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2857"><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/>GetDirManager()-&gt;FillBlockfilesCache();</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"></highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>the<sp/>ODManager<sp/>to<sp/>see<sp/>if<sp/>we<sp/>should<sp/>add<sp/>the<sp/>tracks<sp/>to<sp/>the<sp/>ODManager.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>flag<sp/>would<sp/>have<sp/>been<sp/>set<sp/>in<sp/>the<sp/>HandleXML<sp/>calls<sp/>from<sp/>above,<sp/>if<sp/>there<sp/>were</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//OD***Blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_manager_1ab316ded3fbf00046c9d57ae2a5a0b891" kindref="member">ODManager::HasLoadedODFlag</ref>())</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*tr;</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>triter(mTracks);</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tr<sp/>=<sp/>triter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ODTask*&gt;<sp/>newTasks;</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task" kindref="compound">ODTask</ref>*<sp/>newTask;</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::vector&lt;ODDecodeTask*&gt;<sp/>decodeTasks;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>createdODTasks=0;</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tr)<sp/>{</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tr-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>the<sp/>track<sp/>for<sp/>blocks<sp/>that<sp/>need<sp/>decoding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//There<sp/>may<sp/>be<sp/>more<sp/>than<sp/>one<sp/>type<sp/>e.g.<sp/>FLAC/FFMPEG/lame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>odFlags;</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odFlags=((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)tr)-&gt;GetODFlags();</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>the<sp/>track<sp/>to<sp/>the<sp/>already<sp/>created<sp/>tasks<sp/>that<sp/>correspond<sp/>to<sp/>the<sp/>od<sp/>flags<sp/>in<sp/>the<sp/>wavetrack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;newTasks.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newTasks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;GetODType()<sp/>&amp;<sp/>odFlags)</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newTasks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;AddWaveTrack((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)tr);</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>whatever<sp/>NEW<sp/>tasks<sp/>we<sp/>need<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>want<sp/>at<sp/>most<sp/>one<sp/>instance<sp/>of<sp/>each<sp/>class<sp/>for<sp/>the<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((odFlags|createdODTasks)<sp/>!=<sp/>createdODTasks)</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newTask=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OD_FLAC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(createdODTasks&amp;<ref refid="class_o_d_task_1a5cb005afe9c31c34738c6d20da077d78affeff343487da8ae57703491f67161c9" kindref="member">ODTask::eODFLAC</ref>)<sp/>&amp;&amp;<sp/>odFlags<sp/>&amp;<sp/><ref refid="class_o_d_task_1a5cb005afe9c31c34738c6d20da077d78affeff343487da8ae57703491f67161c9" kindref="member">ODTask::eODFLAC</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newTask=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_flac_task" kindref="compound">ODDecodeFlacTask</ref>;</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createdODTasks=<sp/>createdODTasks<sp/>|<sp/><ref refid="class_o_d_task_1a5cb005afe9c31c34738c6d20da077d78affeff343487da8ae57703491f67161c9" kindref="member">ODTask::eODFLAC</ref>;</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2897"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(createdODTasks&amp;<ref refid="class_o_d_task_1a5cb005afe9c31c34738c6d20da077d78a36e0f57063d422bebdf739f3cd6a7acc" kindref="member">ODTask::eODPCMSummary</ref>)<sp/>&amp;&amp;<sp/>odFlags<sp/>&amp;<sp/><ref refid="class_o_d_task_1a5cb005afe9c31c34738c6d20da077d78a36e0f57063d422bebdf739f3cd6a7acc" kindref="member">ODTask::eODPCMSummary</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newTask=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_o_d_compute_summary_task" kindref="compound">ODComputeSummaryTask</ref>;</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createdODTasks=<sp/>createdODTasks<sp/>|<sp/><ref refid="class_o_d_task_1a5cb005afe9c31c34738c6d20da077d78a36e0f57063d422bebdf739f3cd6a7acc" kindref="member">ODTask::eODPCMSummary</ref>;</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;unrecognized<sp/>OD<sp/>Flag<sp/>in<sp/>block<sp/>file.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:ODTODO:<sp/>display<sp/>to<sp/>user.<sp/><sp/>This<sp/>can<sp/>happen<sp/>when<sp/>we<sp/>build<sp/>audacity<sp/>on<sp/>a<sp/>system<sp/>that<sp/>doesnt<sp/>have<sp/>libFLAC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newTask)</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newTask-&gt;<ref refid="class_o_d_task_1a3438e8f3f97a2ad2954913b23beaa0a6" kindref="member">AddWaveTrack</ref>((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)tr);</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newTasks.push_back(newTask);</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr<sp/>=<sp/>triter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;newTasks.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1aef1bcdded223f015b22a0d1d439c23ad" kindref="member">ODManager::Instance</ref>()-&gt;<ref refid="class_o_d_manager_1ab635811e9a08a5e4b14a6736ad83c885" kindref="member">AddNewTask</ref>(newTasks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//release<sp/>the<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1ab808eba4b4f987253df06557a5f48846" kindref="member">ODManager::UnmarkLoadedODFlag</ref>();</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"></highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>an<sp/>unknown<sp/>reason,<sp/>OSX<sp/>requires<sp/>that<sp/>the<sp/>project<sp/>window<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>raised<sp/>if<sp/>a<sp/>recovery<sp/>took<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/>Raise();</highlight></codeline>
<codeline lineno="2926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"></highlight></codeline>
<codeline lineno="2928" refid="class_audacity_project_1ac9f1fb33457f407bb93546473ecbb7c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ac9f1fb33457f407bb93546473ecbb7c9" kindref="member">AudacityProject::HandleXMLTag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="structtag" kindref="compound">tag</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>**attrs)</highlight></codeline>
<codeline lineno="2929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFileVersionFound<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>fileVersion<sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&lt;unrecognized<sp/>version<sp/>--<sp/>possibly<sp/>corrupt<sp/>project<sp/>file&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>audacityVersion<sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&lt;unrecognized<sp/>version<sp/>--<sp/>possibly<sp/>corrupt<sp/>project<sp/>file&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>requiredTags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>longVpos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>through<sp/>attrs,<sp/>which<sp/>is<sp/>a<sp/>null-terminated<sp/>list<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute-value<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*attrs)<sp/>{</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*attr<sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value<sp/>||<sp/>!<ref refid="class_x_m_l_value_checker_1adf2bcfece118875538ca2bdd528b8c23" kindref="member">XMLValueChecker::IsGoodString</ref>(value))</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mViewInfo.ReadXMLAttribute(attr,<sp/>value))<sp/>{</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>save<sp/>vpos<sp/>now<sp/>and<sp/>restore<sp/>it<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longVpos<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(longVpos,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">(mViewInfo.vpos));</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;datadir&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>an<sp/>auto-saved<sp/>version<sp/>whose<sp/>data<sp/>is<sp/>in<sp/>another<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>This<sp/>attribute<sp/>must<sp/>currently<sp/>be<sp/>written<sp/>and<sp/>parsed<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>any<sp/>other<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((value[0]<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/><ref refid="class_x_m_l_value_checker_1a67526db38314c2ca8ddfa4e9d8f311ee" kindref="member">XMLValueChecker::IsGoodPathString</ref>(value))</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>that<sp/>this<sp/>is<sp/>a<sp/>recovered<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIsRecovered<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRecoveryAutoSaveDataDir<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileVersion<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bFileVersionFound<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requiredTags++;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;audacityversion&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>audacityVersion<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requiredTags++;</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"></highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;projname&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>projName;</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>projPath;</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"></highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsRecovered)<sp/>{</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fake<sp/>the<sp/>filename<sp/>as<sp/>if<sp/>we<sp/>had<sp/>opened<sp/>the<sp/>original<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(which<sp/>was<sp/>lost<sp/>by<sp/>the<sp/>crash)<sp/>rather<sp/>than<sp/>the<sp/>one<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>save<sp/>folder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFileName<sp/>realFileDir;</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realFileDir.AssignDir(mRecoveryAutoSaveDataDir);</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realFileDir.RemoveLastDir();</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"></highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>realFileName<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(realFileName.Length()<sp/>&gt;=<sp/>5<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realFileName.Right(5)<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;_data&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realFileName<sp/>=<sp/>realFileName.Left(realFileName.Length()<sp/>-<sp/>5);</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"></highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(realFileName.IsEmpty())</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>previously<sp/>unsaved<sp/>project<sp/>has<sp/>been<sp/>recovered,<sp/>so<sp/>fake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>unsaved<sp/>project.<sp/>The<sp/>data<sp/>files<sp/>just<sp/>stay<sp/>in<sp/>the<sp/>temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDirManager-&gt;SetLocalTempDir(mRecoveryAutoSaveDataDir);</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFileName<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projName<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projPath<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realFileName<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.aup&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projPath<sp/>=<sp/>realFileDir.GetFullPath();</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFileName<sp/>=<sp/>wxFileName(projPath,<sp/>realFileName).GetFullPath();</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projName<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetProjectTitle();</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projName<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projPath<sp/>=<sp/><ref refid="filefn_8cpp_1ac51030bd42f56198d4cc482ace51dbb6" kindref="member">wxPathOnly</ref>(mFileName);</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!projName.IsEmpty())</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>try<sp/>to<sp/>load<sp/>the<sp/>data<sp/>files<sp/>based<sp/>on<sp/>the<sp/>_data<sp/>dir<sp/>given<sp/>in<sp/>the<sp/>.aup<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>fails<sp/>then<sp/>try<sp/>to<sp/>use<sp/>the<sp/>filename<sp/>of<sp/>the<sp/>.aup<sp/>as<sp/>the<sp/>base<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>because<sp/>unzipped<sp/>projects<sp/>e.g.<sp/>those<sp/>that<sp/>get<sp/>transfered<sp/>between<sp/>mac-pc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>encoding<sp/>issues<sp/>and<sp/>end<sp/>up<sp/>expanding<sp/>the<sp/>wrong<sp/>filenames<sp/>for<sp/>certain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>international<sp/>characters<sp/>(such<sp/>as<sp/>capital<sp/>&apos;A&apos;<sp/>with<sp/>an<sp/>umlaut.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mDirManager-&gt;SetProject(projPath,<sp/>projName,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projName<sp/>=<sp/>GetName()<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;_data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mDirManager-&gt;SetProject(projPath,<sp/>projName,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>the<sp/>project<sp/>data<sp/>folder:<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projName.c_str()),</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Opening<sp/>Project&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"></highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requiredTags++;</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"></highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;rate&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(value,<sp/>&amp;mRate);</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetSelectionBar()-&gt;SetRate(mRate);</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"></highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;snapto&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSnapTo(wxString(value)<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;on&quot;</highlight><highlight class="normal">)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;selectionformat&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetSelectionFormat(value);</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;frequencyformat&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFrequencySelectionFormatName(value);</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;bandwidthformat&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetBandwidthSelectionFormatName(value);</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal"></highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.UpdatePrefs();</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"></highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(longVpos<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PRL:<sp/>It<sp/>seems<sp/>this<sp/>must<sp/>happen<sp/>after<sp/>SetSnapTo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.track<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.vpos<sp/>=<sp/>longVpos;</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mbInitializingScrollbar<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Specifically<sp/>detect<sp/>newer<sp/>versions<sp/>of<sp/>Audacity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING:<sp/>This<sp/>will<sp/>need<sp/>review/revision<sp/>if<sp/>we<sp/>ever<sp/>have<sp/>a<sp/>version<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>1.5.10,<sp/>i.e.<sp/>with<sp/>2<sp/>digit<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>able<sp/>to<sp/>do<sp/>a<sp/>shortcut<sp/>and<sp/>use<sp/>string<sp/>comparison<sp/>because<sp/>we<sp/>know</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>does<sp/>not<sp/>happen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bFileVersionFound<sp/>||</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fileVersion.Length()<sp/>!=<sp/>5)<sp/>||<sp/></highlight><highlight class="comment">//<sp/>expecting<sp/>&apos;1.1.0&apos;,<sp/>for<sp/>example</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(fileVersion)<sp/>||</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fileVersion<sp/>&gt;<sp/>wxT(<ref refid="_audacity_8h_1a038c691fc430c7e533b3104393ccea9a" kindref="member">AUDACITY_FILE_FORMAT_VERSION</ref>)))</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>msg;</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>%s<sp/>will<sp/>be<sp/>replaced<sp/>by<sp/>the<sp/>version<sp/>number.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>file<sp/>was<sp/>saved<sp/>using<sp/>Audacity<sp/>%s.\nYou<sp/>are<sp/>using<sp/>Audacity<sp/>%s.<sp/>You<sp/>may<sp/>need<sp/>to<sp/>upgrade<sp/>to<sp/>a<sp/>newer<sp/>version<sp/>to<sp/>open<sp/>this<sp/>file.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>audacityVersion.c_str(),</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1a06785256c5408ee5ae69de8c7dfc57a5" kindref="member">AUDACITY_VERSION_STRING</ref>);</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(msg,</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open<sp/>project<sp/>file&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxICON_EXCLAMATION<sp/>|<sp/>wxCENTRE,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>It<sp/>looks<sp/>as<sp/>if<sp/>there<sp/>was<sp/>some<sp/>confusion<sp/>about<sp/>fileversion<sp/>and<sp/>audacityversion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fileversion<sp/>NOT<sp/>being<sp/>increased<sp/>when<sp/>file<sp/>formats<sp/>changed,<sp/>so<sp/>unfortunately<sp/>we&apos;re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>audacityversion<sp/>to<sp/>rescue<sp/>the<sp/>situation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>KLUDGE:<sp/>guess<sp/>the<sp/>true<sp/>&apos;fileversion&apos;<sp/>by<sp/>stripping<sp/>away<sp/>any<sp/>&apos;-beta-Rc&apos;<sp/>stuff<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>audacityVersion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>fairly<sp/>safe<sp/>to<sp/>do<sp/>this<sp/>as<sp/>it<sp/>has<sp/>already<sp/>been<sp/>established<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>puported<sp/>file<sp/>version<sp/>was<sp/>five<sp/>chars<sp/>long.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/>fileVersion<sp/>=<sp/>audacityVersion.Mid(0,5);</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"></highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsOld<sp/>=<sp/>fileVersion<sp/>&lt;<sp/>wxT(<ref refid="_audacity_8h_1a038c691fc430c7e533b3104393ccea9a" kindref="member">AUDACITY_FILE_FORMAT_VERSION</ref>);</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsVeryOld<sp/>=<sp/>fileVersion<sp/>&lt;<sp/>wxT(</highlight><highlight class="stringliteral">&quot;1.1.9&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Very<sp/>old<sp/>file<sp/>versions<sp/>could<sp/>even<sp/>have<sp/>the<sp/>file<sp/>version<sp/>starting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>text:<sp/>&apos;AudacityProject<sp/>Version<sp/>0.95&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Atoi<sp/>return<sp/>zero<sp/>in<sp/>this<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/>bIsVeryOld<sp/>|=<sp/>wxAtoi(<sp/>fileVersion<sp/>)==0;</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Specifically<sp/>detect<sp/>older<sp/>versions<sp/>of<sp/>Audacity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bIsOld<sp/>|<sp/>bIsVeryOld<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>msg;</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg.Printf(gsLegacyFileWarning,<sp/>audacityVersion.c_str());</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"></highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icon_choice<sp/>=<sp/>wxICON_EXCLAMATION;</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bIsVeryOld<sp/>)</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>icon,<sp/>and<sp/>choose<sp/>&apos;NO&apos;<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icon_choice<sp/>=<sp/>wxICON_STOP<sp/>|<sp/>wxNO_DEFAULT;</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a7dac92a6e76f9cbfb25e902b88b09867" kindref="member">action</ref><sp/>=</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(msg,</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Warning<sp/>-<sp/>Opening<sp/>Old<sp/>Project<sp/>File&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxYES_NO<sp/>|<sp/>icon_choice<sp/>|<sp/>wxCENTRE,</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/>wxNO)</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;audacityproject&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;project&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>tag<sp/>name<sp/>is<sp/>not<sp/>one<sp/>of<sp/>these<sp/>two<sp/>(the<sp/>NEW<sp/>name<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;project&quot;<sp/>with<sp/>an<sp/>Audacity<sp/>namespace,<sp/>but<sp/>we<sp/>don&apos;t<sp/>detect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>namespace<sp/>yet),<sp/>then<sp/>we<sp/>don&apos;t<sp/>know<sp/>what<sp/>the<sp/>error<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(requiredTags<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"></highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>other<sp/>tests<sp/>passed,<sp/>so<sp/>we<sp/>succeed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"></highlight></codeline>
<codeline lineno="3143" refid="class_audacity_project_1a4694aa52dad90aebf83bf13ecac2b56b" refkind="member"><highlight class="normal"><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref><sp/>*<ref refid="class_audacity_project_1a4694aa52dad90aebf83bf13ecac2b56b" kindref="member">AudacityProject::HandleXMLChild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="structtag" kindref="compound">tag</ref>)</highlight></codeline>
<codeline lineno="3144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;tags&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTags.get();</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"></highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;wavetrack&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*newTrack<sp/>=<sp/>mTrackFactory-&gt;NewWaveTrack();</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTracks-&gt;Add(newTrack);</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newTrack;</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"></highlight></codeline>
<codeline lineno="3155"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;notetrack&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_note_track" kindref="compound">NoteTrack</ref><sp/>*newTrack<sp/>=<sp/>mTrackFactory-&gt;NewNoteTrack();</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTracks-&gt;Add(newTrack);</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newTrack;</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif<sp/>//<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3162"><highlight class="normal"></highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;labeltrack&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*newTrack<sp/>=<sp/>mTrackFactory-&gt;NewLabelTrack();</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTracks-&gt;Add(newTrack);</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newTrack;</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"></highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;timetrack&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_time_track" kindref="compound">TimeTrack</ref><sp/>*newTrack<sp/>=<sp/>mTrackFactory-&gt;NewTimeTrack();</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTracks-&gt;Add(newTrack);</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newTrack;</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"></highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;recordingrecovery&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mRecordingRecoveryHandler)</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRecordingRecoveryHandler<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_recording_recovery_handler" kindref="compound">RecordingRecoveryHandler</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRecordingRecoveryHandler;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"></highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;import&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mImportXMLTagHandler<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mImportXMLTagHandler<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_import_x_m_l_tag_handler" kindref="compound">ImportXMLTagHandler</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mImportXMLTagHandler;</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"></highlight></codeline>
<codeline lineno="3190" refid="class_audacity_project_1a54a5ac11aac164b735e93fa26e6d26bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a54a5ac11aac164b735e93fa26e6d26bd" kindref="member">AudacityProject::WriteXMLHeader</ref>(<ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref><sp/>&amp;xmlFile)</highlight></codeline>
<codeline lineno="3191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1acf34179e0c03b74e5c694d882b7e503c" kindref="member">Write</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&lt;?xml<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1acf34179e0c03b74e5c694d882b7e503c" kindref="member">Write</ref>(wxT(</highlight><highlight class="stringliteral">&quot;version=\&quot;1.0\&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1acf34179e0c03b74e5c694d882b7e503c" kindref="member">Write</ref>(wxT(</highlight><highlight class="stringliteral">&quot;standalone=\&quot;no\&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1acf34179e0c03b74e5c694d882b7e503c" kindref="member">Write</ref>(wxT(</highlight><highlight class="stringliteral">&quot;?&gt;\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1acf34179e0c03b74e5c694d882b7e503c" kindref="member">Write</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&lt;!DOCTYPE<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1acf34179e0c03b74e5c694d882b7e503c" kindref="member">Write</ref>(wxT(</highlight><highlight class="stringliteral">&quot;project<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1acf34179e0c03b74e5c694d882b7e503c" kindref="member">Write</ref>(wxT(</highlight><highlight class="stringliteral">&quot;PUBLIC<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1acf34179e0c03b74e5c694d882b7e503c" kindref="member">Write</ref>(wxT(</highlight><highlight class="stringliteral">&quot;\&quot;-//audacityproject-1.3.0//DTD//EN\&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1acf34179e0c03b74e5c694d882b7e503c" kindref="member">Write</ref>(wxT(</highlight><highlight class="stringliteral">&quot;\&quot;http://audacity.sourceforge.net/xml/audacityproject-1.3.0.dtd\&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1acf34179e0c03b74e5c694d882b7e503c" kindref="member">Write</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&gt;\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"></highlight></codeline>
<codeline lineno="3205" refid="class_audacity_project_1a9e1a54ebc4b1aa3020bf3706e7a714e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a9e1a54ebc4b1aa3020bf3706e7a714e4" kindref="member">AudacityProject::WriteXML</ref>(<ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref><sp/>&amp;xmlFile)</highlight></codeline>
<codeline lineno="3206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><ref refid="_diags_8h_1acdc5896cfd0727db207e217a9d18a31a" kindref="member">TIMER_START</ref>(<sp/></highlight><highlight class="stringliteral">&quot;AudacityProject::WriteXML&quot;</highlight><highlight class="normal">,<sp/>xml_writer_timer<sp/>);</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Warning:<sp/>This<sp/>block<sp/>of<sp/>code<sp/>is<sp/>duplicated<sp/>in<sp/>Save,<sp/>for<sp/>now...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>project<sp/>=<sp/>mFileName;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(project.Len()<sp/>&gt;<sp/>4<sp/>&amp;&amp;<sp/>project.Mid(project.Len()<sp/>-<sp/>4)<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.aup&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>project<sp/>=<sp/>project.Mid(0,<sp/>project.Len()<sp/>-<sp/>4);</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>projName<sp/>=<sp/><ref refid="filefn_8cpp_1a76a10f9ffbac34e33fa9ca0b2ccc5218" kindref="member">wxFileNameFromPath</ref>(project)<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;_data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>Warning<sp/>-DMM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3214"><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a38abb8ecc4a15db0272d43ff8bec1369" kindref="member">StartTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;project&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;xmlns&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;http://audacity.sourceforge.net/xml/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"></highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mAutoSaving)</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>auto-saving,<sp/>remember<sp/>full<sp/>path<sp/>to<sp/>data<sp/>files<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>This<sp/>attribute<sp/>must<sp/>currently<sp/>be<sp/>written<sp/>and<sp/>parsed<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>other<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;datadir&quot;</highlight><highlight class="normal">),<sp/>mDirManager-&gt;GetDataFilesDir());</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"></highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>code<sp/>at<sp/>the<sp/>start<sp/>assumes<sp/>that<sp/>if<sp/>mFileName<sp/>has<sp/>a<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>the<sp/>file<sp/>has<sp/>been<sp/>saved.<sp/><sp/>This<sp/>is<sp/>not<sp/>neccessarily<sp/>true<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>autosaving<sp/>as<sp/>it<sp/>gets<sp/>set<sp/>by<sp/>AddImportedTracks<sp/>(presumably<sp/>as<sp/>a<sp/>proposal).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>don&apos;t<sp/>think<sp/>that<sp/>mDirManager.projName<sp/>gets<sp/>set<sp/>without<sp/>a<sp/>save<sp/>so<sp/>check<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mDirManager-&gt;GetProjectName()<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projName<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;_data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"></highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;projname&quot;</highlight><highlight class="normal">),<sp/>projName);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">),<sp/>wxT(<ref refid="_audacity_8h_1a038c691fc430c7e533b3104393ccea9a" kindref="member">AUDACITY_FILE_FORMAT_VERSION</ref>));</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;audacityversion&quot;</highlight><highlight class="normal">),<sp/><ref refid="_audacity_8h_1a06785256c5408ee5ae69de8c7dfc57a5" kindref="member">AUDACITY_VERSION_STRING</ref>);</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.WriteXMLAttributes(xmlFile);</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;rate&quot;</highlight><highlight class="normal">),<sp/>mRate);</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;snapto&quot;</highlight><highlight class="normal">),<sp/>GetSnapTo()<sp/>?<sp/>wxT(</highlight><highlight class="stringliteral">&quot;on&quot;</highlight><highlight class="normal">)<sp/>:<sp/>wxT(</highlight><highlight class="stringliteral">&quot;off&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;selectionformat&quot;</highlight><highlight class="normal">),<sp/>GetSelectionFormat());</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;frequencyformat&quot;</highlight><highlight class="normal">),<sp/>GetFrequencySelectionFormatName());</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;bandwidthformat&quot;</highlight><highlight class="normal">),<sp/>GetBandwidthSelectionFormatName());</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/>mTags-&gt;WriteXML(xmlFile);</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"></highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pWaveTrack;</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mTracks);</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)<sp/>&amp;&amp;<sp/>mWantSaveCompressed)</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vvv<sp/>This<sp/>should<sp/>probably<sp/>be<sp/>a<sp/>method,<sp/>WaveTrack::WriteCompressedTrackXML().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a38abb8ecc4a15db0272d43ff8bec1369" kindref="member">StartTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;import&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">),<sp/>mStrOtherNamesArray[ndx]);<sp/></highlight><highlight class="comment">//<sp/>Assumes<sp/>mTracks<sp/>order<sp/>hasn&apos;t<sp/>changed!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3260"><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>store<sp/>&quot;channel&quot;<sp/>and<sp/>&quot;linked&quot;<sp/>tags<sp/>because<sp/>the<sp/>importer<sp/>can<sp/>figure<sp/>that<sp/>out,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.,<sp/>from<sp/>stereo<sp/>Ogg<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>xmlFile.WriteAttr(wxT(&quot;channel&quot;),<sp/>t-&gt;GetChannel());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>xmlFile.WriteAttr(wxT(&quot;linked&quot;),<sp/>t-&gt;GetLinked());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"></highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;offset&quot;</highlight><highlight class="normal">),<sp/>t-&gt;<ref refid="class_track_1a7dd93b99ae92788d10c3010127002e6e" kindref="member">GetOffset</ref>(),<sp/>8);</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;mute&quot;</highlight><highlight class="normal">),<sp/>t-&gt;<ref refid="class_track_1aebabe796d0b3222ef7d23ae13a62769b" kindref="member">GetMute</ref>());</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;solo&quot;</highlight><highlight class="normal">),<sp/>t-&gt;<ref refid="class_track_1acd2518a3c8c5b82f2a5bd45ce074d781" kindref="member">GetSolo</ref>());</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">),<sp/>t-&gt;<ref refid="class_track_1ac54e9cb9c256f7dd3605f9a63e041479" kindref="member">GetActualHeight</ref>());</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;minimized&quot;</highlight><highlight class="normal">),<sp/>t-&gt;<ref refid="class_track_1ac31a25492781bb0cc61e5f544f59b3d5" kindref="member">GetMinimized</ref>());</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)t;</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>store<sp/>&quot;rate&quot;<sp/>tag<sp/>because<sp/>the<sp/>importer<sp/>can<sp/>figure<sp/>that<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>xmlFile.WriteAttr(wxT(&quot;rate&quot;),<sp/>pWaveTrack-&gt;GetRate());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;gain&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)pWaveTrack-&gt;<ref refid="class_wave_track_1a2f8be921b1e2c2183e3a3eb367eb3416" kindref="member">GetGain</ref>());</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;pan&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)pWaveTrack-&gt;<ref refid="class_wave_track_1a39fb6133b9ead187e3eb8127fd8966c0" kindref="member">GetPan</ref>());</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a5c4e63c2c9762b6a04ad4e48bb117678" kindref="member">EndTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;import&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"></highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ndx++;</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)t;</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack-&gt;<ref refid="class_wave_track_1a1e9090e6e1bfee1d312528e3d3345025" kindref="member">SetAutoSaveIdent</ref>(mAutoSaving<sp/>?<sp/>++ndx<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a1352ca92740f520fc35ad17c79072110" kindref="member">WriteXML</ref>(xmlFile);</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a1352ca92740f520fc35ad17c79072110" kindref="member">WriteXML</ref>(xmlFile);</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/>mStrOtherNamesArray.<ref refid="class_track_1a725fa0a27976e10fd01859baa2f29ff7" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"></highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mAutoSaving)</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>write<sp/>closing<sp/>bracket<sp/>when<sp/>not<sp/>auto-saving,<sp/>since<sp/>we<sp/>may<sp/>add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recording<sp/>log<sp/>data<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a5c4e63c2c9762b6a04ad4e48bb117678" kindref="member">EndTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;project&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><ref refid="_diags_8h_1a9da7442e26a2a8bd8553d0772ffa1557" kindref="member">TIMER_STOP</ref>(<sp/>xml_writer_timer<sp/>);</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"></highlight></codeline>
<codeline lineno="3306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lock<sp/>all<sp/>blocks<sp/>in<sp/>all<sp/>tracks<sp/>of<sp/>the<sp/>last<sp/>saved<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3309" refid="class_audacity_project_1a85fa1d848f7ee84567ecce5825ca5ce9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a85fa1d848f7ee84567ecce5825ca5ce9" kindref="member">AudacityProject::LockAllBlocks</ref>()</highlight></codeline>
<codeline lineno="3310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mLastSavedTracks);</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)-&gt;<ref refid="namespacewaflib_1_1_utils_1a5982edd74992ec9be99487a0019d8bca" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unlock<sp/>all<sp/>blocks<sp/>in<sp/>all<sp/>tracks<sp/>of<sp/>the<sp/>last<sp/>saved<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3321" refid="class_audacity_project_1a34bd33431bdc90bc3ee13fa7d7fa900f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a34bd33431bdc90bc3ee13fa7d7fa900f" kindref="member">AudacityProject::UnlockAllBlocks</ref>()</highlight></codeline>
<codeline lineno="3322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mLastSavedTracks);</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)-&gt;Unlock();</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"></highlight></codeline>
<codeline lineno="3332"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I<sp/>added<sp/>this<sp/>to<sp/>&quot;fix&quot;<sp/>bug<sp/>#334.<sp/><sp/>At<sp/>that<sp/>time,<sp/>we<sp/>were<sp/>on<sp/>wxWidgets<sp/>2.8.12<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"></highlight><highlight class="comment">//<sp/>there<sp/>was<sp/>a<sp/>window<sp/>between<sp/>the<sp/>closing<sp/>of<sp/>the<sp/>&quot;Save&quot;<sp/>progress<sp/>dialog<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3335"><highlight class="normal"></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>the<sp/>actual<sp/>save<sp/>where<sp/>the<sp/>user<sp/>was<sp/>able<sp/>to<sp/>close<sp/>the<sp/>project<sp/>window<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3336"><highlight class="normal"></highlight><highlight class="comment">//<sp/>recursively<sp/>enter<sp/>the<sp/>Save<sp/>code<sp/>(where<sp/>they<sp/>could<sp/>inadvertently<sp/>cause<sp/>the<sp/>issue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3337"><highlight class="normal"></highlight><highlight class="comment">//<sp/>described<sp/>in<sp/>#334).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3339"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>converted<sp/>to<sp/>wx3,<sp/>this<sp/>&quot;disabler&quot;<sp/>caused<sp/>focus<sp/>problems<sp/>when<sp/>returning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>project<sp/>after<sp/>the<sp/>save<sp/>(bug<sp/>#1172)<sp/>because<sp/>the<sp/>focus<sp/>and<sp/>activate<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3341"><highlight class="normal"></highlight><highlight class="comment">//<sp/>weren&apos;t<sp/>being<sp/>dispatched<sp/>and<sp/>the<sp/>focus<sp/>would<sp/>get<sp/>lost.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>After<sp/>some<sp/>testing,<sp/>it<sp/>looks<sp/>like<sp/>the<sp/>window<sp/>described<sp/>above<sp/>no<sp/>longer<sp/>exists,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>I&apos;ve<sp/>disabled<sp/>the<sp/>disabler.<sp/><sp/>However,<sp/>I&apos;m<sp/>leaving<sp/>it<sp/>here<sp/>in<sp/>case<sp/>we<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3345"><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>the<sp/>problem<sp/>in<sp/>the<sp/>future.<sp/><sp/>(even<sp/>though<sp/>it<sp/>can&apos;t<sp/>be<sp/>used<sp/>as-is)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3346"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ProjectDisabler</highlight></codeline>
<codeline lineno="3347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/>ProjectDisabler(wxWindow<sp/>*w)</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/>:<sp/><sp/>mWindow(w)</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mWindow-&gt;GetEventHandler()-&gt;SetEvtHandlerEnabled(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/>~ProjectDisabler()</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mWindow-&gt;GetEventHandler()-&gt;SetEvtHandlerEnabled(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/>wxWindow<sp/>*mWindow;</highlight></codeline>
<codeline lineno="3360"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3362"><highlight class="normal"></highlight></codeline>
<codeline lineno="3363" refid="class_audacity_project_1a87687eb04867072cd773515f9f05cf43" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a87687eb04867072cd773515f9f05cf43" kindref="member">AudacityProject::Save</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overwrite<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>true<sp/>*/</highlight><highlight class="normal"><sp/>,</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fromSaveAs<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>false<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bWantSaveCompressed<sp/></highlight><highlight class="comment">/*=<sp/>false*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>explanation<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ProjectDisabler<sp/>disabler(this);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3369"><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bWantSaveCompressed)</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(fromSaveAs);</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mTracks);</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bHasTracks<sp/>=<sp/>(iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>()<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bHasTracks)</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetUndoManager()-&gt;UnsavedChanges()<sp/>&amp;&amp;<sp/>mEmptyCanBeDirty)<sp/>{</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Your<sp/>project<sp/>is<sp/>now<sp/>empty.\nIf<sp/>saved,<sp/>the<sp/>project<sp/>will<sp/>have<sp/>no<sp/>tracks.\n\nTo<sp/>save<sp/>any<sp/>previously<sp/>open<sp/>tracks:\nClick<sp/>&apos;No&apos;,<sp/>Edit<sp/>&gt;<sp/>Undo<sp/>until<sp/>all<sp/>tracks\nare<sp/>open,<sp/>then<sp/>File<sp/>&gt;<sp/>Save<sp/>Project.\n\nSave<sp/>anyway?&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Warning<sp/>-<sp/>Empty<sp/>Project&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxYES_NO<sp/>|<sp/>wxICON_QUESTION,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>wxNO)</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fromSaveAs<sp/>&amp;&amp;<sp/>mDirManager-&gt;GetProjectName()<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SaveAs();</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"></highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>user<sp/>has<sp/>recently<sp/>imported<sp/>dependencies,<sp/>show</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>dialog<sp/>where<sp/>the<sp/>user<sp/>can<sp/>see<sp/>audio<sp/>files<sp/>that<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>aliased<sp/>by<sp/>this<sp/>project.<sp/><sp/>The<sp/>user<sp/>may<sp/>make<sp/>the<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>self-contained<sp/>during<sp/>this<sp/>dialog,<sp/>it<sp/>modifies<sp/>the<sp/>project!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mImportedDependencies)</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSuccess<sp/>=<sp/><ref refid="_dependencies_8cpp_1a8184c2f21089ee9ab29fdf3212a6945b" kindref="member">ShowDependencyDialogIfNeeded</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bSuccess)</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mImportedDependencies<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>show<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"></highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>save<sp/>a<sp/>backup<sp/>of<sp/>the<sp/>original<sp/>project<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"></highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>safetyFileName<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="filefn_8cpp_1a72d2e4ef03d51c0d59c2cb788462d600" kindref="member">wxFileExists</ref>(mFileName))<sp/>{</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"></highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WXGTK__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>safetyFileName<sp/>=<sp/>mFileName<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;~&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>safetyFileName<sp/>=<sp/>mFileName<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.bak&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3415"><highlight class="normal"></highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="filefn_8cpp_1a72d2e4ef03d51c0d59c2cb788462d600" kindref="member">wxFileExists</ref>(safetyFileName))</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="filefn_8cpp_1a147f3601590c8c29a97d1101e03b2b90" kindref="member">wxRemoveFile</ref>(safetyFileName);</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"></highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRename(mFileName,<sp/>safetyFileName);</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"></highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fromSaveAs<sp/>||<sp/>mDirManager-&gt;GetProjectName()<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3424"><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>block<sp/>of<sp/>code<sp/>is<sp/>duplicated<sp/>in<sp/>WriteXML,<sp/>for<sp/>now...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>project<sp/>=<sp/>mFileName;</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(project.Len()<sp/>&gt;<sp/>4<sp/>&amp;&amp;<sp/>project.Mid(project.Len()<sp/>-<sp/>4)<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.aup&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>project<sp/>=<sp/>project.Mid(0,<sp/>project.Len()<sp/>-<sp/>4);</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>projName<sp/>=<sp/><ref refid="filefn_8cpp_1a76a10f9ffbac34e33fa9ca0b2ccc5218" kindref="member">wxFileNameFromPath</ref>(project)<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;_data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>projPath<sp/>=<sp/><ref refid="filefn_8cpp_1ac51030bd42f56198d4cc482ace51dbb6" kindref="member">wxPathOnly</ref>(project);</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"></highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mWantSaveCompressed<sp/>=<sp/>bWantSaveCompressed;</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"></highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wxDir::Exists(<sp/>projPath<sp/>)<sp/>){</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(safetyFileName<sp/>!=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRename(safetyFileName,<sp/>mFileName);</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(wxString::Format(</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>save<sp/>project.<sp/>Path<sp/>not<sp/>found.<sp/><sp/>Try<sp/>creating<sp/>\ndirectory<sp/>\&quot;%s\&quot;<sp/>before<sp/>saving<sp/>project<sp/>with<sp/>this<sp/>name.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projPath.c_str()),</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Saving<sp/>Project&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxICON_ERROR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"></highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bWantSaveCompressed)</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//v<sp/>Move<sp/>this<sp/>condition<sp/>into<sp/>SaveCompressedWaveTracks()<sp/>if<sp/>want<sp/>to<sp/>support<sp/>other<sp/>formats.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3449"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>USE_LIBVORBIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>this-&gt;SaveCompressedWaveTracks(project);</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>about<sp/>to<sp/>move<sp/>files<sp/>from<sp/>the<sp/>current<sp/>directory<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>NEW<sp/>directory.<sp/><sp/>We<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>files<sp/>that<sp/>belonged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>last<sp/>saved<sp/>project<sp/>don&apos;t<sp/>get<sp/>erased,<sp/>so<sp/>we<sp/>&quot;lock&quot;<sp/>them,<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SetProject()<sp/>copies<sp/>instead<sp/>of<sp/>moves<sp/>the<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Otherwise<sp/>the<sp/>NEW<sp/>project<sp/>would<sp/>be<sp/>fine,<sp/>but<sp/>the<sp/>old<sp/>one<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>empty<sp/>of<sp/>all<sp/>of<sp/>its<sp/>files.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3461"><highlight class="normal"></highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLastSavedTracks<sp/>&amp;&amp;<sp/>!overwrite)</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LockAllBlocks();</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"></highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>renames<sp/>the<sp/>project<sp/>directory,<sp/>and<sp/>moves<sp/>or<sp/>copies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>of<sp/>our<sp/>block<sp/>files<sp/>over.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>mDirManager-&gt;SetProject(projPath,<sp/>projName,<sp/>!overwrite);</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"></highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLastSavedTracks<sp/>&amp;&amp;<sp/>!overwrite)</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnlockAllBlocks();</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"></highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(safetyFileName<sp/>!=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRename(safetyFileName,<sp/>mFileName);</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>save<sp/>project.<sp/>Perhaps<sp/>%s<sp/>\nis<sp/>not<sp/>writable<sp/>or<sp/>the<sp/>disk<sp/>is<sp/>full.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>project.c_str()),</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Saving<sp/>Project&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxICON_ERROR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"></highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>AUP<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_x_m_l_file_writer" kindref="compound">XMLFileWriter</ref><sp/>saveFile;</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>saveFile.<ref refid="class_x_m_l_file_writer_1ac29a957aba98be58e7401ffee2ec2082" kindref="member">Open</ref>(mFileName,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"></highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WriteXMLHeader(saveFile);</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WriteXML(saveFile);</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"></highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>saveFile.<ref refid="class_x_m_l_file_writer_1a3a0d868ea5a8fba069b32b67646af5a9" kindref="member">Close</ref>();</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_x_m_l_file_writer_exception" kindref="compound">XMLFileWriterException</ref><sp/>&amp;exception)</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(wxString::Format(</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>write<sp/>to<sp/>file<sp/>\&quot;%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFileName.c_str(),<sp/>exception.<ref refid="class_x_m_l_file_writer_exception_1a0866105969b12f6d9ab6e21d8210c1a8" kindref="member">GetMessage</ref>().c_str()),</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Saving<sp/>Project&quot;</highlight><highlight class="normal">),<sp/>wxICON_ERROR);</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"></highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>XMLWriter<sp/>throws<sp/>an<sp/>exception,<sp/>it<sp/>tries<sp/>to<sp/>close<sp/>it<sp/>before,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>can<sp/>at<sp/>least<sp/>try<sp/>to<sp/>DELETE<sp/>the<sp/>incomplete<sp/>file<sp/>and<sp/>move<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>backup<sp/>file<sp/>over.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(safetyFileName<sp/>!=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRemove(mFileName);</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRename(safetyFileName,<sp/>mFileName);</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"></highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bWantSaveCompressed)</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mWantSaveCompressed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>want<sp/>this<sp/>mode<sp/>for<sp/>AudacityProject::WriteXML()<sp/>any<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>that<sp/>we<sp/>have<sp/>saved<sp/>the<sp/>file,<sp/>we<sp/>can<sp/>DELETE<sp/>the<sp/>auto-saved<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DeleteCurrentAutoSaveFile();</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsRecovered)</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>was<sp/>a<sp/>recovered<sp/>file,<sp/>that<sp/>is,<sp/>we<sp/>have<sp/>just<sp/>overwritten<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>old,<sp/>crashed<sp/>.aup<sp/>file.<sp/>There<sp/>may<sp/>still<sp/>be<sp/>orphaned<sp/>blockfiles<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>directory<sp/>left<sp/>over<sp/>from<sp/>the<sp/>crash,<sp/>so<sp/>we<sp/>DELETE<sp/>them<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDirManager-&gt;RemoveOrphanBlockfiles();</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>we<sp/>saved<sp/>this,<sp/>this<sp/>was<sp/>a<sp/>recovered<sp/>project,<sp/>but<sp/>now<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>regular<sp/>project,<sp/>so<sp/>remember<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIsRecovered<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRecoveryAutoSaveDataDir<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetProjectTitle();</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fromSaveAs)</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>save<sp/>as,<sp/>always<sp/>remove<sp/>orphaned<sp/>blockfiles<sp/>that<sp/>may<sp/>be<sp/>left<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>the<sp/>user<sp/>is<sp/>trying<sp/>to<sp/>overwrite<sp/>another<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDirManager-&gt;RemoveOrphanBlockfiles();</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLastSavedTracks)<sp/>{</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLastSavedTracks-&gt;Clear(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mLastSavedTracks;</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"></highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLastSavedTracks<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref>();</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"></highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mTracks);</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*dupT;</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dupT<sp/>=<sp/>t-&gt;<ref refid="class_track_1a7de9a5b87c0309271bc2620c9ed54545" kindref="member">Duplicate</ref>();</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLastSavedTracks-&gt;Add(dupT);</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//only<sp/>after<sp/>the<sp/>xml<sp/>has<sp/>been<sp/>saved<sp/>we<sp/>can<sp/>mark<sp/>it<sp/>saved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//thus<sp/>is<sp/>because<sp/>the<sp/>OD<sp/>blockfiles<sp/>change<sp/>on<sp/><sp/>background<sp/>thread<sp/>while<sp/>this<sp/>is<sp/>going<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(dupT-&gt;GetKind()<sp/>==<sp/>Track::Wave)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((WaveTrack*)dupT)-&gt;MarkSaved();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3559"><highlight class="normal"></highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetUndoManager()-&gt;StateSaved();</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>get<sp/>here,<sp/>saving<sp/>the<sp/>project<sp/>was<sp/>successful,<sp/>so<sp/>we<sp/>can<sp/>DELETE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>.bak<sp/>file<sp/>(because<sp/>it<sp/>now<sp/>does<sp/>not<sp/>fit<sp/>our<sp/>block<sp/>files<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>anyway).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(safetyFileName<sp/>!=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="filefn_8cpp_1a147f3601590c8c29a97d1101e03b2b90" kindref="member">wxRemoveFile</ref>(safetyFileName);</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/>mStatusBar-&gt;SetStatusText(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Saved<sp/>%s&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFileName.c_str()),<sp/><ref refid="_project_8h_1a788f1f168e5dd2f4411a457639a24674a55c8698cfddd36997feabda8755fc01b" kindref="member">mainStatusBarField</ref>);</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"></highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_LIBVORBIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AudacityProject::SaveCompressedWaveTracks(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>strProjectPathName)<sp/></highlight><highlight class="comment">//<sp/>full<sp/>path<sp/>for<sp/>aup<sp/>except<sp/>extension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>of<sp/>this<sp/>is<sp/>similar<sp/>to<sp/>code<sp/>in<sp/>ExportMultiple::ExportMultipleByTrack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>that<sp/>code<sp/>is<sp/>really<sp/>tied<sp/>into<sp/>the<sp/>dialogs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"></highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>tracks<sp/>because<sp/>we&apos;re<sp/>going<sp/>to<sp/>do<sp/>some<sp/>state<sp/>changes<sp/>before<sp/>exporting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pSavedTrack;</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pTrack;</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pWaveTrack;</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_of_kind_iterator" kindref="compound">TrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/>mTracks);</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numWaveTracks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"></highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>pSavedTrackList(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pTrack<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();<sp/>pTrack<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>pTrack<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>())</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numWaveTracks++;</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)pTrack;</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSavedTrack<sp/>=<sp/>mTrackFactory-&gt;DuplicateWaveTrack(*pWaveTrack);</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSavedTrackList.<ref refid="class_track_list_1a58714973bb20a5a2cff2c839db9d3117" kindref="member">Add</ref>(pSavedTrack);</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"></highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numWaveTracks<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>save<sp/>compressed<sp/>=&gt;<sp/>success.<sp/>Delete<sp/>the<sp/>copies<sp/>and<sp/>go.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"></highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Okay,<sp/>now<sp/>some<sp/>bold<sp/>state-faking<sp/>to<sp/>default<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pTrack<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();<sp/>pTrack<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>pTrack<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>())</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)pTrack;</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack-&gt;<ref refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" kindref="member">SetSelected</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack-&gt;<ref refid="class_track_1a7f7b67377a0c8b9ebe20394380872032" kindref="member">SetMute</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack-&gt;<ref refid="class_track_1a3e05f682539978be493f9be110082aa3" kindref="member">SetSolo</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"></highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack-&gt;<ref refid="class_wave_track_1aa64cfe45ca3be7f2067f263784d2a864" kindref="member">SetGain</ref>(1.0);</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack-&gt;<ref refid="class_wave_track_1a8711fa41c9fcec3519d80286a96f049d" kindref="member">SetPan</ref>(0.0);</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>strDataDirPathName<sp/>=<sp/>strProjectPathName<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;_data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxFileName::DirExists(strDataDirPathName)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!wxFileName::Mkdir(strDataDirPathName,<sp/>0777,<sp/>wxPATH_MKDIR_FULL))</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strDataDirPathName<sp/>+=<sp/>wxFileName::GetPathSeparator();</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"></highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Export<sp/>all<sp/>WaveTracks<sp/>to<sp/>OGG.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSuccess<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_exporter" kindref="compound">Exporter</ref><sp/>theExporter;</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>pRightTrack;</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFileName<sp/>uniqueTrackFileName;</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pTrack<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();<sp/>((pTrack<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>&amp;&amp;<sp/>bSuccess);<sp/>pTrack<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>())</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTrack-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTrack-&gt;<ref refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" kindref="member">SetSelected</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTrack-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRightTrack<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRightTrack-&gt;<ref refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" kindref="member">SetSelected</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRightTrack<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"></highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniqueTrackFileName<sp/>=<sp/>wxFileName(strDataDirPathName,<sp/>pTrack-&gt;<ref refid="class_track_1a670b88686f99e151d6a305a709f130b1" kindref="member">GetName</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ogg&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_file_names_1a6194a25e0a03d8f91f564d2671aaa674" kindref="member">FileNames::MakeNameUnique</ref>(mStrOtherNamesArray,<sp/>uniqueTrackFileName);</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bSuccess<sp/>=</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theExporter.<ref refid="class_exporter_1af3ab0fcc1790ee36eaf656049ed20c90" kindref="member">Process</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>pRightTrack<sp/>?<sp/>2<sp/>:<sp/>1,</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;OGG&quot;</highlight><highlight class="normal">),<sp/>uniqueTrackFileName.GetFullPath(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTrack-&gt;<ref refid="class_track_1a764ce3c8ef7dd892b8cf64022a946cd5" kindref="member">GetStartTime</ref>(),<sp/>pTrack-&gt;<ref refid="class_track_1a94b9fd13ee5b04493ed1024715e9c62b" kindref="member">GetEndTime</ref>());</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"></highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTrack-&gt;<ref refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" kindref="member">SetSelected</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pRightTrack)</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRightTrack-&gt;<ref refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" kindref="member">SetSelected</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"></highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>the<sp/>saved<sp/>track<sp/>states<sp/>and<sp/>clean<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>savedTrackIter(&amp;pSavedTrackList);</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pTrack<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>(),<sp/>pSavedTrack<sp/>=<sp/>savedTrackIter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((pTrack<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>&amp;&amp;<sp/>(pSavedTrack<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>));</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTrack<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>(),<sp/>pSavedTrack<sp/>=<sp/>savedTrackIter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>())</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)pTrack;</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack-&gt;<ref refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" kindref="member">SetSelected</ref>(pSavedTrack-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>());</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack-&gt;<ref refid="class_track_1a7f7b67377a0c8b9ebe20394380872032" kindref="member">SetMute</ref>(pSavedTrack-&gt;<ref refid="class_track_1aebabe796d0b3222ef7d23ae13a62769b" kindref="member">GetMute</ref>());</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack-&gt;<ref refid="class_track_1a3e05f682539978be493f9be110082aa3" kindref="member">SetSolo</ref>(pSavedTrack-&gt;<ref refid="class_track_1acd2518a3c8c5b82f2a5bd45ce074d781" kindref="member">GetSolo</ref>());</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack-&gt;<ref refid="class_wave_track_1aa64cfe45ca3be7f2067f263784d2a864" kindref="member">SetGain</ref>(((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)pSavedTrack)-&gt;GetGain());</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWaveTrack-&gt;<ref refid="class_wave_track_1a8711fa41c9fcec3519d80286a96f049d" kindref="member">SetPan</ref>(((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)pSavedTrack)-&gt;GetPan());</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"></highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bSuccess;</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3671"><highlight class="normal"></highlight></codeline>
<codeline lineno="3672"><highlight class="normal"></highlight></codeline>
<codeline lineno="3673" refid="class_audacity_project_1a6ec70e5851e4cb8473bb37f10db3247d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a6ec70e5851e4cb8473bb37f10db3247d" kindref="member">AudacityProject::AddImportedTracks</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;fileName,</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**newTracks,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numTracks)</highlight></codeline>
<codeline lineno="3675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/>SelectNone();</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"></highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initiallyEmpty<sp/>=<sp/>mTracks-&gt;IsEmpty();</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newRate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>trackNameBase<sp/>=<sp/>fileName.AfterLast(wxFILE_SEP_PATH).BeforeLast(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>numTracks;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newRate<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>newTracks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;GetKind()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRate<sp/>=<sp/>((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)newTracks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])-&gt;GetRate();</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTracks-&gt;Add(newTracks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newTracks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" kindref="member">SetSelected</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>need<sp/>to<sp/>check<sp/>link<sp/>status<sp/>based<sp/>on<sp/>the<sp/>first<sp/>channel<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0==i)</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isLinked<sp/>=<sp/>newTracks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>();</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numTracks<sp/>&gt;<sp/>2<sp/>||<sp/>(numTracks<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>!isLinked)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newTracks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_track_1af91d1579e3d15a0d5fffa3348adae753" kindref="member">SetName</ref>(trackNameBase<sp/>+<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;<sp/>%d&quot;</highlight><highlight class="normal"><sp/>),<sp/>i<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newTracks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_track_1af91d1579e3d15a0d5fffa3348adae753" kindref="member">SetName</ref>(trackNameBase);</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"></highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>NEW<sp/>track<sp/>contains<sp/>aliased<sp/>blockfiles<sp/>and<sp/>if<sp/>yes,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remember<sp/>this<sp/>to<sp/>show<sp/>a<sp/>warning<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newTracks[i]-&gt;GetKind()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">WaveTrack::Wave</ref>)</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/>((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)newTracks[i])-&gt;GetClipByIndex(0);</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_array" kindref="compound">BlockArray</ref><sp/>&amp;blocks<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1abd2e26af620a0406b2c45aca8736bd9a" kindref="member">GetSequence</ref>()-&gt;<ref refid="class_sequence_1a2f81a3ac85491ad3b09cb7a4736dd1c1" kindref="member">GetBlockArray</ref>();</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip<sp/>&amp;&amp;<sp/>blocks.size())</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_seq_block" kindref="compound">SeqBlock</ref>&amp;<sp/><ref refid="structblock" kindref="compound">block</ref><sp/>=<sp/>blocks[0];</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block.<ref refid="class_seq_block_1afc9b7e81170d82463b8849815b2cf2a2" kindref="member">f</ref>-&gt;<ref refid="class_block_file_1a9969d478c861eae0bdb98b71176906cf" kindref="member">IsAlias</ref>())</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mImportedDependencies<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"></highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]newTracks;</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Automatically<sp/>assign<sp/>rate<sp/>of<sp/>imported<sp/>file<sp/>to<sp/>whole<sp/>project,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>is<sp/>the<sp/>first<sp/>file<sp/>that<sp/>is<sp/>imported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initiallyEmpty<sp/>&amp;&amp;<sp/>newRate<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRate<sp/>=<sp/>newRate;</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetSelectionBar()-&gt;SetRate(mRate);</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"></highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/>PushState(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Imported<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">),<sp/>fileName.c_str()),</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Import&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXGTK__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>bug<sp/>#1224</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>track<sp/>panel<sp/>hasn&apos;t<sp/>we<sp/>been<sp/>fully<sp/>created,<sp/>so<sp/>the<sp/>OnZoomFit()<sp/>will<sp/>not<sp/>give</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expected<sp/>results<sp/>due<sp/>to<sp/>a<sp/>window<sp/>width<sp/>of<sp/>zero.<sp/><sp/>Should<sp/>be<sp/>safe<sp/>to<sp/>yield<sp/>here<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>the<sp/>creattion<sp/>to<sp/>complete.<sp/><sp/>If<sp/>this<sp/>becomes<sp/>a<sp/>problem,<sp/>it<sp/>&quot;might&quot;<sp/>be<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>queue<sp/>a<sp/>dummy<sp/>event<sp/>to<sp/>trigger<sp/>the<sp/>OnZoomFit().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/>wxEventLoopBase::GetActive()-&gt;YieldFor(wxEVT_CATEGORY_UI<sp/>|<sp/>wxEVT_CATEGORY_USER_INPUT);</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><ref refid="_menus_8h_1a992b4714067bc0b929ab234d808f1e0b" kindref="member">OnZoomFit</ref>();</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;SetFocus();</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;EnsureVisible(mTrackPanel-&gt;GetFirstSelectedTrack());</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initiallyEmpty<sp/>&amp;&amp;<sp/>mDirManager-&gt;GetProjectName()<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>=<sp/>fileName.AfterLast(wxFILE_SEP_PATH).BeforeLast(wxT(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFileName<sp/>=<ref refid="filefn_8cpp_1ac51030bd42f56198d4cc482ace51dbb6" kindref="member">::wxPathOnly</ref>(fileName)<sp/>+<sp/>wxFILE_SEP_PATH<sp/>+<sp/>name<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.aup&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetProjectTitle();</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moved<sp/>this<sp/>call<sp/>to<sp/>higher<sp/>levels<sp/>to<sp/>prevent<sp/>flicker<sp/>redrawing<sp/>everything<sp/>on<sp/>each<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>HandleResize();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"></highlight></codeline>
<codeline lineno="3752"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>pNewTrackList<sp/>is<sp/>passed<sp/>in<sp/>non-NULL,<sp/>it<sp/>gets<sp/>filled<sp/>with<sp/>the<sp/>pointers<sp/>to<sp/>NEW<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3753" refid="class_audacity_project_1a73b94671ab2ff3e89391d7a0bcc91d3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a73b94671ab2ff3e89391d7a0bcc91d3a" kindref="member">AudacityProject::Import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;fileName,<sp/><ref refid="class_wave_track_array" kindref="compound">WaveTrackArray</ref>*<sp/>pTrackArray<sp/></highlight><highlight class="comment">/*=<sp/>NULL*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**newTracks;</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numTracks;</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>errorMessage<sp/>=<sp/>wxEmptyString;</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backup<sp/>Tags,<sp/>before<sp/>the<sp/>import.<sp/><sp/>Be<sp/>prepared<sp/>to<sp/>roll<sp/>back<sp/>changes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TempTags<sp/>{</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TempTags(std::shared_ptr&lt;Tags&gt;<sp/>&amp;<sp/>pTags_)</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>pTags(pTags_)</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldTags<sp/>=<sp/>pTags;</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldTags)</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTags<sp/>=<sp/>oldTags-&gt;Duplicate();</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"></highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>~TempTags()</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldTags)<sp/>{</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>roll<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTags<sp/>=<sp/>oldTags;</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"></highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Commit()</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldTags.reset();</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Tags&gt;<sp/>&amp;<sp/>pTags;</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Tags&gt;<sp/>oldTags;</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/>TempTags<sp/>tempTags(mTags);</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"></highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/>numTracks<sp/>=<sp/><ref refid="class_importer_1a22d282adad95bbdce627953259d9d48c" kindref="member">Importer::Get</ref>().<ref refid="class_importer_1ab5eae197f7b7617c5ae9aac63b987466" kindref="member">Import</ref>(fileName,</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTrackFactory,</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;newTracks,</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTags.get(),</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage);</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"></highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!errorMessage.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Version<sp/>that<sp/>goes<sp/>to<sp/>internet...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>ShowErrorDialog(this,<sp/>_(&quot;Error<sp/>Importing&quot;),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage,<sp/>wxT(&quot;http://audacity.sourceforge.net/help/faq?s=files&amp;i=wma-proprietary&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3797"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Version<sp/>that<sp/>looks<sp/>locally<sp/>for<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_error_dialog_8cpp_1ade590f978397d3b8314a3ac667d82078" kindref="member">ShowErrorDialog</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Importing&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMessage,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;innerlink:wma-proprietary&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numTracks<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"></highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1aa9461c56195b9a1b8eb931293d0b491f" kindref="member">AddFileToHistory</ref>(fileName);</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"></highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>more<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/>tempTags.Commit();</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"></highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>LOF<sp/>(&quot;list<sp/>of<sp/>files&quot;)<sp/>files,<sp/>do<sp/>not<sp/>import<sp/>the<sp/>file<sp/>as<sp/>if<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>were<sp/>an<sp/>audio<sp/>file<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileName.AfterLast(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">).IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;lof&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PRL:<sp/>don&apos;t<sp/>redundantly<sp/>do<sp/>the<sp/>steps<sp/>below,<sp/>because<sp/>we<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>did<sp/>it<sp/>in<sp/>case<sp/>of<sp/>LOF,<sp/>because<sp/>of<sp/>some<sp/>weird<sp/>recursion<sp/>back<sp/>to<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>function.<sp/><sp/>I<sp/>think<sp/>this<sp/>should<sp/>be<sp/>untangled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"></highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>Undo<sp/>history<sp/>push<sp/>is<sp/>not<sp/>bypassed,<sp/>despite<sp/>appearances.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"></highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Have<sp/>to<sp/>set<sp/>up<sp/>newTrackList<sp/>before<sp/>calling<sp/>AddImportedTracks,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>AddImportedTracks<sp/>deletes<sp/>newTracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTrackArray)<sp/>{</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>numTracks;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newTracks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;GetKind()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTrackArray-&gt;push_back(static_cast&lt;WaveTrack<sp/>*&gt;(newTracks[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]));</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"></highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PRL:<sp/>Undo<sp/>history<sp/>is<sp/>incremented<sp/>inside<sp/>this:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/>AddImportedTracks(fileName,<sp/>newTracks,<sp/>numTracks);</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"></highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/AudioFiles/NormalizeOnLoad&quot;</highlight><highlight class="normal">),<sp/>0L);</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>All<sp/>we<sp/>want<sp/>is<sp/>a<sp/>SelectAll()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SelectNone();</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SelectAllIfNone();</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_menus_8h_1a9eb015540bcfa6fc4bbaef7606d3f40f" kindref="member">OnEffect</ref>(<ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().GetEffectByIdentifier(wxT(</highlight><highlight class="stringliteral">&quot;Normalize&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_on_effect_flags_1a7552392a395f22f702c1e2c28d2b6020" kindref="member">OnEffectFlags::kConfigured</ref>);</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"></highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/>GetDirManager()-&gt;FillBlockfilesCache();</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"></highlight></codeline>
<codeline lineno="3846" refid="class_audacity_project_1a73263b596e3b80edbc34cd12fe01f19d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ae0cbb6f1742b0c2a9b976d99280e3f3e" kindref="member">AudacityProject::SaveAs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>newFileName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bWantSaveCompressed<sp/></highlight><highlight class="comment">/*=<sp/>false*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addToHistory<sp/></highlight><highlight class="comment">/*=<sp/>true*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>oldFileName<sp/>=<sp/>mFileName;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"></highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>NEW<sp/>project<sp/>file<sp/>already<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>should<sp/>only<sp/>overwrite<sp/>it<sp/>if<sp/>this<sp/>project<sp/>already<sp/>has<sp/>the<sp/>same<sp/>name,<sp/>where<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//simply<sp/>chose<sp/>to<sp/>use<sp/>the<sp/>save<sp/>as<sp/>command<sp/>although<sp/>the<sp/>save<sp/>command<sp/>would<sp/>have<sp/>the<sp/>effect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mFileName!=newFileName<sp/>&amp;&amp;<sp/><ref refid="filefn_8cpp_1a72d2e4ef03d51c0d59c2cb788462d600" kindref="member">wxFileExists</ref>(newFileName))<sp/>{</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageDialog<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>(</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>project<sp/>was<sp/>not<sp/>saved<sp/>because<sp/>the<sp/>file<sp/>name<sp/>provided<sp/>would<sp/>overwrite<sp/>another<sp/>project.\nPlease<sp/>try<sp/>again<sp/>and<sp/>select<sp/>an<sp/>original<sp/>name.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Saving<sp/>Project&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK|wxICON_ERROR);</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.ShowModal();</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"></highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/>mFileName<sp/>=<sp/>newFileName;</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/>SetProjectTitle();</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"></highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/>Save(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>bWantSaveCompressed);</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success<sp/>&amp;&amp;<sp/>addToHistory)<sp/>{</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1aa9461c56195b9a1b8eb931293d0b491f" kindref="member">AddFileToHistory</ref>(mFileName);</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success<sp/>||<sp/>bWantSaveCompressed)<sp/></highlight><highlight class="comment">//<sp/>bWantSaveCompressed<sp/>doesn&apos;t<sp/>actually<sp/>change<sp/>current<sp/>project.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>file<sp/>name<sp/>on<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFileName<sp/>=<sp/>oldFileName;</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetProjectTitle();</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"></highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(success);</highlight></codeline>
<codeline lineno="3879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"></highlight></codeline>
<codeline lineno="3881" refid="class_audacity_project_1ae0cbb6f1742b0c2a9b976d99280e3f3e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ae0cbb6f1742b0c2a9b976d99280e3f3e" kindref="member">AudacityProject::SaveAs</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bWantSaveCompressed<sp/></highlight><highlight class="comment">/*=<sp/>false*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3882"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/><ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>(mFileName);</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>sProjName<sp/>=<sp/>this-&gt;GetName();</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sProjName.IsEmpty())</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sProjName<sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&lt;untitled&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>sDialogTitle;</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bWantSaveCompressed)</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_warning_8cpp_1aed660d0be942f618f57641272b52820f" kindref="member">ShowWarningDialog</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;FirstProjectSave&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\</highlight></codeline>
<codeline lineno="3894"><highlight class="stringliteral">&apos;Save<sp/>Compressed<sp/>Project&apos;<sp/>is<sp/>for<sp/>an<sp/>Audacity<sp/>project,<sp/>not<sp/>an<sp/>audio<sp/>file.\n\</highlight></codeline>
<codeline lineno="3895"><highlight class="stringliteral">For<sp/>an<sp/>audio<sp/>file<sp/>that<sp/>will<sp/>open<sp/>in<sp/>other<sp/>apps,<sp/>use<sp/>&apos;Export&apos;.\n\n\</highlight></codeline>
<codeline lineno="3896"><highlight class="stringliteral">\</highlight></codeline>
<codeline lineno="3897"><highlight class="stringliteral">Compressed<sp/>project<sp/>files<sp/>are<sp/>a<sp/>good<sp/>way<sp/>to<sp/>transmit<sp/>your<sp/>project<sp/>online,<sp/>\n\</highlight></codeline>
<codeline lineno="3898"><highlight class="stringliteral">but<sp/>they<sp/>have<sp/>some<sp/>loss<sp/>of<sp/>fidelity.\n\n\</highlight></codeline>
<codeline lineno="3899"><highlight class="stringliteral">\</highlight></codeline>
<codeline lineno="3900"><highlight class="stringliteral">To<sp/>open<sp/>a<sp/>compressed<sp/>project<sp/>takes<sp/>longer<sp/>than<sp/>usual,<sp/>as<sp/>it<sp/>imports<sp/>\n\</highlight></codeline>
<codeline lineno="3901"><highlight class="stringliteral">each<sp/>compressed<sp/>track.\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>!=<sp/>wxID_OK)</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sDialogTitle.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Save<sp/>Compressed<sp/>Project<sp/>\&quot;%s\&quot;<sp/>As...&quot;</highlight><highlight class="normal">),<sp/>sProjName.c_str());</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_warning_8cpp_1aed660d0be942f618f57641272b52820f" kindref="member">ShowWarningDialog</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;FirstProjectSave&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\</highlight></codeline>
<codeline lineno="3910"><highlight class="stringliteral">&apos;Save<sp/>Project&apos;<sp/>is<sp/>for<sp/>an<sp/>Audacity<sp/>project,<sp/>not<sp/>an<sp/>audio<sp/>file.\n\</highlight></codeline>
<codeline lineno="3911"><highlight class="stringliteral">For<sp/>an<sp/>audio<sp/>file<sp/>that<sp/>will<sp/>open<sp/>in<sp/>other<sp/>apps,<sp/>use<sp/>&apos;Export&apos;.\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>!=<sp/>wxID_OK)</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sDialogTitle.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Save<sp/>Project<sp/>\&quot;%s\&quot;<sp/>As...&quot;</highlight><highlight class="normal">),<sp/>sProjName.c_str());</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JKC:<sp/>I<sp/>removed<sp/>&apos;wxFD_OVERWRITE_PROMPT&apos;<sp/>because<sp/>we<sp/>are<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>overwrite<sp/>ourselves<sp/>later,<sp/>and<sp/>we<sp/>disallow<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>disallow<sp/>overwrite<sp/>because<sp/>we<sp/>would<sp/>have<sp/>to<sp/>DELETE<sp/>the<sp/>many</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smaller<sp/>files<sp/>too,<sp/>or<sp/>prompt<sp/>to<sp/>move<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>fName<sp/>=<sp/><ref refid="_file_dialog_8cpp_1a931f538f22f138149cc99914aab94033" kindref="member">FileSelector</ref>(sDialogTitle,</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename.GetPath(),</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename.GetFullName(),</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;aup&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Audacity<sp/>projects&quot;</highlight><highlight class="normal">)<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>(*.aup)|*.aup&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFD_SAVE<sp/>|<sp/>wxRESIZE_BORDER,</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"></highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fName<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"></highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/>filename<sp/>=<sp/>fName;</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/>filename.SetExt(wxT(</highlight><highlight class="stringliteral">&quot;aup&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/>fName<sp/>=<sp/>filename.GetFullPath();</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"></highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>NEW<sp/>project<sp/>file<sp/>already<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>should<sp/>only<sp/>overwrite<sp/>it<sp/>if<sp/>this<sp/>project<sp/>already<sp/>has<sp/>the<sp/>same<sp/>name,<sp/>where<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//simply<sp/>chose<sp/>to<sp/>use<sp/>the<sp/>save<sp/>as<sp/>command<sp/>although<sp/>the<sp/>save<sp/>command<sp/>would<sp/>have<sp/>the<sp/>effect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mFileName<sp/>!=<sp/>fName<sp/>&amp;&amp;<sp/>filename.FileExists())<sp/>{</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageDialog<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>(</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>project<sp/>was<sp/>not<sp/>saved<sp/>because<sp/>the<sp/>file<sp/>name<sp/>provided<sp/>would<sp/>overwrite<sp/>another<sp/>project.\nPlease<sp/>try<sp/>again<sp/>and<sp/>select<sp/>an<sp/>original<sp/>name.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Saving<sp/>Project&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK|wxICON_ERROR);</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m.ShowModal();</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"></highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>oldFileName<sp/>=<sp/>mFileName;</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/>mFileName<sp/>=<sp/>fName;</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/>SetProjectTitle();</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"></highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/>Save(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>bWantSaveCompressed);</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"></highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success)<sp/>{</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1aa9461c56195b9a1b8eb931293d0b491f" kindref="member">AddFileToHistory</ref>(mFileName);</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success<sp/>||<sp/>bWantSaveCompressed)<sp/></highlight><highlight class="comment">//<sp/>bWantSaveCompressed<sp/>doesn&apos;t<sp/>actually<sp/>change<sp/>current<sp/>project.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>file<sp/>name<sp/>on<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFileName<sp/>=<sp/>oldFileName;</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetProjectTitle();</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"></highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(success);</highlight></codeline>
<codeline lineno="3966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"></highlight></codeline>
<codeline lineno="3968"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3969"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Undo/History<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3970"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"></highlight></codeline>
<codeline lineno="3972"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AudacityProject::InitialState()</highlight></codeline>
<codeline lineno="3973"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mImportXMLTagHandler<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>processed<sp/>an<sp/>&lt;import&gt;<sp/>tag,<sp/>so<sp/>save<sp/>it<sp/>as<sp/>a<sp/>normal<sp/>project,<sp/>with<sp/>no<sp/>&lt;import&gt;<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;Save();</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shouldn&apos;t<sp/>need<sp/>it<sp/>any<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mImportXMLTagHandler;</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mImportXMLTagHandler<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"></highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/>GetUndoManager()-&gt;ClearStates();</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"></highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/>GetUndoManager()-&gt;PushState(mTracks,<sp/>mViewInfo.selectedRegion,<sp/>mTags,</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Created<sp/>new<sp/>project&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"></highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/>GetUndoManager()-&gt;StateSaved();</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"></highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mHistoryWindow)</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHistoryWindow-&gt;UpdateDisplay();</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"></highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/>ModifyUndoMenuItems();</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"></highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/>UpdateMenus();</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/>this-&gt;UpdateLyrics();</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/>this-&gt;UpdateMixerBoard();</highlight></codeline>
<codeline lineno="3998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"></highlight></codeline>
<codeline lineno="4000" refid="class_audacity_project_1ae9457cac877fe88c8d3857f92692f101" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ae9457cac877fe88c8d3857f92692f101" kindref="member">AudacityProject::PushState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;shortDesc)</highlight></codeline>
<codeline lineno="4001"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/>PushState(desc,<sp/>shortDesc,<sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114a0650fde039d6d9101c53ade11ecafcd3" kindref="member">UndoPush::AUTOSAVE</ref>);</highlight></codeline>
<codeline lineno="4003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"></highlight></codeline>
<codeline lineno="4005" refid="class_audacity_project_1aa362064ef09a96cf9d73b2fff5890cd5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ae9457cac877fe88c8d3857f92692f101" kindref="member">AudacityProject::PushState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>,</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;shortDesc,</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114" kindref="member">UndoPush</ref><sp/>flags<sp/>)</highlight></codeline>
<codeline lineno="4008"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/>GetUndoManager()-&gt;PushState(mTracks,<sp/>mViewInfo.selectedRegion,<sp/>mTags,</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc,<sp/>shortDesc,<sp/>flags);</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"></highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/>mDirty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"></highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mHistoryWindow)</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHistoryWindow-&gt;UpdateDisplay();</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/>ModifyUndoMenuItems();</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"></highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/>UpdateMenus();</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>state<sp/>pushes,<sp/>like<sp/>changing<sp/>a<sp/>track<sp/>gain<sp/>control<sp/>(&amp;<sp/>probably<sp/>others),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>not<sp/>repopulate<sp/>Lyrics<sp/>Window<sp/>and<sp/>MixerBoard.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Others,<sp/>such<sp/>as<sp/>deleting<sp/>a<sp/>label<sp/>or<sp/>adding<sp/>a<sp/>wave<sp/>track,<sp/>obviously<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Could<sp/>categorize<sp/>these<sp/>state<sp/>changes,<sp/>but<sp/>for<sp/>now...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>crucial<sp/>to<sp/>not<sp/>do<sp/>that<sp/>repopulating<sp/>during<sp/>playback.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a07490d6ae881910c5ea13cdf011835f3" kindref="member">IsStreamActive</ref>(GetAudioIOToken()))</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;UpdateLyrics();</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;UpdateMixerBoard();</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetTracksFitVerticallyZoomed())</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="_menus_8h_1a1d12e6153dca14d2c1778e004d43873d" kindref="member">DoZoomFitV</ref>();</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((flags<sp/>&amp;<sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114a0650fde039d6d9101c53ade11ecafcd3" kindref="member">UndoPush::AUTOSAVE</ref>)<sp/>!=<sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114a02f2534ad4997e23ec250e1015eeb929" kindref="member">UndoPush::MINIMAL</ref>)</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AutoSave();</highlight></codeline>
<codeline lineno="4036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"></highlight></codeline>
<codeline lineno="4038" refid="class_audacity_project_1aa04c5ec89d7df126960103e1f6c0faad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1aa04c5ec89d7df126960103e1f6c0faad" kindref="member">AudacityProject::RollbackState</ref>()</highlight></codeline>
<codeline lineno="4039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/>SetStateTo(GetUndoManager()-&gt;GetCurrentState());</highlight></codeline>
<codeline lineno="4041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AudacityProject::ModifyState(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bWantsAutoSave)</highlight></codeline>
<codeline lineno="4044"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/>GetUndoManager()-&gt;ModifyState(mTracks,<sp/>mViewInfo.selectedRegion,<sp/>mTags);</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bWantsAutoSave)</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AutoSave();</highlight></codeline>
<codeline lineno="4048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"></highlight></codeline>
<codeline lineno="4050"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LL:<sp/><sp/>Is<sp/>there<sp/>a<sp/>memory<sp/>leak<sp/>here<sp/>as<sp/>&quot;l&quot;<sp/>and<sp/>&quot;t&quot;<sp/>are<sp/>not<sp/>deleted???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4051"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Vaughan,<sp/>2010-08-29:<sp/>No,<sp/>as<sp/>&quot;l&quot;<sp/>is<sp/>a<sp/>TrackList*<sp/>of<sp/>an<sp/>Undo<sp/>stack<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4052"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Need<sp/>to<sp/>keep<sp/>it<sp/>and<sp/>its<sp/>tracks<sp/>&quot;t&quot;<sp/>available<sp/>for<sp/>Undo/Redo/SetStateTo.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4053"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AudacityProject::PopState(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_undo_state" kindref="compound">UndoState</ref><sp/>&amp;state)</highlight></codeline>
<codeline lineno="4054"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>tags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/>mTags<sp/>=<sp/>state.<ref refid="struct_undo_state_1acc561c7190e6371f8deb46fd04812e1f" kindref="member">tags</ref>;</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"></highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tracks<sp/>=<sp/>state.<ref refid="struct_undo_state_1a72dceb89d0c5fe495d97f5aad787cb7c" kindref="member">tracks</ref>.get();</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"></highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/>mTracks-&gt;Clear(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(tracks);</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>odUsed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_compute_summary_task" kindref="compound">ODComputeSummaryTask</ref>*<sp/>computeTask<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>copyTrack;</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"></highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>copyTrack=t-&gt;<ref refid="class_track_1a7de9a5b87c0309271bc2620c9ed54545" kindref="member">Duplicate</ref>();</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTracks-&gt;Add(copyTrack);</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"></highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>the<sp/>track<sp/>to<sp/>OD<sp/>if<sp/>the<sp/>manager<sp/>exists.<sp/><sp/>later<sp/>we<sp/>might<sp/>do<sp/>a<sp/>more<sp/>rigorous<sp/>check...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copyTrack-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>ODManager<sp/>hasn&apos;t<sp/>been<sp/>initialized,<sp/>there&apos;s<sp/>no<sp/>chance<sp/>this<sp/>track<sp/>has<sp/>OD<sp/>blocks<sp/>since<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>a<sp/>&quot;Redo&quot;<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>update<sp/>this<sp/>to<sp/>look<sp/>like<sp/>the<sp/>update<sp/>loop<sp/>in<sp/>OpenFile<sp/>that<sp/>handles<sp/>general<sp/>purpose<sp/>ODTasks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//BUT,<sp/>it<sp/>is<sp/>too<sp/>slow<sp/>to<sp/>go<sp/>thru<sp/>every<sp/>blockfile<sp/>and<sp/>check<sp/>the<sp/>odtype,<sp/>so<sp/>maybe<sp/>put<sp/>a<sp/>flag<sp/>in<sp/>wavetrack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//that<sp/>gets<sp/>unset<sp/>on<sp/>OD<sp/>Completion,<sp/>(and<sp/>we<sp/>could<sp/>also<sp/>update<sp/>the<sp/>drawing<sp/>there<sp/>too.)<sp/><sp/>The<sp/>hard<sp/>part<sp/>is<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>would<sp/>need<sp/>to<sp/>watch<sp/>every<sp/>possible<sp/>way<sp/>a<sp/>OD<sp/>Blockfile<sp/>could<sp/>get<sp/>inserted<sp/>into<sp/>a<sp/>wavetrack<sp/>and<sp/>change<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//flag<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_manager_1a6647fc26402ceed611a794b7224063a5" kindref="member">ODManager::IsInstanceCreated</ref>())</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!odUsed)</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeTask=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_o_d_compute_summary_task" kindref="compound">ODComputeSummaryTask</ref>;</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odUsed=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeTask-&gt;<ref refid="class_o_d_task_1a3438e8f3f97a2ad2954913b23beaa0a6" kindref="member">AddWaveTrack</ref>((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)copyTrack);</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"></highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>the<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(odUsed)</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1aef1bcdded223f015b22a0d1d439c23ad" kindref="member">ODManager::Instance</ref>()-&gt;<ref refid="class_o_d_manager_1ab635811e9a08a5e4b14a6736ad83c885" kindref="member">AddNewTask</ref>(computeTask);</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"></highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/>HandleResize();</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"></highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/>UpdateMenus();</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/>this-&gt;UpdateLyrics();</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/>this-&gt;UpdateMixerBoard();</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"></highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/>AutoSave();</highlight></codeline>
<codeline lineno="4106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"></highlight></codeline>
<codeline lineno="4108" refid="class_audacity_project_1acfa0742c9a13320ad7394f0784733fd2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1acfa0742c9a13320ad7394f0784733fd2" kindref="member">AudacityProject::SetStateTo</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="4109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_undo_state" kindref="compound">UndoState</ref><sp/>&amp;state<sp/>=</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetUndoManager()-&gt;SetStateTo(n,<sp/>&amp;mViewInfo.selectedRegion);</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/>PopState(state);</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"></highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/>HandleResize();</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;SetFocusedTrack(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/>ModifyUndoMenuItems();</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/>this-&gt;UpdateLyrics();</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/>this-&gt;UpdateMixerBoard();</highlight></codeline>
<codeline lineno="4120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"></highlight></codeline>
<codeline lineno="4122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AudacityProject::UpdateLyrics()</highlight></codeline>
<codeline lineno="4123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JKC:<sp/>Previously<sp/>we<sp/>created<sp/>a<sp/>lyrics<sp/>window,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>did<sp/>not<sp/>exist.<sp/><sp/>But<sp/>we<sp/>don&apos;t<sp/>need<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mLyricsWindow)</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"></highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_of_kind_iterator" kindref="compound">TrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>,<sp/>mTracks);</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref>*<sp/>pLabelTrack<sp/>=<sp/>(<ref refid="class_label_track" kindref="compound">LabelTrack</ref>*)(iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>());<sp/></highlight><highlight class="comment">//<sp/>Lyrics<sp/>come<sp/>from<sp/>only<sp/>the<sp/>first<sp/>label<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pLabelTrack)</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"></highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>code<sp/>that<sp/>updates<sp/>the<sp/>lyrics<sp/>is<sp/>rather<sp/>expensive<sp/>when<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>a<sp/>lot<sp/>of<sp/>labels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>-<sp/>bail<sp/>out<sp/>early<sp/>if<sp/>the<sp/>lyrics<sp/>window<sp/>is<sp/>not<sp/>visible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>later<sp/>force<sp/>an<sp/>update<sp/>when<sp/>the<sp/>lyrics<sp/>window<sp/>is<sp/>made<sp/>visible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!mLyricsWindow-&gt;IsVisible()<sp/>)</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"></highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_lyrics" kindref="compound">Lyrics</ref>*<sp/>pLyricsPanel<sp/>=<sp/>mLyricsWindow-&gt;GetLyricsPanel();</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/>pLyricsPanel-&gt;<ref refid="class_lyrics_1a73c832028b80cb8a68d42a82a59b94ba" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/>pLyricsPanel-&gt;<ref refid="class_lyrics_1aba719df567f4ae9934a85c5e7881f654" kindref="member">AddLabels</ref>(pLabelTrack);</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/>pLyricsPanel-&gt;<ref refid="class_lyrics_1ae9b25288591a5834de1479e3c9e75e43" kindref="member">Finish</ref>(pLabelTrack-&gt;<ref refid="class_label_track_1a00581204bb86be2ca7c980f3ced9a102" kindref="member">GetEndTime</ref>());</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/>pLyricsPanel-&gt;<ref refid="class_lyrics_1a1a3f7ded50fbbbf5476ba13ff50bba21" kindref="member">Update</ref>(this-&gt;GetSel0());</highlight></codeline>
<codeline lineno="4146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"></highlight></codeline>
<codeline lineno="4148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AudacityProject::UpdateMixerBoard()</highlight></codeline>
<codeline lineno="4149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mMixerBoard)</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/>mMixerBoard-&gt;UpdateTrackClusters();</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"></highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vaughan,<sp/>2011-01-28:<sp/>AudacityProject::UpdateMixerBoard()<sp/>is<sp/>called<sp/>on<sp/>state<sp/>changes,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>so<sp/>don&apos;t<sp/>really<sp/>need<sp/>to<sp/>call<sp/>UpdateMeters().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//mMixerBoard-&gt;UpdateMeters(gAudioIO-&gt;GetStreamTime(),<sp/>(mLastPlayMode<sp/>==<sp/>loopedPlay));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"></highlight></codeline>
<codeline lineno="4159"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clipboard<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4161"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4162"><highlight class="normal"></highlight></codeline>
<codeline lineno="4163"><highlight class="normal"></highlight><highlight class="comment">//static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4164" refid="class_audacity_project_1a55baac007a4f9e15c8be9f6b0b515933" refkind="member"><highlight class="normal"><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<ref refid="class_audacity_project_1a55baac007a4f9e15c8be9f6b0b515933" kindref="member">AudacityProject::GetClipboardTracks</ref>()</highlight></codeline>
<codeline lineno="4165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msClipboard;</highlight></codeline>
<codeline lineno="4167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"></highlight></codeline>
<codeline lineno="4169"><highlight class="normal"></highlight><highlight class="comment">//static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4170" refid="class_audacity_project_1a5b710f2cacfc84546519e01aadc13a0c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a5b710f2cacfc84546519e01aadc13a0c" kindref="member">AudacityProject::DeleteClipboard</ref>()</highlight></codeline>
<codeline lineno="4171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msClipboard)<sp/>{</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msClipboard-&gt;Clear(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>msClipboard;</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msClipboard<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"></highlight></codeline>
<codeline lineno="4179"><highlight class="normal"></highlight><highlight class="comment">//static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4180" refid="class_audacity_project_1af592e9483c612ec36c973189acf10055" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1af592e9483c612ec36c973189acf10055" kindref="member">AudacityProject::DeleteAllProjectsDeleteLock</ref>()</highlight></codeline>
<codeline lineno="4181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(msAllProjectDeleteMutex)</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>msAllProjectDeleteMutex;</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msAllProjectDeleteMutex=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"></highlight></codeline>
<codeline lineno="4189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AudacityProject::ClearClipboard()</highlight></codeline>
<codeline lineno="4190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/>msClipT0<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/>msClipT1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/>msClipProject<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msClipboard)<sp/>{</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msClipboard-&gt;Clear(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"></highlight></codeline>
<codeline lineno="4199" refid="class_audacity_project_1a8b4f490ff92b02abee34fc637eabc969" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a8b4f490ff92b02abee34fc637eabc969" kindref="member">AudacityProject::Clear</ref>()</highlight></codeline>
<codeline lineno="4200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mTracks);</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"></highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*n<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"></highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>||<sp/>n-&gt;<ref refid="class_track_1a4b9d8ec8baa8ce94f9b9b999e324a59f" kindref="member">IsSyncLockSelected</ref>())<sp/>{</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;<ref refid="class_track_1a725fa0a27976e10fd01859baa2f29ff7" kindref="member">Clear</ref>(mViewInfo.selectedRegion.t0(),<sp/>mViewInfo.selectedRegion.t1());</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"></highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>seconds<sp/>=<sp/>mViewInfo.selectedRegion.duration();</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"></highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.selectedRegion.collapseToT0();</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"></highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/>PushState(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Deleted<sp/>%.2f<sp/>seconds<sp/>at<sp/>t=%.2f&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seconds,</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.selectedRegion.t0()),</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Delete&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"></highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/>RedrawProject();</highlight></codeline>
<codeline lineno="4222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"></highlight></codeline>
<codeline lineno="4224" refid="class_audacity_project_1a171218a922568da0d6f7dcd6d861133a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a171218a922568da0d6f7dcd6d861133a" kindref="member">AudacityProject::SelectNone</ref>()</highlight></codeline>
<codeline lineno="4225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mTracks);</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" kindref="member">SetSelected</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMixerBoard)</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMixerBoard-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"></highlight></codeline>
<codeline lineno="4237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Utility<sp/>function<sp/>called<sp/>by<sp/>other<sp/>zoom<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4238" refid="class_audacity_project_1a8b67682722b88265218fa4de4d6489bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a8b67682722b88265218fa4de4d6489bc" kindref="member">AudacityProject::Zoom</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="4239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.SetZoom(level);</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/>FixScrollbars();</highlight></codeline>
<codeline lineno="4242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"></highlight></codeline>
<codeline lineno="4244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Utility<sp/>function<sp/>called<sp/>by<sp/>other<sp/>zoom<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4245" refid="class_audacity_project_1a43490d6fab15e8942f813d5e0b496f68" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a43490d6fab15e8942f813d5e0b496f68" kindref="member">AudacityProject::ZoomBy</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>multiplier)</highlight></codeline>
<codeline lineno="4246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.ZoomBy(multiplier);</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/>FixScrollbars();</highlight></codeline>
<codeline lineno="4249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"></highlight></codeline>
<codeline lineno="4252"><highlight class="comment">//<sp/>This<sp/>method<sp/>&apos;rewinds&apos;<sp/>the<sp/>track,<sp/>by<sp/>setting<sp/>the<sp/>cursor<sp/>to<sp/>0<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scrolling<sp/>the<sp/>window<sp/>to<sp/>fit<sp/>0<sp/>on<sp/>the<sp/>left<sp/>side<sp/>of<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(maintaining<sp/><sp/>current<sp/>zoom).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>shift<sp/>is<sp/>held<sp/>down,<sp/>it<sp/>will<sp/>extend<sp/>the<sp/>left<sp/>edge<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>selection<sp/>to<sp/>0<sp/>(holding<sp/>right<sp/>edge<sp/>constant),<sp/>otherwise<sp/>it<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>move<sp/>both<sp/>left<sp/>and<sp/>right<sp/>edge<sp/>of<sp/>selection<sp/>to<sp/>0</highlight></codeline>
<codeline lineno="4259" refid="class_audacity_project_1a5658cff7e5fa6a29aa2c91509407c95d" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a5658cff7e5fa6a29aa2c91509407c95d" kindref="member">AudacityProject::Rewind</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shift)</highlight></codeline>
<codeline lineno="4260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.selectedRegion.setT0(0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shift)</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.selectedRegion.setT1(0);</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"></highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/>TP_ScrollWindow(0);</highlight></codeline>
<codeline lineno="4266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"></highlight></codeline>
<codeline lineno="4268"><highlight class="normal"></highlight></codeline>
<codeline lineno="4270"><highlight class="comment">//<sp/>This<sp/>method<sp/>&apos;fast-forwards&apos;<sp/>the<sp/>track,<sp/>by<sp/>setting<sp/>the<sp/>cursor<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>end<sp/>of<sp/>the<sp/>samples<sp/>on<sp/>the<sp/>selected<sp/>track<sp/>and<sp/><sp/>scrolling<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4272"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>window<sp/>to<sp/>fit<sp/>the<sp/>end<sp/>on<sp/>its<sp/>right<sp/>side<sp/>(maintaining<sp/><sp/>current<sp/>zoom).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>shift<sp/>is<sp/>held<sp/>down,<sp/>it<sp/>will<sp/>extend<sp/>the<sp/>right<sp/>edge<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>selection<sp/>to<sp/>the<sp/>end<sp/>(holding<sp/>left<sp/>edge<sp/>constant),<sp/>otherwise<sp/>it<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>move<sp/>both<sp/>left<sp/>and<sp/>right<sp/>edge<sp/>of<sp/>selection<sp/>to<sp/>the<sp/>end</highlight></codeline>
<codeline lineno="4277" refid="class_audacity_project_1a30db46b0b02d4d10753d59fff918f33d" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a30db46b0b02d4d10753d59fff918f33d" kindref="member">AudacityProject::SkipEnd</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shift)</highlight></codeline>
<codeline lineno="4278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>mTracks-&gt;GetEndTime();</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"></highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/>mViewInfo.selectedRegion.setT1(len,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shift)</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.selectedRegion.setT0(len);</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"></highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>end<sp/>of<sp/>the<sp/>track<sp/>is<sp/>visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;ScrollIntoView(len);</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"></highlight></codeline>
<codeline lineno="4290"><highlight class="normal"></highlight></codeline>
<codeline lineno="4292"><highlight class="comment">//<sp/><sp/>This<sp/>fetches<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>Transport<sp/>Toolbar.<sp/><sp/>It<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4293"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>either<sp/>be<sp/>docked<sp/>or<sp/>floating<sp/>out<sp/>in<sp/>the<sp/>open.</highlight></codeline>
<codeline lineno="4295" refid="class_audacity_project_1a42b3845e8ab4f0e32fa04be54562d0c1" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><ref refid="class_control_tool_bar" kindref="compound">ControlToolBar</ref><sp/>*<ref refid="class_audacity_project_1a42b3845e8ab4f0e32fa04be54562d0c1" kindref="member">AudacityProject::GetControlToolBar</ref>()</highlight></codeline>
<codeline lineno="4296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_control_tool_bar" kindref="compound">ControlToolBar</ref><sp/>*)</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mToolManager<sp/>?</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mToolManager-&gt;GetToolBar(<ref refid="_tool_bar_8h_1ac96d10b474330fddfb7baaf7ecbf4340a7d646d99f796c04ed011c0b84d9d113f" kindref="member">TransportBarID</ref>)<sp/>:</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"></highlight></codeline>
<codeline lineno="4303" refid="class_audacity_project_1a97a200ed48c77cb03272b183e9e46847" refkind="member"><highlight class="normal"><ref refid="class_tools_tool_bar" kindref="compound">ToolsToolBar</ref><sp/>*<sp/><ref refid="class_audacity_project_1a97a200ed48c77cb03272b183e9e46847" kindref="member">AudacityProject::TP_GetToolsToolBar</ref>()</highlight></codeline>
<codeline lineno="4304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetToolsToolBar();</highlight></codeline>
<codeline lineno="4306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"></highlight></codeline>
<codeline lineno="4308" refid="class_audacity_project_1a7ea67972b9dc96d89d662b333c9c379e" refkind="member"><highlight class="normal"><ref refid="class_device_tool_bar" kindref="compound">DeviceToolBar</ref><sp/>*<ref refid="class_audacity_project_1a7ea67972b9dc96d89d662b333c9c379e" kindref="member">AudacityProject::GetDeviceToolBar</ref>()</highlight></codeline>
<codeline lineno="4309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_device_tool_bar" kindref="compound">DeviceToolBar</ref><sp/>*)</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mToolManager<sp/>?</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mToolManager-&gt;GetToolBar(<ref refid="_tool_bar_8h_1ac96d10b474330fddfb7baaf7ecbf4340a378f19728fa20f204941f3292d1aedba" kindref="member">DeviceBarID</ref>)<sp/>:</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"></highlight></codeline>
<codeline lineno="4316" refid="class_audacity_project_1a51fbd7fd3829b143a90242b117991b02" refkind="member"><highlight class="normal"><ref refid="class_edit_tool_bar" kindref="compound">EditToolBar</ref><sp/>*<ref refid="class_audacity_project_1a51fbd7fd3829b143a90242b117991b02" kindref="member">AudacityProject::GetEditToolBar</ref>()</highlight></codeline>
<codeline lineno="4317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_edit_tool_bar" kindref="compound">EditToolBar</ref><sp/>*)</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mToolManager<sp/>?</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mToolManager-&gt;GetToolBar(<ref refid="_tool_bar_8h_1ac96d10b474330fddfb7baaf7ecbf4340ad0583a377caca31cbf0dadf099d7a70f" kindref="member">EditBarID</ref>)<sp/>:</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"></highlight></codeline>
<codeline lineno="4324" refid="class_audacity_project_1a5484b652aa1215f5bc382639677f8a39" refkind="member"><highlight class="normal"><ref refid="class_mixer_tool_bar" kindref="compound">MixerToolBar</ref><sp/>*<ref refid="class_audacity_project_1a5484b652aa1215f5bc382639677f8a39" kindref="member">AudacityProject::GetMixerToolBar</ref>()</highlight></codeline>
<codeline lineno="4325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_mixer_tool_bar" kindref="compound">MixerToolBar</ref><sp/>*)</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mToolManager<sp/>?</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mToolManager-&gt;GetToolBar(<ref refid="_tool_bar_8h_1ac96d10b474330fddfb7baaf7ecbf4340a813b71367c288741b38f1d69ace94692" kindref="member">MixerBarID</ref>)<sp/>:</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"></highlight></codeline>
<codeline lineno="4332" refid="class_audacity_project_1a3e1ba30d59f20b6236e56f884b9f75a8" refkind="member"><highlight class="normal"><ref refid="class_selection_bar" kindref="compound">SelectionBar</ref><sp/>*<ref refid="class_audacity_project_1a3e1ba30d59f20b6236e56f884b9f75a8" kindref="member">AudacityProject::GetSelectionBar</ref>()</highlight></codeline>
<codeline lineno="4333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_selection_bar" kindref="compound">SelectionBar</ref><sp/>*)</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(mToolManager<sp/>?</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mToolManager-&gt;GetToolBar(<ref refid="_tool_bar_8h_1ac96d10b474330fddfb7baaf7ecbf4340a3a4333cfbdef8fab1ca50af46027ea99" kindref="member">SelectionBarID</ref>)<sp/>:</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"></highlight></codeline>
<codeline lineno="4340"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SPECTRAL_EDITING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4341" refid="class_audacity_project_1aa10d98a1e0a9444a8186dcd644dd2988" refkind="member"><highlight class="normal"><ref refid="class_spectral_selection_bar" kindref="compound">SpectralSelectionBar</ref><sp/>*<ref refid="class_audacity_project_1aa10d98a1e0a9444a8186dcd644dd2988" kindref="member">AudacityProject::GetSpectralSelectionBar</ref>()</highlight></codeline>
<codeline lineno="4342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_spectral_selection_bar" kindref="compound">SpectralSelectionBar</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(mToolManager<sp/>?</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mToolManager-&gt;GetToolBar(<ref refid="_tool_bar_8h_1ac96d10b474330fddfb7baaf7ecbf4340a5c9392811364c093400ae4c0594fa1f1" kindref="member">SpectralSelectionBarID</ref>)<sp/>:</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>));</highlight></codeline>
<codeline lineno="4347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4349"><highlight class="normal"></highlight></codeline>
<codeline lineno="4350" refid="class_audacity_project_1a836f8d24b15740de122c5d734930a9de" refkind="member"><highlight class="normal"><ref refid="class_tools_tool_bar" kindref="compound">ToolsToolBar</ref><sp/>*<ref refid="class_audacity_project_1a836f8d24b15740de122c5d734930a9de" kindref="member">AudacityProject::GetToolsToolBar</ref>()</highlight></codeline>
<codeline lineno="4351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_tools_tool_bar" kindref="compound">ToolsToolBar</ref><sp/>*)</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mToolManager<sp/>?</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mToolManager-&gt;GetToolBar(<ref refid="_tool_bar_8h_1ac96d10b474330fddfb7baaf7ecbf4340a9465a4aaf67e0043364adb54f0eb7b10" kindref="member">ToolsBarID</ref>)<sp/>:</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"></highlight></codeline>
<codeline lineno="4358" refid="class_audacity_project_1ae3d92b0f0bbb00792b1ada522b70611f" refkind="member"><highlight class="normal"><ref refid="class_transcription_tool_bar" kindref="compound">TranscriptionToolBar</ref><sp/>*<ref refid="class_audacity_project_1ae3d92b0f0bbb00792b1ada522b70611f" kindref="member">AudacityProject::GetTranscriptionToolBar</ref>()</highlight></codeline>
<codeline lineno="4359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_transcription_tool_bar" kindref="compound">TranscriptionToolBar</ref><sp/>*)</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mToolManager<sp/>?</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mToolManager-&gt;GetToolBar(<ref refid="_tool_bar_8h_1ac96d10b474330fddfb7baaf7ecbf4340a3ae112507468d93268f0c46b77231774" kindref="member">TranscriptionBarID</ref>)<sp/>:</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"></highlight></codeline>
<codeline lineno="4366" refid="class_audacity_project_1a4e9bcc371c5cb9566f3c52beb55888ff" refkind="member"><highlight class="normal"><ref refid="class_meter" kindref="compound">Meter</ref><sp/>*<ref refid="class_audacity_project_1a4e9bcc371c5cb9566f3c52beb55888ff" kindref="member">AudacityProject::GetPlaybackMeter</ref>()</highlight></codeline>
<codeline lineno="4367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPlaybackMeter;</highlight></codeline>
<codeline lineno="4369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"></highlight></codeline>
<codeline lineno="4371" refid="class_audacity_project_1ab976cb87241f199f813695152f702544" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ab976cb87241f199f813695152f702544" kindref="member">AudacityProject::SetPlaybackMeter</ref>(<ref refid="class_meter" kindref="compound">Meter</ref><sp/>*playback)</highlight></codeline>
<codeline lineno="4372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/>mPlaybackMeter<sp/>=<sp/>playback;</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>)</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a615aec62315405636bfe8b6e2a326cbe" kindref="member">SetPlaybackMeter</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>mPlaybackMeter);</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"></highlight></codeline>
<codeline lineno="4380" refid="class_audacity_project_1a908a40dc74c6fe03ca6907583e61cdae" refkind="member"><highlight class="normal"><ref refid="class_meter" kindref="compound">Meter</ref><sp/>*<ref refid="class_audacity_project_1a908a40dc74c6fe03ca6907583e61cdae" kindref="member">AudacityProject::GetCaptureMeter</ref>()</highlight></codeline>
<codeline lineno="4381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCaptureMeter;</highlight></codeline>
<codeline lineno="4383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"></highlight></codeline>
<codeline lineno="4385" refid="class_audacity_project_1a90688de6c6b311327f771ae4deb85b24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a90688de6c6b311327f771ae4deb85b24" kindref="member">AudacityProject::SetCaptureMeter</ref>(<ref refid="class_meter" kindref="compound">Meter</ref><sp/>*capture)</highlight></codeline>
<codeline lineno="4386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/>mCaptureMeter<sp/>=<sp/>capture;</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"></highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>)</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a0ef8578b176133229c30a656fe41478e" kindref="member">SetCaptureMeter</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>mCaptureMeter);</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"></highlight></codeline>
<codeline lineno="4395" refid="class_audacity_project_1ad1841cc135e660bdd0ce7f1d1b2673e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ad1841cc135e660bdd0ce7f1d1b2673e4" kindref="member">AudacityProject::OnTimer</ref>(wxTimerEvent&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="4396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_mixer_tool_bar" kindref="compound">MixerToolBar</ref><sp/>*mixerToolBar<sp/>=<sp/>GetMixerToolBar();</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mixerToolBar<sp/>)</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mixerToolBar-&gt;<ref refid="class_mixer_tool_bar_1acbd61cd691c3e24cb5775fb2e3feb0a0" kindref="member">UpdateControls</ref>();</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"></highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(::wxGetUTCTime()<sp/>-<sp/>mLastStatusUpdateTime<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"></highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gAudioIO-&gt;GetNumCaptureChannels()<sp/>should<sp/>only<sp/>be<sp/>positive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>we<sp/>are<sp/>recording.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetAudioIOToken()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a841f37644672ecb5ea445bfb52907c1f" kindref="member">GetNumCaptureChannels</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLongLong<sp/>freeSpace<sp/>=<sp/>mDirManager-&gt;GetFreeDiskSpace();</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freeSpace<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>msg;</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>recTime;</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recMins;</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"></highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recTime<sp/>=<sp/>freeSpace.GetHi()<sp/>*<sp/>4294967296.0<sp/>+<sp/>freeSpace.GetLo();</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recTime<sp/>/=<sp/><ref refid="_sample_format_8h_1a85f4e26b4239a2569a5cf4a174488023" kindref="member">SAMPLE_SIZE_DISK</ref>(<ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a5735d00a230e2a59a9702dfbf1a8b85d" kindref="member">GetCaptureFormat</ref>());</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>size<sp/>on<sp/>disk<sp/>(=3<sp/>for<sp/>24-bit)<sp/>not<sp/>in<sp/>memory<sp/>(=4<sp/>for<sp/>24-bit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recTime<sp/>/=<sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a841f37644672ecb5ea445bfb52907c1f" kindref="member">GetNumCaptureChannels</ref>();</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recTime<sp/>/=<sp/>GetRate();</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recMins<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(recTime<sp/>/<sp/>60.0);</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"></highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recMins<sp/>&gt;=<sp/>120)</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Disk<sp/>space<sp/>remains<sp/>for<sp/>recording<sp/>%d<sp/>hours<sp/>and<sp/>%d<sp/>minutes.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recMins/60,<sp/>recMins%60);</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recMins<sp/>&gt;=<sp/>60)</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Disk<sp/>space<sp/>remains<sp/>for<sp/>recording<sp/>1<sp/>hour<sp/>and<sp/>%d<sp/>minutes.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recMins-60);</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recMins<sp/>&gt;<sp/>3)</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Disk<sp/>space<sp/>remains<sp/>for<sp/>recording<sp/>%d<sp/>minutes.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recMins);</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recTime<sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Disk<sp/>space<sp/>remains<sp/>for<sp/>recording<sp/>%d<sp/>seconds.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)recTime);</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>disk<sp/>space&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"></highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mStatusBar-&gt;SetStatusText(msg,<sp/><ref refid="_project_8h_1a788f1f168e5dd2f4411a457639a24674a55c8698cfddd36997feabda8755fc01b" kindref="member">mainStatusBarField</ref>);</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_manager_1a6647fc26402ceed611a794b7224063a5" kindref="member">ODManager::IsInstanceCreated</ref>())</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>we<sp/>have<sp/>some<sp/>tasks<sp/>running,<sp/>we<sp/>should<sp/>say<sp/>something<sp/>about<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numTasks<sp/>=<sp/><ref refid="class_o_d_manager_1aef1bcdded223f015b22a0d1d439c23ad" kindref="member">ODManager::Instance</ref>()-&gt;<ref refid="class_o_d_manager_1abbeccc9391d24f84f1a2bbd14beba2af" kindref="member">GetTotalNumTasks</ref>();</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numTasks)</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>msg;</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ratioComplete=<sp/><ref refid="class_o_d_manager_1aef1bcdded223f015b22a0d1d439c23ad" kindref="member">ODManager::Instance</ref>()-&gt;<ref refid="class_o_d_manager_1aa71310affea63dba0f3575d6149cd944" kindref="member">GetOverallPercentComplete</ref>();</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"></highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ratioComplete&gt;=1.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>we<sp/>are<sp/>100<sp/>percent<sp/>complete<sp/>and<sp/>there<sp/>is<sp/>still<sp/>a<sp/>task<sp/>in<sp/>the<sp/>queue,<sp/>we<sp/>should<sp/>wake<sp/>the<sp/>ODManager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//so<sp/>it<sp/>can<sp/>clear<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//signal<sp/>the<sp/>od<sp/>task<sp/>queue<sp/>loop<sp/>to<sp/>wake<sp/>up<sp/>so<sp/>it<sp/>can<sp/>remove<sp/>the<sp/>tasks<sp/>from<sp/>the<sp/>queue<sp/>and<sp/>the<sp/>queue<sp/>if<sp/>it<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1aef1bcdded223f015b22a0d1d439c23ad" kindref="member">ODManager::Instance</ref>()-&gt;<ref refid="class_o_d_manager_1a32c0166c84f2b50792d96ab36ea02401" kindref="member">SignalTaskQueueLoop</ref>();</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"></highlight></codeline>
<codeline lineno="4454"><highlight class="normal"></highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;On-demand<sp/>import<sp/>and<sp/>waveform<sp/>calculation<sp/>complete.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mStatusBar-&gt;SetStatusText(msg,<sp/><ref refid="_project_8h_1a788f1f168e5dd2f4411a457639a24674a55c8698cfddd36997feabda8755fc01b" kindref="member">mainStatusBarField</ref>);</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"></highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numTasks&gt;1)</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Import(s)<sp/>complete.<sp/>Running<sp/>%d<sp/>on-demand<sp/>waveform<sp/>calculations.<sp/>Overall<sp/>%2.0f%%<sp/>complete.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numTasks,ratioComplete*100.0);</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Import<sp/>complete.<sp/>Running<sp/>an<sp/>on-demand<sp/>waveform<sp/>calculation.<sp/>%2.0f%%<sp/>complete.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ratioComplete*100.0);</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"></highlight></codeline>
<codeline lineno="4466"><highlight class="normal"></highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mStatusBar-&gt;SetStatusText(msg,<sp/><ref refid="_project_8h_1a788f1f168e5dd2f4411a457639a24674a55c8698cfddd36997feabda8755fc01b" kindref="member">mainStatusBarField</ref>);</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"></highlight></codeline>
<codeline lineno="4472"><highlight class="normal"></highlight><highlight class="comment">//get<sp/>regions<sp/>selected<sp/>by<sp/>selected<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4473"><highlight class="normal"></highlight><highlight class="comment">//removes<sp/>unnecessary<sp/>regions,<sp/>overlapping<sp/>regions<sp/>are<sp/>merged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4474"><highlight class="normal"></highlight><highlight class="comment">//regions<sp/>memory<sp/>need<sp/>to<sp/>be<sp/>deleted<sp/>by<sp/>the<sp/>caller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4475"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AudacityProject::GetRegionsByLabel(<sp/><ref refid="class_regions" kindref="compound">Regions</ref><sp/>&amp;regions<sp/>)</highlight></codeline>
<codeline lineno="4476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(<sp/>mTracks<sp/>);</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*n;</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"></highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//determine<sp/>labelled<sp/>regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>n<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();<sp/>n;<sp/>n<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>()<sp/>)</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>n-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref><sp/>&amp;&amp;<sp/>n-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>)</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*lt<sp/>=<sp/>(<sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref>*<sp/>)n;</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>lt-&gt;<ref refid="class_label_track_1a94ca622c101401002bd01fc47c464d1f" kindref="member">GetNumLabels</ref>();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*ls<sp/>=<sp/>lt-&gt;<ref refid="class_label_track_1a03a362d6ca8cefb4dc964c787509e779" kindref="member">GetLabel</ref>(<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>);</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ls-&gt;<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1a699851ec9e5a209be86f552f0826687d" kindref="member">t0</ref>()<sp/>&gt;=<sp/>mViewInfo.selectedRegion.t0()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ls-&gt;<ref refid="class_label_struct_1ac7eaaf8a91c7f42d33fd0d4d4d8cf56c" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1aec8e1688714de8fb218d0cf0188360d6" kindref="member">t1</ref>()<sp/>&lt;=<sp/>mViewInfo.selectedRegion.t1()<sp/>)</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regions.push_back(<ref refid="struct_region" kindref="compound">Region</ref>(ls-&gt;<ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>(),<sp/>ls-&gt;<ref refid="class_label_struct_1ac5df1836d89b3356da7300f89fc2ed69" kindref="member">getT1</ref>()));</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"></highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//anything<sp/>to<sp/>do<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>regions.size()<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"></highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//sort<sp/>and<sp/>remove<sp/>unnecessary<sp/>regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/>std::sort(regions.begin(),<sp/>regions.end());</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>selected<sp/>&lt;<sp/>regions.size()<sp/>)</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_region" kindref="compound">Region</ref><sp/>&amp;cur<sp/>=<sp/>regions.at(<sp/>selected<sp/>);</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_region" kindref="compound">Region</ref><sp/>&amp;<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref><sp/>=<sp/>regions.at(<sp/>selected<sp/>-<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>cur.<ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref><sp/>&lt;<sp/>last.<ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref><sp/>)</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>cur.<ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref><sp/>&gt;<sp/>last.<ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref><sp/>)</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last.<ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref><sp/>=<sp/>cur.<ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regions.erase(<sp/>regions.begin()<sp/>+<sp/>selected<sp/>);</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected++;</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"></highlight></codeline>
<codeline lineno="4516"><highlight class="normal"></highlight><highlight class="comment">//Executes<sp/>the<sp/>edit<sp/>function<sp/>on<sp/>all<sp/>selected<sp/>wave<sp/>tracks<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4517"><highlight class="normal"></highlight><highlight class="comment">//regions<sp/>specified<sp/>by<sp/>selected<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4518"><highlight class="normal"></highlight><highlight class="comment">//If<sp/>No<sp/>tracks<sp/>selected,<sp/>function<sp/>is<sp/>applied<sp/>on<sp/>all<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4519"><highlight class="normal"></highlight><highlight class="comment">//If<sp/>the<sp/>function<sp/>replaces<sp/>the<sp/>selection<sp/>with<sp/>audio<sp/>of<sp/>a<sp/>different<sp/>length,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4520"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bSyncLockedTracks<sp/>should<sp/>be<sp/>set<sp/>true<sp/>to<sp/>perform<sp/>the<sp/>same<sp/>action<sp/>on<sp/>sync-lock<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4521"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4522" refid="class_audacity_project_1a7cbfd0d3ed410760dc76d1687ce4d09c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a7cbfd0d3ed410760dc76d1687ce4d09c" kindref="member">AudacityProject::EditByLabel</ref>(<sp/>EditFunction<sp/><ref refid="namespacelv2specgen_1a7dac92a6e76f9cbfb25e902b88b09867" kindref="member">action</ref>,</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSyncLockedTracks<sp/>)</highlight></codeline>
<codeline lineno="4524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_regions" kindref="compound">Regions</ref><sp/>regions;</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"></highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/>GetRegionsByLabel(<sp/>regions<sp/>);</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>regions.size()<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"></highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(<sp/>mTracks<sp/>);</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*n;</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allTracks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"></highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>at<sp/>least<sp/>one<sp/>wave<sp/>track<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>only<sp/>on<sp/>the<sp/>selected<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>n<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();<sp/>n;<sp/>n<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>()<sp/>)</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>n-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref><sp/>&amp;&amp;<sp/>n-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>)</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allTracks<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"></highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Apply<sp/>action<sp/>on<sp/>wavetracks<sp/>starting<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//labeled<sp/>regions<sp/>in<sp/>the<sp/>end.<sp/>This<sp/>is<sp/>to<sp/>correctly<sp/>perform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//actions<sp/>like<sp/>&apos;Delete&apos;<sp/>which<sp/>collapse<sp/>the<sp/>track<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/>n<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n)</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(allTracks<sp/>||<sp/>n-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>||<sp/>(bSyncLockedTracks<sp/>&amp;&amp;<sp/>n-&gt;<ref refid="class_track_1a4b9d8ec8baa8ce94f9b9b999e324a59f" kindref="member">IsSyncLockSelected</ref>())))</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*wt<sp/>=<sp/>(<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>)n;</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)regions.size()<sp/>-<sp/>1;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&gt;=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>--)<sp/>{</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_region" kindref="compound">Region</ref><sp/>&amp;region<sp/>=<sp/>regions.at(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(wt-&gt;*<ref refid="namespacelv2specgen_1a7dac92a6e76f9cbfb25e902b88b09867" kindref="member">action</ref>)(region.<ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref>,<sp/>region.<ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"></highlight></codeline>
<codeline lineno="4563"><highlight class="normal"></highlight><highlight class="comment">//Executes<sp/>the<sp/>edit<sp/>function<sp/>on<sp/>all<sp/>selected<sp/>wave<sp/>tracks<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4564"><highlight class="normal"></highlight><highlight class="comment">//regions<sp/>specified<sp/>by<sp/>selected<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4565"><highlight class="normal"></highlight><highlight class="comment">//If<sp/>No<sp/>tracks<sp/>selected,<sp/>function<sp/>is<sp/>applied<sp/>on<sp/>all<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4566"><highlight class="normal"></highlight><highlight class="comment">//Functions<sp/>copy<sp/>the<sp/>edited<sp/>regions<sp/>to<sp/>clipboard,<sp/>possibly<sp/>in<sp/>multiple<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4567"><highlight class="normal"></highlight><highlight class="comment">//This<sp/>probably<sp/>should<sp/>not<sp/>be<sp/>called<sp/>if<sp/>*action()<sp/>changes<sp/>the<sp/>timeline,<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4568"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>copy<sp/>needs<sp/>to<sp/>happen<sp/>by<sp/>track,<sp/>and<sp/>the<sp/>timeline<sp/>change<sp/>by<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4569" refid="class_audacity_project_1a03aaa7c1f213bb52a3966b4d2dbcf702" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a03aaa7c1f213bb52a3966b4d2dbcf702" kindref="member">AudacityProject::EditClipboardByLabel</ref>(<sp/>EditDestFunction<sp/><ref refid="namespacelv2specgen_1a7dac92a6e76f9cbfb25e902b88b09867" kindref="member">action</ref><sp/>)</highlight></codeline>
<codeline lineno="4570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_regions" kindref="compound">Regions</ref><sp/>regions;</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"></highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/>GetRegionsByLabel(<sp/>regions<sp/>);</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>regions.size()<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"></highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(<sp/>mTracks<sp/>);</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*n;</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allTracks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"></highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>at<sp/>least<sp/>one<sp/>wave<sp/>track<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>only<sp/>on<sp/>the<sp/>selected<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>n<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();<sp/>n;<sp/>n<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>()<sp/>)</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>n-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref><sp/>&amp;&amp;<sp/>n-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>)</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allTracks<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"></highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/>ClearClipboard();</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Apply<sp/>action<sp/>on<sp/>wavetracks<sp/>starting<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//labeled<sp/>regions<sp/>in<sp/>the<sp/>end.<sp/>This<sp/>is<sp/>to<sp/>correctly<sp/>perform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//actions<sp/>like<sp/>&apos;Cut&apos;<sp/>which<sp/>collapse<sp/>the<sp/>track<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>n<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();<sp/>n;<sp/>n<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>()<sp/>)</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>n-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref><sp/>&amp;&amp;<sp/>(<sp/>allTracks<sp/>||<sp/>n-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*wt<sp/>=<sp/>(<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>)n;</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*merged<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>)regions.size()<sp/>-<sp/>1;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&gt;=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>--<sp/>)</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_region" kindref="compound">Region</ref><sp/>&amp;region<sp/>=<sp/>regions.at(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>wt-&gt;*<ref refid="namespacelv2specgen_1a7dac92a6e76f9cbfb25e902b88b09867" kindref="member">action</ref><sp/>)(<sp/>region.<ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref>,<sp/>region.<ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref>,</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dest<sp/>);</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dest<sp/>)</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest-&gt;<ref refid="class_track_1a98d028f4a19322ea675fcd33412f9832" kindref="member">SetChannel</ref>(<sp/>wt-&gt;<ref refid="class_track_1a9c988f7695a546bf52ee2dc859db0345" kindref="member">GetChannel</ref>()<sp/>);</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest-&gt;<ref refid="class_track_1a23dc5f6265d0383f860d099f44e7d74c" kindref="member">SetLinked</ref>(<sp/>wt-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>()<sp/>);</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest-&gt;<ref refid="class_track_1af91d1579e3d15a0d5fffa3348adae753" kindref="member">SetName</ref>(<sp/>wt-&gt;<ref refid="class_track_1a670b88686f99e151d6a305a709f130b1" kindref="member">GetName</ref>()<sp/>);</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!merged<sp/>)</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merged<sp/>=<sp/>(<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>)dest;</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Paste<sp/>to<sp/>the<sp/>beginning;<sp/>unless<sp/>this<sp/>is<sp/>the<sp/>first<sp/>region,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>the<sp/>track<sp/>to<sp/>account<sp/>for<sp/>time<sp/>between<sp/>the<sp/>regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)regions.size()<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merged-&gt;<ref refid="class_track_1a0c71dd844bec490b9a291af9ec2bc127" kindref="member">Offset</ref>(</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regions.at(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>+<sp/>1).start<sp/>-<sp/>region.<ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"></highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bResult<sp/>=<sp/>merged-&gt;<ref refid="class_wave_track_1a98b8e8311e6b12bffd18a16b30302c8b" kindref="member">Paste</ref>(<sp/>0.0<sp/>,<sp/>dest<sp/>);</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(bResult);<sp/></highlight><highlight class="comment">//<sp/>TO<sp/>DO:<sp/>Actually<sp/>handle<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxUnusedVar(bResult);</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>;</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>copied<sp/>but<sp/>there<sp/>is<sp/>a<sp/>&apos;region&apos;,<sp/>so<sp/>the<sp/>&apos;region&apos;<sp/>must<sp/>be<sp/>a<sp/>&apos;point<sp/>label&apos;<sp/>so<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)regions.size()<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(merged)</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merged-&gt;<ref refid="class_track_1a0c71dd844bec490b9a291af9ec2bc127" kindref="member">Offset</ref>(</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regions.at(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>+<sp/>1).start<sp/>-<sp/>region.<ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>merged<sp/>)</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msClipboard-&gt;Add(<sp/>merged<sp/>);</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"></highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/>msClipT0<sp/>=<sp/>regions.front().start;</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/>msClipT1<sp/>=<sp/>regions.back().end;</highlight></codeline>
<codeline lineno="4640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"></highlight></codeline>
<codeline lineno="4642"><highlight class="normal"></highlight></codeline>
<codeline lineno="4643"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TrackPanel<sp/>callback<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4644" refid="class_audacity_project_1ab322d812e0ace74e6171a5aa5702dfd5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ab322d812e0ace74e6171a5aa5702dfd5" kindref="member">AudacityProject::TP_DisplayStatusMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;msg)</highlight></codeline>
<codeline lineno="4645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/>mStatusBar-&gt;SetStatusText(msg,<sp/><ref refid="_project_8h_1a788f1f168e5dd2f4411a457639a24674a55c8698cfddd36997feabda8755fc01b" kindref="member">mainStatusBarField</ref>);</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/>mLastStatusUpdateTime<sp/>=<sp/>::wxGetUTCTime();</highlight></codeline>
<codeline lineno="4648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"></highlight></codeline>
<codeline lineno="4650"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>status<sp/>indirectly,<sp/>using<sp/>the<sp/>command<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4651"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(more<sp/>overhead,<sp/>but<sp/>can<sp/>be<sp/>used<sp/>from<sp/>a<sp/>non-GUI<sp/>thread)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4652" refid="class_audacity_project_1aeb17027a7509e6fa0e267079e46a6d2e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1aeb17027a7509e6fa0e267079e46a6d2e" kindref="member">AudacityProject::SafeDisplayStatusMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*msg)</highlight></codeline>
<codeline lineno="4653"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_command_output_target" kindref="compound">CommandOutputTarget</ref><sp/>*<ref refid="lib_2expat_8h_1a15a257516a87decb971420e718853137" kindref="member">target</ref></highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_command_output_target" kindref="compound">CommandOutputTarget</ref>(<ref refid="class_target_factory_1a9e9b9854148982923ded8ce7dc3cac0e" kindref="member">TargetFactory::ProgressDefault</ref>(),</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_status_bar_target" kindref="compound">StatusBarTarget</ref>(*mStatusBar),</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_target_factory_1aa6f75ce7a6b1fee183b99d1b23d79eb5" kindref="member">TargetFactory::MessageDefault</ref>());</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_command_type" kindref="compound">CommandType</ref><sp/>*<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>=<sp/><ref refid="class_command_directory_1af75ad5df0389c85cf40f6940cb3219d4" kindref="member">CommandDirectory::Get</ref>()-&gt;<ref refid="class_command_directory_1a1e07e146ccfa51b9011084e8a467b385" kindref="member">LookUp</ref>(wxT(</highlight><highlight class="stringliteral">&quot;Message&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/>wxASSERT_MSG(type<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Message<sp/>command<sp/>not<sp/>found!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_command" kindref="compound">Command</ref><sp/>*statusCmd<sp/>=<sp/>type-&gt;<ref refid="class_command_type_1aa56833afa01d531c76063ece5269ced9" kindref="member">Create</ref>(target);</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/>statusCmd-&gt;<ref refid="class_command_1aa6e50d954dc875274043154ebc9b1ea0" kindref="member">SetParameter</ref>(wxT(</highlight><highlight class="stringliteral">&quot;MessageString&quot;</highlight><highlight class="normal">),<sp/>msg);</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_script_command_relay_1a72ea2b20ea4c5fae3fe5f995489ef394" kindref="member">ScriptCommandRelay::PostCommand</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>statusCmd);</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"></highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Although<sp/>the<sp/>status<sp/>hasn&apos;t<sp/>actually<sp/>been<sp/>set<sp/>yet,<sp/>updating<sp/>the<sp/>time<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>probably<sp/>accurate<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/>mLastStatusUpdateTime<sp/>=<sp/>::wxGetUTCTime();</highlight></codeline>
<codeline lineno="4667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"></highlight></codeline>
<codeline lineno="4669" refid="class_audacity_project_1a40bdac0f15bdb449ace4e5ee0137a64f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a40bdac0f15bdb449ace4e5ee0137a64f" kindref="member">AudacityProject::TP_DisplaySelection</ref>()</highlight></codeline>
<codeline lineno="4670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>audioTime;</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"></highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a10f4e839ded338c433a4cd46a6ba41b1" kindref="member">IsBusy</ref>())</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>audioTime<sp/>=<sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1adaf7977e341e8012b03dca8c733f24e1" kindref="member">GetStreamTime</ref>();</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>audioTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"></highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/>GetSelectionBar()-&gt;SetTimes(mViewInfo.selectedRegion.t0(),</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.selectedRegion.t1(),<sp/>audioTime);</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SPECTRAL_EDITING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/>GetSpectralSelectionBar()-&gt;SetFrequencies</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(mViewInfo.selectedRegion.f0(),<sp/>mViewInfo.selectedRegion.f1());</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4685"><highlight class="normal"></highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRuler)<sp/>{</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a10f4e839ded338c433a4cd46a6ba41b1" kindref="member">IsBusy</ref>()<sp/>&amp;&amp;<sp/>!mLockPlayRegion)</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRuler-&gt;SetPlayRegion(mViewInfo.selectedRegion.t0(),</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mViewInfo.selectedRegion.t1());</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cause<sp/>ruler<sp/>redraw<sp/>anyway,<sp/>because<sp/>we<sp/>may<sp/>be<sp/>zooming<sp/>or<sp/>scrolling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRuler-&gt;Refresh();</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"></highlight></codeline>
<codeline lineno="4696"><highlight class="normal"></highlight></codeline>
<codeline lineno="4697"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TrackPanel<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4698"><highlight class="normal"></highlight></codeline>
<codeline lineno="4699" refid="class_audacity_project_1add7d5b485b447d38c81ce5765c46f892" refkind="member"><highlight class="normal">wxSize<sp/><ref refid="class_audacity_project_1add7d5b485b447d38c81ce5765c46f892" kindref="member">AudacityProject::GetTPTracksUsableArea</ref>()</highlight></codeline>
<codeline lineno="4700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/>wxSize<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;GetTracksUsableArea(&amp;s.x,<sp/>&amp;s.y);</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="4704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"></highlight></codeline>
<codeline lineno="4706" refid="class_audacity_project_1a74843f1ffc65a232d56724e60d37b1ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a74843f1ffc65a232d56724e60d37b1ac" kindref="member">AudacityProject::RefreshTPTrack</ref>(<ref refid="class_track" kindref="compound">Track</ref>*<sp/>pTrk,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>refreshbacking<sp/></highlight><highlight class="comment">/*=<sp/>true*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;RefreshTrack(pTrk,<sp/>refreshbacking);</highlight></codeline>
<codeline lineno="4709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"></highlight></codeline>
<codeline lineno="4711"><highlight class="normal"></highlight></codeline>
<codeline lineno="4712"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TrackPanel<sp/>callback<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4713" refid="class_audacity_project_1a63805e66a54581286b874b34fda11bbc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a63805e66a54581286b874b34fda11bbc" kindref="member">AudacityProject::TP_PushState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;shortDesc,</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114" kindref="member">UndoPush</ref><sp/>flags)</highlight></codeline>
<codeline lineno="4715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/>PushState(desc,<sp/>shortDesc,<sp/>flags);</highlight></codeline>
<codeline lineno="4717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"></highlight></codeline>
<codeline lineno="4719"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TrackPanel<sp/>callback<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4720" refid="class_audacity_project_1a46956666a4bdf0d5985265ec1c39aada" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a46956666a4bdf0d5985265ec1c39aada" kindref="member">AudacityProject::TP_ModifyState</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bWantsAutoSave)</highlight></codeline>
<codeline lineno="4721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/>ModifyState(bWantsAutoSave);</highlight></codeline>
<codeline lineno="4723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"></highlight></codeline>
<codeline lineno="4725"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TrackPanel<sp/>callback<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4726" refid="class_audacity_project_1abf09f9db782321c24f25b731ad3f9e2c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1abf09f9db782321c24f25b731ad3f9e2c" kindref="member">AudacityProject::TP_ScrollLeft</ref>()</highlight></codeline>
<codeline lineno="4727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/>OnScrollLeft();</highlight></codeline>
<codeline lineno="4729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"></highlight></codeline>
<codeline lineno="4731"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TrackPanel<sp/>callback<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4732" refid="class_audacity_project_1a2d08004a5282258435ee13e8d8f42cdf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a2d08004a5282258435ee13e8d8f42cdf" kindref="member">AudacityProject::TP_ScrollRight</ref>()</highlight></codeline>
<codeline lineno="4733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/>OnScrollRight();</highlight></codeline>
<codeline lineno="4735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"></highlight></codeline>
<codeline lineno="4737"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TrackPanel<sp/>callback<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4738" refid="class_audacity_project_1a6bcb5cc263c2c8621ee85c9241686915" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a6bcb5cc263c2c8621ee85c9241686915" kindref="member">AudacityProject::TP_RedrawScrollbars</ref>()</highlight></codeline>
<codeline lineno="4739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/>FixScrollbars();</highlight></codeline>
<codeline lineno="4741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"></highlight></codeline>
<codeline lineno="4743" refid="class_audacity_project_1a858a26322f7db811cb4f3355d24840fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a858a26322f7db811cb4f3355d24840fc" kindref="member">AudacityProject::TP_HandleResize</ref>()</highlight></codeline>
<codeline lineno="4744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/>HandleResize();</highlight></codeline>
<codeline lineno="4746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"></highlight></codeline>
<codeline lineno="4748" refid="class_audacity_project_1a14f015b24a139589e118b23d3d1bb55d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a14f015b24a139589e118b23d3d1bb55d" kindref="member">AudacityProject::GetPlayRegion</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>playRegionStart,</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*playRegionEnd)</highlight></codeline>
<codeline lineno="4750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/>mRuler-&gt;GetPlayRegion(playRegionStart,<sp/>playRegionEnd);</highlight></codeline>
<codeline lineno="4752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"></highlight></codeline>
<codeline lineno="4754"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AudacityProject::AutoSave()</highlight></codeline>
<codeline lineno="4755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>SonifyBeginAutoSave();<sp/>//<sp/>part<sp/>of<sp/>RBD&apos;s<sp/>r10680<sp/>stuff<sp/>now<sp/>backed<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4757"><highlight class="normal"></highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>minimize<sp/>the<sp/>possibility<sp/>of<sp/>race<sp/>conditions,<sp/>we<sp/>first<sp/>write<sp/>to<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>with<sp/>the<sp/>extension<sp/>&quot;.tmp&quot;,<sp/>then<sp/>rename<sp/>the<sp/>file<sp/>to<sp/>.autosave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>projName;</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"></highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mFileName.IsEmpty())</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>projName<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;New<sp/>Project&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>projName<sp/>=<sp/>wxFileName(mFileName).GetName();</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"></highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="filters_8h_1af9d9c04c1350b9a6f62c9a09d378b91b" kindref="member">fn</ref><sp/>=<sp/>wxFileName(<ref refid="class_file_names_1aac977f49c953fa055c4795f3fe4fc13d" kindref="member">FileNames::AutoSaveDir</ref>(),</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>projName<sp/>+<sp/>wxString(wxT(</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>&quot;</highlight><highlight class="normal">))<sp/>+<sp/>CreateUniqueName()).GetFullPath();</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"></highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_var_setter" kindref="compound">VarSetter&lt;bool&gt;</ref><sp/>setter(&amp;mAutoSaving,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"></highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_auto_save_file" kindref="compound">AutoSaveFile</ref><sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WriteXMLHeader(buffer);</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WriteXML(buffer);</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"></highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFFile<sp/>saveFile;</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>saveFile.Open(fn<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.tmp&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer.<ref refid="class_auto_save_file_1a1d6874515c277b73386435723dfa2be5" kindref="member">Write</ref>(saveFile);</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>saveFile.Close();</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_x_m_l_file_writer_exception" kindref="compound">XMLFileWriterException</ref><sp/>&amp;exception)</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(wxString::Format(</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>write<sp/>to<sp/>file<sp/>\&quot;%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fn<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.tmp&quot;</highlight><highlight class="normal">)).c_str(),<sp/>exception.<ref refid="class_x_m_l_file_writer_exception_1a0866105969b12f6d9ab6e21d8210c1a8" kindref="member">GetMessage</ref>().c_str()),</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Writing<sp/>Autosave<sp/>File&quot;</highlight><highlight class="normal">),<sp/>wxICON_ERROR,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"></highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"></highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>that<sp/>we<sp/>have<sp/>a<sp/>NEW<sp/>auto-save<sp/>file,<sp/>DELETE<sp/>the<sp/>old<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/>DeleteCurrentAutoSaveFile();</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"></highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mAutoSaveFileName.IsEmpty())</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>could<sp/>not<sp/>remove<sp/>auto-save<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4798"><highlight class="normal"></highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="filefn_8cpp_1ae58d7952034354a30618f3c180de4bda" kindref="member">wxRenameFile</ref>(fn<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.tmp&quot;</highlight><highlight class="normal">),<sp/>fn<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.autosave&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>create<sp/>autosave<sp/>file:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fn<sp/>+</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;.autosave&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">),<sp/>wxICON_STOP,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"></highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/>mAutoSaveFileName<sp/>+=<sp/>fn<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.autosave&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no-op<sp/>cruft<sp/>that&apos;s<sp/>not<sp/>#ifdefed<sp/>for<sp/>NoteTrack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>above<sp/>for<sp/>further<sp/>comments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>SonifyEndAutoSave();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"></highlight></codeline>
<codeline lineno="4812"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AudacityProject::DeleteCurrentAutoSaveFile()</highlight></codeline>
<codeline lineno="4813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mAutoSaveFileName.IsEmpty())</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="filefn_8cpp_1a72d2e4ef03d51c0d59c2cb788462d600" kindref="member">wxFileExists</ref>(mAutoSaveFileName))</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="filefn_8cpp_1a147f3601590c8c29a97d1101e03b2b90" kindref="member">wxRemoveFile</ref>(mAutoSaveFileName))</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>remove<sp/>old<sp/>autosave<sp/>file:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAutoSaveFileName,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">),<sp/>wxICON_STOP,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"></highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mAutoSaveFileName<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"></highlight></codeline>
<codeline lineno="4830"><highlight class="normal"></highlight></codeline>
<codeline lineno="4831" refid="class_audacity_project_1adf30025df48438cd0a547361051ccfe5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1adf30025df48438cd0a547361051ccfe5" kindref="member">AudacityProject::MayStartMonitoring</ref>()</highlight></codeline>
<codeline lineno="4832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_EXTRA_MONITORING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAlwaysMonitor;</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;GUI/AlwaysMonitor&quot;</highlight><highlight class="normal">),<sp/>&amp;bAlwaysMonitor,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!bAlwaysMonitor<sp/>)</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"></highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter_tool_bar" kindref="compound">MeterToolBar</ref><sp/>*<sp/>pToolBar<sp/>=<sp/>GetMeterToolBar();</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pToolBar<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/>pToolBar-&gt;StartMonitoring();</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"></highlight></codeline>
<codeline lineno="4846" refid="class_audacity_project_1a0cfd55bf42d75ca70c720aeea07ce44a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a0cfd55bf42d75ca70c720aeea07ce44a" kindref="member">AudacityProject::OnAudioIORate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>)</highlight></codeline>
<codeline lineno="4847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>display;</highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/>display<sp/>=<sp/>wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Actual<sp/>Rate:<sp/>%d&quot;</highlight><highlight class="normal">),<sp/>rate);</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/>y;</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/><sp/>mStatusBar-&gt;GetTextExtent(display,<sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>widths[]<sp/>=<sp/>{0,<sp/>GetControlToolBar()-&gt;WidthForStatusBar(mStatusBar),<sp/>-1,<sp/>x+50};</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/><sp/>mStatusBar-&gt;SetStatusWidths(4,<sp/>widths);</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/>mStatusBar-&gt;SetStatusText(display,<sp/><ref refid="_project_8h_1a788f1f168e5dd2f4411a457639a24674ae52f4517ebd63c57d15261d9987a8802" kindref="member">rateStatusBarField</ref>);</highlight></codeline>
<codeline lineno="4855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"></highlight></codeline>
<codeline lineno="4857" refid="class_audacity_project_1aba2c04fb5936d4a4f1359b2de1577eea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1aba2c04fb5936d4a4f1359b2de1577eea" kindref="member">AudacityProject::OnAudioIOStartRecording</ref>()</highlight></codeline>
<codeline lineno="4858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>recording<sp/>is<sp/>started,<sp/>auto-save<sp/>the<sp/>file.<sp/>The<sp/>file<sp/>will<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty<sp/>tracks<sp/>at<sp/>the<sp/>bottom<sp/>where<sp/>the<sp/>recording<sp/>will<sp/>be<sp/>put<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/>AutoSave();</highlight></codeline>
<codeline lineno="4862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"></highlight></codeline>
<codeline lineno="4864"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>called<sp/>after<sp/>recording<sp/>has<sp/>stopped<sp/>and<sp/>all<sp/>tracks<sp/>have<sp/>flushed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4865" refid="class_audacity_project_1aa406cfb804d52d8a282892818aa1de43" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1aa406cfb804d52d8a282892818aa1de43" kindref="member">AudacityProject::OnAudioIOStopRecording</ref>()</highlight></codeline>
<codeline lineno="4866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>push<sp/>state<sp/>if<sp/>we<sp/>were<sp/>capturing<sp/>and<sp/>not<sp/>monitoring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetAudioIOToken()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>history</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PushState(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Recorded<sp/>Audio&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Record&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"></highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>timer<sp/>record<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsTimerRecordCancelled())</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_menus_8h_1a2bfcaa1c79b39fdb3854382f42655944" kindref="member">OnUndo</ref>();</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResetTimerRecordFlag();</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"></highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Refresh<sp/>the<sp/>project<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FixScrollbars();</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RedrawProject();</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"></highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>all<sp/>cached<sp/>files<sp/>to<sp/>disk,<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/><sp/>mDirManager-&gt;WriteCacheToDisk();</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"></highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>auto-save<sp/>again<sp/>to<sp/>get<sp/>the<sp/>project<sp/>to<sp/>a<sp/>&quot;normal&quot;<sp/>state<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/>AutoSave();</highlight></codeline>
<codeline lineno="4890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"></highlight></codeline>
<codeline lineno="4892" refid="class_audacity_project_1a722908a21d680a3161337c4985a7d2a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a722908a21d680a3161337c4985a7d2a0" kindref="member">AudacityProject::OnAudioIONewBlockFiles</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_auto_save_file" kindref="compound">AutoSaveFile</ref><sp/>&amp;<sp/>blockFileLog)</highlight></codeline>
<codeline lineno="4893"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>blockfiles<sp/>have<sp/>been<sp/>created,<sp/>so<sp/>add<sp/>them<sp/>to<sp/>the<sp/>auto-save<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mAutoSaveFileName.IsEmpty())</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFFile<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>(mAutoSaveFileName,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f.IsOpened())</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>recording<sp/>going,<sp/>there&apos;s<sp/>not<sp/>much<sp/>we<sp/>can<sp/>do<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blockFileLog.<ref refid="class_auto_save_file_1a1aa9108ee794fb12ce9958769dc82326" kindref="member">Append</ref>(f);</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.Close();</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"></highlight></codeline>
<codeline lineno="4905" refid="class_audacity_project_1ad080aa9425ceddfd2a5c63f307d3b01d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ad080aa9425ceddfd2a5c63f307d3b01d" kindref="member">AudacityProject::SetSnapTo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>snap)</highlight></codeline>
<codeline lineno="4906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/>AS_SetSnapTo(snap);</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetSelectionBar())<sp/>{</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetSelectionBar()-&gt;SetSnapTo(snap);</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"></highlight></codeline>
<codeline lineno="4913" refid="class_audacity_project_1aa13284cda2d866aec45370238b62e9b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1aa13284cda2d866aec45370238b62e9b2" kindref="member">AudacityProject::GetSnapTo</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4914"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSnapTo;</highlight></codeline>
<codeline lineno="4916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"></highlight></codeline>
<codeline lineno="4918" refid="class_audacity_project_1aa24fdad451943202139086ff4c4f48bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1aa24fdad451943202139086ff4c4f48bc" kindref="member">AudacityProject::IsSyncLocked</ref>()</highlight></codeline>
<codeline lineno="4919"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SYNC_LOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIsSyncLocked;</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4924"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"></highlight></codeline>
<codeline lineno="4927" refid="class_audacity_project_1a5227853039a96989a6955d06c988ac50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a5227853039a96989a6955d06c988ac50" kindref="member">AudacityProject::SetSyncLock</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag)</highlight></codeline>
<codeline lineno="4928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>!=<sp/>mIsSyncLocked)<sp/>{</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIsSyncLocked<sp/>=<sp/>flag;</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetTrackPanel())</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetTrackPanel()-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"></highlight></codeline>
<codeline lineno="4936" refid="class_audacity_project_1abb34a6ea6206cd7075b3b79becf7a76c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1abb34a6ea6206cd7075b3b79becf7a76c" kindref="member">AudacityProject::DoTrackMute</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="midifns_8c_1a700ad69103b8eaa8607b06ca7da9ad1f" kindref="member">exclusive</ref>)</highlight></codeline>
<codeline lineno="4937"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/>HandleTrackMute(t,<sp/>exclusive);</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"></highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>mixer<sp/>board,<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_mixer_board" kindref="compound">MixerBoard</ref>*<sp/>pMixerBoard<sp/>=<sp/>this-&gt;GetMixerBoard();</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMixerBoard)</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMixerBoard-&gt;<ref refid="class_mixer_board_1ab2987906e2aa9836957fd6fc69f77ec5" kindref="member">UpdateMute</ref>();<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>for<sp/>all<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMixerBoard-&gt;<ref refid="class_mixer_board_1ad5f12f0ebc69817167f253213b046eb4" kindref="member">UpdateSolo</ref>();<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>for<sp/>all<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"></highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;UpdateAccessibility();</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"></highlight></codeline>
<codeline lineno="4952" refid="class_audacity_project_1a324ae85470d0e933514293ece3afff19" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a324ae85470d0e933514293ece3afff19" kindref="member">AudacityProject::DoTrackSolo</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="midifns_8c_1a700ad69103b8eaa8607b06ca7da9ad1f" kindref="member">exclusive</ref>)</highlight></codeline>
<codeline lineno="4953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/>HandleTrackSolo(t,<sp/>exclusive);</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"></highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>mixer<sp/>board,<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_mixer_board" kindref="compound">MixerBoard</ref>*<sp/>pMixerBoard<sp/>=<sp/>this-&gt;GetMixerBoard();</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMixerBoard)</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMixerBoard-&gt;<ref refid="class_mixer_board_1ab2987906e2aa9836957fd6fc69f77ec5" kindref="member">UpdateMute</ref>();<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>for<sp/>all<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMixerBoard-&gt;<ref refid="class_mixer_board_1ad5f12f0ebc69817167f253213b046eb4" kindref="member">UpdateSolo</ref>();<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>for<sp/>all<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"></highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;UpdateAccessibility();</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/>mTrackPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"></highlight></codeline>
<codeline lineno="4968" refid="class_audacity_project_1a02634f627beb9c50864705a60fbdff1d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a02634f627beb9c50864705a60fbdff1d" kindref="member">AudacityProject::SetTrackGain</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/>track,<sp/><ref refid="class_l_w_slider" kindref="compound">LWSlider</ref><sp/>*<sp/>slider)</highlight></codeline>
<codeline lineno="4969"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(track);</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>!=<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newValue<sp/>=<sp/>slider-&gt;<ref refid="class_l_w_slider_1a69abf4f4b2b97ba6bc710cf9fb18806e" kindref="member">Get</ref>();</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"></highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>link<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mTracks-&gt;GetLink(track));</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(track)-&gt;SetGain(newValue);</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link)</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>link-&gt;<ref refid="class_wave_track_1aa64cfe45ca3be7f2067f263784d2a864" kindref="member">SetGain</ref>(newValue);</highlight></codeline>
<codeline lineno="4979"><highlight class="normal"></highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/>PushState(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Adjusted<sp/>gain&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Gain&quot;</highlight><highlight class="normal">),<sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114acfa76b1aba6d15dde4a0f1ee1057481f" kindref="member">UndoPush::CONSOLIDATE</ref>);</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"></highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/>GetTrackPanel()-&gt;RefreshTrack(track);</highlight></codeline>
<codeline lineno="4983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"></highlight></codeline>
<codeline lineno="4985" refid="class_audacity_project_1ab103da1bf74b92970af29521db6863d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ab103da1bf74b92970af29521db6863d5" kindref="member">AudacityProject::SetTrackPan</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/>track,<sp/><ref refid="class_l_w_slider" kindref="compound">LWSlider</ref><sp/>*<sp/>slider)</highlight></codeline>
<codeline lineno="4986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(track);</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>!=<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newValue<sp/>=<sp/>slider-&gt;<ref refid="class_l_w_slider_1a69abf4f4b2b97ba6bc710cf9fb18806e" kindref="member">Get</ref>();</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"></highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>link<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mTracks-&gt;GetLink(track));</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(track)-&gt;SetPan(newValue);</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link)</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>link-&gt;<ref refid="class_wave_track_1a8711fa41c9fcec3519d80286a96f049d" kindref="member">SetPan</ref>(newValue);</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"></highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/>PushState(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Adjusted<sp/>Pan&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Pan&quot;</highlight><highlight class="normal">),<sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114acfa76b1aba6d15dde4a0f1ee1057481f" kindref="member">UndoPush::CONSOLIDATE</ref>);</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"></highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/><sp/>GetTrackPanel()-&gt;RefreshTrack(track);</highlight></codeline>
<codeline lineno="5000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"></highlight></codeline>
<codeline lineno="5003" refid="class_audacity_project_1a8e9b15c9e4a0ce0341613001ec7ba1de" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a8e9b15c9e4a0ce0341613001ec7ba1de" kindref="member">AudacityProject::RemoveTrack</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/>toRemove)</highlight></codeline>
<codeline lineno="5004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>was<sp/>focused,<sp/>reassign<sp/>focus<sp/>to<sp/>the<sp/>next<sp/>or,<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unavailable,<sp/>the<sp/>previous<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mTrackPanel-&gt;GetFocusedTrack()<sp/>==<sp/>toRemove)<sp/>{</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>mTracks-&gt;GetNext(toRemove,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>mTracks-&gt;GetPrev(toRemove,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;SetFocusedTrack(t);<sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>okay<sp/>if<sp/>this<sp/>is<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"></highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>=<sp/>toRemove-&gt;<ref refid="class_track_1a670b88686f99e151d6a305a709f130b1" kindref="member">GetName</ref>();</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*partner<sp/>=<sp/>toRemove-&gt;<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>();</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"></highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toRemove-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>mixer<sp/>board<sp/>displayed<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mixer_board" kindref="compound">MixerBoard</ref>*<sp/>pMixerBoard<sp/>=<sp/>this-&gt;GetMixerBoard();</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMixerBoard)</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMixerBoard-&gt;<ref refid="class_mixer_board_1aeb48716b9845f75acadffea0682c8bb8" kindref="member">RemoveTrackCluster</ref>((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)toRemove);<sp/></highlight><highlight class="comment">//<sp/>Will<sp/>remove<sp/>partner<sp/>shown<sp/>in<sp/>same<sp/>cluster.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"></highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/>mTracks-&gt;Remove(toRemove,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner)<sp/>{</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTracks-&gt;Remove(partner,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"></highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mTracks-&gt;IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTrackPanel-&gt;SetFocusedTrack(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"></highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/><sp/>PushState(</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Removed<sp/>track<sp/>&apos;%s.&apos;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name.c_str()),</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Track<sp/>Remove&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"></highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/><sp/>TP_RedrawScrollbars();</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/><sp/>HandleResize();</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/><sp/>GetTrackPanel()-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"></highlight></codeline>
<codeline lineno="5045" refid="class_audacity_project_1a1568c12232c80194202937e7ee03af70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a1568c12232c80194202937e7ee03af70" kindref="member">AudacityProject::HandleTrackMute</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="midifns_8c_1a700ad69103b8eaa8607b06ca7da9ad1f" kindref="member">exclusive</ref>)</highlight></codeline>
<codeline lineno="5046"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;exclusive&quot;<sp/>mute<sp/>means<sp/>mute<sp/>the<sp/>chosen<sp/>track<sp/>and<sp/>unmute<sp/>all<sp/>others.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exclusive)</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mTracks);</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i)<sp/>{</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="class_track_1a7f7b67377a0c8b9ebe20394380872032" kindref="member">SetMute</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>also<sp/>mute<sp/>the<sp/>linked<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="class_track_1a7f7b67377a0c8b9ebe20394380872032" kindref="member">SetMute</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="class_track_1a7f7b67377a0c8b9ebe20394380872032" kindref="member">SetMute</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="class_track_1a3e05f682539978be493f9be110082aa3" kindref="member">SetSolo</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normal<sp/>click<sp/>toggles<sp/>this<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a7f7b67377a0c8b9ebe20394380872032" kindref="member">SetMute</ref>(!t-&gt;<ref refid="class_track_1aebabe796d0b3222ef7d23ae13a62769b" kindref="member">GetMute</ref>());</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>mute<sp/>the<sp/>same<sp/>on<sp/>both,<sp/>if<sp/>a<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>muted<sp/>=<sp/>t-&gt;<ref refid="class_track_1aebabe796d0b3222ef7d23ae13a62769b" kindref="member">GetMute</ref>();</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mTracks);</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>t)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>for<sp/>this<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>next<sp/>one,<sp/>since<sp/>linked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="class_track_1a7f7b67377a0c8b9ebe20394380872032" kindref="member">SetMute</ref>(muted);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>mute<sp/>it<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"></highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsSoloSimple()<sp/>||<sp/>IsSoloNone())</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mTracks);</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPlaying=0;</highlight></codeline>
<codeline lineno="5088"><highlight class="normal"></highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>also<sp/>set<sp/>a<sp/>solo<sp/>indicator<sp/>if<sp/>we<sp/>have<sp/>just<sp/>one<sp/>track<sp/>/<sp/>stereo<sp/>pair<sp/>playing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>clear<sp/>solo<sp/>on<sp/>everything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i)<sp/>{</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!i-&gt;<ref refid="class_track_1aebabe796d0b3222ef7d23ae13a62769b" kindref="member">GetMute</ref>())</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nPlaying<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>count<sp/>this<sp/>one<sp/>as<sp/>it<sp/>is<sp/>linked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"></highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i)<sp/>{</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="class_track_1a3e05f682539978be493f9be110082aa3" kindref="member">SetSolo</ref>(<sp/>(nPlaying==1)<sp/>&amp;&amp;<sp/>!i-&gt;<ref refid="class_track_1aebabe796d0b3222ef7d23ae13a62769b" kindref="member">GetMute</ref>()<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>set<sp/>both<sp/>of<sp/>a<sp/>stereo<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/><sp/>ModifyState(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"></highlight></codeline>
<codeline lineno="5111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Type<sp/>of<sp/>solo<sp/>(standard<sp/>or<sp/>simple)<sp/>follows<sp/>the<sp/>set<sp/>preference,<sp/>unless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>alternate<sp/>==<sp/>true,<sp/>which<sp/>causes<sp/>the<sp/>opposite<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5113" refid="class_audacity_project_1ab4a82bb4631f5fdacd5c09663ed65265" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1ab4a82bb4631f5fdacd5c09663ed65265" kindref="member">AudacityProject::HandleTrackSolo</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alternate)</highlight></codeline>
<codeline lineno="5114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSoloMultiple<sp/>=<sp/>!IsSoloSimple()<sp/>^<sp/>alternate;</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"></highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Standard<sp/>and<sp/>Simple<sp/>solo<sp/>have<sp/>opposite<sp/>defaults:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Standard<sp/>-<sp/>Behaves<sp/>as<sp/>individual<sp/>buttons,<sp/>shift=radio<sp/>buttons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Simple<sp/><sp/><sp/>-<sp/>Behaves<sp/>as<sp/>radio<sp/>buttons,<sp/>shift=individual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>addition,<sp/>Simple<sp/>solo<sp/>will<sp/>mute/unmute<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>in<sp/>standard<sp/>radio<sp/>button<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bSoloMultiple<sp/>)</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a3e05f682539978be493f9be110082aa3" kindref="member">SetSolo</ref>(<sp/>!t-&gt;<ref refid="class_track_1acd2518a3c8c5b82f2a5bd45ce074d781" kindref="member">GetSolo</ref>()<sp/>);</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>soloed<sp/>=<sp/>t-&gt;<ref refid="class_track_1acd2518a3c8c5b82f2a5bd45ce074d781" kindref="member">GetSolo</ref>();</highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mTracks);</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>t)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>for<sp/>this<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>next<sp/>one,<sp/>since<sp/>linked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="class_track_1a3e05f682539978be493f9be110082aa3" kindref="member">SetSolo</ref>(soloed);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>solo<sp/>it<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normal<sp/>click<sp/>solo<sp/>this<sp/>track<sp/>only,<sp/>mute<sp/>everything<sp/>else.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OR<sp/>unmute<sp/>and<sp/>unsolo<sp/>everything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mTracks);</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bWasSolo<sp/>=<sp/>t-&gt;<ref refid="class_track_1acd2518a3c8c5b82f2a5bd45ce074d781" kindref="member">GetSolo</ref>();</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i)<sp/>{</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i==t<sp/>)</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="class_track_1a3e05f682539978be493f9be110082aa3" kindref="member">SetSolo</ref>(!bWasSolo);</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>IsSoloSimple()<sp/>)</highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="class_track_1a7f7b67377a0c8b9ebe20394380872032" kindref="member">SetMute</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="class_track_1a3e05f682539978be493f9be110082aa3" kindref="member">SetSolo</ref>(!bWasSolo);</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>IsSoloSimple()<sp/>)</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="class_track_1a7f7b67377a0c8b9ebe20394380872032" kindref="member">SetMute</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="class_track_1a3e05f682539978be493f9be110082aa3" kindref="member">SetSolo</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>IsSoloSimple()<sp/>)</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="class_track_1a7f7b67377a0c8b9ebe20394380872032" kindref="member">SetMute</ref>(!bWasSolo);</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/><sp/>ModifyState(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"></highlight></codeline>
<codeline lineno="5170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Keyboard<sp/>capture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5171"><highlight class="normal"></highlight></codeline>
<codeline lineno="5172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5173" refid="class_audacity_project_1a52fa5fcf43219a6ad4f3a7fe284aee79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a52fa5fcf43219a6ad4f3a7fe284aee79" kindref="member">AudacityProject::HasKeyboardCapture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxWindow<sp/>*handler)</highlight></codeline>
<codeline lineno="5174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetKeyboardCaptureHandler()<sp/>==<sp/>handler;</highlight></codeline>
<codeline lineno="5176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"></highlight></codeline>
<codeline lineno="5178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5179" refid="class_audacity_project_1a917fe96ed9b1e2ceafb134de1212975f" refkind="member"><highlight class="normal">wxWindow<sp/>*<ref refid="class_audacity_project_1a917fe96ed9b1e2ceafb134de1212975f" kindref="member">AudacityProject::GetKeyboardCaptureHandler</ref>()</highlight></codeline>
<codeline lineno="5180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(project)</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>project-&gt;mKeyboardCaptureHandler;</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"></highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="5188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5189"><highlight class="normal"></highlight></codeline>
<codeline lineno="5190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5191" refid="class_audacity_project_1aa01e7e07556ae3ebb90b060dcd4395b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1aa01e7e07556ae3ebb90b060dcd4395b1" kindref="member">AudacityProject::CaptureKeyboard</ref>(wxWindow<sp/>*handler)</highlight></codeline>
<codeline lineno="5192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(project)</highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(project-&gt;mKeyboardCaptureHandler<sp/>==<sp/>NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>project-&gt;mKeyboardCaptureHandler<sp/>=<sp/>handler;</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"></highlight></codeline>
<codeline lineno="5201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5202" refid="class_audacity_project_1a6565795f4dde7aa65c854044d81d03ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_audacity_project_1a6565795f4dde7aa65c854044d81d03ea" kindref="member">AudacityProject::ReleaseKeyboard</ref>(wxWindow<sp/>*<sp/></highlight><highlight class="comment">/*<sp/>handler<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(project)</highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(project-&gt;mKeyboardCaptureHandler<sp/>==<sp/>handler);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>project-&gt;mKeyboardCaptureHandler<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5210"><highlight class="normal"></highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5212"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/Project.cpp"/>
  </compounddef>
</doxygen>
