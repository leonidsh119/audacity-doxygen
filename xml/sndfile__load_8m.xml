<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sndfile__load_8m" kind="file" language="Objective-C">
    <compoundname>sndfile_load.m</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sndfile__load_8m_1a9c5de34b1da12bf481ee0aab4cb871b3" prot="public" static="no" mutable="no">
        <type></type>
        <definition>function[data fs]</definition>
        <argsstring>[data fs]</argsstring>
        <name>function</name>
        <initializer>= sndfile_load (<ref refid="test__portburn_8cpp_1a7efa5e9c7494c7d4586359300221aa5d" kindref="member">filename</ref>)

<ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (nargin != 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" line="25" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sndfile__load_8m_1ac5309ad522c97c94c294347821fdd375" prot="public" static="no" mutable="no">
        <type><ref refid="sndfile__save_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></type>
        <definition>endif samplerate</definition>
        <argsstring></argsstring>
        <name>samplerate</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sndfile__load_8m_1a137ab875f072dd057d1a5e0179c11075" prot="public" static="no" mutable="no">
        <type></type>
        <definition>samplingrate</definition>
        <argsstring></argsstring>
        <name>samplingrate</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" line="32" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sndfile__load_8m_1a4bf1681c521c89d85254d86b7ebc9183" prot="public" static="no" mutable="no">
        <type></type>
        <definition>wavedata</definition>
        <argsstring></argsstring>
        <name>wavedata</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" line="33" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fs</definition>
        <argsstring></argsstring>
        <name>fs</name>
        <initializer>= <ref refid="sndfile__save_8m_1ac5309ad522c97c94c294347821fdd375" kindref="member">samplerate</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" line="39" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sndfile__load_8m_1a9c50c12ea67b0646bd2dc53803131ccc" prot="public" static="no" mutable="no">
        <type><ref refid="sndfile__save_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></type>
        <definition>endif data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <initializer>= <ref refid="sndfile__save_8m_1a4bf1681c521c89d85254d86b7ebc9183" kindref="member">wavedata</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" line="47" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>error</definition>
        <argsstring>(&quot;Need an input filename&quot;)</argsstring>
        <name>error</name>
        <param>
          <type>&quot;Need an input <ref refid="test__portburn_8cpp_1a7efa5e9c7494c7d4586359300221aa5d" kindref="member">filename</ref>&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sndfile__load_8m_1a2e42535874848cdfc8a19e67b71befc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eval</definition>
        <argsstring>(sprintf(&apos;load-f%s&apos;, filename))</argsstring>
        <name>eval</name>
        <param>
          <type>sprintf(&apos;load-<ref refid="checksum_8c_1ae747d72a1a803f5ff4a4b2602857d93b" kindref="member">f</ref>%<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>&apos;, <ref refid="test__portburn_8cpp_1a7efa5e9c7494c7d4586359300221aa5d" kindref="member">filename</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sndfile__load_8m_1a8989174dcc3b3cbdd3552d96fa4686ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(samplerate &gt; 0)</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="sndfile__save_8m_1ac5309ad522c97c94c294347821fdd375" kindref="member">samplerate</ref></type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sndfile__load_8m_1a3c8cdae848a541ff17df7ab6661ee766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>elseif</definition>
        <argsstring>(samplingrate &gt; 0)</argsstring>
        <name>elseif</name>
        <param>
          <type><ref refid="sndfile__load_8m_1a137ab875f072dd057d1a5e0179c11075" kindref="member">samplingrate</ref></type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sndfile__load_8m_1af1e2cc05b1fc125e7adaa40a9fb76310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>else</type>
        <definition>else error</definition>
        <argsstring>(&quot;Not able to find sample rate.&quot;)</argsstring>
        <name>error</name>
        <param>
          <type>&quot;Not able to find sample rate.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sndfile__load_8m_1a454f5d9aa12f851a3e2aca32277e37f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sndfile__save_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></type>
        <definition>endif if</definition>
        <argsstring>(max(size(wavedata)) &gt; 1)</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="_t_d_stretch_8cpp_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(<ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>(<ref refid="sndfile__save_8m_1a4bf1681c521c89d85254d86b7ebc9183" kindref="member">wavedata</ref>))</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sndfile__load_8m_1aafa1258868ef109850f7e1b390c31ab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>else</type>
        <definition>else error</definition>
        <argsstring>(&quot;Not able to find waveform data.&quot;)</argsstring>
        <name>error</name>
        <param>
          <type>&quot;Not able to find waveform data.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m" line="49" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">##<sp/>Copyright<sp/>(C)<sp/>2002-2011<sp/><sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">##</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">##</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">##</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>along<sp/>with<sp/>this<sp/>file.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>-*-<sp/>texinfo<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>@deftypefn<sp/>{Function<sp/>File}<sp/>{}<sp/>sndfile_load<sp/>(@var{filename})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Load<sp/>data<sp/>from<sp/>the<sp/>file<sp/>given<sp/>by<sp/>@var{filename}.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>@end<sp/>deftypefn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Author:<sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo<sp/>&lt;erikd@mega-nerd.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Description:<sp/>Load<sp/>the<sp/>sound<sp/>data<sp/>from<sp/>the<sp/>given<sp/>file<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="sndfile__load_8m_1a9c5de34b1da12bf481ee0aab4cb871b3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>[data<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">fs</ref>]<sp/>=<sp/>sndfile_load<sp/>(<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="sndfile__load_8m_1a8989174dcc3b3cbdd3552d96fa4686ba" kindref="member">if</ref><sp/>(nargin<sp/>!=<sp/>1),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref><sp/>(&quot;Need<sp/>an<sp/>input<sp/><ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>&quot;)<sp/>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="sndfile__load_8m_1ac5309ad522c97c94c294347821fdd375" refkind="member"><highlight class="normal"><ref refid="sndfile__load_8m_1ac5309ad522c97c94c294347821fdd375" kindref="member">samplerate</ref><sp/>=<sp/>-1<sp/>;</highlight></codeline>
<codeline lineno="32" refid="sndfile__load_8m_1a137ab875f072dd057d1a5e0179c11075" refkind="member"><highlight class="normal"><ref refid="sndfile__load_8m_1a137ab875f072dd057d1a5e0179c11075" kindref="member">samplingrate</ref><sp/>=<sp/>-1<sp/>;</highlight></codeline>
<codeline lineno="33" refid="sndfile__load_8m_1a4bf1681c521c89d85254d86b7ebc9183" refkind="member"><highlight class="normal"><ref refid="sndfile__load_8m_1a4bf1681c521c89d85254d86b7ebc9183" kindref="member">wavedata</ref><sp/>=<sp/>-1<sp/>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="sndfile__load_8m_1a2e42535874848cdfc8a19e67b71befc9" kindref="member">eval</ref><sp/>(sprintf<sp/>(&apos;load<sp/>-<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>%<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>&apos;,<sp/>filename))<sp/>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="sndfile__load_8m_1a8989174dcc3b3cbdd3552d96fa4686ba" kindref="member">if</ref><sp/>(<ref refid="sndfile__load_8m_1ac5309ad522c97c94c294347821fdd375" kindref="member">samplerate</ref><sp/>&gt;<sp/>0),</highlight></codeline>
<codeline lineno="39" refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref><sp/>=<sp/>samplerate<sp/>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="sndfile__load_8m_1a3c8cdae848a541ff17df7ab6661ee766" kindref="member">elseif</ref><sp/>(<ref refid="sndfile__load_8m_1a137ab875f072dd057d1a5e0179c11075" kindref="member">samplingrate</ref><sp/>&gt;<sp/>0),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref><sp/>=<sp/>samplingrate<sp/>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">else</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref><sp/>(&quot;Not<sp/>able<sp/>to<sp/>find<sp/>sample<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>.&quot;)<sp/>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="sndfile__load_8m_1a8989174dcc3b3cbdd3552d96fa4686ba" kindref="member">if</ref><sp/>(<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>(<ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>(<ref refid="sndfile__load_8m_1a4bf1681c521c89d85254d86b7ebc9183" kindref="member">wavedata</ref>))<sp/>&gt;<sp/>1),</highlight></codeline>
<codeline lineno="47" refid="sndfile__load_8m_1a9c50c12ea67b0646bd2dc53803131ccc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>wavedata<sp/>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">else</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref><sp/>(&quot;Not<sp/>able<sp/>to<sp/>find<sp/>waveform<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>.&quot;)<sp/>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">endfunction</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/Octave/sndfile_load.m"/>
  </compounddef>
</doxygen>
