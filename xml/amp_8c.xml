<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="amp_8c" kind="file" language="C++">
    <compoundname>amp.c</compoundname>
    <includes local="no">math.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="lv2_8h" local="yes">lv2/lv2plug.in/ns/lv2core/lv2.h</includes>
    <incdepgraph>
      <node id="26887">
        <label>stdint.h</label>
      </node>
      <node id="26885">
        <label>stdlib.h</label>
      </node>
      <node id="26884">
        <label>math.h</label>
      </node>
      <node id="26886">
        <label>lv2/lv2plug.in/ns/lv2core/lv2.h</label>
        <link refid="lv2_8h"/>
        <childnode refid="26887" relation="include">
        </childnode>
      </node>
      <node id="26883">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c</label>
        <link refid="amp.c"/>
        <childnode refid="26884" relation="include">
        </childnode>
        <childnode refid="26885" relation="include">
        </childnode>
        <childnode refid="26886" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_amp" prot="public">Amp</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="amp_8c_1aff84d23ea505ede5cab67a1e8d7940b2" prot="public" static="no">
        <name>AMP_URI</name>
        <initializer>&quot;http://<ref refid="latency_8c_1a7d946209d777cb95fe30364b8d321207" kindref="member">lv2plug.in</ref>/plugins/eg-amp&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Include standard C headers LV2 headers are based on the URI of the specification they come from, so a consistent convention can be used even for unofficial extensions. The URI of the core LV2 specification is <ulink url="http://lv2plug.in/ns/lv2core">http://lv2plug.in/ns/lv2core</ulink>, by replacing <computeroutput><ulink url="http:/">http:/</ulink></computeroutput> with <computeroutput>lv2</computeroutput> any header in the specification bundle can be included, in this case <computeroutput><ref refid="lv2_8h" kindref="compound">lv2.h</ref></computeroutput>. The URI is the identifier for a plugin, and how the host associates this implementation in code with its description in data. In this plugin it is only used once in the code, but defining the plugin URI at the top of the file is a good convention to follow. If this URI does not match that used in the data files, the host will fail to load the plugin. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" line="38" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="amp_8c_1a53ed5adfe4689d3eb8a352c0666e21db" prot="public" static="no">
        <name>DB_CO</name>
        <param><defname>g</defname></param>
        <initializer>((g) &gt; -90.0f ? powf(10.0f, (g) * 0.05f) : 0.0f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define a macro for converting a gain in dB to a coefficient. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" line="127" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="amp_8c_1a41301420b6a2483a529413860721007a" prot="public" static="no">
        <name>PortIndex</name>
        <enumvalue id="bindings__test__plugin_8c_1a41301420b6a2483a529413860721007aa7664bda8214c1b178249882fb87dde68" prot="public">
          <name>TEST_CONTROL_IN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="bindings__test__plugin_8c_1a41301420b6a2483a529413860721007aaca283236c3ff512846cc0876ce81451b" prot="public">
          <name>TEST_CONTROL_OUT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="bindings__test__plugin_8c_1a41301420b6a2483a529413860721007aaf1d6359d2ba18efeb0bdf69a27532bc8" prot="public">
          <name>TEST_AUDIO_IN</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="bindings__test__plugin_8c_1a41301420b6a2483a529413860721007aa875ff739e5a5d33692daca96435324b1" prot="public">
          <name>TEST_AUDIO_OUT</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="amp_8c_1a41301420b6a2483a529413860721007aa7204086dfc06b741fded0b0370c6578b" prot="public">
          <name>AMP_GAIN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="amp_8c_1a41301420b6a2483a529413860721007aaea75572fc580f72e841ae523c9c73250" prot="public">
          <name>AMP_INPUT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="amp_8c_1a41301420b6a2483a529413860721007aa3e9aec45024c82e25283fa24a6fe4df7" prot="public">
          <name>AMP_OUTPUT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="midigate_8c_1a41301420b6a2483a529413860721007aa338f6b172a143343e8cd61504de57a44" prot="public">
          <name>MIDIGATE_CONTROL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="midigate_8c_1a41301420b6a2483a529413860721007aa69bd4015ba520d5ef468c89f50981973" prot="public">
          <name>MIDIGATE_IN</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="midigate_8c_1a41301420b6a2483a529413860721007aaa554ccc902d121f56142557f625b6b73" prot="public">
          <name>MIDIGATE_OUT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="examploscope_8c_1a41301420b6a2483a529413860721007aa677684cd64ac285fc546d8571920dfe2" prot="public">
          <name>SCO_CONTROL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="examploscope_8c_1a41301420b6a2483a529413860721007aaa12a027971221dc3dab43a6828f0d87e" prot="public">
          <name>SCO_NOTIFY</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="examploscope_8c_1a41301420b6a2483a529413860721007aa5cf16d4700246896e04fac373e1eb841" prot="public">
          <name>SCO_INPUT0</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="examploscope_8c_1a41301420b6a2483a529413860721007aab040f6fc7feb2c18047fdbbd4bf329d5" prot="public">
          <name>SCO_OUTPUT0</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="examploscope_8c_1a41301420b6a2483a529413860721007aa2602843536a3f50e139c2b19ece86463" prot="public">
          <name>SCO_INPUT1</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="examploscope_8c_1a41301420b6a2483a529413860721007aa58bc341e0e0cb247a5acc22e5296a208" prot="public">
          <name>SCO_OUTPUT1</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In code, ports are referred to by index. An enumeration of port indices should be defined for readability. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" bodystart="44" bodyend="48"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="amp_8c_1a349808c8f8e70d7b4d57ffda8eceae61" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lv2_8h_1ac9db79f137f126ef10ef707b6de85a78" kindref="member">LV2_Descriptor</ref></type>
        <definition>const LV2_Descriptor descriptor</definition>
        <argsstring></argsstring>
        <name>descriptor</name>
        <initializer>= {
	<ref refid="amp_8c_1aff84d23ea505ede5cab67a1e8d7940b2" kindref="member">AMP_URI</ref>,
	instantiate,
	connect_port,
	activate,
	run,
	deactivate,
	<ref refid="launch_8c_1a4b66d5e31b5dc18b314c8a68163263bd" kindref="member">cleanup</ref>,
	extension_data
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Every plugin must define an <computeroutput>LV2_Descriptor</computeroutput>. It is best to define descriptors statically to avoid leaking memory and non-portable shared library constructors and destructors to clean up properly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" line="200" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="amp_8c_1a7d931ab1bcc93b9e76c5b871259c986b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lv2_8h_1a95eafb0a5290f30bcdc8c0f8eb992eaf" kindref="member">LV2_Handle</ref></type>
        <definition>static LV2_Handle instantiate</definition>
        <argsstring>(const LV2_Descriptor *descriptor, double rate, const char *bundle_path, const LV2_Feature *const *features)</argsstring>
        <name>instantiate</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lv2_8h_1ac9db79f137f126ef10ef707b6de85a78" kindref="member">LV2_Descriptor</ref> *</type>
          <declname>descriptor</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>bundle_path</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lv2_8h_1a78d13b607443404459db283371723234" kindref="member">LV2_Feature</ref> *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>features</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>instantiate()</computeroutput> function is called by the host to create a new plugin instance. The host passes the plugin descriptor, sample rate, and bundle path for plugins that need to load additional resources (e.g. waveforms). The features parameter contains host-provided features defined in LV2 extensions, but this simple plugin does not use any.</para><para>This function is in the ``instantiation&apos;&apos; threading class, so no other methods on this instance will be called concurrently with it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" bodystart="74" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="amp_8c_1a2aa66e1241c1247cd28190d01901f7b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void connect_port</definition>
        <argsstring>(LV2_Handle instance, uint32_t port, void *data)</argsstring>
        <name>connect_port</name>
        <param>
          <type><ref refid="lv2_8h_1a95eafb0a5290f30bcdc8c0f8eb992eaf" kindref="member">LV2_Handle</ref></type>
          <declname>instance</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>connect_port()</computeroutput> method is called by the host to connect a particular port to a buffer. The plugin must store the data location, but data may not be accessed except in run().</para><para>This method is in the ``audio&apos;&apos; threading class, and is called in the same context as run(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" line="93" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" bodystart="93" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="amp_8c_1a7e0cf251ae5e522cd84fc109c91a8c93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void activate</definition>
        <argsstring>(LV2_Handle instance)</argsstring>
        <name>activate</name>
        <param>
          <type><ref refid="lv2_8h_1a95eafb0a5290f30bcdc8c0f8eb992eaf" kindref="member">LV2_Handle</ref></type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>activate()</computeroutput> method is called by the host to initialise and prepare the plugin instance for running. The plugin must reset all internal state except for buffer locations set by <computeroutput>connect_port()</computeroutput>. Since this plugin has no other internal state, this method does nothing.</para><para>This method is in the ``instantiation&apos;&apos; threading class, so no other methods on this instance will be called concurrently with it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" line="122" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="amp_8c_1a6c677c1af04569f433452541d8ec70f8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void run</definition>
        <argsstring>(LV2_Handle instance, uint32_t n_samples)</argsstring>
        <name>run</name>
        <param>
          <type><ref refid="lv2_8h_1a95eafb0a5290f30bcdc8c0f8eb992eaf" kindref="member">LV2_Handle</ref></type>
          <declname>instance</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>n_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>run()</computeroutput> method is the main process function of the plugin. It processes a block of audio in the audio context. Since this plugin is <computeroutput>lv2:hardRTCapable</computeroutput>, <computeroutput>run()</computeroutput> must be real-time safe, so blocking (e.g. with a mutex) or memory allocation are not allowed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" line="136" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" bodystart="136" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="amp_8c_1aac7dd426990c4ec19a7b6b7b2fe9c393" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void deactivate</definition>
        <argsstring>(LV2_Handle instance)</argsstring>
        <name>deactivate</name>
        <param>
          <type><ref refid="lv2_8h_1a95eafb0a5290f30bcdc8c0f8eb992eaf" kindref="member">LV2_Handle</ref></type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>deactivate()</computeroutput> method is the counterpart to <computeroutput>activate()</computeroutput>, and is called by the host after running the plugin. It indicates that the host will not call <computeroutput>run()</computeroutput> again until another call to <computeroutput>activate()</computeroutput> and is mainly useful for more advanced plugins with ``live&apos;&apos; characteristics such as those with auxiliary processing threads. As with <computeroutput>activate()</computeroutput>, this plugin has no use for this information so this method does nothing.</para><para>This method is in the ``instantiation&apos;&apos; threading class, so no other methods on this instance will be called concurrently with it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" line="163" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="amp_8c_1a541977c718a94a2594e143ff098735e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void cleanup</definition>
        <argsstring>(LV2_Handle instance)</argsstring>
        <name>cleanup</name>
        <param>
          <type><ref refid="lv2_8h_1a95eafb0a5290f30bcdc8c0f8eb992eaf" kindref="member">LV2_Handle</ref></type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a plugin instance (counterpart to <computeroutput>instantiate()</computeroutput>).</para><para>This method is in the ``instantiation&apos;&apos; threading class, so no other methods on this instance will be called concurrently with it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" line="174" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="amp_8c_1af414c83cead307bc2f919c0a1d9dfd05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>static const void* extension_data</definition>
        <argsstring>(const char *uri)</argsstring>
        <name>extension_data</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>extension_data()</computeroutput> function returns any extension data supported by the plugin. Note that this is not an instance method, but a function on the plugin descriptor. It is usually used by plugins to implement additional interfaces. This plugin does not have any extension data, so this function returns NULL.</para><para>This method is in the ``discovery&apos;&apos; threading class, so no other functions or methods in this plugin library will be called concurrently with it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" line="190" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="amp_8c_1affedc7aabe2715522365f21a9c1ff65d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lv2_8h_1a05eb2f14429fd6ae501265b5e5af8309" kindref="member">LV2_SYMBOL_EXPORT</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lv2_8h_1ac9db79f137f126ef10ef707b6de85a78" kindref="member">LV2_Descriptor</ref> *</type>
        <definition>LV2_SYMBOL_EXPORT const LV2_Descriptor* lv2_descriptor</definition>
        <argsstring>(uint32_t index)</argsstring>
        <name>lv2_descriptor</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput><ref refid="amp_8c_1affedc7aabe2715522365f21a9c1ff65d" kindref="member">lv2_descriptor()</ref></computeroutput> function is the entry point to the plugin library. The host will load the library and call this function repeatedly with increasing indices to find all the plugins defined in the library. The index is not an indentifier, the URI of the returned descriptor is used to determine the identify of the plugin.</para><para>This method is in the ``discovery&apos;&apos; threading class, so no other functions or methods in this plugin library will be called concurrently with it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" line="223" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c" bodystart="223" bodyend="229"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2006-2011<sp/>David<sp/>Robillard<sp/>&lt;d@drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>2006<sp/>Steve<sp/>Harris<sp/>&lt;steve@plugin.org.uk&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv2_8h" kindref="compound">lv2/lv2plug.in/ns/lv2core/lv2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="amp_8c_1aff84d23ea505ede5cab67a1e8d7940b2" refkind="member"><highlight class="preprocessor">#define<sp/>AMP_URI<sp/>&quot;http://lv2plug.in/plugins/eg-amp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="amp_8c_1a41301420b6a2483a529413860721007a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="45" refid="amp_8c_1a41301420b6a2483a529413860721007aa7204086dfc06b741fded0b0370c6578b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amp_8c_1a41301420b6a2483a529413860721007aa7204086dfc06b741fded0b0370c6578b" kindref="member">AMP_GAIN</ref><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="46" refid="amp_8c_1a41301420b6a2483a529413860721007aaea75572fc580f72e841ae523c9c73250" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amp_8c_1a41301420b6a2483a529413860721007aaea75572fc580f72e841ae523c9c73250" kindref="member">AMP_INPUT</ref><sp/><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="47" refid="amp_8c_1a41301420b6a2483a529413860721007aa3e9aec45024c82e25283fa24a6fe4df7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amp_8c_1a41301420b6a2483a529413860721007aa3e9aec45024c82e25283fa24a6fe4df7" kindref="member">AMP_OUTPUT</ref><sp/>=<sp/>2</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}<sp/><ref refid="amp_8c_1a41301420b6a2483a529413860721007a" kindref="member">PortIndex</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="struct_amp" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Port<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="struct_amp_1a46cf321782b77cddaf875e34e9a98a1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_amp_1a46cf321782b77cddaf875e34e9a98a1b" kindref="member">gain</ref>;</highlight></codeline>
<codeline lineno="59" refid="struct_amp_1ae8cc1281501c01f2184d5cd9427320f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_amp_1ae8cc1281501c01f2184d5cd9427320f1" kindref="member">input</ref>;</highlight></codeline>
<codeline lineno="60" refid="struct_amp_1a098d44d8c4cbdac5329fbc890632ad22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_amp_1a098d44d8c4cbdac5329fbc890632ad22" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}<sp/><ref refid="struct_amp" kindref="compound">Amp</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lv2_8h_1a95eafb0a5290f30bcdc8c0f8eb992eaf" kindref="member">LV2_Handle</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal">instantiate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___l_v2___descriptor" kindref="compound">LV2_Descriptor</ref>*<sp/><sp/><sp/><sp/><sp/>descriptor,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle_path,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___l_v2___feature" kindref="compound">LV2_Feature</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>features)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_amp" kindref="compound">Amp</ref>*<sp/>amp<sp/>=<sp/>(<ref refid="struct_amp" kindref="compound">Amp</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_amp" kindref="compound">Amp</ref>));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="lv2_8h_1a95eafb0a5290f30bcdc8c0f8eb992eaf" kindref="member">LV2_Handle</ref>)amp;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">connect_port(<ref refid="lv2_8h_1a95eafb0a5290f30bcdc8c0f8eb992eaf" kindref="member">LV2_Handle</ref><sp/>instance,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/><sp/>port,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_amp" kindref="compound">Amp</ref>*<sp/>amp<sp/>=<sp/>(<ref refid="struct_amp" kindref="compound">Amp</ref>*)instance;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>((<ref refid="bindings__test__plugin_8c_1a41301420b6a2483a529413860721007a" kindref="member">PortIndex</ref>)port)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="amp_8c_1a41301420b6a2483a529413860721007aa7204086dfc06b741fded0b0370c6578b" kindref="member">AMP_GAIN</ref>:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amp-&gt;<ref refid="struct_amp_1a46cf321782b77cddaf875e34e9a98a1b" kindref="member">gain</ref><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)data;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="amp_8c_1a41301420b6a2483a529413860721007aaea75572fc580f72e841ae523c9c73250" kindref="member">AMP_INPUT</ref>:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amp-&gt;<ref refid="struct_amp_1ae8cc1281501c01f2184d5cd9427320f1" kindref="member">input</ref><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)data;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="amp_8c_1a41301420b6a2483a529413860721007aa3e9aec45024c82e25283fa24a6fe4df7" kindref="member">AMP_OUTPUT</ref>:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amp-&gt;<ref refid="struct_amp_1a098d44d8c4cbdac5329fbc890632ad22" kindref="member">output</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)data;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">activate(<ref refid="lv2_8h_1a95eafb0a5290f30bcdc8c0f8eb992eaf" kindref="member">LV2_Handle</ref><sp/>instance)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="amp_8c_1a53ed5adfe4689d3eb8a352c0666e21db" refkind="member"><highlight class="preprocessor">#define<sp/>DB_CO(g)<sp/>((g)<sp/>&gt;<sp/>-90.0f<sp/>?<sp/>powf(10.0f,<sp/>(g)<sp/>*<sp/>0.05f)<sp/>:<sp/>0.0f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">run(<ref refid="lv2_8h_1a95eafb0a5290f30bcdc8c0f8eb992eaf" kindref="member">LV2_Handle</ref><sp/>instance,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>n_samples)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_amp" kindref="compound">Amp</ref>*<sp/>amp<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_amp" kindref="compound">Amp</ref>*)instance;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gain<sp/><sp/><sp/>=<sp/>*(amp-&gt;<ref refid="struct_amp_1a46cf321782b77cddaf875e34e9a98a1b" kindref="member">gain</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>input<sp/><sp/>=<sp/>amp-&gt;<ref refid="struct_amp_1ae8cc1281501c01f2184d5cd9427320f1" kindref="member">input</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>=<sp/>amp-&gt;<ref refid="struct_amp_1a098d44d8c4cbdac5329fbc890632ad22" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="rate_8h_1abb25177205d56e90a9770f6b4c57c07f" kindref="member">coef</ref><sp/>=<sp/><ref refid="amp_8c_1a53ed5adfe4689d3eb8a352c0666e21db" kindref="member">DB_CO</ref>(gain);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>pos<sp/>=<sp/>0;<sp/>pos<sp/>&lt;<sp/>n_samples;<sp/>pos++)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[pos]<sp/>=<sp/>input[pos]<sp/>*<sp/><ref refid="rate_8h_1abb25177205d56e90a9770f6b4c57c07f" kindref="member">coef</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">deactivate(<ref refid="lv2_8h_1a95eafb0a5290f30bcdc8c0f8eb992eaf" kindref="member">LV2_Handle</ref><sp/>instance)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><ref refid="launch_8c_1a4b66d5e31b5dc18b314c8a68163263bd" kindref="member">cleanup</ref>(<ref refid="lv2_8h_1a95eafb0a5290f30bcdc8c0f8eb992eaf" kindref="member">LV2_Handle</ref><sp/>instance)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>free(instance);</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="190"><highlight class="normal">extension_data(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___l_v2___descriptor" kindref="compound">LV2_Descriptor</ref><sp/>descriptor<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="amp_8c_1aff84d23ea505ede5cab67a1e8d7940b2" kindref="member">AMP_URI</ref>,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>instantiate,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>connect_port,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>activate,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>run,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>deactivate,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="launch_8c_1a4b66d5e31b5dc18b314c8a68163263bd" kindref="member">cleanup</ref>,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>extension_data</highlight></codeline>
<codeline lineno="209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><ref refid="lv2_8h_1a05eb2f14429fd6ae501265b5e5af8309" kindref="member">LV2_SYMBOL_EXPORT</ref></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___l_v2___descriptor" kindref="compound">LV2_Descriptor</ref>*</highlight></codeline>
<codeline lineno="223" refid="amp_8c_1affedc7aabe2715522365f21a9c1ff65d" refkind="member"><highlight class="normal"><ref refid="amp_8c_1affedc7aabe2715522365f21a9c1ff65d" kindref="member">lv2_descriptor</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>index)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(index)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;descriptor;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-amp.lv2/amp.c"/>
  </compounddef>
</doxygen>
