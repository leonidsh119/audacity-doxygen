<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="xllist_8c" kind="file" language="C++">
    <compoundname>xllist.c</compoundname>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <incdepgraph>
      <node id="18693">
        <label>stdlib.h</label>
      </node>
      <node id="18696">
        <label>setjmp.h</label>
      </node>
      <node id="18692">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="18693" relation="include">
        </childnode>
        <childnode refid="18694" relation="include">
        </childnode>
        <childnode refid="18695" relation="include">
        </childnode>
        <childnode refid="18696" relation="include">
        </childnode>
        <childnode refid="18697" relation="include">
        </childnode>
      </node>
      <node id="18697">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="18695">
        <label>ctype.h</label>
      </node>
      <node id="18691">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c</label>
        <link refid="xllist.c"/>
        <childnode refid="18692" relation="include">
        </childnode>
      </node>
      <node id="18694">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref> <ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref> <ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LOCAL LVAL cxr</definition>
        <argsstring>(char *adstr)</argsstring>
        <name>cxr</name>
        <param>
          <type>char *</type>
          <declname>adstr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="16" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="82" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1ac3e6d25934563fa15ad1054da60af361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref> <ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref> <ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LOCAL LVAL nth</definition>
        <argsstring>(int carflag)</argsstring>
        <name>nth</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>carflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="17" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="502" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a94ae0adb6ed7e3a7bbc78eeaefb2ded1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref> <ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref> <ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LOCAL LVAL assoc</definition>
        <argsstring>(LVAL expr, LVAL alist, LVAL fcn, int tresult)</argsstring>
        <name>assoc</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>expr</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>alist</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>fcn</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>tresult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="18" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="360" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1ac473711afb0398a92bedb57bc3c27d82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref> <ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref> <ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LOCAL LVAL subst</definition>
        <argsstring>(LVAL to, LVAL from, LVAL expr, LVAL fcn, int tresult)</argsstring>
        <name>subst</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>to</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>expr</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>fcn</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>tresult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="19" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="300" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a0c403663f6f328736715823b3cf824d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref> <ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref> <ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LOCAL LVAL sublis</definition>
        <argsstring>(LVAL alist, LVAL expr, LVAL fcn, int tresult)</argsstring>
        <name>sublis</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>alist</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>expr</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>fcn</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>tresult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="20" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="342" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a03a3bd19ed9a28af3660a6c7b77249c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref> <ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref> <ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>FORWARD LOCAL LVAL map</definition>
        <argsstring>(int carflag, int valflag)</argsstring>
        <name>map</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>carflag</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>valflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="21" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="580" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a66eed30716113139849b252af9925abf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref> <ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref> <ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LOCAL LVAL remif</definition>
        <argsstring>(int tresult)</argsstring>
        <name>remif</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>tresult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="22" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="420" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1aed615b10bb875dddd5da89c72e5cb4d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref> <ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref> <ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LOCAL LVAL delif</definition>
        <argsstring>(int tresult)</argsstring>
        <name>delif</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>tresult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="23" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="775" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a4254833b16cba5edd3db3c8a26b4ff29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref> <ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref> <ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LOCAL LVAL sortlist</definition>
        <argsstring>(LVAL list, LVAL fcn)</argsstring>
        <name>sortlist</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>fcn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="24" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="857" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a14951a1a526ef11bd8e79f5a7a42ce4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref> <ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>LOCAL void splitlist</definition>
        <argsstring>(LVAL pivot, LVAL list, LVAL *psmaller, LVAL *plarger, LVAL fcn)</argsstring>
        <name>splitlist</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>pivot</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref> *</type>
          <declname>psmaller</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref> *</type>
          <declname>plarger</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>fcn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="25" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="883" bodyend="908"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a290fffabbf051026faed7ed9db6f2f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref> <ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref> <ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LOCAL LVAL gluelists</definition>
        <argsstring>(LVAL smaller, LVAL pivot, LVAL larger)</argsstring>
        <name>gluelists</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>smaller</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>pivot</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>larger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="26" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="911" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a513a2dd6e3c3cefbab0ffe162f9889c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcar</definition>
        <argsstring>(void)</argsstring>
        <name>xcar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="30" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="30" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a692f078ad40ef180bc83d2b28f0d125c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcdr</definition>
        <argsstring>(void)</argsstring>
        <name>xcdr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="39" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="39" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1af81d1e8dc341e06e061d5c7208723275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcaar</definition>
        <argsstring>(void)</argsstring>
        <name>xcaar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a6f0c9acb1e01ecc4c276f56ea22f8787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcadr</definition>
        <argsstring>(void)</argsstring>
        <name>xcadr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="49" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a7079438465ccb90409cb11015d61fa4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcdar</definition>
        <argsstring>(void)</argsstring>
        <name>xcdar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="50" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1ae05567345d25ef6d919366389dfec68e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcddr</definition>
        <argsstring>(void)</argsstring>
        <name>xcddr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a1f3d9926eaddaa94c0c8a1ac6220f23e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcaaar</definition>
        <argsstring>(void)</argsstring>
        <name>xcaaar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="54" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a67adddda08e481ca44e27e2ed5840cdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcaadr</definition>
        <argsstring>(void)</argsstring>
        <name>xcaadr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="55" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1af2d216d9e9540037d43f21abf5488399" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcadar</definition>
        <argsstring>(void)</argsstring>
        <name>xcadar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="56" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a84f310663cfc9c06fcc69b1a7e93d13b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcaddr</definition>
        <argsstring>(void)</argsstring>
        <name>xcaddr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="57" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a3338de69b1d5ba64c631df56a63b36be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcdaar</definition>
        <argsstring>(void)</argsstring>
        <name>xcdaar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a06b10fd2ae7a313438c202f6b1bc2525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcdadr</definition>
        <argsstring>(void)</argsstring>
        <name>xcdadr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="59" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1acbbebde43aacd9cdef0c8274bccda23e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcddar</definition>
        <argsstring>(void)</argsstring>
        <name>xcddar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1ad282b7608894d52d1d323bceb2196c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcdddr</definition>
        <argsstring>(void)</argsstring>
        <name>xcdddr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1adc0b136b678db5bbfe2c30317a8bcfc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcaaaar</definition>
        <argsstring>(void)</argsstring>
        <name>xcaaaar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="64" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1aeb4e2064c86cf34d10446c5c7a0782cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcaaadr</definition>
        <argsstring>(void)</argsstring>
        <name>xcaaadr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1ac236005e4693e6343daf646f301e568b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcaadar</definition>
        <argsstring>(void)</argsstring>
        <name>xcaadar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="66" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a71878fbbfc448d234bc4367f96d38f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcaaddr</definition>
        <argsstring>(void)</argsstring>
        <name>xcaaddr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="67" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a427b376af4b2297262abecdcbc966ed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcadaar</definition>
        <argsstring>(void)</argsstring>
        <name>xcadaar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a0595fa5b0f054b7bc93722aaf91a68aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcadadr</definition>
        <argsstring>(void)</argsstring>
        <name>xcadadr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="69" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a7b4beef85f094a1714364cfd3211b39f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcaddar</definition>
        <argsstring>(void)</argsstring>
        <name>xcaddar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1aadc2ffa016c1b4d31f6d44418e9a3622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcadddr</definition>
        <argsstring>(void)</argsstring>
        <name>xcadddr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a573197a79b854a4dc09fe90be2bee4b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcdaaar</definition>
        <argsstring>(void)</argsstring>
        <name>xcdaaar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="72" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a1fc2cc372181170acaab3228208cdb17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcdaadr</definition>
        <argsstring>(void)</argsstring>
        <name>xcdaadr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="73" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1ae5465168ed3543ed3cf9875fb2689380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcdadar</definition>
        <argsstring>(void)</argsstring>
        <name>xcdadar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a42343be3c0767a60c44444a86c6a9497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcdaddr</definition>
        <argsstring>(void)</argsstring>
        <name>xcdaddr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a943e6d5a2a0c7ad3863121d437475f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcddaar</definition>
        <argsstring>(void)</argsstring>
        <name>xcddaar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="76" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a4870c7f2d196a82b53003f61e1ad8274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcddadr</definition>
        <argsstring>(void)</argsstring>
        <name>xcddadr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1adff604a2772560c3baad78e0b99a20c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcdddar</definition>
        <argsstring>(void)</argsstring>
        <name>xcdddar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a321e70d24038b6c3699ce9892f370670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcddddr</definition>
        <argsstring>(void)</argsstring>
        <name>xcddddr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="79" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a4ab8b5cdff8b548286252736d34de1f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcons</definition>
        <argsstring>(void)</argsstring>
        <name>xcons</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="103" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="103" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a354da023343cd3f76e8f00c7ab6177c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xlist</definition>
        <argsstring>(void)</argsstring>
        <name>xlist</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="117" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="117" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a1813d142300931d62d68b83b8cf4eb74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xappend</definition>
        <argsstring>(void)</argsstring>
        <name>xappend</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="142" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="142" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a39b75cec4ed6363b733685ff17e34e50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xreverse</definition>
        <argsstring>(void)</argsstring>
        <name>xreverse</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="178" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="178" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a2070b82b42fc387c0fa2fc032063dc2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xlast</definition>
        <argsstring>(void)</argsstring>
        <name>xlast</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="201" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="201" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a183a6d274a78ecb49b1487ac444f243f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xmember</definition>
        <argsstring>(void)</argsstring>
        <name>xmember</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="218" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="218" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a8101765a0ad77dd7936cd2d2177c16eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xassoc</definition>
        <argsstring>(void)</argsstring>
        <name>xassoc</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="246" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="246" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1aae8f8ab959e77309a018f4382bee3647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xsubst</definition>
        <argsstring>(void)</argsstring>
        <name>xsubst</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="275" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="275" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a6d4148d888400220a97e44c0c8691b4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xsublis</definition>
        <argsstring>(void)</argsstring>
        <name>xsublis</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="318" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="318" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1ad22e62bf52d57e5d4592c447f0f72487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xremove</definition>
        <argsstring>(void)</argsstring>
        <name>xremove</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="372" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="372" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1aaab34266ce0bb8da1c0588cde7c8aee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xremif</definition>
        <argsstring>(void)</argsstring>
        <name>xremif</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="406" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="406" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1ad222f798fe7d00420e8e761d48b7a863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xremifnot</definition>
        <argsstring>(void)</argsstring>
        <name>xremifnot</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="413" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="413" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1aec9dd5f299003dd1f0fe3656db8a4d24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int dotest1</definition>
        <argsstring>(LVAL arg, LVAL fun)</argsstring>
        <name>dotest1</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="453" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="453" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a5738514c41a3b6879a759bbc4b89633d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int dotest2</definition>
        <argsstring>(LVAL arg1, LVAL arg2, LVAL fun)</argsstring>
        <name>dotest2</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>arg1</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>arg2</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="471" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="471" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a44e9b37dc505aab8675c36226a32a1e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xnth</definition>
        <argsstring>(void)</argsstring>
        <name>xnth</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="490" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="490" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1ad60def53c90837d8b6943d54c81da52d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xnthcdr</definition>
        <argsstring>(void)</argsstring>
        <name>xnthcdr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="496" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="496" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a8e26e3b6dfc15168c9edb240a76fd56a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xlength</definition>
        <argsstring>(void)</argsstring>
        <name>xlength</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="525" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="525" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1af10a442222dd7724b73932a76fc9b8b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xmapc</definition>
        <argsstring>(void)</argsstring>
        <name>xmapc</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="556" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="556" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a5e59166a27fc0c78bd3b941a0f4dac69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xmapcar</definition>
        <argsstring>(void)</argsstring>
        <name>xmapcar</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="562" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="562" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a496036f35b2dcdeacb984d8f6c72d162" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xmapl</definition>
        <argsstring>(void)</argsstring>
        <name>xmapl</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="568" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="568" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a7880b044f3053438634fc4eb91aad4be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xmaplist</definition>
        <argsstring>(void)</argsstring>
        <name>xmaplist</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="574" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="574" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a2e7868e9769cc11ffd05f2d01837177b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xrplca</definition>
        <argsstring>(void)</argsstring>
        <name>xrplca</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="643" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="643" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1abb186b2ec7bf03da4b67d8418dc09a01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xrplcd</definition>
        <argsstring>(void)</argsstring>
        <name>xrplcd</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="660" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="660" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a2d70c19c00f661ea5841d7744d37a9a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xnconc</definition>
        <argsstring>(void)</argsstring>
        <name>xnconc</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="677" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="677" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1ab387026fa3dcd5f14a55830e7e8205a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xdelete</definition>
        <argsstring>(void)</argsstring>
        <name>xdelete</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="712" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="712" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1a5c7fc2c85c308e555a0a090ae12bf317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xdelif</definition>
        <argsstring>(void)</argsstring>
        <name>xdelif</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="761" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="761" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1acd64aeea2e1425d4be7bb5ddadaf0838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xdelifnot</definition>
        <argsstring>(void)</argsstring>
        <name>xdelifnot</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="768" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="768" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="xllist_8c_1aca36df9dac520e5484d0bd29eb3a5bea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xsort</definition>
        <argsstring>(void)</argsstring>
        <name>xsort</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" line="823" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c" bodystart="823" bodyend="848"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>xllist.c<sp/>-<sp/>xlisp<sp/>built-in<sp/>list<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Copyright<sp/>(c)<sp/>1985,<sp/>by<sp/>David<sp/>Michael<sp/>Betz</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>for<sp/>unrestricted<sp/>non-commercial<sp/>use<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CHANGE<sp/>LOG</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>28Apr03<sp/><sp/>dm<sp/><sp/>eliminate<sp/>some<sp/>compiler<sp/>warnings</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>28Apr03<sp/>rbd<sp/><sp/>fix<sp/>check<sp/>in<sp/>sort<sp/>routine</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>forward<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref><sp/><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*adstr);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref><sp/><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1ac3e6d25934563fa15ad1054da60af361" kindref="member">nth</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>carflag);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref><sp/><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a94ae0adb6ed7e3a7bbc78eeaefb2ded1" kindref="member">assoc</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>expr,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>alist,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>fcn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref><sp/><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1ac473711afb0398a92bedb57bc3c27d82" kindref="member">subst</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>to,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="nasm_8h_1a5f350118b553429484632e5603292389" kindref="member">from</ref>,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>expr,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>fcn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref><sp/><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a0c403663f6f328736715823b3cf824d8" kindref="member">sublis</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>alist,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>expr,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>fcn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref><sp/><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a03a3bd19ed9a28af3660a6c7b77249c2" kindref="member">map</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>carflag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valflag);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref><sp/><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a66eed30716113139849b252af9925abf" kindref="member">remif</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref><sp/><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1aed615b10bb875dddd5da89c72e5cb4d3" kindref="member">delif</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref><sp/><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a4254833b16cba5edd3db3c8a26b4ff29" kindref="member">sortlist</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>list,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>fcn);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref><sp/><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xllist_8c_1a14951a1a526ef11bd8e79f5a7a42ce4f" kindref="member">splitlist</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>pivot,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>list,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>*psmaller,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>*plarger,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>fcn);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref><sp/><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a290fffabbf051026faed7ed9db6f2f72" kindref="member">gluelists</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>smaller,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>pivot,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>larger);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xcar<sp/>-<sp/>take<sp/>the<sp/>car<sp/>of<sp/>a<sp/>cons<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="xllist_8c_1a513a2dd6e3c3cefbab0ffe162f9889c2" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a513a2dd6e3c3cefbab0ffe162f9889c2" kindref="member">xcar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>list;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(list<sp/>?<sp/><ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list)<sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xcdr<sp/>-<sp/>take<sp/>the<sp/>cdr<sp/>of<sp/>a<sp/>cons<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="xllist_8c_1a692f078ad40ef180bc83d2b28f0d125c" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a692f078ad40ef180bc83d2b28f0d125c" kindref="member">xcdr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>list;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(list<sp/>?<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list)<sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cxxr<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="xllist_8c_1af81d1e8dc341e06e061d5c7208723275" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1af81d1e8dc341e06e061d5c7208723275" kindref="member">xcaar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="49" refid="xllist_8c_1a6f0c9acb1e01ecc4c276f56ea22f8787" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a6f0c9acb1e01ecc4c276f56ea22f8787" kindref="member">xcadr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;da&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="50" refid="xllist_8c_1a7079438465ccb90409cb11015d61fa4d" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a7079438465ccb90409cb11015d61fa4d" kindref="member">xcdar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;ad&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="51" refid="xllist_8c_1ae05567345d25ef6d919366389dfec68e" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1ae05567345d25ef6d919366389dfec68e" kindref="member">xcddr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;dd&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cxxxr<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="xllist_8c_1a1f3d9926eaddaa94c0c8a1ac6220f23e" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a1f3d9926eaddaa94c0c8a1ac6220f23e" kindref="member">xcaaar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;aaa&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="55" refid="xllist_8c_1a67adddda08e481ca44e27e2ed5840cdb" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a67adddda08e481ca44e27e2ed5840cdb" kindref="member">xcaadr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;daa&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="56" refid="xllist_8c_1af2d216d9e9540037d43f21abf5488399" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1af2d216d9e9540037d43f21abf5488399" kindref="member">xcadar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;ada&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="57" refid="xllist_8c_1a84f310663cfc9c06fcc69b1a7e93d13b" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a84f310663cfc9c06fcc69b1a7e93d13b" kindref="member">xcaddr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;dda&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="58" refid="xllist_8c_1a3338de69b1d5ba64c631df56a63b36be" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a3338de69b1d5ba64c631df56a63b36be" kindref="member">xcdaar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;aad&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="59" refid="xllist_8c_1a06b10fd2ae7a313438c202f6b1bc2525" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a06b10fd2ae7a313438c202f6b1bc2525" kindref="member">xcdadr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;dad&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="60" refid="xllist_8c_1acbbebde43aacd9cdef0c8274bccda23e" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1acbbebde43aacd9cdef0c8274bccda23e" kindref="member">xcddar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="61" refid="xllist_8c_1ad282b7608894d52d1d323bceb2196c9a" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1ad282b7608894d52d1d323bceb2196c9a" kindref="member">xcdddr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;ddd&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cxxxxr<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="xllist_8c_1adc0b136b678db5bbfe2c30317a8bcfc7" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1adc0b136b678db5bbfe2c30317a8bcfc7" kindref="member">xcaaaar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;aaaa&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="65" refid="xllist_8c_1aeb4e2064c86cf34d10446c5c7a0782cf" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1aeb4e2064c86cf34d10446c5c7a0782cf" kindref="member">xcaaadr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;daaa&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="66" refid="xllist_8c_1ac236005e4693e6343daf646f301e568b" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1ac236005e4693e6343daf646f301e568b" kindref="member">xcaadar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;adaa&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="67" refid="xllist_8c_1a71878fbbfc448d234bc4367f96d38f55" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a71878fbbfc448d234bc4367f96d38f55" kindref="member">xcaaddr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;ddaa&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="68" refid="xllist_8c_1a427b376af4b2297262abecdcbc966ed5" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a427b376af4b2297262abecdcbc966ed5" kindref="member">xcadaar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;aada&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="69" refid="xllist_8c_1a0595fa5b0f054b7bc93722aaf91a68aa" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a0595fa5b0f054b7bc93722aaf91a68aa" kindref="member">xcadadr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;dada&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="70" refid="xllist_8c_1a7b4beef85f094a1714364cfd3211b39f" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a7b4beef85f094a1714364cfd3211b39f" kindref="member">xcaddar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;adda&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="71" refid="xllist_8c_1aadc2ffa016c1b4d31f6d44418e9a3622" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1aadc2ffa016c1b4d31f6d44418e9a3622" kindref="member">xcadddr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;ddda&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="72" refid="xllist_8c_1a573197a79b854a4dc09fe90be2bee4b5" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a573197a79b854a4dc09fe90be2bee4b5" kindref="member">xcdaaar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;aaad&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="73" refid="xllist_8c_1a1fc2cc372181170acaab3228208cdb17" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a1fc2cc372181170acaab3228208cdb17" kindref="member">xcdaadr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;daad&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="74" refid="xllist_8c_1ae5465168ed3543ed3cf9875fb2689380" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1ae5465168ed3543ed3cf9875fb2689380" kindref="member">xcdadar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;adad&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="75" refid="xllist_8c_1a42343be3c0767a60c44444a86c6a9497" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a42343be3c0767a60c44444a86c6a9497" kindref="member">xcdaddr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;ddad&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="76" refid="xllist_8c_1a943e6d5a2a0c7ad3863121d437475f7c" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a943e6d5a2a0c7ad3863121d437475f7c" kindref="member">xcddaar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;aadd&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="77" refid="xllist_8c_1a4870c7f2d196a82b53003f61e1ad8274" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a4870c7f2d196a82b53003f61e1ad8274" kindref="member">xcddadr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;dadd&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="78" refid="xllist_8c_1adff604a2772560c3baad78e0b99a20c1" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1adff604a2772560c3baad78e0b99a20c1" kindref="member">xcdddar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;addd&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="79" refid="xllist_8c_1a321e70d24038b6c3699ce9892f370670" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a321e70d24038b6c3699ce9892f370670" kindref="member">xcddddr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="stringliteral">&quot;dddd&quot;</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cxr<sp/>-<sp/>common<sp/>car/cdr<sp/>routine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" refkind="member"><highlight class="normal"><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1ae4f39beea931c4c15bc3e50a6f0b0a5b" kindref="member">cxr</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*adstr)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>list;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>perform<sp/>the<sp/>car/cdr<sp/>operations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*adstr<sp/>&amp;&amp;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/>(*adstr++<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>?<sp/><ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list)<sp/>:<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>the<sp/>operation<sp/>succeeded<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*adstr<sp/>&amp;&amp;<sp/>list)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;bad<sp/>argument&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(list);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xcons<sp/>-<sp/>construct<sp/>a<sp/>new<sp/>list<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="xllist_8c_1a4ab8b5cdff8b548286252736d34de1f3" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a4ab8b5cdff8b548286252736d34de1f3" kindref="member">xcons</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg1,arg2;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>two<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>arg1<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>arg2<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>construct<sp/>a<sp/>new<sp/>list<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8c_1a6020b108cda9dc1cb27b748db6afef0a" kindref="member">cons</ref>(arg1,arg2));</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlist<sp/>-<sp/>built<sp/>a<sp/>list<sp/>of<sp/>the<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="xllist_8c_1a354da023343cd3f76e8f00c7ab6177c8" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a354da023343cd3f76e8f00c7ab6177c8" kindref="member">xlist</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>,val;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(val);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>each<sp/>argument<sp/>to<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(val<sp/>=<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;<sp/><ref refid="xlisp_8h_1a69894d9fc447a80ac1b4b472a5166617" kindref="member">moreargs</ref>();<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>append<sp/>this<sp/>argument<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/><ref refid="xlisp_8h_1a72509ef6a53e6298774f56615eaaf775" kindref="member">consa</ref>(<ref refid="xlisp_8h_1aa31083d801954147d756862a9ffb0bf4" kindref="member">nextarg</ref>());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val)<sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(last,next);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xappend<sp/>-<sp/>built-in<sp/>function<sp/>append<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="xllist_8c_1a1813d142300931d62d68b83b8cf4eb74" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a1813d142300931d62d68b83b8cf4eb74" kindref="member">xappend</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>list,<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>,val;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(val);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>append<sp/>each<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a69894d9fc447a80ac1b4b472a5166617" kindref="member">moreargs</ref>())<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="xlglob_8c_1a5a6bb9549241319e47d3021370af59a7" kindref="member">xlargc</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>append<sp/>each<sp/>element<sp/>of<sp/>this<sp/>list<sp/>to<sp/>the<sp/>result<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(list<sp/>=<sp/><ref refid="xlisp_8h_1aa31083d801954147d756862a9ffb0bf4" kindref="member">nextarg</ref>();<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list);<sp/>list<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list))<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/><ref refid="xlisp_8h_1a72509ef6a53e6298774f56615eaaf775" kindref="member">consa</ref>(<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val)<sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(last,next);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>the<sp/>last<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val)<sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(last,<ref refid="xlisp_8h_1aa31083d801954147d756862a9ffb0bf4" kindref="member">nextarg</ref>());</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="xlisp_8h_1aa31083d801954147d756862a9ffb0bf4" kindref="member">nextarg</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xreverse<sp/>-<sp/>built-in<sp/>function<sp/>reverse<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="xllist_8c_1a39b75cec4ed6363b733685ff17e34e50" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a39b75cec4ed6363b733685ff17e34e50" kindref="member">xreverse</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>list,val;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(val);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>list<sp/>to<sp/>reverse<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>append<sp/>each<sp/>element<sp/>to<sp/>the<sp/>head<sp/>of<sp/>the<sp/>result<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(val<sp/>=<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list);<sp/>list<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list))</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="xldmem_8c_1a6020b108cda9dc1cb27b748db6afef0a" kindref="member">cons</ref>(<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list),val);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlast<sp/>-<sp/>return<sp/>the<sp/>last<sp/>cons<sp/>of<sp/>a<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="xllist_8c_1a2070b82b42fc387c0fa2fc032063dc2d" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a2070b82b42fc387c0fa2fc032063dc2d" kindref="member">xlast</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>list;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>last<sp/>cons<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list)<sp/>&amp;&amp;<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list))</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>last<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(list);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xmember<sp/>-<sp/>built-in<sp/>function<sp/>&apos;member&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="xllist_8c_1a183a6d274a78ecb49b1487ac444f243f" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a183a6d274a78ecb49b1487ac444f243f" kindref="member">xmember</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,list,fcn,val;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(fcn);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>expression<sp/>to<sp/>look<sp/>for<sp/>and<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a2f6a21220b42cad8bc05f9a98be80634" kindref="member">xltest</ref>(&amp;fcn,&amp;tresult);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>look<sp/>for<sp/>the<sp/>expression<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(val<sp/>=<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list);<sp/>list<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list))</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1a5738514c41a3b6879a759bbc4b89633d" kindref="member">dotest2</ref>(x,<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list),fcn)<sp/>==<sp/>tresult)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xassoc<sp/>-<sp/>built-in<sp/>function<sp/>&apos;assoc&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="xllist_8c_1a8101765a0ad77dd7936cd2d2177c16eb" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a8101765a0ad77dd7936cd2d2177c16eb" kindref="member">xassoc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,alist,fcn,pair,val;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(fcn);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>expression<sp/>to<sp/>look<sp/>for<sp/>and<sp/>the<sp/>association<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>alist<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a2f6a21220b42cad8bc05f9a98be80634" kindref="member">xltest</ref>(&amp;fcn,&amp;tresult);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>look<sp/>for<sp/>the<sp/>expression<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(val<sp/>=<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(alist);<sp/>alist<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(alist))</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pair<sp/>=<sp/><ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(alist))<sp/>&amp;&amp;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(pair))</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1a5738514c41a3b6879a759bbc4b89633d" kindref="member">dotest2</ref>(x,<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(pair),fcn)<sp/>==<sp/>tresult)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>pair;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xsubst<sp/>-<sp/>substitute<sp/>one<sp/>expression<sp/>for<sp/>another<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="xllist_8c_1aae8f8ab959e77309a018f4382bee3647" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1aae8f8ab959e77309a018f4382bee3647" kindref="member">xsubst</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>to,<ref refid="nasm_8h_1a5f350118b553429484632e5603292389" kindref="member">from</ref>,expr,fcn,val;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(fcn);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>to<sp/>value,<sp/>the<sp/>from<sp/>value<sp/>and<sp/>the<sp/>expression<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>to<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>from<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>expr<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a2f6a21220b42cad8bc05f9a98be80634" kindref="member">xltest</ref>(&amp;fcn,&amp;tresult);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>the<sp/>substitution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="xllist_8c_1ac473711afb0398a92bedb57bc3c27d82" kindref="member">subst</ref>(to,from,expr,fcn,tresult);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>subst<sp/>-<sp/>substitute<sp/>one<sp/>expression<sp/>for<sp/>another<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="xllist_8c_1ac473711afb0398a92bedb57bc3c27d82" refkind="member"><highlight class="normal"><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1ac473711afb0398a92bedb57bc3c27d82" kindref="member">subst</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>to,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="nasm_8h_1a5f350118b553429484632e5603292389" kindref="member">from</ref>,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>expr,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>fcn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>carval,cdrval;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1a5738514c41a3b6879a759bbc4b89633d" kindref="member">dotest2</ref>(expr,from,fcn)<sp/>==<sp/>tresult)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(to);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(expr))<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(carval);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carval<sp/>=<sp/><ref refid="xllist_8c_1ac473711afb0398a92bedb57bc3c27d82" kindref="member">subst</ref>(to,from,<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(expr),fcn,tresult);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdrval<sp/>=<sp/><ref refid="xllist_8c_1ac473711afb0398a92bedb57bc3c27d82" kindref="member">subst</ref>(to,from,<ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(expr),fcn,tresult);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8c_1a6020b108cda9dc1cb27b748db6afef0a" kindref="member">cons</ref>(carval,cdrval));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(expr);</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xsublis<sp/>-<sp/>substitute<sp/>using<sp/>an<sp/>association<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="xllist_8c_1a6d4148d888400220a97e44c0c8691b4a" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a6d4148d888400220a97e44c0c8691b4a" kindref="member">xsublis</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>alist,expr,fcn,val;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(fcn);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>assocation<sp/>list<sp/>and<sp/>the<sp/>expression<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>alist<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>expr<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a2f6a21220b42cad8bc05f9a98be80634" kindref="member">xltest</ref>(&amp;fcn,&amp;tresult);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>the<sp/>substitution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="xllist_8c_1a0c403663f6f328736715823b3cf824d8" kindref="member">sublis</ref>(alist,expr,fcn,tresult);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sublis<sp/>-<sp/>substitute<sp/>using<sp/>an<sp/>association<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="xllist_8c_1a0c403663f6f328736715823b3cf824d8" refkind="member"><highlight class="normal"><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a0c403663f6f328736715823b3cf824d8" kindref="member">sublis</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>alist,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>expr,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>fcn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>carval,cdrval,pair;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pair<sp/>=<sp/><ref refid="xllist_8c_1a94ae0adb6ed7e3a7bbc78eeaefb2ded1" kindref="member">assoc</ref>(expr,alist,fcn,tresult)))</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(pair));</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(expr))<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(carval);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carval<sp/>=<sp/><ref refid="xllist_8c_1a0c403663f6f328736715823b3cf824d8" kindref="member">sublis</ref>(alist,<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(expr),fcn,tresult);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdrval<sp/>=<sp/><ref refid="xllist_8c_1a0c403663f6f328736715823b3cf824d8" kindref="member">sublis</ref>(alist,<ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(expr),fcn,tresult);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8c_1a6020b108cda9dc1cb27b748db6afef0a" kindref="member">cons</ref>(carval,cdrval));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(expr);</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>assoc<sp/>-<sp/>find<sp/>a<sp/>pair<sp/>in<sp/>an<sp/>association<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="xllist_8c_1a94ae0adb6ed7e3a7bbc78eeaefb2ded1" refkind="member"><highlight class="normal"><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a94ae0adb6ed7e3a7bbc78eeaefb2ded1" kindref="member">assoc</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>expr,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>alist,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>fcn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>pair;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(alist);<sp/>alist<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(alist))</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pair<sp/>=<sp/><ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(alist))<sp/>&amp;&amp;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(pair))</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1a5738514c41a3b6879a759bbc4b89633d" kindref="member">dotest2</ref>(expr,<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(pair),fcn)<sp/>==<sp/>tresult)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pair);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xremove<sp/>-<sp/>built-in<sp/>function<sp/>&apos;remove&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="xllist_8c_1ad22e62bf52d57e5d4592c447f0f72487" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1ad22e62bf52d57e5d4592c447f0f72487" kindref="member">xremove</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,list,fcn,val,<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1ad12805952862f69b5fc0755bdadc08da" kindref="member">xlstkcheck</ref>(2);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(fcn);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(val);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>expression<sp/>to<sp/>remove<sp/>and<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a2f6a21220b42cad8bc05f9a98be80634" kindref="member">xltest</ref>(&amp;fcn,&amp;tresult);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>matches<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list);<sp/>list<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list))</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>to<sp/>see<sp/>if<sp/>this<sp/>element<sp/>should<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1a5738514c41a3b6879a759bbc4b89633d" kindref="member">dotest2</ref>(x,<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list),fcn)<sp/>!=<sp/>tresult)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/><ref refid="xlisp_8h_1a72509ef6a53e6298774f56615eaaf775" kindref="member">consa</ref>(<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list));</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val)<sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(last,next);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a7ce424962898d63de72f4ad0284c09a5" kindref="member">xlpopn</ref>(2);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>updated<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xremif<sp/>-<sp/>built-in<sp/>function<sp/>&apos;remove-if&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="xllist_8c_1aaab34266ce0bb8da1c0588cde7c8aee9" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1aaab34266ce0bb8da1c0588cde7c8aee9" kindref="member">xremif</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a66eed30716113139849b252af9925abf" kindref="member">remif</ref>();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1a66eed30716113139849b252af9925abf" kindref="member">remif</ref>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>));</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xremifnot<sp/>-<sp/>built-in<sp/>function<sp/>&apos;remove-if-not&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="xllist_8c_1ad222f798fe7d00420e8e761d48b7a863" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1ad222f798fe7d00420e8e761d48b7a863" kindref="member">xremifnot</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a66eed30716113139849b252af9925abf" kindref="member">remif</ref>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1a66eed30716113139849b252af9925abf" kindref="member">remif</ref>(<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>));</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>remif<sp/>-<sp/>common<sp/>code<sp/>for<sp/>&apos;remove-if&apos;<sp/>and<sp/>&apos;remove-if-not&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="xllist_8c_1a66eed30716113139849b252af9925abf" refkind="member"><highlight class="normal"><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a66eed30716113139849b252af9925abf" kindref="member">remif</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>list,fcn,val,<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1ad12805952862f69b5fc0755bdadc08da" kindref="member">xlstkcheck</ref>(2);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(fcn);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(val);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>expression<sp/>to<sp/>remove<sp/>and<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>fcn<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>matches<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list);<sp/>list<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list))</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>to<sp/>see<sp/>if<sp/>this<sp/>element<sp/>should<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1aec9dd5f299003dd1f0fe3656db8a4d24" kindref="member">dotest1</ref>(<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list),fcn)<sp/>!=<sp/>tresult)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/><ref refid="xlisp_8h_1a72509ef6a53e6298774f56615eaaf775" kindref="member">consa</ref>(<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list));</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val)<sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(last,next);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a7ce424962898d63de72f4ad0284c09a5" kindref="member">xlpopn</ref>(2);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>updated<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dotest1<sp/>-<sp/>call<sp/>a<sp/>test<sp/>function<sp/>with<sp/>one<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="xllist_8c_1aec9dd5f299003dd1f0fe3656db8a4d24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xllist_8c_1aec9dd5f299003dd1f0fe3656db8a4d24" kindref="member">dotest1</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>fun)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>*newfp;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>the<sp/>new<sp/>call<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>newfp<sp/>=<sp/><ref refid="xlglob_8c_1afbef59becc9c0fba55d0adf9484b55e8" kindref="member">xlsp</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(<ref refid="xldmem_8c_1a6122562c25b1c6c06dfda32a060d38bb" kindref="member">cvfixnum</ref>((<ref refid="xlisp_8h_1a0eba123a4f1bee2b6ea609fcfe6cbd40" kindref="member">FIXTYPE</ref>)(newfp<sp/>-<sp/><ref refid="xlglob_8c_1ad50286de150ad0d899be32de837295fb" kindref="member">xlfp</ref>)));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(fun);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(<ref refid="xldmem_8c_1a6122562c25b1c6c06dfda32a060d38bb" kindref="member">cvfixnum</ref>((<ref refid="xlisp_8h_1a0eba123a4f1bee2b6ea609fcfe6cbd40" kindref="member">FIXTYPE</ref>)1));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(arg);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1ad50286de150ad0d899be32de837295fb" kindref="member">xlfp</ref><sp/>=<sp/>newfp;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>result<sp/>of<sp/>applying<sp/>the<sp/>test<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xleval_8c_1a12ca816c622c24a3a0182aac1e99bc13" kindref="member">xlapply</ref>(1)<sp/>!=<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dotest2<sp/>-<sp/>call<sp/>a<sp/>test<sp/>function<sp/>with<sp/>two<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="xllist_8c_1a5738514c41a3b6879a759bbc4b89633d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xllist_8c_1a5738514c41a3b6879a759bbc4b89633d" kindref="member">dotest2</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg1,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg2,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>fun)</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>*newfp;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>the<sp/>new<sp/>call<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>newfp<sp/>=<sp/><ref refid="xlglob_8c_1afbef59becc9c0fba55d0adf9484b55e8" kindref="member">xlsp</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(<ref refid="xldmem_8c_1a6122562c25b1c6c06dfda32a060d38bb" kindref="member">cvfixnum</ref>((<ref refid="xlisp_8h_1a0eba123a4f1bee2b6ea609fcfe6cbd40" kindref="member">FIXTYPE</ref>)(newfp<sp/>-<sp/><ref refid="xlglob_8c_1ad50286de150ad0d899be32de837295fb" kindref="member">xlfp</ref>)));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(fun);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(<ref refid="xldmem_8c_1a6122562c25b1c6c06dfda32a060d38bb" kindref="member">cvfixnum</ref>((<ref refid="xlisp_8h_1a0eba123a4f1bee2b6ea609fcfe6cbd40" kindref="member">FIXTYPE</ref>)2));</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(arg1);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(arg2);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1ad50286de150ad0d899be32de837295fb" kindref="member">xlfp</ref><sp/>=<sp/>newfp;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>result<sp/>of<sp/>applying<sp/>the<sp/>test<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xleval_8c_1a12ca816c622c24a3a0182aac1e99bc13" kindref="member">xlapply</ref>(2)<sp/>!=<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xnth<sp/>-<sp/>return<sp/>the<sp/>nth<sp/>element<sp/>of<sp/>a<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="xllist_8c_1a44e9b37dc505aab8675c36226a32a1e8" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a44e9b37dc505aab8675c36226a32a1e8" kindref="member">xnth</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ac3e6d25934563fa15ad1054da60af361" kindref="member">nth</ref>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>));</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xnthcdr<sp/>-<sp/>return<sp/>the<sp/>nth<sp/>cdr<sp/>of<sp/>a<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="xllist_8c_1ad60def53c90837d8b6943d54c81da52d" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1ad60def53c90837d8b6943d54c81da52d" kindref="member">xnthcdr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1ac3e6d25934563fa15ad1054da60af361" kindref="member">nth</ref>(<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>));</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>nth<sp/>-<sp/>internal<sp/>nth<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="xllist_8c_1ac3e6d25934563fa15ad1054da60af361" refkind="member"><highlight class="normal"><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1ac3e6d25934563fa15ad1054da60af361" kindref="member">nth</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>carflag)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>list,num;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a0eba123a4f1bee2b6ea609fcfe6cbd40" kindref="member">FIXTYPE</ref><sp/>n;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>n<sp/>and<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/><ref refid="xlisp_8h_1a57de74bc7ea034c3f4cab0881fdf8f26" kindref="member">xlgafixnum</ref>();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xlisp_8h_1aa3d7f8ceb97b47b2d2286e5868966b8b" kindref="member">xlgacons</ref>();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>the<sp/>number<sp/>isn&apos;t<sp/>negative<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/><ref refid="xldmem_8h_1abd617d059082a375cb509fd9e7b031c2" kindref="member">getfixnum</ref>(num))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;bad<sp/>argument&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>nth<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list)<sp/>&amp;&amp;<sp/>--n<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>list<sp/>beginning<sp/>at<sp/>the<sp/>nth<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(carflag<sp/>&amp;&amp;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list)<sp/>?<sp/><ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list)<sp/>:<sp/>list);</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlength<sp/>-<sp/>return<sp/>the<sp/>length<sp/>of<sp/>a<sp/>list<sp/>or<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525" refid="xllist_8c_1a8e26e3b6dfc15168c9edb240a76fd56a" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a8e26e3b6dfc15168c9edb240a76fd56a" kindref="member">xlength</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a0eba123a4f1bee2b6ea609fcfe6cbd40" kindref="member">FIXTYPE</ref><sp/>n=0;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>list<sp/>or<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>length<sp/>of<sp/>a<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1ac6b5216aa7a134216b30946d64694a46" kindref="member">listp</ref>(arg))</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(arg);<sp/>n++)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(arg);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>length<sp/>of<sp/>a<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a43967124ffef3887dc1e46669eeec027" kindref="member">stringp</ref>(arg))</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(<ref refid="xlisp_8h_1a0eba123a4f1bee2b6ea609fcfe6cbd40" kindref="member">FIXTYPE</ref>)<ref refid="xldmem_8h_1a65642db5712bc4f10adf6ee378eaf2bb" kindref="member">getslength</ref>(arg)-1;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>length<sp/>of<sp/>a<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1affd2148db1b3832bd3d27a6b1007b7ef" kindref="member">vectorp</ref>(arg))</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(<ref refid="xlisp_8h_1a0eba123a4f1bee2b6ea609fcfe6cbd40" kindref="member">FIXTYPE</ref>)<ref refid="xldmem_8h_1ac8d23305da5cbfcbe968123eec4faa2e" kindref="member">getsize</ref>(arg);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>bad<sp/>argument<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;bad<sp/>argument<sp/>type&quot;</highlight><highlight class="normal">,arg);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8c_1a6122562c25b1c6c06dfda32a060d38bb" kindref="member">cvfixnum</ref>(n));</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xmapc<sp/>-<sp/>built-in<sp/>function<sp/>&apos;mapc&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="xllist_8c_1af10a442222dd7724b73932a76fc9b8b9" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1af10a442222dd7724b73932a76fc9b8b9" kindref="member">xmapc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1a03a3bd19ed9a28af3660a6c7b77249c2" kindref="member">map</ref>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>));</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xmapcar<sp/>-<sp/>built-in<sp/>function<sp/>&apos;mapcar&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="xllist_8c_1a5e59166a27fc0c78bd3b941a0f4dac69" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a5e59166a27fc0c78bd3b941a0f4dac69" kindref="member">xmapcar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1a03a3bd19ed9a28af3660a6c7b77249c2" kindref="member">map</ref>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>));</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xmapl<sp/>-<sp/>built-in<sp/>function<sp/>&apos;mapl&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="xllist_8c_1a496036f35b2dcdeacb984d8f6c72d162" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a496036f35b2dcdeacb984d8f6c72d162" kindref="member">xmapl</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="569"><highlight class="normal">{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1a03a3bd19ed9a28af3660a6c7b77249c2" kindref="member">map</ref>(<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>));</highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xmaplist<sp/>-<sp/>built-in<sp/>function<sp/>&apos;maplist&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574" refid="xllist_8c_1a7880b044f3053438634fc4eb91aad4be" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a7880b044f3053438634fc4eb91aad4be" kindref="member">xmaplist</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1a03a3bd19ed9a28af3660a6c7b77249c2" kindref="member">map</ref>(<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>));</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>map<sp/>-<sp/>internal<sp/>mapping<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="xllist_8c_1a03a3bd19ed9a28af3660a6c7b77249c2" refkind="member"><highlight class="normal"><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a03a3bd19ed9a28af3660a6c7b77249c2" kindref="member">map</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>carflag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valflag)</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>*newfp,fun,lists,val,<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>,<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,y;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1ad12805952862f69b5fc0755bdadc08da" kindref="member">xlstkcheck</ref>(3);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(fun);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(lists);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(val);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>function<sp/>to<sp/>apply<sp/>and<sp/>the<sp/>first<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>fun<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>lists<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>the<sp/>result<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>(valflag<sp/>?<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref><sp/>:<sp/>lists);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>build<sp/>a<sp/>list<sp/>of<sp/>argument<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lists<sp/>=<sp/>last<sp/>=<sp/><ref refid="xlisp_8h_1a72509ef6a53e6298774f56615eaaf775" kindref="member">consa</ref>(lists);<sp/><ref refid="xlisp_8h_1a69894d9fc447a80ac1b4b472a5166617" kindref="member">moreargs</ref>();<sp/>last<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(last))</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(last,<ref refid="xldmem_8c_1a6020b108cda9dc1cb27b748db6afef0a" kindref="member">cons</ref>(<ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>(),<ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>));</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>loop<sp/>through<sp/>each<sp/>of<sp/>the<sp/>argument<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>build<sp/>an<sp/>argument<sp/>list<sp/>from<sp/>the<sp/>sublists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newfp<sp/>=<sp/><ref refid="xlglob_8c_1afbef59becc9c0fba55d0adf9484b55e8" kindref="member">xlsp</ref>;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(<ref refid="xldmem_8c_1a6122562c25b1c6c06dfda32a060d38bb" kindref="member">cvfixnum</ref>((<ref refid="xlisp_8h_1a0eba123a4f1bee2b6ea609fcfe6cbd40" kindref="member">FIXTYPE</ref>)(newfp<sp/>-<sp/><ref refid="xlglob_8c_1ad50286de150ad0d899be32de837295fb" kindref="member">xlfp</ref>)));</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(fun);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(<ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>lists;<sp/>x<sp/>&amp;&amp;<sp/>(y<sp/>=<sp/><ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(x))<sp/>&amp;&amp;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(y);<sp/>x<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(x))<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(carflag<sp/>?<sp/><ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(y)<sp/>:<sp/>y);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1ac576943ac88f3b8019c701d36c8f04cd" kindref="member">rplaca</ref>(x,<ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(y));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>quit<sp/>if<sp/>any<sp/>of<sp/>the<sp/>lists<sp/>were<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1afbef59becc9c0fba55d0adf9484b55e8" kindref="member">xlsp</ref><sp/>=<sp/>newfp;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>apply<sp/>the<sp/>function<sp/>to<sp/>the<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newfp[2]<sp/>=<sp/><ref refid="xldmem_8c_1a6122562c25b1c6c06dfda32a060d38bb" kindref="member">cvfixnum</ref>((<ref refid="xlisp_8h_1a0eba123a4f1bee2b6ea609fcfe6cbd40" kindref="member">FIXTYPE</ref>)argc);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1ad50286de150ad0d899be32de837295fb" kindref="member">xlfp</ref><sp/>=<sp/>newfp;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valflag)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="xlisp_8h_1a72509ef6a53e6298774f56615eaaf775" kindref="member">consa</ref>(<ref refid="xleval_8c_1a12ca816c622c24a3a0182aac1e99bc13" kindref="member">xlapply</ref>(argc));</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val)<sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(last,p);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xleval_8c_1a12ca816c622c24a3a0182aac1e99bc13" kindref="member">xlapply</ref>(argc);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a7ce424962898d63de72f4ad0284c09a5" kindref="member">xlpopn</ref>(3);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>last<sp/>test<sp/>expression<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xrplca<sp/>-<sp/>replace<sp/>the<sp/>car<sp/>of<sp/>a<sp/>list<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643" refid="xllist_8c_1a2e7868e9769cc11ffd05f2d01837177b" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a2e7868e9769cc11ffd05f2d01837177b" kindref="member">xrplca</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>list,newcar;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>list<sp/>and<sp/>the<sp/>new<sp/>car<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xlisp_8h_1aa3d7f8ceb97b47b2d2286e5868966b8b" kindref="member">xlgacons</ref>();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>newcar<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>replace<sp/>the<sp/>car<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1ac576943ac88f3b8019c701d36c8f04cd" kindref="member">rplaca</ref>(list,newcar);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>list<sp/>node<sp/>that<sp/>was<sp/>modified<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(list);</highlight></codeline>
<codeline lineno="657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xrplcd<sp/>-<sp/>replace<sp/>the<sp/>cdr<sp/>of<sp/>a<sp/>list<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660" refid="xllist_8c_1abb186b2ec7bf03da4b67d8418dc09a01" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1abb186b2ec7bf03da4b67d8418dc09a01" kindref="member">xrplcd</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>list,newcdr;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>list<sp/>and<sp/>the<sp/>new<sp/>cdr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xlisp_8h_1aa3d7f8ceb97b47b2d2286e5868966b8b" kindref="member">xlgacons</ref>();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>newcdr<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>replace<sp/>the<sp/>cdr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(list,newcdr);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>list<sp/>node<sp/>that<sp/>was<sp/>modified<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(list);</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xnconc<sp/>-<sp/>destructively<sp/>append<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677" refid="xllist_8c_1a2d70c19c00f661ea5841d7744d37a9a3" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a2d70c19c00f661ea5841d7744d37a9a3" kindref="member">xnconc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>,<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,val;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>concatenate<sp/>each<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a69894d9fc447a80ac1b4b472a5166617" kindref="member">moreargs</ref>())<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="xlglob_8c_1a5a6bb9549241319e47d3021370af59a7" kindref="member">xlargc</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>everything<sp/>except<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((next<sp/>=<sp/><ref refid="xlisp_8h_1aa31083d801954147d756862a9ffb0bf4" kindref="member">nextarg</ref>())<sp/>&amp;&amp;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(next))<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>concatenate<sp/>this<sp/>list<sp/>to<sp/>the<sp/>result<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val)<sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(last,next);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(<ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(next)))</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(next);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>the<sp/>last<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val)<sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(last,<ref refid="xlisp_8h_1aa31083d801954147d756862a9ffb0bf4" kindref="member">nextarg</ref>());</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="xlisp_8h_1aa31083d801954147d756862a9ffb0bf4" kindref="member">nextarg</ref>();</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xdelete<sp/>-<sp/>built-in<sp/>function<sp/>&apos;delete&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712" refid="xllist_8c_1ab387026fa3dcd5f14a55830e7e8205a1" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1ab387026fa3dcd5f14a55830e7e8205a1" kindref="member">xdelete</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,list,fcn,<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>,val;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(fcn);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>expression<sp/>to<sp/>delete<sp/>and<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a2f6a21220b42cad8bc05f9a98be80634" kindref="member">xltest</ref>(&amp;fcn,&amp;tresult);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delete<sp/>leading<sp/>matches<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list))<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1a5738514c41a3b6879a759bbc4b89633d" kindref="member">dotest2</ref>(x,<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list),fcn)<sp/>!=<sp/>tresult)</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>last<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delete<sp/>embedded<sp/>matches<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list))<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>the<sp/>first<sp/>non-matching<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>look<sp/>for<sp/>embedded<sp/>matches<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list))<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>to<sp/>see<sp/>if<sp/>this<sp/>element<sp/>should<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1a5738514c41a3b6879a759bbc4b89633d" kindref="member">dotest2</ref>(x,<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list),fcn)<sp/>==<sp/>tresult)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(last,<ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list));</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>to<sp/>the<sp/>next<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>updated<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xdelif<sp/>-<sp/>built-in<sp/>function<sp/>&apos;delete-if&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761" refid="xllist_8c_1a5c7fc2c85c308e555a0a090ae12bf317" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a5c7fc2c85c308e555a0a090ae12bf317" kindref="member">xdelif</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1aed615b10bb875dddd5da89c72e5cb4d3" kindref="member">delif</ref>();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1aed615b10bb875dddd5da89c72e5cb4d3" kindref="member">delif</ref>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>));</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xdelifnot<sp/>-<sp/>built-in<sp/>function<sp/>&apos;delete-if-not&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768" refid="xllist_8c_1acd64aeea2e1425d4be7bb5ddadaf0838" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1acd64aeea2e1425d4be7bb5ddadaf0838" kindref="member">xdelifnot</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="769"><highlight class="normal">{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1aed615b10bb875dddd5da89c72e5cb4d3" kindref="member">delif</ref>();</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1aed615b10bb875dddd5da89c72e5cb4d3" kindref="member">delif</ref>(<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>));</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>delif<sp/>-<sp/>common<sp/>routine<sp/>for<sp/>&apos;delete-if&apos;<sp/>and<sp/>&apos;delete-if-not&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="xllist_8c_1aed615b10bb875dddd5da89c72e5cb4d3" refkind="member"><highlight class="normal"><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1aed615b10bb875dddd5da89c72e5cb4d3" kindref="member">delif</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tresult)</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>list,fcn,<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>,val;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(fcn);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>expression<sp/>to<sp/>delete<sp/>and<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>fcn<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delete<sp/>leading<sp/>matches<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list))<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1aec9dd5f299003dd1f0fe3656db8a4d24" kindref="member">dotest1</ref>(<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list),fcn)<sp/>!=<sp/>tresult)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>last<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delete<sp/>embedded<sp/>matches<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list))<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>the<sp/>first<sp/>non-matching<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>look<sp/>for<sp/>embedded<sp/>matches<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list))<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>to<sp/>see<sp/>if<sp/>this<sp/>element<sp/>should<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1aec9dd5f299003dd1f0fe3656db8a4d24" kindref="member">dotest1</ref>(<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list),fcn)<sp/>==<sp/>tresult)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(last,<ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list));</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>to<sp/>the<sp/>next<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>updated<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xsort<sp/>-<sp/>built-in<sp/>function<sp/>&apos;sort&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823" refid="xllist_8c_1aca36df9dac520e5484d0bd29eb3a5bea" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1aca36df9dac520e5484d0bd29eb3a5bea" kindref="member">xsort</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a4254833b16cba5edd3db3c8a26b4ff29" kindref="member">sortlist</ref>();</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>list,fcn;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1ad12805952862f69b5fc0755bdadc08da" kindref="member">xlstkcheck</ref>(2);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(list);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(fcn);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>list<sp/>to<sp/>sort<sp/>and<sp/>the<sp/>comparison<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>fcn<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sort<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xllist_8c_1a4254833b16cba5edd3db3c8a26b4ff29" kindref="member">sortlist</ref>(list,fcn);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list<sp/>&amp;&amp;<sp/>(<ref refid="xldmem_8h_1a0bea87e39e2918e4bc96203b6912afa8" kindref="member">ntype</ref>(list)<sp/>==<sp/><ref refid="xldmem_8h_1a73a49469b9f7e5a73c215018a4a24dcd" kindref="member">FREE_NODE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;error<sp/>in<sp/>sort<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>and<sp/>return<sp/>the<sp/>sorted<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a7ce424962898d63de72f4ad0284c09a5" kindref="member">xlpopn</ref>(2);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(list);</highlight></codeline>
<codeline lineno="848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>sorting<sp/>algorithm<sp/>is<sp/>based<sp/>on<sp/>a<sp/>Modula-2<sp/>sort<sp/>written<sp/>by</highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/><sp/><sp/><sp/>Richie<sp/>Bielak<sp/>and<sp/>published<sp/>in<sp/>the<sp/>February<sp/>1988<sp/>issue<sp/>of</highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;Computer<sp/>Language&quot;<sp/>magazine<sp/>in<sp/>a<sp/>letter<sp/>to<sp/>the<sp/>editor.</highlight></codeline>
<codeline lineno="854"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sortlist<sp/>-<sp/>sort<sp/>a<sp/>list<sp/>using<sp/>quicksort<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857" refid="xllist_8c_1a4254833b16cba5edd3db3c8a26b4ff29" refkind="member"><highlight class="normal"><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a4254833b16cba5edd3db3c8a26b4ff29" kindref="member">sortlist</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>list,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>fcn)</highlight></codeline>
<codeline lineno="858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a290fffabbf051026faed7ed9db6f2f72" kindref="member">gluelists</ref>();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>smaller,pivot,larger;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1ad12805952862f69b5fc0755bdadc08da" kindref="member">xlstkcheck</ref>(3);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(smaller);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(pivot);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(larger);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lists<sp/>with<sp/>zero<sp/>or<sp/>one<sp/>element<sp/>are<sp/>already<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list)<sp/>&amp;&amp;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(<ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list)))<sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pivot<sp/>=<sp/>list;<sp/>list<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xllist_8c_1a14951a1a526ef11bd8e79f5a7a42ce4f" kindref="member">splitlist</ref>(pivot,list,&amp;smaller,&amp;larger,fcn);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smaller<sp/>=<sp/><ref refid="xllist_8c_1a4254833b16cba5edd3db3c8a26b4ff29" kindref="member">sortlist</ref>(smaller,fcn);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>larger<sp/>=<sp/><ref refid="xllist_8c_1a4254833b16cba5edd3db3c8a26b4ff29" kindref="member">sortlist</ref>(larger,fcn);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/><ref refid="xllist_8c_1a290fffabbf051026faed7ed9db6f2f72" kindref="member">gluelists</ref>(smaller,pivot,larger);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cleanup<sp/>the<sp/>stack<sp/>and<sp/>return<sp/>the<sp/>sorted<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a7ce424962898d63de72f4ad0284c09a5" kindref="member">xlpopn</ref>(3);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(list);</highlight></codeline>
<codeline lineno="880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>splitlist<sp/>-<sp/>split<sp/>the<sp/>list<sp/>around<sp/>the<sp/>pivot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883" refid="xllist_8c_1a14951a1a526ef11bd8e79f5a7a42ce4f" refkind="member"><highlight class="normal"><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xllist_8c_1a14951a1a526ef11bd8e79f5a7a42ce4f" kindref="member">splitlist</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>pivot,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>list,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>*psmaller,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>*plarger,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>fcn)</highlight></codeline>
<codeline lineno="884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1aca97fe39ef9ee285c1bac237226a7cef" kindref="member">xlprot1</ref>(list);<sp/></highlight><highlight class="comment">//<sp/>protect<sp/>list<sp/>from<sp/>gc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>rplacd<sp/>disconnects<sp/>list,<sp/>and<sp/>next<sp/>is<sp/>the<sp/>only<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reference<sp/>to<sp/>it,<sp/>but<sp/>next<sp/>is<sp/>immediately<sp/>assigned<sp/>to<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>dotest2<sp/>which<sp/>is<sp/>where<sp/>gc<sp/>might<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>the<sp/>result<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>*psmaller<sp/>=<sp/>*plarger<sp/>=<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(list);<sp/>list<sp/>=<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(list);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xllist_8c_1a5738514c41a3b6879a759bbc4b89633d" kindref="member">dotest2</ref>(<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(list),<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(pivot),fcn))<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(list,*psmaller);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*psmaller<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(list,*plarger);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*plarger<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>gluelists<sp/>-<sp/>glue<sp/>the<sp/>smaller<sp/>and<sp/>larger<sp/>lists<sp/>with<sp/>the<sp/>pivot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911" refid="xllist_8c_1a290fffabbf051026faed7ed9db6f2f72" refkind="member"><highlight class="normal"><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xllist_8c_1a290fffabbf051026faed7ed9db6f2f72" kindref="member">gluelists</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>smaller,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>pivot,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>larger)</highlight></codeline>
<codeline lineno="912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>larger<sp/>always<sp/>goes<sp/>after<sp/>the<sp/>pivot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(pivot,larger);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>smaller<sp/>list<sp/>is<sp/>empty,<sp/>we&apos;re<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a4d0d481bf0b00670597823b7f6ab4489" kindref="member">null</ref>(smaller))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pivot);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>append<sp/>the<sp/>smaller<sp/>to<sp/>the<sp/>front<sp/>of<sp/>the<sp/>resulting<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(last<sp/>=<sp/>smaller;<sp/><ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(<ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(last));<sp/>last<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(last))</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a7df0ae63dc1a46e13bc6dc9fb9dfe101" kindref="member">rplacd</ref>(last,pivot);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(smaller);</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xllist.c"/>
  </compounddef>
</doxygen>
