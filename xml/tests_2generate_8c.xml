<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="tests_2generate_8c" kind="file" language="C++">
    <compoundname>generate.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">sndfile.h</includes>
    <includes refid="libsndfile_2tests_2utils_8h" local="yes">utils.h</includes>
    <includes refid="generate_8h" local="yes">generate.h</includes>
    <incdepgraph>
      <node id="19244">
        <label>stdarg.h</label>
      </node>
      <node id="19243">
        <label>stdint.h</label>
      </node>
      <node id="19238">
        <label>stdlib.h</label>
      </node>
      <node id="19242">
        <label>utils.h</label>
        <link refid="libsndfile_2tests_2utils_8h"/>
        <childnode refid="19243" relation="include">
        </childnode>
        <childnode refid="19244" relation="include">
        </childnode>
      </node>
      <node id="19241">
        <label>sndfile.h</label>
      </node>
      <node id="19239">
        <label>string.h</label>
      </node>
      <node id="19240">
        <label>math.h</label>
      </node>
      <node id="19236">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/generate.c</label>
        <link refid="tests/generate.c"/>
        <childnode refid="19237" relation="include">
        </childnode>
        <childnode refid="19238" relation="include">
        </childnode>
        <childnode refid="19239" relation="include">
        </childnode>
        <childnode refid="19240" relation="include">
        </childnode>
        <childnode refid="19241" relation="include">
        </childnode>
        <childnode refid="19242" relation="include">
        </childnode>
        <childnode refid="19245" relation="include">
        </childnode>
      </node>
      <node id="19245">
        <label>generate.h</label>
        <link refid="generate_8h"/>
      </node>
      <node id="19237">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="tests_2generate_8c_1ac7baaf86dadbaff36ac4e11352e5f1e9" prot="public" static="no">
        <name>SF_MAX</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>((x) &gt; (y) ? (x) : (y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/generate.c" line="29" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/generate.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tests_2generate_8c_1a860c90d406508960dcc95b33019b35ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float crappy_snare</definition>
        <argsstring>(float *output, int len, int offset, float gain, float maxabs)</argsstring>
        <name>crappy_snare</name>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>float</type>
          <declname>gain</declname>
        </param>
        <param>
          <type>float</type>
          <declname>maxabs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/generate.c" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/generate.c" bodystart="56" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="tests_2generate_8c_1acc8c28262e64785f7dea7bd890a231ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void generate_file</definition>
        <argsstring>(const char *filename, int format, int len)</argsstring>
        <name>generate_file</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/generate.c" line="34" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/generate.c" bodystart="34" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="tests_2generate_8c_1aaed73ffad2932b16a1d4317ffe35faab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float rand_float</definition>
        <argsstring>(void)</argsstring>
        <name>rand_float</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/generate.c" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/generate.c" bodystart="51" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2007-2011<sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo<sp/>&lt;erikd@mega-nerd.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sndfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libsndfile_2tests_2utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="generate_8h" kindref="compound">generate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="tests_2generate_8c_1ac7baaf86dadbaff36ac4e11352e5f1e9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SF_MAX(x,y)<sp/><sp/><sp/><sp/><sp/>((x)<sp/>&gt;<sp/>(y)<sp/>?<sp/>(x)<sp/>:<sp/>(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>crappy_snare<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gain,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxabs)<sp/>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="generate_8h_1acc8c28262e64785f7dea7bd890a231ca" refkind="member"><highlight class="normal"><ref refid="tests_2generate_8c_1acc8c28262e64785f7dea7bd890a231ca" kindref="member">generate_file</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxabs<sp/>=<sp/>0.0<sp/>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>calloc<sp/>(len,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">))<sp/>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>maxabs<sp/>=<sp/>crappy_snare<sp/>(output,<sp/>len,<sp/>0,<sp/>0.95,<sp/>maxabs)<sp/>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>maxabs<sp/>=<sp/>crappy_snare<sp/>(output,<sp/>len,<sp/>len<sp/>/<sp/>4,<sp/>0.85,<sp/>maxabs)<sp/>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>maxabs<sp/>=<sp/>crappy_snare<sp/>(output,<sp/>len,<sp/>2<sp/>*<sp/>len<sp/>/<sp/>4,<sp/>0.85,<sp/>maxabs)<sp/>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>crappy_snare<sp/>(output,<sp/>len,<sp/>3<sp/>*<sp/>len<sp/>/<sp/>4,<sp/>0.85,<sp/>maxabs)<sp/>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2tests_2utils_8c_1a1e14cd636644dd0ecf883292469e0b68" kindref="member">write_mono_file</ref><sp/>(filename,<sp/>format,<sp/>44100,<sp/>output,<sp/>len)<sp/>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(output)<sp/>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>generate_file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">rand_float<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rand<sp/>()<sp/>/<sp/>(0.5<sp/>*<sp/>RAND_MAX)<sp/>-<sp/>1.0<sp/>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>rand_float<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">crappy_snare<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gain,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxabs)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>env<sp/>=<sp/>0.0<sp/>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref><sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>&amp;&amp;<sp/>env<sp/>&lt;<sp/>gain<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>env<sp/>+=<sp/>0.03<sp/>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>+=<sp/>env<sp/>*<sp/>rand_float<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxabs<sp/>=<sp/><ref refid="tests_2generate_8c_1ac7baaf86dadbaff36ac4e11352e5f1e9" kindref="member">SF_MAX</ref><sp/>(maxabs,<sp/>fabs<sp/>(<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>[k]))<sp/>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>k<sp/>&lt;<sp/>len<sp/>&amp;&amp;<sp/>env<sp/>&gt;<sp/>1<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-8<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>env<sp/>*=<sp/>0.995<sp/>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>+=<sp/>env<sp/>*<sp/>rand_float<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxabs<sp/>=<sp/><ref refid="tests_2generate_8c_1ac7baaf86dadbaff36ac4e11352e5f1e9" kindref="member">SF_MAX</ref><sp/>(maxabs,<sp/>fabs<sp/>(<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>[k]))<sp/>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxabs<sp/>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>crappy_snare<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/generate.c"/>
  </compounddef>
</doxygen>
