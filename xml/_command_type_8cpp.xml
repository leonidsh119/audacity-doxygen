<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_command_type_8cpp" kind="file" language="C++">
    <compoundname>CommandType.cpp</compoundname>
    <includes refid="_command_misc_8h" local="yes">CommandMisc.h</includes>
    <includes refid="_command_type_8h" local="yes">CommandType.h</includes>
    <includes refid="_command_signature_8h" local="yes">CommandSignature.h</includes>
    <includes local="no">wx/string.h</includes>
    <incdepgraph>
      <node id="37107">
        <label>CommandType.h</label>
        <link refid="_command_type_8h"/>
        <childnode refid="37102" relation="include">
        </childnode>
      </node>
      <node id="37102">
        <label>CommandMisc.h</label>
        <link refid="_command_misc_8h"/>
        <childnode refid="37103" relation="include">
        </childnode>
        <childnode refid="37104" relation="include">
        </childnode>
        <childnode refid="37105" relation="include">
        </childnode>
        <childnode refid="37106" relation="include">
        </childnode>
      </node>
      <node id="37105">
        <label>wx/variant.h</label>
      </node>
      <node id="37103">
        <label>map</label>
      </node>
      <node id="37101">
        <label>C:/_dev/OpenU/Audacity/audacity/src/commands/CommandType.cpp</label>
        <link refid="CommandType.cpp"/>
        <childnode refid="37102" relation="include">
        </childnode>
        <childnode refid="37107" relation="include">
        </childnode>
        <childnode refid="37108" relation="include">
        </childnode>
        <childnode refid="37104" relation="include">
        </childnode>
      </node>
      <node id="37104">
        <label>wx/string.h</label>
      </node>
      <node id="37108">
        <label>CommandSignature.h</label>
        <link refid="_command_signature_8h"/>
        <childnode refid="37102" relation="include">
        </childnode>
      </node>
      <node id="37106">
        <label>Validators.h</label>
        <link refid="_validators_8h"/>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Contains definitions for <ref refid="class_command_type" kindref="compound">CommandType</ref> class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>Audacity<sp/>-<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>1999-2009<sp/>Audacity<sp/>Team</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>License:<sp/>wxwidgets</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>Dan<sp/>Horgan</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_misc_8h" kindref="compound">CommandMisc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_type_8h" kindref="compound">CommandType.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_signature_8h" kindref="compound">CommandSignature.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_command_type_1a8e98ef31ccfd3951e1e6f2e27a014d6f" refkind="member"><highlight class="normal"><ref refid="class_command_type_1a8e98ef31ccfd3951e1e6f2e27a014d6f" kindref="member">CommandType::CommandType</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/>:<sp/>mName(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),<sp/>mSignature(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_command_type_1a96ec8fe6f8c6c9019efb1c00d32191e0" refkind="member"><highlight class="normal"><ref refid="class_command_type_1a96ec8fe6f8c6c9019efb1c00d32191e0" kindref="member">CommandType::~CommandType</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mName<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mName;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSignature<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mSignature;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_command_type_1a7f5045b8c8c9ffcd47fda211dd21f1c5" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_command_type_1a7f5045b8c8c9ffcd47fda211dd21f1c5" kindref="member">CommandType::GetName</ref>()</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mName<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mName<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxString(<ref refid="class_command_type_1af54ee800a57cafb696885fdcf2557a71" kindref="member">BuildName</ref>());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mName;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_command_type_1a907bc9e2f9c860a77cb30718696e866d" refkind="member"><highlight class="normal"><ref refid="class_command_signature" kindref="compound">CommandSignature</ref><sp/>&amp;<ref refid="class_command_type_1a907bc9e2f9c860a77cb30718696e866d" kindref="member">CommandType::GetSignature</ref>()</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSignature<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSignature<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_command_signature" kindref="compound">CommandSignature</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_command_type_1ab2277b81355936015696d9e87d196718" kindref="member">BuildSignature</ref>(*mSignature);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mSignature;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="class_command_type_1aa6ade2691263d1ef885e6be8df72015f" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_command_type_1aa6ade2691263d1ef885e6be8df72015f" kindref="member">CommandType::Describe</ref>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/><ref refid="class_command_type_1a7f5045b8c8c9ffcd47fda211dd21f1c5" kindref="member">GetName</ref>()<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\nParameters:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_command_type_1a907bc9e2f9c860a77cb30718696e866d" kindref="member">GetSignature</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>ParamValueMap::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><ref refid="_command_misc_8h_1ad01459a1b8a985ee81cde47239806288" kindref="member">ParamValueMap</ref><sp/>defaults<sp/>=<sp/>mSignature-&gt;<ref refid="class_command_signature_1a6fc90f8b6129d88bee681510993b8cb8" kindref="member">GetDefaults</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/>defaults.begin();<sp/>iter<sp/>!=<sp/>defaults.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>desc<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)<sp/>+<sp/>iter-&gt;first<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>mSignature-&gt;<ref refid="class_command_signature_1add826a2917a1c88c75a65c0c74021b88" kindref="member">GetValidator</ref>(iter-&gt;first).<ref refid="class_validator_1a5e73a3e1ec8e85c8775e0ec8daff78ec" kindref="member">GetDescription</ref>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>(default:<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>iter-&gt;second.MakeString()<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandType.cpp"/>
  </compounddef>
</doxygen>
