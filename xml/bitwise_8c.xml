<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="bitwise_8c" kind="file" language="C++">
    <compoundname>bitwise.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">limits.h</includes>
    <includes refid="ogg_8h" local="no">ogg/ogg.h</includes>
    <incdepgraph>
      <node id="18982">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="18983" relation="include">
        </childnode>
        <childnode refid="18984" relation="include">
        </childnode>
        <childnode refid="18973" relation="include">
        </childnode>
      </node>
      <node id="18981">
        <label>stdint.h</label>
      </node>
      <node id="18974">
        <label>stdlib.h</label>
      </node>
      <node id="18977">
        <label>stddef.h</label>
      </node>
      <node id="18984">
        <label>alloca.h</label>
      </node>
      <node id="18978">
        <label>ogg/os_types.h</label>
        <link refid="os__types_8h"/>
        <childnode refid="18979" relation="include">
        </childnode>
      </node>
      <node id="18975">
        <label>limits.h</label>
      </node>
      <node id="18983">
        <label>MacTypes.h</label>
      </node>
      <node id="18973">
        <label>string.h</label>
      </node>
      <node id="18976">
        <label>ogg/ogg.h</label>
        <link refid="ogg_8h"/>
        <childnode refid="18977" relation="include">
        </childnode>
        <childnode refid="18978" relation="include">
        </childnode>
      </node>
      <node id="18979">
        <label>ogg/config_types.h</label>
        <link refid="config__types_8h"/>
        <childnode refid="18980" relation="include">
        </childnode>
        <childnode refid="18981" relation="include">
        </childnode>
        <childnode refid="18982" relation="include">
        </childnode>
      </node>
      <node id="18980">
        <label>inttypes.h</label>
      </node>
      <node id="18972">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c</label>
        <link refid="bitwise.c"/>
        <childnode refid="18973" relation="include">
        </childnode>
        <childnode refid="18974" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
        <childnode refid="18976" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="bitwise_8c_1aee8c6c11b1b61bb7409f769326aeddc4" prot="public" static="no">
        <name>BUFFER_INCREMENT</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="26" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="bitwise_8c_1ac2cf86d9e2a2b44267b9a14c4a4e70d0" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> unsigned long</type>
        <definition>const unsigned long mask[]</definition>
        <argsstring>[]</argsstring>
        <name>mask</name>
        <initializer>=
{0x00000000,0x00000001,0x00000003,0x00000007,0x0000000f,
 0x0000001f,0x0000003f,0x0000007f,0x000000ff,0x000001ff,
 0x000003ff,0x000007ff,0x00000fff,0x00001fff,0x00003fff,
 0x00007fff,0x0000ffff,0x0001ffff,0x0003ffff,0x0007ffff,
 0x000fffff,0x001fffff,0x003fffff,0x007fffff,0x00ffffff,
 0x01ffffff,0x03ffffff,0x07ffffff,0x0fffffff,0x1fffffff,
 0x3fffffff,0x7fffffff,0xffffffff }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="28" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bitwise_8c_1a4ee1866cbc91743ca45e65fce71c63f9" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>const unsigned int mask8B[]</definition>
        <argsstring>[]</argsstring>
        <name>mask8B</name>
        <initializer>=
{0x00,0x80,0xc0,0xe0,0xf0,0xf8,0xfc,0xfe,0xff}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="37" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bitwise_8c_1ad65b5bd71ff1e2d4d7c8dc0d5767f580" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpack_writeinit</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpack_writeinit</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="40" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a6617bd89f2f26221195126f7d9937772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpackB_writeinit</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpackB_writeinit</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="47" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1ac07a7afbd7d6ef9cbef4934e86125485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int oggpack_writecheck</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpack_writecheck</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1af070521872121dde6a7ff51df5b3b53a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int oggpackB_writecheck</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpackB_writecheck</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="56" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a7e629a16865518a073109ec5496c1db5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpack_writetrunc</definition>
        <argsstring>(oggpack_buffer *b, long bits)</argsstring>
        <name>oggpack_writetrunc</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>long</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="60" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a6f1d4a7f3a6af4e122bcd35aa5f9bd4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpackB_writetrunc</definition>
        <argsstring>(oggpack_buffer *b, long bits)</argsstring>
        <name>oggpackB_writetrunc</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>long</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="71" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1af2e77bfb7ad82b12c81e725d7b4c2133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpack_write</definition>
        <argsstring>(oggpack_buffer *b, unsigned long value, int bits)</argsstring>
        <name>oggpack_write</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="83" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="83" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a81cec9a7d04f473b38cfbc083d747042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpackB_write</definition>
        <argsstring>(oggpack_buffer *b, unsigned long value, int bits)</argsstring>
        <name>oggpackB_write</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="126" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="126" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a954dc6d19d32b82851970138fe2c54a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpack_writealign</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpack_writealign</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="168" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="168" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a67f128fbd1c2823097e24e924c9500b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpackB_writealign</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpackB_writealign</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="174" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a08102a61d885a911db052196a3e5b857" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void oggpack_writecopy_helper</definition>
        <argsstring>(oggpack_buffer *b, void *source, long bits, void(*w)(oggpack_buffer *,                                                                                                                                                                                   unsigned long,                                                                                                                                                                                   int), int msb)</argsstring>
        <name>oggpack_writecopy_helper</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>long</type>
          <declname>bits</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*)(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</refunsigned longref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>)</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>msb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="180" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="180" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1adc9ef879e4c946efd285937e53a57dd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpack_writecopy</definition>
        <argsstring>(oggpack_buffer *b, void *source, long bits)</argsstring>
        <name>oggpack_writecopy</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>long</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="227" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1ae033d573c9e7a5a9338250f887af287b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpackB_writecopy</definition>
        <argsstring>(oggpack_buffer *b, void *source, long bits)</argsstring>
        <name>oggpackB_writecopy</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>long</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="231" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="231" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a149a7ea2f5b6c732c716b2267ef46b82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpack_reset</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpack_reset</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="235" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="235" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a3a5d1e5244feb038ddb2b171a1ae8879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpackB_reset</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpackB_reset</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="242" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a1ed2493438bb950987014f3dc671be5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpack_writeclear</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpack_writeclear</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="246" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="246" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a12aeb63fb274f529b6bd25b795aca6f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpackB_writeclear</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpackB_writeclear</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="251" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="251" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a5586b0772a73f943fcaf0db8ab788e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpack_readinit</definition>
        <argsstring>(oggpack_buffer *b, unsigned char *buf, int bytes)</argsstring>
        <name>oggpack_readinit</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="255" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="255" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a85caa0815737960c1215bd5ca9cc12ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpackB_readinit</definition>
        <argsstring>(oggpack_buffer *b, unsigned char *buf, int bytes)</argsstring>
        <name>oggpackB_readinit</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="261" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="261" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long oggpack_look</definition>
        <argsstring>(oggpack_buffer *b, int bits)</argsstring>
        <name>oggpack_look</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="266" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="266" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long oggpackB_look</definition>
        <argsstring>(oggpack_buffer *b, int bits)</argsstring>
        <name>oggpackB_look</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="298" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="298" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a42a32a4d9f328fe7259a5ed47ccae14e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long oggpack_look1</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpack_look1</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="328" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a00c0f5aa56f411dbed471144dd36aa4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long oggpackB_look1</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpackB_look1</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="333" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="333" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1ab1072d1dfae8866cce6014489fa926f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpack_adv</definition>
        <argsstring>(oggpack_buffer *b, int bits)</argsstring>
        <name>oggpack_adv</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="338" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="338" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1af9237517e47a58059cc028019f760482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpackB_adv</definition>
        <argsstring>(oggpack_buffer *b, int bits)</argsstring>
        <name>oggpackB_adv</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="354" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="354" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1af11de3c5c31f4ab567826c66e6a2cb5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpack_adv1</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpack_adv1</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="358" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="358" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a7ba15c21247b46a4ef85b672495335d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void oggpackB_adv1</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpackB_adv1</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="366" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="366" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a7e3e346e19e4a74bfe4e21f90578eee6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long oggpack_read</definition>
        <argsstring>(oggpack_buffer *b, int bits)</argsstring>
        <name>oggpack_read</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="371" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="371" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a7182bc320e5e6b94cb8d90caa0c0b2b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long oggpackB_read</definition>
        <argsstring>(oggpack_buffer *b, int bits)</argsstring>
        <name>oggpackB_read</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="415" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="415" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1af78224170f805b432381042401635165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long oggpack_read1</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpack_read1</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="457" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="457" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a38d53b127663e1365e734b48e700f0c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long oggpackB_read1</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpackB_read1</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="478" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="478" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a6483ce3b4718d510fd506a7d0099d8e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long oggpack_bytes</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpack_bytes</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="499" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="499" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1ac3f0fcfb088cdf281e676653d74a918f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long oggpack_bits</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpack_bits</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="503" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="503" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1ad267f53b9522efe31e1721af11af3fdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long oggpackB_bytes</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpackB_bytes</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="507" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="507" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a317d9e0c9bd3396b131d7c9bea6762c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long oggpackB_bits</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpackB_bits</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="511" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="511" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1abf824fd3dd4a0bd810adb2d3490e3b70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* oggpack_get_buffer</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpack_get_buffer</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="515" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="515" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="bitwise_8c_1a8d92daddf7e4c4024555585197759c61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* oggpackB_get_buffer</definition>
        <argsstring>(oggpack_buffer *b)</argsstring>
        <name>oggpackB_get_buffer</name>
        <param>
          <type><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" line="519" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c" bodystart="519" bodyend="521"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>Ogg<sp/>CONTAINER<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2010<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>Xiph.Org<sp/>Foundation<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>function:<sp/>packing<sp/>variable<sp/>sized<sp/>words<sp/>into<sp/>an<sp/>octet<sp/>stream</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>last<sp/>mod:<sp/>$Id:<sp/>bitwise.c<sp/>18051<sp/>2011-08-04<sp/>17:56:39Z<sp/>giles<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>&apos;LSb&apos;<sp/>endian;<sp/>if<sp/>we<sp/>write<sp/>a<sp/>word<sp/>but<sp/>read<sp/>individual<sp/>bits,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>then<sp/>we&apos;ll<sp/>read<sp/>the<sp/>lsb<sp/>first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ogg_8h" kindref="compound">ogg/ogg.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="bitwise_8c_1aee8c6c11b1b61bb7409f769326aeddc4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUFFER_INCREMENT<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structmask" kindref="compound">mask</ref>[]=</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{0x00000000,0x00000001,0x00000003,0x00000007,0x0000000f,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/>0x0000001f,0x0000003f,0x0000007f,0x000000ff,0x000001ff,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/>0x000003ff,0x000007ff,0x00000fff,0x00001fff,0x00003fff,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/>0x00007fff,0x0000ffff,0x0001ffff,0x0003ffff,0x0007ffff,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/>0x000fffff,0x001fffff,0x003fffff,0x007fffff,0x00ffffff,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/>0x01ffffff,0x03ffffff,0x07ffffff,0x0fffffff,0x1fffffff,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/>0x3fffffff,0x7fffffff,0xffffffff<sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask8B[]=</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{0x00,0x80,0xc0,0xe0,0xf0,0xf8,0xfc,0xfe,0xff};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="bitwise_8c_1ad65b5bd71ff1e2d4d7c8dc0d5767f580" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1ad65b5bd71ff1e2d4d7c8dc0d5767f580" kindref="member">oggpack_writeinit</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>memset(b,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*b));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>=b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(<ref refid="bitwise_8c_1aee8c6c11b1b61bb7409f769326aeddc4" kindref="member">BUFFER_INCREMENT</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>[0]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>=<ref refid="bitwise_8c_1aee8c6c11b1b61bb7409f769326aeddc4" kindref="member">BUFFER_INCREMENT</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="bitwise_8c_1a6617bd89f2f26221195126f7d9937772" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a6617bd89f2f26221195126f7d9937772" kindref="member">oggpackB_writeinit</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1ad65b5bd71ff1e2d4d7c8dc0d5767f580" kindref="member">oggpack_writeinit</ref>(b);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="bitwise_8c_1ac07a7afbd7d6ef9cbef4934e86125485" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1ac07a7afbd7d6ef9cbef4934e86125485" kindref="member">oggpack_writecheck</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref><sp/>||<sp/>!b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="bitwise_8c_1af070521872121dde6a7ff51df5b3b53a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1af070521872121dde6a7ff51df5b3b53a" kindref="member">oggpackB_writecheck</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1ac07a7afbd7d6ef9cbef4934e86125485" kindref="member">oggpack_writecheck</ref>(b);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="bitwise_8c_1a7e629a16865518a073109ec5496c1db5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a7e629a16865518a073109ec5496c1db5" kindref="member">oggpack_writetrunc</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bytes=bits&gt;&gt;3;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>bits-=bytes*8;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>=b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>+bytes;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>=bytes;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>*b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>&amp;=<ref refid="structmask" kindref="compound">mask</ref>[<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="bitwise_8c_1a6f1d4a7f3a6af4e122bcd35aa5f9bd4f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a6f1d4a7f3a6af4e122bcd35aa5f9bd4f" kindref="member">oggpackB_writetrunc</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>){</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bytes=bits&gt;&gt;3;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>bits-=bytes*8;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>=b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>+bytes;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>=bytes;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>*b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>&amp;=mask8B[<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Takes<sp/>only<sp/>up<sp/>to<sp/>32<sp/>bits.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="bitwise_8c_1af2e77bfb7ad82b12c81e725d7b4c2133" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&lt;0<sp/>||<sp/>bits&gt;32)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>&gt;=b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>-4){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ret;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>&gt;LONG_MAX-<ref refid="bitwise_8c_1aee8c6c11b1b61bb7409f769326aeddc4" kindref="member">BUFFER_INCREMENT</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=<ref refid="os__types_8h_1a82fc4b2bb569c745792791cf2c6923a0" kindref="member">_ogg_realloc</ref>(b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>,b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>+<ref refid="bitwise_8c_1aee8c6c11b1b61bb7409f769326aeddc4" kindref="member">BUFFER_INCREMENT</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ret)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>=ret;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>+=<ref refid="bitwise_8c_1aee8c6c11b1b61bb7409f769326aeddc4" kindref="member">BUFFER_INCREMENT</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>=b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>+b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>value&amp;=<ref refid="structmask" kindref="compound">mask</ref>[<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>bits+=b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[0]|=value&lt;&lt;b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;=8){</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[1]=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(value&gt;&gt;(8-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;=16){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[2]=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(value&gt;&gt;(16-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;=24){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[3]=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(value&gt;&gt;(24-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;=32){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[4]=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(value&gt;&gt;(32-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[4]=0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>+=bits/8;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>+=bits/8;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=bits&amp;7;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/>err:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a1ed2493438bb950987014f3dc671be5f" kindref="member">oggpack_writeclear</ref>(b);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Takes<sp/>only<sp/>up<sp/>to<sp/>32<sp/>bits.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="bitwise_8c_1a81cec9a7d04f473b38cfbc083d747042" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a81cec9a7d04f473b38cfbc083d747042" kindref="member">oggpackB_write</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>){</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&lt;0<sp/>||<sp/>bits&gt;32)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>&gt;=b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>-4){</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ret;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>&gt;LONG_MAX-<ref refid="bitwise_8c_1aee8c6c11b1b61bb7409f769326aeddc4" kindref="member">BUFFER_INCREMENT</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=<ref refid="os__types_8h_1a82fc4b2bb569c745792791cf2c6923a0" kindref="member">_ogg_realloc</ref>(b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>,b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>+<ref refid="bitwise_8c_1aee8c6c11b1b61bb7409f769326aeddc4" kindref="member">BUFFER_INCREMENT</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ret)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>=ret;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>+=<ref refid="bitwise_8c_1aee8c6c11b1b61bb7409f769326aeddc4" kindref="member">BUFFER_INCREMENT</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>=b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>+b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>value=(value&amp;<ref refid="structmask" kindref="compound">mask</ref>[<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>])&lt;&lt;(32-bits);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>bits+=b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[0]|=value&gt;&gt;(24+b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;=8){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[1]=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(value&gt;&gt;(16+b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;=16){</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[2]=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(value&gt;&gt;(8+b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;=24){</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[3]=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(value&gt;&gt;(b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;=32){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[4]=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(value&lt;&lt;(8-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[4]=0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>+=bits/8;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>+=bits/8;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=bits&amp;7;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/>err:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a1ed2493438bb950987014f3dc671be5f" kindref="member">oggpack_writeclear</ref>(b);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="bitwise_8c_1a954dc6d19d32b82851970138fe2c54a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a954dc6d19d32b82851970138fe2c54a9" kindref="member">oggpack_writealign</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>=8-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&lt;8)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(b,0,bits);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="bitwise_8c_1a67f128fbd1c2823097e24e924c9500b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a67f128fbd1c2823097e24e924c9500b5" kindref="member">oggpackB_writealign</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>=8-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&lt;8)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1a81cec9a7d04f473b38cfbc083d747042" kindref="member">oggpackB_write</ref>(b,0,bits);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>oggpack_writecopy_helper(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespacewaflib_1_1_task_gen_1a34bb2baa863bf0c5ab4742e22e6bc556" kindref="member">source</ref>,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*w)(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msb){</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="namespacewaflib_1_1_task_gen_1a34bb2baa863bf0c5ab4742e22e6bc556" kindref="member">source</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bytes=<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>/8;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>-=bytes*8;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>){</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unaligned<sp/>copy.<sp/><sp/>Do<sp/>it<sp/>the<sp/>hard<sp/>way.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;bytes;i++)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w(b,(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(ptr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]),8);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>aligned<sp/>block<sp/>copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>+bytes+1&gt;=b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ret;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>+bytes+<ref refid="bitwise_8c_1aee8c6c11b1b61bb7409f769326aeddc4" kindref="member">BUFFER_INCREMENT</ref>&gt;b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>=b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>+bytes+<ref refid="bitwise_8c_1aee8c6c11b1b61bb7409f769326aeddc4" kindref="member">BUFFER_INCREMENT</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret=<ref refid="os__types_8h_1a82fc4b2bb569c745792791cf2c6923a0" kindref="member">_ogg_realloc</ref>(b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>,b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ret)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>=ret;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>=b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>+b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>,<ref refid="namespacewaflib_1_1_task_gen_1a34bb2baa863bf0c5ab4742e22e6bc556" kindref="member">source</ref>,bytes);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>+=bytes;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>+=bytes;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>*b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>=0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>){</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(msb)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w(b,(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(ptr[bytes]&gt;&gt;(8-<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>)),<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w(b,(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(ptr[bytes]),<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/>err:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a1ed2493438bb950987014f3dc671be5f" kindref="member">oggpack_writeclear</ref>(b);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="bitwise_8c_1adc9ef879e4c946efd285937e53a57dd8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1adc9ef879e4c946efd285937e53a57dd8" kindref="member">oggpack_writecopy</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespacewaflib_1_1_task_gen_1a34bb2baa863bf0c5ab4742e22e6bc556" kindref="member">source</ref>,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>){</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>oggpack_writecopy_helper(b,source,bits,<ref refid="bitwise_8c_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>,0);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="bitwise_8c_1ae033d573c9e7a5a9338250f887af287b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1ae033d573c9e7a5a9338250f887af287b" kindref="member">oggpackB_writecopy</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespacewaflib_1_1_task_gen_1a34bb2baa863bf0c5ab4742e22e6bc556" kindref="member">source</ref>,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>){</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>oggpack_writecopy_helper(b,source,bits,<ref refid="bitwise_8c_1a81cec9a7d04f473b38cfbc083d747042" kindref="member">oggpackB_write</ref>,1);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="bitwise_8c_1a149a7ea2f5b6c732c716b2267ef46b82" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a149a7ea2f5b6c732c716b2267ef46b82" kindref="member">oggpack_reset</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>=b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>[0]=0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>=0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="bitwise_8c_1a3a5d1e5244feb038ddb2b171a1ae8879" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a3a5d1e5244feb038ddb2b171a1ae8879" kindref="member">oggpackB_reset</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a149a7ea2f5b6c732c716b2267ef46b82" kindref="member">oggpack_reset</ref>(b);</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="bitwise_8c_1a1ed2493438bb950987014f3dc671be5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a1ed2493438bb950987014f3dc671be5f" kindref="member">oggpack_writeclear</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>)<ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>memset(b,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*b));</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="bitwise_8c_1a12aeb63fb274f529b6bd25b795aca6f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a12aeb63fb274f529b6bd25b795aca6f6" kindref="member">oggpackB_writeclear</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a1ed2493438bb950987014f3dc671be5f" kindref="member">oggpack_writeclear</ref>(b);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="bitwise_8c_1a5586b0772a73f943fcaf0db8ab788e4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a5586b0772a73f943fcaf0db8ab788e4d" kindref="member">oggpack_readinit</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes){</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>memset(b,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*b));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>=<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>=bytes;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="bitwise_8c_1a85caa0815737960c1215bd5ca9cc12ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a85caa0815737960c1215bd5ca9cc12ba" kindref="member">oggpackB_readinit</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes){</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a5586b0772a73f943fcaf0db8ab788e4d" kindref="member">oggpack_readinit</ref>(b,buf,bytes);</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Read<sp/>in<sp/>bits<sp/>without<sp/>advancing<sp/>the<sp/>bitptr;<sp/>bits<sp/>&lt;=<sp/>32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>){</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&lt;0<sp/>||<sp/>bits&gt;32)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>m=<ref refid="structmask" kindref="compound">mask</ref>[<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>];</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>bits+=b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref><sp/>&gt;=<sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>-4){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>the<sp/>main<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref><sp/>&gt;<sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>-((bits+7)&gt;&gt;3))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>special<sp/>case<sp/>to<sp/>avoid<sp/>reading<sp/>b-&gt;ptr[0],<sp/>which<sp/>might<sp/>be<sp/>past<sp/>the<sp/>end<sp/>of</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>buffer;<sp/>also<sp/>skips<sp/>some<sp/>useless<sp/>accounting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!bits)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0L);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>ret=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[0]&gt;&gt;b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;8){</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[1]&lt;&lt;(8-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;16){</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[2]&lt;&lt;(16-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;24){</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[3]&lt;&lt;(24-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;32<sp/>&amp;&amp;<sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[4]&lt;&lt;(32-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(m&amp;ret);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Read<sp/>in<sp/>bits<sp/>without<sp/>advancing<sp/>the<sp/>bitptr;<sp/>bits<sp/>&lt;=<sp/>32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" kindref="member">oggpackB_look</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>){</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>=32-<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m&lt;0<sp/>||<sp/>m&gt;32)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>bits+=b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref><sp/>&gt;=<sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>-4){</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>the<sp/>main<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref><sp/>&gt;<sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>-((bits+7)&gt;&gt;3))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>special<sp/>case<sp/>to<sp/>avoid<sp/>reading<sp/>b-&gt;ptr[0],<sp/>which<sp/>might<sp/>be<sp/>past<sp/>the<sp/>end<sp/>of</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>buffer;<sp/>also<sp/>skips<sp/>some<sp/>useless<sp/>accounting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!bits)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0L);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>ret=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[0]&lt;&lt;(24+b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;8){</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[1]&lt;&lt;(16+b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;16){</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[2]&lt;&lt;(8+b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;24){</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[3]&lt;&lt;(b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;32<sp/>&amp;&amp;<sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[4]&gt;&gt;(8-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((ret&amp;0xffffffff)&gt;&gt;(m&gt;&gt;1))&gt;&gt;((m+1)&gt;&gt;1);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="bitwise_8c_1a42a32a4d9f328fe7259a5ed47ccae14e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a42a32a4d9f328fe7259a5ed47ccae14e" kindref="member">oggpack_look1</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>&gt;=b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">((b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[0]&gt;&gt;b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>)&amp;1);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="bitwise_8c_1a00c0f5aa56f411dbed471144dd36aa4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a00c0f5aa56f411dbed471144dd36aa4c" kindref="member">oggpackB_look1</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>&gt;=b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">((b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[0]&gt;&gt;(7-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>))&amp;1);</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="bitwise_8c_1ab1072d1dfae8866cce6014489fa926f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1ab1072d1dfae8866cce6014489fa926f0" kindref="member">oggpack_adv</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>){</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>bits+=b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref><sp/>&gt;<sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>-((bits+7)&gt;&gt;3))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>overflow;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>+=bits/8;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>+=bits/8;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=bits&amp;7;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/>overflow:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>=b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=1;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="bitwise_8c_1af9237517e47a58059cc028019f760482" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1af9237517e47a58059cc028019f760482" kindref="member">oggpackB_adv</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>){</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1ab1072d1dfae8866cce6014489fa926f0" kindref="member">oggpack_adv</ref>(b,bits);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="bitwise_8c_1af11de3c5c31f4ab567826c66e6a2cb5c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1af11de3c5c31f4ab567826c66e6a2cb5c" kindref="member">oggpack_adv1</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(++(b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>)&gt;7){</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>++;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>++;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="bitwise_8c_1a7ba15c21247b46a4ef85b672495335d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a7ba15c21247b46a4ef85b672495335d5" kindref="member">oggpackB_adv1</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1af11de3c5c31f4ab567826c66e6a2cb5c" kindref="member">oggpack_adv1</ref>(b);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>bits<sp/>&lt;=<sp/>32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="bitwise_8c_1a7e3e346e19e4a74bfe4e21f90578eee6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>){</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&lt;0<sp/>||<sp/>bits&gt;32)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>m=<ref refid="structmask" kindref="compound">mask</ref>[<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>];</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>bits+=b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref><sp/>&gt;=<sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>-4){</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>the<sp/>main<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref><sp/>&gt;<sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>-((bits+7)&gt;&gt;3))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>overflow;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>special<sp/>case<sp/>to<sp/>avoid<sp/>reading<sp/>b-&gt;ptr[0],<sp/>which<sp/>might<sp/>be<sp/>past<sp/>the<sp/>end<sp/>of</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>buffer;<sp/>also<sp/>skips<sp/>some<sp/>useless<sp/>accounting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!bits)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0L);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>ret=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[0]&gt;&gt;b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;8){</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[1]&lt;&lt;(8-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;16){</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[2]&lt;&lt;(16-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;24){</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[3]&lt;&lt;(24-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;32<sp/>&amp;&amp;<sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>){</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[4]&lt;&lt;(32-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>ret&amp;=<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>+=bits/8;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>+=bits/8;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=bits&amp;7;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/>overflow:</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/>err:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>=b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=1;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1L;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>bits<sp/>&lt;=<sp/>32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="bitwise_8c_1a7182bc320e5e6b94cb8d90caa0c0b2b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a7182bc320e5e6b94cb8d90caa0c0b2b0" kindref="member">oggpackB_read</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>){</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>=32-<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m&lt;0<sp/>||<sp/>m&gt;32)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>bits+=b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>+4&gt;=b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>){</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>the<sp/>main<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref><sp/>&gt;<sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>-((bits+7)&gt;&gt;3))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>overflow;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>special<sp/>case<sp/>to<sp/>avoid<sp/>reading<sp/>b-&gt;ptr[0],<sp/>which<sp/>might<sp/>be<sp/>past<sp/>the<sp/>end<sp/>of</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>buffer;<sp/>also<sp/>skips<sp/>some<sp/>useless<sp/>accounting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!bits)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0L);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>ret=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[0]&lt;&lt;(24+b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;8){</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[1]&lt;&lt;(16+b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;16){</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[2]&lt;&lt;(8+b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;24){</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[3]&lt;&lt;(b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits&gt;32<sp/>&amp;&amp;<sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret|=b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[4]&gt;&gt;(8-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>ret=((ret&amp;0xffffffffUL)&gt;&gt;(m&gt;&gt;1))&gt;&gt;((m+1)&gt;&gt;1);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>+=bits/8;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>+=bits/8;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=bits&amp;7;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/>overflow:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/>err:</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>=b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=1;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1L;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="bitwise_8c_1af78224170f805b432381042401635165" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1af78224170f805b432381042401635165" kindref="member">oggpack_read1</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref><sp/>&gt;=<sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>overflow;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>ret=(b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[0]&gt;&gt;b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>)&amp;1;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>++;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>&gt;7){</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>++;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>++;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/>overflow:</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>=b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=1;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1L;</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="bitwise_8c_1a38d53b127663e1365e734b48e700f0c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a38d53b127663e1365e734b48e700f0c5" kindref="member">oggpackB_read1</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref><sp/>&gt;=<sp/>b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>overflow;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>ret=(b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>[0]&gt;&gt;(7-b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>))&amp;1;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>++;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>&gt;7){</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=0;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>++;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>++;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/>overflow:</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a479984d9646e0fba6da8aff21e5c3b64" kindref="member">ptr</ref>=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>=b-&gt;<ref refid="structoggpack__buffer_1a1eea2afb662c8080a902d224773fee4e" kindref="member">storage</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>=1;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1L;</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="bitwise_8c_1a6483ce3b4718d510fd506a7d0099d8e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>+(b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>+7)/8);</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="bitwise_8c_1ac3f0fcfb088cdf281e676653d74a918f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1ac3f0fcfb088cdf281e676653d74a918f" kindref="member">oggpack_bits</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a416200dd77da3603dce3913826d74207" kindref="member">endbyte</ref>*8+b-&gt;<ref refid="structoggpack__buffer_1a5a2ecb260025f73201e58dbd621c9f8b" kindref="member">endbit</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="bitwise_8c_1ad267f53b9522efe31e1721af11af3fdb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1ad267f53b9522efe31e1721af11af3fdb" kindref="member">oggpackB_bytes</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(b);</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="bitwise_8c_1a317d9e0c9bd3396b131d7c9bea6762c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1a317d9e0c9bd3396b131d7c9bea6762c0" kindref="member">oggpackB_bits</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1ac3f0fcfb088cdf281e676653d74a918f" kindref="member">oggpack_bits</ref>(b);</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="bitwise_8c_1abf824fd3dd4a0bd810adb2d3490e3b70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="bitwise_8c_1abf824fd3dd4a0bd810adb2d3490e3b70" kindref="member">oggpack_get_buffer</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(b-&gt;<ref refid="structoggpack__buffer_1a2d828a6e3d0a57f44debf56665ad402e" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="bitwise_8c_1a8d92daddf7e4c4024555585197759c61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="bitwise_8c_1a8d92daddf7e4c4024555585197759c61" kindref="member">oggpackB_get_buffer</ref>(<ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>*b){</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="bitwise_8c_1abf824fd3dd4a0bd810adb2d3490e3b70" kindref="member">oggpack_get_buffer</ref>(b);</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Self<sp/>test<sp/>of<sp/>the<sp/>bitwise<sp/>routines;<sp/>everything<sp/>else<sp/>is<sp/>based<sp/>on</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/>them,<sp/>so<sp/>they<sp/>damned<sp/>well<sp/>better<sp/>be<sp/>solid.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_V_SELFTEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ilog(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v){</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=0;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(v){</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>ret++;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>v&gt;&gt;=1;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><ref refid="structoggpack__buffer" kindref="compound">oggpack_buffer</ref><sp/>r;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>report(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>){</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,in);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cliptest(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*b,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vals,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compsize){</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bytes,<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a149a7ea2f5b6c732c716b2267ef46b82" kindref="member">oggpack_reset</ref>(&amp;o);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vals;i++)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(&amp;o,b[i],<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>?<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>:ilog(b[i]));</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>buffer=<ref refid="bitwise_8c_1abf824fd3dd4a0bd810adb2d3490e3b70" kindref="member">oggpack_get_buffer</ref>(&amp;o);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>bytes=<ref refid="bitwise_8c_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(&amp;o);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes!=compsize)report(</highlight><highlight class="stringliteral">&quot;wrong<sp/>number<sp/>of<sp/>bytes!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;bytes;i++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffer[i]!=comp[i]){</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;bytes;i++)fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;%x<sp/>%x\n&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)buffer[i],(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)comp[i]);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;wrote<sp/>incorrect<sp/>value!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a5586b0772a73f943fcaf0db8ab788e4d" kindref="member">oggpack_readinit</ref>(&amp;r,buffer,bytes);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vals;i++){</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tbit=<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>?<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>:ilog(b[i]);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(&amp;r,tbit)==-1)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>data!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(&amp;r,tbit)!=(b[i]&amp;<ref refid="structmask" kindref="compound">mask</ref>[tbit]))</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;looked<sp/>at<sp/>incorrect<sp/>value!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tbit==1)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1a42a32a4d9f328fe7259a5ed47ccae14e" kindref="member">oggpack_look1</ref>(&amp;r)!=(b[i]&amp;<ref refid="structmask" kindref="compound">mask</ref>[tbit]))</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;looked<sp/>at<sp/>single<sp/>bit<sp/>incorrect<sp/>value!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tbit==1){</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1af78224170f805b432381042401635165" kindref="member">oggpack_read1</ref>(&amp;r)!=(b[i]&amp;<ref refid="structmask" kindref="compound">mask</ref>[tbit]))</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;read<sp/>incorrect<sp/>single<sp/>bit<sp/>value!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(&amp;r,tbit)!=(b[i]&amp;<ref refid="structmask" kindref="compound">mask</ref>[tbit]))</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;read<sp/>incorrect<sp/>value!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(&amp;r)!=bytes)report(</highlight><highlight class="stringliteral">&quot;leftover<sp/>bytes<sp/>after<sp/>read!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cliptestB(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*b,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vals,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*comp,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compsize){</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bytes,<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a3a5d1e5244feb038ddb2b171a1ae8879" kindref="member">oggpackB_reset</ref>(&amp;o);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vals;i++)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1a81cec9a7d04f473b38cfbc083d747042" kindref="member">oggpackB_write</ref>(&amp;o,b[i],<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>?<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>:ilog(b[i]));</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>buffer=<ref refid="bitwise_8c_1a8d92daddf7e4c4024555585197759c61" kindref="member">oggpackB_get_buffer</ref>(&amp;o);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>bytes=<ref refid="bitwise_8c_1ad267f53b9522efe31e1721af11af3fdb" kindref="member">oggpackB_bytes</ref>(&amp;o);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes!=compsize)report(</highlight><highlight class="stringliteral">&quot;wrong<sp/>number<sp/>of<sp/>bytes!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;bytes;i++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffer[i]!=comp[i]){</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;bytes;i++)fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;%x<sp/>%x\n&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)buffer[i],(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)comp[i]);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;wrote<sp/>incorrect<sp/>value!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a85caa0815737960c1215bd5ca9cc12ba" kindref="member">oggpackB_readinit</ref>(&amp;r,buffer,bytes);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vals;i++){</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tbit=<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>?<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>:ilog(b[i]);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" kindref="member">oggpackB_look</ref>(&amp;r,tbit)==-1)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>data!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" kindref="member">oggpackB_look</ref>(&amp;r,tbit)!=(b[i]&amp;<ref refid="structmask" kindref="compound">mask</ref>[tbit]))</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;looked<sp/>at<sp/>incorrect<sp/>value!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tbit==1)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1a00c0f5aa56f411dbed471144dd36aa4c" kindref="member">oggpackB_look1</ref>(&amp;r)!=(b[i]&amp;<ref refid="structmask" kindref="compound">mask</ref>[tbit]))</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;looked<sp/>at<sp/>single<sp/>bit<sp/>incorrect<sp/>value!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tbit==1){</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1a38d53b127663e1365e734b48e700f0c5" kindref="member">oggpackB_read1</ref>(&amp;r)!=(b[i]&amp;<ref refid="structmask" kindref="compound">mask</ref>[tbit]))</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;read<sp/>incorrect<sp/>single<sp/>bit<sp/>value!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1a7182bc320e5e6b94cb8d90caa0c0b2b0" kindref="member">oggpackB_read</ref>(&amp;r,tbit)!=(b[i]&amp;<ref refid="structmask" kindref="compound">mask</ref>[tbit]))</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;read<sp/>incorrect<sp/>value!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1ad267f53b9522efe31e1721af11af3fdb" kindref="member">oggpackB_bytes</ref>(&amp;r)!=bytes)report(</highlight><highlight class="stringliteral">&quot;leftover<sp/>bytes<sp/>after<sp/>read!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="elements_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bytes,<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>testbuffer1[]=</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>{18,12,103948,4325,543,76,432,52,3,65,4,56,32,42,34,21,1,23,32,546,456,7,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>567,56,8,8,55,3,52,342,341,4,265,7,67,86,2199,21,7,1,5,1,4};</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test1size=43;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>testbuffer2[]=</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>{216531625L,1237861823,56732452,131,3212421,12325343,34547562,12313212,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1233432,534,5,346435231,14436467,7869299,76326614,167548585,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>85525151,0,12321,1,349528352};</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test2size=21;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>testbuffer3[]=</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>{1,0,14,0,1,0,12,0,1,0,0,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,1,1,1,1,1,0,0,1,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,1,30,1,1,1,0,0,1,0,0,0,12,0,11,0,1,0,0,1};</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test3size=56;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>large[]=</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>{2136531625L,2137861823,56732452,131,3212421,12325343,34547562,12313212,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1233432,534,5,2146435231,14436467,7869299,76326614,167548585,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>85525151,0,12321,1,2146528352};</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>onesize=33;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>one[33]={146,25,44,151,195,15,153,176,233,131,196,65,85,172,47,40,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>34,242,223,136,35,222,211,86,171,50,225,135,214,75,172,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>223,4};</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oneB[33]={150,101,131,33,203,15,204,216,105,193,156,65,84,85,222,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,139,145,227,126,34,55,244,171,85,100,39,195,173,18,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>245,251,128};</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>twosize=6;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>two[6]={61,255,255,251,231,29};</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>twoB[6]={247,63,255,253,249,120};</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threesize=54;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>three[54]={169,2,232,252,91,132,156,36,89,13,123,176,144,32,254,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>142,224,85,59,121,144,79,124,23,67,90,90,216,79,23,83,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>58,135,196,61,55,129,183,54,101,100,170,37,127,126,10,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100,52,4,14,18,86,77,1};</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threeB[54]={206,128,42,153,57,8,183,251,13,89,36,30,32,144,183,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>130,59,240,121,59,85,223,19,228,180,134,33,107,74,98,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>233,253,196,135,63,2,110,114,50,155,90,127,37,170,104,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>200,20,254,4,58,106,176,144,0};</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>foursize=38;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>four[38]={18,6,163,252,97,194,104,131,32,1,7,82,137,42,129,11,72,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>132,60,220,112,8,196,109,64,179,86,9,137,195,208,122,169,</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>28,2,133,0,1};</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fourB[38]={36,48,102,83,243,24,52,7,4,35,132,10,145,21,2,93,2,41,</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,219,184,16,33,184,54,149,170,132,18,30,29,98,229,67,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>129,10,4,32};</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fivesize=45;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>five[45]={169,2,126,139,144,172,30,4,80,72,240,59,130,218,73,62,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>241,24,210,44,4,20,0,248,116,49,135,100,110,130,181,169,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>84,75,159,2,1,0,132,192,8,0,0,18,22};</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fiveB[45]={1,84,145,111,245,100,128,8,56,36,40,71,126,78,213,226,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>124,105,12,0,133,128,0,162,233,242,67,152,77,205,77,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>172,150,169,129,79,128,0,6,4,32,0,27,9,0};</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sixsize=7;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>six[7]={17,177,170,242,169,19,148};</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sixB[7]={136,141,85,79,149,200,41};</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>read/write<sp/>together<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Later<sp/>we<sp/>test<sp/>against<sp/>pregenerated<sp/>bitstreams<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1ad65b5bd71ff1e2d4d7c8dc0d5767f580" kindref="member">oggpack_writeinit</ref>(&amp;o);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\nSmall<sp/>preclipped<sp/>packing<sp/>(LSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>cliptest(testbuffer1,test1size,0,one,onesize);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\nNull<sp/>bit<sp/>call<sp/>(LSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>cliptest(testbuffer3,test3size,0,two,twosize);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\nLarge<sp/>preclipped<sp/>packing<sp/>(LSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>cliptest(testbuffer2,test2size,0,three,threesize);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\n32<sp/>bit<sp/>preclipped<sp/>packing<sp/>(LSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a149a7ea2f5b6c732c716b2267ef46b82" kindref="member">oggpack_reset</ref>(&amp;o);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;test2size;i++)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1af2e77bfb7ad82b12c81e725d7b4c2133" kindref="member">oggpack_write</ref>(&amp;o,large[i],32);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>buffer=<ref refid="bitwise_8c_1abf824fd3dd4a0bd810adb2d3490e3b70" kindref="member">oggpack_get_buffer</ref>(&amp;o);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>bytes=<ref refid="bitwise_8c_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(&amp;o);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a5586b0772a73f943fcaf0db8ab788e4d" kindref="member">oggpack_readinit</ref>(&amp;r,buffer,bytes);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;test2size;i++){</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(&amp;r,32)==-1)report(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>data.<sp/>failed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(&amp;r,32)!=large[i]){</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;%ld<sp/>!=<sp/>%ld<sp/>(%lx!=%lx):&quot;</highlight><highlight class="normal">,<ref refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(&amp;r,32),large[i],</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(&amp;r,32),large[i]);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;read<sp/>incorrect<sp/>value!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1ab1072d1dfae8866cce6014489fa926f0" kindref="member">oggpack_adv</ref>(&amp;r,32);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1a6483ce3b4718d510fd506a7d0099d8e4" kindref="member">oggpack_bytes</ref>(&amp;r)!=bytes)report(</highlight><highlight class="stringliteral">&quot;leftover<sp/>bytes<sp/>after<sp/>read!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\nSmall<sp/>unclipped<sp/>packing<sp/>(LSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>cliptest(testbuffer1,test1size,7,four,foursize);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\nLarge<sp/>unclipped<sp/>packing<sp/>(LSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>cliptest(testbuffer2,test2size,17,five,fivesize);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\nSingle<sp/>bit<sp/>unclipped<sp/>packing<sp/>(LSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>cliptest(testbuffer3,test3size,1,six,sixsize);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\nTesting<sp/>read<sp/>past<sp/>end<sp/>(LSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a5586b0772a73f943fcaf0db8ab788e4d" kindref="member">oggpack_readinit</ref>(&amp;r,(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;\0\0\0\0\0\0\0\0&quot;</highlight><highlight class="normal">,8);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;64;i++){</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(&amp;r,1)!=0){</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;failed;<sp/>got<sp/>-1<sp/>prematurely.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(&amp;r,1)!=-1<sp/>||</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(&amp;r,1)!=-1){</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;failed;<sp/>read<sp/>past<sp/>end<sp/>without<sp/>-1.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a5586b0772a73f943fcaf0db8ab788e4d" kindref="member">oggpack_readinit</ref>(&amp;r,(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;\0\0\0\0\0\0\0\0&quot;</highlight><highlight class="normal">,8);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(&amp;r,30)!=0<sp/>||<sp/><ref refid="bitwise_8c_1a7e3e346e19e4a74bfe4e21f90578eee6" kindref="member">oggpack_read</ref>(&amp;r,16)!=0){</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;failed<sp/>2;<sp/>got<sp/>-1<sp/>prematurely.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(&amp;r,18)!=0<sp/>||</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(&amp;r,18)!=0){</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;failed<sp/>3;<sp/>got<sp/>-1<sp/>prematurely.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(&amp;r,19)!=-1<sp/>||</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(&amp;r,19)!=-1){</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;failed;<sp/>read<sp/>past<sp/>end<sp/>without<sp/>-1.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(&amp;r,32)!=-1<sp/>||</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1ad49883be3d28269b4dc245460dd4753c" kindref="member">oggpack_look</ref>(&amp;r,32)!=-1){</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;failed;<sp/>read<sp/>past<sp/>end<sp/>without<sp/>-1.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a1ed2493438bb950987014f3dc671be5f" kindref="member">oggpack_writeclear</ref>(&amp;o);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**********<sp/>lazy,<sp/>cut-n-paste<sp/>retest<sp/>with<sp/>MSb<sp/>packing<sp/>***********/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>read/write<sp/>together<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Later<sp/>we<sp/>test<sp/>against<sp/>pregenerated<sp/>bitstreams<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a6617bd89f2f26221195126f7d9937772" kindref="member">oggpackB_writeinit</ref>(&amp;o);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\nSmall<sp/>preclipped<sp/>packing<sp/>(MSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>cliptestB(testbuffer1,test1size,0,oneB,onesize);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\nNull<sp/>bit<sp/>call<sp/>(MSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>cliptestB(testbuffer3,test3size,0,twoB,twosize);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\nLarge<sp/>preclipped<sp/>packing<sp/>(MSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>cliptestB(testbuffer2,test2size,0,threeB,threesize);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\n32<sp/>bit<sp/>preclipped<sp/>packing<sp/>(MSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a3a5d1e5244feb038ddb2b171a1ae8879" kindref="member">oggpackB_reset</ref>(&amp;o);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;test2size;i++)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1a81cec9a7d04f473b38cfbc083d747042" kindref="member">oggpackB_write</ref>(&amp;o,large[i],32);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>buffer=<ref refid="bitwise_8c_1a8d92daddf7e4c4024555585197759c61" kindref="member">oggpackB_get_buffer</ref>(&amp;o);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>bytes=<ref refid="bitwise_8c_1ad267f53b9522efe31e1721af11af3fdb" kindref="member">oggpackB_bytes</ref>(&amp;o);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a85caa0815737960c1215bd5ca9cc12ba" kindref="member">oggpackB_readinit</ref>(&amp;r,buffer,bytes);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;test2size;i++){</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" kindref="member">oggpackB_look</ref>(&amp;r,32)==-1)report(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>data.<sp/>failed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" kindref="member">oggpackB_look</ref>(&amp;r,32)!=large[i]){</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;%ld<sp/>!=<sp/>%ld<sp/>(%lx!=%lx):&quot;</highlight><highlight class="normal">,<ref refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" kindref="member">oggpackB_look</ref>(&amp;r,32),large[i],</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" kindref="member">oggpackB_look</ref>(&amp;r,32),large[i]);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>report(</highlight><highlight class="stringliteral">&quot;read<sp/>incorrect<sp/>value!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1af9237517e47a58059cc028019f760482" kindref="member">oggpackB_adv</ref>(&amp;r,32);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1ad267f53b9522efe31e1721af11af3fdb" kindref="member">oggpackB_bytes</ref>(&amp;r)!=bytes)report(</highlight><highlight class="stringliteral">&quot;leftover<sp/>bytes<sp/>after<sp/>read!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\nSmall<sp/>unclipped<sp/>packing<sp/>(MSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>cliptestB(testbuffer1,test1size,7,fourB,foursize);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\nLarge<sp/>unclipped<sp/>packing<sp/>(MSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>cliptestB(testbuffer2,test2size,17,fiveB,fivesize);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\nSingle<sp/>bit<sp/>unclipped<sp/>packing<sp/>(MSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>cliptestB(testbuffer3,test3size,1,sixB,sixsize);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\nTesting<sp/>read<sp/>past<sp/>end<sp/>(MSb):<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a85caa0815737960c1215bd5ca9cc12ba" kindref="member">oggpackB_readinit</ref>(&amp;r,(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;\0\0\0\0\0\0\0\0&quot;</highlight><highlight class="normal">,8);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;64;i++){</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1a7182bc320e5e6b94cb8d90caa0c0b2b0" kindref="member">oggpackB_read</ref>(&amp;r,1)!=0){</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;failed;<sp/>got<sp/>-1<sp/>prematurely.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" kindref="member">oggpackB_look</ref>(&amp;r,1)!=-1<sp/>||</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1a7182bc320e5e6b94cb8d90caa0c0b2b0" kindref="member">oggpackB_read</ref>(&amp;r,1)!=-1){</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;failed;<sp/>read<sp/>past<sp/>end<sp/>without<sp/>-1.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a85caa0815737960c1215bd5ca9cc12ba" kindref="member">oggpackB_readinit</ref>(&amp;r,(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;\0\0\0\0\0\0\0\0&quot;</highlight><highlight class="normal">,8);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1a7182bc320e5e6b94cb8d90caa0c0b2b0" kindref="member">oggpackB_read</ref>(&amp;r,30)!=0<sp/>||<sp/><ref refid="bitwise_8c_1a7182bc320e5e6b94cb8d90caa0c0b2b0" kindref="member">oggpackB_read</ref>(&amp;r,16)!=0){</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;failed<sp/>2;<sp/>got<sp/>-1<sp/>prematurely.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" kindref="member">oggpackB_look</ref>(&amp;r,18)!=0<sp/>||</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" kindref="member">oggpackB_look</ref>(&amp;r,18)!=0){</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;failed<sp/>3;<sp/>got<sp/>-1<sp/>prematurely.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" kindref="member">oggpackB_look</ref>(&amp;r,19)!=-1<sp/>||</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" kindref="member">oggpackB_look</ref>(&amp;r,19)!=-1){</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;failed;<sp/>read<sp/>past<sp/>end<sp/>without<sp/>-1.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" kindref="member">oggpackB_look</ref>(&amp;r,32)!=-1<sp/>||</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="bitwise_8c_1afca6a2cfacb4e02fd30fa2c5d809ad81" kindref="member">oggpackB_look</ref>(&amp;r,32)!=-1){</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;failed;<sp/>read<sp/>past<sp/>end<sp/>without<sp/>-1.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><ref refid="bitwise_8c_1a12aeb63fb274f529b6bd25b795aca6f6" kindref="member">oggpackB_writeclear</ref>(&amp;o);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ok.\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>_V_SELFTEST<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BUFFER_INCREMENT</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libogg/src/bitwise.c"/>
  </compounddef>
</doxygen>
