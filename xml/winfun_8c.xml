<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="winfun_8c" kind="file" language="C++">
    <compoundname>winfun.c</compoundname>
    <includes local="no">windows.h</includes>
    <includes refid="win_2msvc_2switches_8h" local="no">switches.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <incdepgraph>
      <node id="15971">
        <label>windows.h</label>
      </node>
      <node id="15975">
        <label>stdlib.h</label>
      </node>
      <node id="15978">
        <label>setjmp.h</label>
      </node>
      <node id="15970">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c</label>
        <link refid="winfun.c"/>
        <childnode refid="15971" relation="include">
        </childnode>
        <childnode refid="15972" relation="include">
        </childnode>
        <childnode refid="15974" relation="include">
        </childnode>
        <childnode refid="15980" relation="include">
        </childnode>
      </node>
      <node id="15974">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="15975" relation="include">
        </childnode>
        <childnode refid="15976" relation="include">
        </childnode>
        <childnode refid="15977" relation="include">
        </childnode>
        <childnode refid="15978" relation="include">
        </childnode>
        <childnode refid="15979" relation="include">
        </childnode>
      </node>
      <node id="15973">
        <label>swlogic.h</label>
        <link refid="swlogic_8h"/>
      </node>
      <node id="15987">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="15986">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="15985">
        <label>string.h</label>
      </node>
      <node id="15980">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="15981" relation="include">
        </childnode>
        <childnode refid="15982" relation="include">
        </childnode>
      </node>
      <node id="15972">
        <label>switches.h</label>
        <link refid="win_2msvc_2switches_8h"/>
        <childnode refid="15973" relation="include">
        </childnode>
      </node>
      <node id="15981">
        <label>math.h</label>
      </node>
      <node id="15984">
        <label>switches.h</label>
      </node>
      <node id="15982">
        <label>stdefs.h</label>
        <link refid="stdefs_8h"/>
        <childnode refid="15983" relation="include">
        </childnode>
      </node>
      <node id="15979">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="15977">
        <label>ctype.h</label>
      </node>
      <node id="15976">
        <label>stdio.h</label>
      </node>
      <node id="15983">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="15984" relation="include">
        </childnode>
        <childnode refid="15976" relation="include">
        </childnode>
        <childnode refid="15985" relation="include">
        </childnode>
        <childnode refid="15981" relation="include">
        </childnode>
        <childnode refid="15986" relation="include">
        </childnode>
        <childnode refid="15987" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="winfun_8c_1a37da293d2837c3fe0d42f785d0e4a17a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xsetdir</definition>
        <argsstring>()</argsstring>
        <name>xsetdir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" line="15" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" bodystart="15" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(verbose)</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="mm_8c_1ab421ea2a103f8a57c338dc30e3cf4f6b" kindref="member">verbose</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" line="36" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" bodystart="36" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="winfun_8c_1ac287f675ed0f5687d00d8a27bc83ac70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xget_temp_path</definition>
        <argsstring>()</argsstring>
        <name>xget_temp_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" bodystart="58" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="winfun_8c_1a8dd2ca031865b3f734a8e1423dc9a6c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int osbgetc</definition>
        <argsstring>(FILE *fp)</argsstring>
        <name>osbgetc</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" line="87" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" bodystart="87" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="winfun_8c_1a89f83d1158bea8f2638c472a15e83de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xsystem</definition>
        <argsstring>(V)</argsstring>
        <name>xsystem</name>
        <param>
          <type><ref refid="hillclimb_8cpp_1af40a326b23c68a27cebe60f16634a2cb" kindref="member">V</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" line="96" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="winfun_8c_1a75e01b8228168404589d3fb43fcdc652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xgetkey</definition>
        <argsstring>(V)</argsstring>
        <name>xgetkey</name>
        <param>
          <type><ref refid="hillclimb_8cpp_1af40a326b23c68a27cebe60f16634a2cb" kindref="member">V</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" line="97" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="winfun_8c_1aa71ce84b3bb8606eef25a16ce68342c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ossymbols</definition>
        <argsstring>()</argsstring>
        <name>ossymbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" line="100" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" bodystart="100" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="winfun_8c_1ac7f9462111210cf686fc08ccca16cd97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xsetupconsole</definition>
        <argsstring>()</argsstring>
        <name>xsetupconsole</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" line="131" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" bodystart="131" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="winfun_8c_1a005699b4f04ff58cda47cef011dd779b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void get_xlisp_path</definition>
        <argsstring>(char *p, long p_max)</argsstring>
        <name>get_xlisp_path</name>
        <param>
          <type>char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>long</type>
          <declname>p_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" line="155" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" bodystart="155" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="winfun_8c_1a5102e2dddb13dd6bec148bd8dd52bad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xget_user</definition>
        <argsstring>()</argsstring>
        <name>xget_user</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" line="192" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c" bodystart="192" bodyend="196"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>winfun.c<sp/>-<sp/>windows<sp/>user<sp/>interface<sp/>functions<sp/>for<sp/>xlisp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Written<sp/>by<sp/>Brian<sp/>Kendig.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*Windows<sp/>Console<sp/>and<sp/>DirectSound<sp/>code<sp/>added<sp/>by<sp/>Morgan<sp/>Green<sp/>and<sp/>Chris<sp/>Tchou*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;Quickdraw.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;Windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;Memory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="win_2msvc_2switches_8h" kindref="compound">switches.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sound_8h" kindref="compound">sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Added<sp/>by<sp/>Ning<sp/>Hu<sp/><sp/><sp/><sp/><sp/>May.2001<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">xsetdir<sp/>-<sp/>set<sp/>current<sp/>directory<sp/>of<sp/>the<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="winfun_8c_1a37da293d2837c3fe0d42f785d0e4a17a" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="winfun_8c_1a37da293d2837c3fe0d42f785d0e4a17a" kindref="member">xsetdir</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref><sp/>ssCurDir[MAX_PATH],<sp/>szCurDir[MAX_PATH];</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mm_8c_1ab421ea2a103f8a57c338dc30e3cf4f6b" kindref="member">verbose</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(ssCurDir,<sp/><ref refid="xldmem_8h_1a16885f9275f841afaa18bf10375cf679" kindref="member">getstring</ref>(<ref refid="xlisp_8h_1a1dca3b67c7cfa90308f8c1b02cd42b7b" kindref="member">xlgastring</ref>()));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a69894d9fc447a80ac1b4b472a5166617" kindref="member">moreargs</ref>())<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verbose<sp/>=<sp/>(<ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>()<sp/>!=<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmdline_8c_1a8b58f7656a6b67929782488121de0b55" kindref="member">ok_to_open</ref>(ssCurDir,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SetCurrentDirectory(ssCurDir))<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetCurrentDirectory(</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(szCurDir)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="mapinls_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref>),<sp/>szCurDir))<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xldmem_8c_1af1155210a1df0171d1dbb211eb696908" kindref="member">cvstring</ref>(szCurDir);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>the<sp/>result<sp/>string</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdputstr(&quot;Current<sp/>Directory:<sp/>&quot;);</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdputstr(szCurDir);</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdputstr(&quot;\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36" refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mm_8c_1ab421ea2a103f8a57c338dc30e3cf4f6b" kindref="member">verbose</ref>)<sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;Directory<sp/>Setting<sp/>Error\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>nil<sp/>on<sp/>error*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>test<sp/>if<sp/>source<sp/>matches<sp/>&quot;c:\\windows&quot;<sp/>(case<sp/>insensitive)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_windows_dir(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacewaflib_1_1_task_gen_1a34bb2baa863bf0c5ab4742e22e6bc556" kindref="member">source</ref>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*windows_dir<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;c:\\windows&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*source)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*windows_dir<sp/>||<sp/>tolower(*source++)<sp/>!=<sp/>*windows_dir++)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!*windows_dir;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xget_temp_path<sp/>--<sp/>get<sp/>a<sp/>path<sp/>to<sp/>create<sp/>temp<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="winfun_8c_1ac287f675ed0f5687d00d8a27bc83ac70" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="winfun_8c_1ac287f675ed0f5687d00d8a27bc83ac70" kindref="member">xget_temp_path</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>szDir[MAX_PATH];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rslt<sp/>=<sp/>GetTempPath(MAX_PATH,<sp/>szDir);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(rslt<sp/>&gt;<sp/>MAX_PATH<sp/>||<sp/>rslt<sp/>&lt;=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vista<sp/>apparently<sp/>treats<sp/>c:\windows<sp/>with</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>special<sp/>semantics,<sp/>so<sp/>just<sp/>don&apos;t<sp/>allow</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>GetTempPath<sp/>to<sp/>put<sp/>us<sp/>in<sp/>c:\windows...</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_windows_dir(szDir))<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xldmem_8c_1af1155210a1df0171d1dbb211eb696908" kindref="member">cvstring</ref>(szDir);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>defined<sp/>or<sp/>&quot;c:\\windows&quot;,<sp/>which<sp/>is<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(</highlight><highlight class="stringliteral">&quot;TEMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>&amp;&amp;<sp/>strlen(p)<sp/>&lt;<sp/>MAX_PATH)<sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(szDir,<sp/>p);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>*szDir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_windows_dir(szDir))<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xldmem_8c_1af1155210a1df0171d1dbb211eb696908" kindref="member">cvstring</ref>(szDir);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xldmem_8c_1af1155210a1df0171d1dbb211eb696908" kindref="member">cvstring</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//Updated<sp/>End</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>osbgetc<sp/>-<sp/>get<sp/>a<sp/>character<sp/>from<sp/>a<sp/>binary<sp/>file<sp/>======<sp/><sp/>added<sp/>for<sp/>console*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>int<sp/>osbgetc(fp)<sp/>FILE<sp/>*fp;<sp/>{return<sp/>(getc(fp));}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="winfun_8c_1a8dd2ca031865b3f734a8e1423dc9a6c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="winfun_8c_1a8dd2ca031865b3f734a8e1423dc9a6c6" kindref="member">osbgetc</ref>(FILE<sp/>*fp)<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;<sp/>c<sp/>=<sp/>(getc(fp));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>if<sp/>(dbgflg)<sp/>printf(&quot;osbgetc:<sp/>got<sp/>%d<sp/>from<sp/>FILE<sp/>%x\n&quot;,<sp/>c,<sp/>fp);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="winfun_8c_1a89f83d1158bea8f2638c472a15e83de7" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="winfun_8c_1a89f83d1158bea8f2638c472a15e83de7" kindref="member">xsystem</ref><sp/>(<ref refid="huffman_8c_1a15b10f2c9b7d48e0b61f0ceb19eb12fc" kindref="member">V</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;<sp/>}</highlight></codeline>
<codeline lineno="97" refid="winfun_8c_1a75e01b8228168404589d3fb43fcdc652" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="winfun_8c_1a75e01b8228168404589d3fb43fcdc652" kindref="member">xgetkey</ref><sp/>(<ref refid="huffman_8c_1a15b10f2c9b7d48e0b61f0ceb19eb12fc" kindref="member">V</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="winfun_8c_1aa71ce84b3bb8606eef25a16ce68342c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="winfun_8c_1aa71ce84b3bb8606eef25a16ce68342c3" kindref="member">ossymbols</ref>()<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/>mywin;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32_SNAZZY_CONSOLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_sound_touch_d_l_l_8h_1aa8c0374618b33785ccb02f74bcfebc46" kindref="member">HANDLE</ref><sp/>myhandle;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>COORD<sp/>winsize,<sp/>origin;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nfilterkit_8h_1a7e62930c4614f6a59b33d693f01ce08e" kindref="member">WORD</ref><sp/>textattrib;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>n;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>mywin<sp/>=<sp/>GetForegroundWindow();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>SetConsoleTitle(</highlight><highlight class="stringliteral">&quot;Nyquist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32_SNAZZY_CONSOLE<sp/><sp/><sp/><sp/><sp/>//<sp/>-eub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>myhandle<sp/>=<sp/>GetStdHandle(<ref refid="namespacewaflib_1_1ansiterm_1a3eaf6a851a6729c250d7a9280efb4821" kindref="member">STD_OUTPUT_HANDLE</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>origin.X<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>origin.Y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>winsize.X<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>winsize.Y<sp/>=<sp/>40;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>textattrib<sp/>=<sp/>BACKGROUND_RED<sp/>|<sp/>BACKGROUND_BLUE<sp/>|<sp/>BACKGROUND_GREEN<sp/>|<sp/>BACKGROUND_INTENSITY;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>FillConsoleOutputAttribute(myhandle,<sp/>textattrib,<sp/>winsize.X<sp/>*<sp/>winsize.Y,<sp/>origin,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>SetConsoleScreenBufferSize(myhandle,<sp/>winsize);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>FillConsoleOutputAttribute(myhandle,<sp/>textattrib,<sp/>winsize.X<sp/>*<sp/>winsize.Y,<sp/>origin,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>SetConsoleTextAttribute(myhandle,<sp/>textattrib);<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>setvbuf(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>_IONBF,<sp/>0);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>makes<sp/>it<sp/>work<sp/>under<sp/>NT<sp/>emacs<sp/>20.3<sp/><sp/><sp/>-eub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="winfun_8c_1ac7f9462111210cf686fc08ccca16cd97" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="winfun_8c_1ac7f9462111210cf686fc08ccca16cd97" kindref="member">xsetupconsole</ref>()</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/>mywin;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_sound_touch_d_l_l_8h_1aa8c0374618b33785ccb02f74bcfebc46" kindref="member">HANDLE</ref><sp/>myhandle;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>COORD<sp/>winsize,<sp/>origin;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nfilterkit_8h_1a7e62930c4614f6a59b33d693f01ce08e" kindref="member">WORD</ref><sp/>textattrib;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>n;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>mywin<sp/>=<sp/>GetForegroundWindow();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>SetConsoleTitle(</highlight><highlight class="stringliteral">&quot;Nyquist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>myhandle<sp/>=<sp/>GetStdHandle(<ref refid="namespacewaflib_1_1ansiterm_1a3eaf6a851a6729c250d7a9280efb4821" kindref="member">STD_OUTPUT_HANDLE</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>origin.X<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>origin.Y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>winsize.X<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>winsize.Y<sp/>=<sp/>40;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>textattrib<sp/>=<sp/>BACKGROUND_RED<sp/>|<sp/>BACKGROUND_BLUE<sp/>|<sp/>BACKGROUND_GREEN<sp/>|<sp/>BACKGROUND_INTENSITY;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>FillConsoleOutputAttribute(myhandle,<sp/>textattrib,<sp/>winsize.X<sp/>*<sp/>winsize.Y,<sp/>origin,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>SetConsoleScreenBufferSize(myhandle,<sp/>winsize);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>FillConsoleOutputAttribute(myhandle,<sp/>textattrib,<sp/>winsize.X<sp/>*<sp/>winsize.Y,<sp/>origin,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>SetConsoleTextAttribute(myhandle,<sp/>textattrib);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="winfun_8h_1a005699b4f04ff58cda47cef011dd779b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="winfun_8c_1a005699b4f04ff58cda47cef011dd779b" kindref="member">get_xlisp_path</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>p_max)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>HKEY<sp/>hkey;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwType;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>lval;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlglob_8c_1a25559e12ce66e6e9eec18a5138d5de6b" kindref="member">s_search_path</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>simplicity,<sp/>we<sp/>assume<sp/>if<sp/>!*p<sp/>that<sp/>path<sp/>was<sp/>not<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>therefore,<sp/>no<sp/>path<sp/>is<sp/>equivalent<sp/>to<sp/>an<sp/>empty<sp/>string<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first,<sp/>look<sp/>for<sp/>path<sp/>in<sp/>global<sp/>variable<sp/>*SEARCH-PATH*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>lval<sp/>=<sp/><ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(s_search_path);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lval<sp/>&amp;&amp;<sp/><ref refid="xlisp_8h_1a43967124ffef3887dc1e46669eeec027" kindref="member">stringp</ref>(lval))<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(p,<sp/><ref refid="xldmem_8h_1a16885f9275f841afaa18bf10375cf679" kindref="member">getstring</ref>(lval),<sp/>p_max);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[p_max<sp/>-<sp/>1]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>string<sp/>is<sp/>terminated,<sp/>even<sp/>if<sp/>truncated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>got<sp/>search<sp/>path,<sp/>so<sp/>don&apos;t<sp/>look<sp/>in<sp/>registry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegOpenKeyEx(HKEY_LOCAL_MACHINE,<sp/></highlight><highlight class="stringliteral">&quot;SOFTWARE&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>KEY_READ,<sp/>&amp;hkey)<sp/>!=</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegOpenKeyEx(hkey,<sp/></highlight><highlight class="stringliteral">&quot;CMU&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>KEY_READ,<sp/>&amp;hkey)<sp/>!=</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegOpenKeyEx(hkey,<sp/></highlight><highlight class="stringliteral">&quot;Nyquist&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>KEY_READ,<sp/>&amp;hkey)<sp/>!=</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegQueryValueEx(hkey,<sp/></highlight><highlight class="stringliteral">&quot;XLISPPATH&quot;</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;dwType,<sp/>p,<sp/>&amp;p_max)<sp/>!=</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="winfun_8c_1a5102e2dddb13dd6bec148bd8dd52bad8" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="winfun_8c_1a5102e2dddb13dd6bec148bd8dd52bad8" kindref="member">xget_user</ref>()</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>implemented<sp/>for<sp/>Windows,<sp/>just<sp/>use<sp/>&quot;nyquist&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xldmem_8c_1af1155210a1df0171d1dbb211eb696908" kindref="member">cvstring</ref>(</highlight><highlight class="stringliteral">&quot;nyquist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WINGUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>define<sp/>WINGUI<sp/>in<sp/>the<sp/>Project<sp/>Settings<sp/>for<sp/>the<sp/>NyqWin<sp/>projects.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>define<sp/>WINGUI<sp/>for<sp/>console<sp/>versions<sp/>of<sp/>Nyquist</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="205"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileopen</highlight></codeline>
<codeline lineno="206"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="207"><highlight class="comment">*<sp/><sp/><sp/><sp/>char<sp/>*deflt:<sp/>the<sp/>default<sp/>file<sp/>name<sp/>(e.g.<sp/>from<sp/>command<sp/>line)</highlight></codeline>
<codeline lineno="208"><highlight class="comment">*<sp/><sp/><sp/><sp/>char<sp/>*extension:<sp/>default<sp/>extension</highlight></codeline>
<codeline lineno="209"><highlight class="comment">*<sp/><sp/><sp/><sp/>char<sp/>*mode:<sp/>read<sp/>(&quot;r&quot;)<sp/>or<sp/>write<sp/>(&quot;w&quot;)</highlight></codeline>
<codeline lineno="210"><highlight class="comment">*<sp/><sp/><sp/><sp/>char<sp/>*prompt:<sp/>prompt<sp/>for<sp/>user</highlight></codeline>
<codeline lineno="211"><highlight class="comment">*<sp/>Returns:</highlight></codeline>
<codeline lineno="212"><highlight class="comment">*<sp/><sp/><sp/><sp/>opened<sp/>file<sp/>pointer</highlight></codeline>
<codeline lineno="213"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="comment">*<sp/><sp/><sp/><sp/>opens<sp/>file,<sp/>prompts<sp/>for<sp/>user<sp/>input<sp/>if<sp/>necessary<sp/>and<sp/>warns<sp/>about</highlight></codeline>
<codeline lineno="215"><highlight class="comment">*<sp/><sp/><sp/><sp/>possible<sp/>confusion.<sp/><sp/>If<sp/>deflt<sp/>is<sp/>a<sp/>null<sp/>string<sp/>or<sp/>NULL,<sp/>the<sp/>user<sp/>will</highlight></codeline>
<codeline lineno="216"><highlight class="comment">*<sp/><sp/><sp/><sp/>be<sp/>prompted<sp/>for<sp/>a<sp/>name.<sp/><sp/><sp/><sp/><sp/>The<sp/>routine<sp/>loops<sp/>until<sp/>a<sp/>file<sp/>is<sp/>opened.</highlight></codeline>
<codeline lineno="217"><highlight class="comment">*<sp/><sp/><sp/><sp/>If<sp/>the<sp/>mode<sp/>is<sp/>&quot;r&quot;,<sp/>a<sp/>check<sp/>is<sp/>made<sp/>to<sp/>see<sp/>if<sp/>the<sp/>file<sp/>exists</highlight></codeline>
<codeline lineno="218"><highlight class="comment">*<sp/><sp/><sp/><sp/>with<sp/>and<sp/>without<sp/>the<sp/>extension.<sp/><sp/><sp/><sp/><sp/>If<sp/>both<sp/>exist<sp/>a<sp/>warning<sp/>is<sp/>given.</highlight></codeline>
<codeline lineno="219"><highlight class="comment">*<sp/><sp/><sp/><sp/>For<sp/>mode<sp/>&quot;w&quot;,<sp/>a<sp/>check<sp/>is<sp/>made<sp/>to<sp/>see<sp/>if<sp/>the<sp/>file<sp/>will<sp/>be<sp/>overwritten.</highlight></codeline>
<codeline lineno="220"><highlight class="comment">*<sp/><sp/><sp/><sp/>The<sp/>extension<sp/>is<sp/>automatically<sp/>added<sp/>if<sp/>the<sp/>default<sp/>or<sp/>user-typed</highlight></codeline>
<codeline lineno="221"><highlight class="comment">*<sp/><sp/><sp/><sp/>file<sp/>has<sp/>no<sp/>&quot;.&quot;<sp/><sp/><sp/><sp/><sp/>At<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>loop<sp/>body,<sp/>if<sp/>no<sp/>file<sp/>has</highlight></codeline>
<codeline lineno="222"><highlight class="comment">*<sp/><sp/><sp/><sp/>been<sp/>opened,<sp/>the<sp/>user<sp/>is<sp/>prompted<sp/>for<sp/>another<sp/>file<sp/>name.</highlight></codeline>
<codeline lineno="223"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="userio_8c_1ac4b4384ff8f166640c04db36a63b05cb" kindref="member">fileopen_name</ref>[100];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>name<sp/>of<sp/>the<sp/>opened<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">HINSTANCE<sp/><ref refid="winmain_8cpp_1a44f41244c97693b2fbd5244bcb1e86ec" kindref="member">hInst</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">HWND<sp/><ref refid="winmain_8cpp_1a3966f5a87120e5bbf1c93776d269a105" kindref="member">hMainWindow</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>main<sp/>window<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="winfun_8h_1a207287cb0a6dd6d475277153bbce2a67" kindref="member">getfilename</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*deflt,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prompt)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="mm_8c_1a2719b8cbe8dc1a5064a418269c72e528" kindref="member">filter</ref>[64];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filter_ptr<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>OPENFILENAME<sp/>open_file_name;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension<sp/>&amp;&amp;<sp/>extension[0]<sp/>==<sp/>0)<sp/>extension<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(extension,<sp/></highlight><highlight class="stringliteral">&quot;lsp&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(filter,<sp/></highlight><highlight class="stringliteral">&quot;Lisp<sp/>files&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(filter,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>files&quot;</highlight><highlight class="normal">,<sp/>extension);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(filter<sp/>+<sp/>strlen(filter),<sp/></highlight><highlight class="stringliteral">&quot;%c*.%s%cAll<sp/>files%c*.*%c&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>extension,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter_ptr<sp/>=<sp/><ref refid="mm_8c_1a2719b8cbe8dc1a5064a418269c72e528" kindref="member">filter</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!deflt)<sp/>deflt<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>treat<sp/>NULL<sp/>as<sp/>the<sp/>empty<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(fileopen_name,<sp/>deflt);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.lStructSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(OPENFILENAME);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.hwndOwner<sp/>=<sp/><ref refid="winmain_8cpp_1a3966f5a87120e5bbf1c93776d269a105" kindref="member">hMainWindow</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.hInstance<sp/>=<sp/><ref refid="winmain_8cpp_1a44f41244c97693b2fbd5244bcb1e86ec" kindref="member">hInst</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.lpstrFilter<sp/>=<sp/>filter_ptr;<sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.lpstrCustomFilter<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.nMaxCustFilter<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.nFilterIndex<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.lpstrFile<sp/>=<sp/><ref refid="userio_8c_1ac4b4384ff8f166640c04db36a63b05cb" kindref="member">fileopen_name</ref>;<sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.nMaxFile<sp/>=<sp/>100;<sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.lpstrFileTitle<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.nMaxFileTitle<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.lpstrInitialDir<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.lpstrTitle<sp/>=<sp/>prompt;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.Flags<sp/>=<sp/>OFN_FILEMUSTEXIST<sp/>|<sp/>OFN_PATHMUSTEXIST;<sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.nFileOffset<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.nFileExtension<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.lpstrDefExt<sp/>=<sp/><ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref>;<sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.lCustData<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.lpfnHook<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>open_file_name.lpTemplateName<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((*mode<sp/>==<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>GetOpenFileName(&amp;open_file_name))<sp/>||</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((*mode<sp/>==<sp/></highlight><highlight class="charliteral">&apos;w&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>GetSaveFileName(&amp;open_file_name)))<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>open_file_name.lpstrFile;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">FILE<sp/>*<ref refid="userio_8c_1ac9fc92f4da0129cad2457cc8ed4bb838" kindref="member">fileopen</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*deflt,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*extension,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prompt)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>file<sp/>corresponding<sp/>to<sp/>filename<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="winfun_8h_1a207287cb0a6dd6d475277153bbce2a67" kindref="member">getfilename</ref>(deflt,<sp/>extension,<sp/>mode,<sp/>prompt))<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp<sp/>=<sp/>fopen(fileopen_name,<sp/>mode);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fp;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/winfun.c"/>
  </compounddef>
</doxygen>
