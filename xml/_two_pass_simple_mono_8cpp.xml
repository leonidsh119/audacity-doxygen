<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_two_pass_simple_mono_8cpp" kind="file" language="C++">
    <compoundname>TwoPassSimpleMono.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">../Audacity.h</includes>
    <includes refid="_two_pass_simple_mono_8h" local="yes">TwoPassSimpleMono.h</includes>
    <includes refid="_wave_track_8h" local="yes">../WaveTrack.h</includes>
    <incdepgraph>
      <node id="44578">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="44533" relation="include">
        </childnode>
        <childnode refid="44573" relation="include">
        </childnode>
        <childnode refid="44563" relation="include">
        </childnode>
        <childnode refid="44579" relation="include">
        </childnode>
        <childnode refid="44574" relation="include">
        </childnode>
        <childnode refid="44555" relation="include">
        </childnode>
        <childnode refid="44581" relation="include">
        </childnode>
        <childnode refid="44572" relation="include">
        </childnode>
        <childnode refid="44562" relation="include">
        </childnode>
        <childnode refid="44582" relation="include">
        </childnode>
        <childnode refid="44583" relation="include">
        </childnode>
        <childnode refid="44570" relation="include">
        </childnode>
      </node>
      <node id="44565">
        <label>wx/gauge.h</label>
      </node>
      <node id="44577">
        <label>wx/ffile.h</label>
      </node>
      <node id="44571">
        <label>wx/event.h</label>
      </node>
      <node id="44552">
        <label>wx/cmdline.h</label>
      </node>
      <node id="44548">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="44546" relation="include">
        </childnode>
        <childnode refid="44549" relation="include">
        </childnode>
        <childnode refid="44545" relation="include">
        </childnode>
        <childnode refid="44550" relation="include">
        </childnode>
        <childnode refid="44554" relation="include">
        </childnode>
      </node>
      <node id="44561">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="44547" relation="include">
        </childnode>
        <childnode refid="44543" relation="include">
        </childnode>
        <childnode refid="44562" relation="include">
        </childnode>
      </node>
      <node id="44574">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="44533" relation="include">
        </childnode>
        <childnode refid="44543" relation="include">
        </childnode>
        <childnode refid="44575" relation="include">
        </childnode>
        <childnode refid="44576" relation="include">
        </childnode>
      </node>
      <node id="44558">
        <label>wx/wxchar.h</label>
      </node>
      <node id="44579">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="44580" relation="include">
        </childnode>
        <childnode refid="44533" relation="include">
        </childnode>
      </node>
      <node id="44545">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="44546" relation="include">
        </childnode>
      </node>
      <node id="44567">
        <label>wx/utils.h</label>
      </node>
      <node id="44564">
        <label>wx/evtloop.h</label>
      </node>
      <node id="44555">
        <label>../Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="44556" relation="include">
        </childnode>
      </node>
      <node id="44572">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="44560">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="44553">
        <label>wx/fileconf.h</label>
      </node>
      <node id="44584">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="44581">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="44555" relation="include">
        </childnode>
      </node>
      <node id="44566">
        <label>wx/stattext.h</label>
      </node>
      <node id="44549">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="44546" relation="include">
        </childnode>
      </node>
      <node id="44582">
        <label>wx/list.h</label>
      </node>
      <node id="44556">
        <label>wx/defs.h</label>
      </node>
      <node id="44535">
        <label>SimpleMono.h</label>
        <link refid="_simple_mono_8h"/>
        <childnode refid="44536" relation="include">
        </childnode>
      </node>
      <node id="44542">
        <label>wx/intl.h</label>
      </node>
      <node id="44563">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="44533" relation="include">
        </childnode>
        <childnode refid="44556" relation="include">
        </childnode>
        <childnode refid="44554" relation="include">
        </childnode>
        <childnode refid="44564" relation="include">
        </childnode>
        <childnode refid="44565" relation="include">
        </childnode>
        <childnode refid="44566" relation="include">
        </childnode>
        <childnode refid="44567" relation="include">
        </childnode>
      </node>
      <node id="44540">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="44546">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="44543" relation="include">
        </childnode>
        <childnode refid="44547" relation="include">
        </childnode>
      </node>
      <node id="44554">
        <label>wx/dialog.h</label>
      </node>
      <node id="44550">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="44551" relation="include">
        </childnode>
        <childnode refid="44552" relation="include">
        </childnode>
        <childnode refid="44553" relation="include">
        </childnode>
        <childnode refid="44542" relation="include">
        </childnode>
      </node>
      <node id="44533">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="44570">
        <label>vector</label>
      </node>
      <node id="44536">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="44533" relation="include">
        </childnode>
        <childnode refid="44537" relation="include">
        </childnode>
        <childnode refid="44539" relation="include">
        </childnode>
        <childnode refid="44540" relation="include">
        </childnode>
        <childnode refid="44541" relation="include">
        </childnode>
        <childnode refid="44542" relation="include">
        </childnode>
        <childnode refid="44543" relation="include">
        </childnode>
        <childnode refid="44544" relation="include">
        </childnode>
        <childnode refid="44545" relation="include">
        </childnode>
        <childnode refid="44548" relation="include">
        </childnode>
        <childnode refid="44555" relation="include">
        </childnode>
        <childnode refid="44557" relation="include">
        </childnode>
        <childnode refid="44560" relation="include">
        </childnode>
        <childnode refid="44561" relation="include">
        </childnode>
        <childnode refid="44563" relation="include">
        </childnode>
      </node>
      <node id="44541">
        <label>wx/dynarray.h</label>
      </node>
      <node id="44543">
        <label>wx/string.h</label>
      </node>
      <node id="44583">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="44559">
        <label>math.h</label>
      </node>
      <node id="44557">
        <label>../SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="44533" relation="include">
        </childnode>
        <childnode refid="44555" relation="include">
        </childnode>
        <childnode refid="44556" relation="include">
        </childnode>
        <childnode refid="44558" relation="include">
        </childnode>
        <childnode refid="44559" relation="include">
        </childnode>
      </node>
      <node id="44547">
        <label>wx/arrstr.h</label>
      </node>
      <node id="44532">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/TwoPassSimpleMono.cpp</label>
        <link refid="TwoPassSimpleMono.cpp"/>
        <childnode refid="44533" relation="include">
        </childnode>
        <childnode refid="44534" relation="include">
        </childnode>
        <childnode refid="44568" relation="include">
        </childnode>
      </node>
      <node id="44569">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="44533" relation="include">
        </childnode>
        <childnode refid="44537" relation="include">
        </childnode>
        <childnode refid="44570" relation="include">
        </childnode>
        <childnode refid="44541" relation="include">
        </childnode>
        <childnode refid="44571" relation="include">
        </childnode>
        <childnode refid="44572" relation="include">
        </childnode>
        <childnode refid="44562" relation="include">
        </childnode>
        <childnode refid="44543" relation="include">
        </childnode>
        <childnode refid="44555" relation="include">
        </childnode>
        <childnode refid="44573" relation="include">
        </childnode>
        <childnode refid="44574" relation="include">
        </childnode>
      </node>
      <node id="44580">
        <label>wx/thread.h</label>
      </node>
      <node id="44544">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="44537">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="44538" relation="include">
        </childnode>
      </node>
      <node id="44539">
        <label>set</label>
      </node>
      <node id="44562">
        <label>wx/longlong.h</label>
      </node>
      <node id="44568">
        <label>../WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="44569" relation="include">
        </childnode>
        <childnode refid="44573" relation="include">
        </childnode>
        <childnode refid="44578" relation="include">
        </childnode>
        <childnode refid="44555" relation="include">
        </childnode>
        <childnode refid="44563" relation="include">
        </childnode>
        <childnode refid="44570" relation="include">
        </childnode>
        <childnode refid="44572" relation="include">
        </childnode>
        <childnode refid="44562" relation="include">
        </childnode>
        <childnode refid="44580" relation="include">
        </childnode>
        <childnode refid="44584" relation="include">
        </childnode>
      </node>
      <node id="44534">
        <label>TwoPassSimpleMono.h</label>
        <link refid="_two_pass_simple_mono_8h"/>
        <childnode refid="44535" relation="include">
        </childnode>
      </node>
      <node id="44575">
        <label>stdio.h</label>
      </node>
      <node id="44573">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="44533" relation="include">
        </childnode>
        <childnode refid="44556" relation="include">
        </childnode>
        <childnode refid="44546" relation="include">
        </childnode>
      </node>
      <node id="44551">
        <label>locale.h</label>
      </node>
      <node id="44538">
        <label>memory</label>
      </node>
      <node id="44576">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="44547" relation="include">
        </childnode>
        <childnode refid="44541" relation="include">
        </childnode>
        <childnode refid="44577" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>TwoPassSimpleMono.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Audacity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_two_pass_simple_mono_8h" kindref="compound">TwoPassSimpleMono.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../WaveTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_effect_two_pass_simple_mono_1aad3b6d98f43b0cd1df87ceba31ac82e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_two_pass_simple_mono_1aad3b6d98f43b0cd1df87ceba31ac82e3" kindref="member">EffectTwoPassSimpleMono::Process</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_effect_two_pass_simple_mono_1acacb66ebadd5b30fdec32ed28c150716" kindref="member">mPass</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_effect_two_pass_simple_mono_1a8e8f6872ffef564a7d58d979b96e73cf" kindref="member">mSecondPassDisabled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_effect_two_pass_simple_mono_1a95c60b4193bbdc2bfb2d27b42c0693ee" kindref="member">InitPass1</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_effect_1a039810b41ba1f3e233360caeb48f769d" kindref="member">CopyInputTracks</ref>();<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>mOutputTracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bGoodResult<sp/>=<sp/>ProcessPass();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bGoodResult<sp/>&amp;&amp;<sp/>!<ref refid="class_effect_two_pass_simple_mono_1a8e8f6872ffef564a7d58d979b96e73cf" kindref="member">mSecondPassDisabled</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_two_pass_simple_mono_1acacb66ebadd5b30fdec32ed28c150716" kindref="member">mPass</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_two_pass_simple_mono_1ada2e5370a99d5579a7a1f42e53f5c130" kindref="member">InitPass2</ref>())</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bGoodResult<sp/>=<sp/>ProcessPass();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_effect_1af97713f3d7ca2c647d19e1ec4501d12e" kindref="member">ReplaceProcessedTracks</ref>(bGoodResult);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bGoodResult;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectTwoPassSimpleMono::ProcessPass()</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Iterate<sp/>over<sp/>each<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/><ref refid="class_effect_1a9fc18f5889f07570bf0f5dff7bb0f625" kindref="member">mOutputTracks</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*track<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_two_pass_simple_mono_1a770ffe6dace72bac2af23410212d42b8" kindref="member">mCurTrackNum</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(track)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>start<sp/>and<sp/>end<sp/>times<sp/>from<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trackStart<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1acd39f4f01272e112a2d132e48b60678e" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trackEnd<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>current<sp/>bounds<sp/>to<sp/>whichever<sp/>left<sp/>marker<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//greater<sp/>and<sp/>whichever<sp/>right<sp/>marker<sp/>is<sp/>less:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_two_pass_simple_mono_1a8aeacbef81efa1920a5c064776882521" kindref="member">mCurT0</ref><sp/>=<sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref><sp/>&lt;<sp/>trackStart?<sp/>trackStart:<sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_two_pass_simple_mono_1ac26d0c8dbefeeb1fb5395e19d23644fb" kindref="member">mCurT1</ref><sp/>=<sp/><ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref><sp/>&gt;<sp/>trackEnd?<sp/>trackEnd:<sp/><ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>only<sp/>if<sp/>the<sp/>right<sp/>marker<sp/>is<sp/>to<sp/>the<sp/>right<sp/>of<sp/>the<sp/>left<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_two_pass_simple_mono_1ac26d0c8dbefeeb1fb5395e19d23644fb" kindref="member">mCurT1</ref><sp/>&gt;<sp/><ref refid="class_effect_two_pass_simple_mono_1a8aeacbef81efa1920a5c064776882521" kindref="member">mCurT0</ref>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Transform<sp/>the<sp/>marker<sp/>timepoints<sp/>to<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(<ref refid="class_effect_two_pass_simple_mono_1a8aeacbef81efa1920a5c064776882521" kindref="member">mCurT0</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(<ref refid="class_effect_two_pass_simple_mono_1ac26d0c8dbefeeb1fb5395e19d23644fb" kindref="member">mCurT1</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>track<sp/>rate<sp/>and<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_two_pass_simple_mono_1a69e39749b514b947a31cb80068c4788e" kindref="member">mCurRate</ref><sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_two_pass_simple_mono_1a130a4d76f50159155601968d86f0014b" kindref="member">mCurChannel</ref><sp/>=<sp/>track-&gt;<ref refid="class_track_1a9c988f7695a546bf52ee2dc859db0345" kindref="member">GetChannel</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//NewTrackPass1/2()<sp/>returns<sp/>true<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_two_pass_simple_mono_1acacb66ebadd5b30fdec32ed28c150716" kindref="member">mPass</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_effect_two_pass_simple_mono_1a39fac2b4a9c6bdb9e51ee98e608cec7d" kindref="member">NewTrackPass1</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_effect_two_pass_simple_mono_1ae4a87b42d7294c03fdc2eaa49ca68bba" kindref="member">NewTrackPass2</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ProcessOne()<sp/>(implemented<sp/>below)<sp/>processes<sp/>a<sp/>single<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ProcessOne(track,<sp/>start,<sp/>end))</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Iterate<sp/>to<sp/>the<sp/>next<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_two_pass_simple_mono_1a770ffe6dace72bac2af23410212d42b8" kindref="member">mCurTrackNum</ref>++;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//ProcessOne()<sp/>takes<sp/>a<sp/>track,<sp/>transforms<sp/>it<sp/>to<sp/>bunch<sp/>of<sp/>buffer-blocks,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//and<sp/>executes<sp/>ProcessSimpleMono<sp/>on<sp/>these<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectTwoPassSimpleMono::ProcessOne(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*<sp/>track,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/>samples1,<sp/>samples2,<sp/>tmpcount;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*tmpfloat;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>length<sp/>of<sp/>the<sp/>buffer<sp/>(as<sp/>double).<sp/>len<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//used<sp/>simple<sp/>to<sp/>calculate<sp/>a<sp/>progress<sp/>meter,<sp/>so<sp/>it<sp/>is<sp/>easier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>make<sp/>it<sp/>a<sp/>double<sp/>now<sp/>than<sp/>it<sp/>is<sp/>to<sp/>do<sp/>it<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>(double)(end<sp/>-<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>maxblock<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1a59ca00cf8abf1c28d043effec2866870" kindref="member">GetMaxBlockSize</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Initiate<sp/>a<sp/>processing<sp/>buffer.<sp/><sp/>This<sp/>buffer<sp/>will<sp/>(most<sp/>likely)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//be<sp/>shorter<sp/>than<sp/>the<sp/>length<sp/>of<sp/>the<sp/>track<sp/>being<sp/>processed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*buffer1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[maxblock];</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*buffer2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[maxblock];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>samples1<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1afe9a831f943117dc2f818d0d003c4475" kindref="member">GetBestBlockSize</ref>(<ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>+<sp/>samples1<sp/>&gt;<sp/>end)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>samples1<sp/>=<sp/>end<sp/>-<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples1<sp/>&gt;<sp/>maxblock)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>samples1<sp/>=<sp/>maxblock;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>samples<sp/>from<sp/>the<sp/>track<sp/>and<sp/>put<sp/>them<sp/>in<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>track-&gt;<ref refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" kindref="member">Get</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)<sp/>buffer1,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>start,<sp/>samples1);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>the<sp/>first<sp/>buffer<sp/>with<sp/>a<sp/>NULL<sp/>previous<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_two_pass_simple_mono_1acacb66ebadd5b30fdec32ed28c150716" kindref="member">mPass</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_effect_two_pass_simple_mono_1a51b1556b2e45bc773c854c872c4ec40f" kindref="member">TwoBufferProcessPass1</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>buffer1,<sp/>samples1);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_effect_two_pass_simple_mono_1adc8d996222cad02c5bc0448ee19203b7" kindref="member">TwoBufferProcessPass2</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>buffer1,<sp/>samples1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]buffer1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]buffer2;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>false<sp/>because<sp/>the<sp/>effect<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Go<sp/>through<sp/>the<sp/>track<sp/>one<sp/>buffer<sp/>at<sp/>a<sp/>time.<sp/>s<sp/>counts<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//sample<sp/>the<sp/>current<sp/>buffer<sp/>starts<sp/>at.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/>start<sp/>+<sp/>samples1;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s<sp/>&lt;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>a<sp/>block<sp/>of<sp/>samples<sp/>(smaller<sp/>than<sp/>the<sp/>size<sp/>of<sp/>the<sp/>buffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>samples2<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1afe9a831f943117dc2f818d0d003c4475" kindref="member">GetBestBlockSize</ref>(s);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples2<sp/>&gt;<sp/>maxblock)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples2<sp/>=<sp/>maxblock;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Adjust<sp/>the<sp/>block<sp/>size<sp/>if<sp/>it<sp/>is<sp/>the<sp/>final<sp/>block<sp/>in<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>+<sp/>samples2<sp/>&gt;<sp/>end)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples2<sp/>=<sp/>end<sp/>-<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>samples<sp/>from<sp/>the<sp/>track<sp/>and<sp/>put<sp/>them<sp/>in<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track-&gt;<ref refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" kindref="member">Get</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)<sp/>buffer2,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>s,<sp/>samples2);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Process<sp/>the<sp/>buffer.<sp/><sp/>If<sp/>it<sp/>fails,<sp/>clean<sp/>up<sp/>and<sp/>exit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_two_pass_simple_mono_1acacb66ebadd5b30fdec32ed28c150716" kindref="member">mPass</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_effect_two_pass_simple_mono_1a51b1556b2e45bc773c854c872c4ec40f" kindref="member">TwoBufferProcessPass1</ref>(buffer1,<sp/>samples1,<sp/>buffer2,<sp/>samples2);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_effect_two_pass_simple_mono_1adc8d996222cad02c5bc0448ee19203b7" kindref="member">TwoBufferProcessPass2</ref>(buffer1,<sp/>samples1,<sp/>buffer2,<sp/>samples2);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]buffer1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]buffer2;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>false<sp/>because<sp/>the<sp/>effect<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Processing<sp/>succeeded.<sp/>copy<sp/>the<sp/>newly-changed<sp/>samples<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//onto<sp/>the<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track-&gt;<ref refid="class_wave_track_1aea32b02fe3634c9f6d0a79af3da7c987" kindref="member">Set</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)<sp/>buffer1,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>s-samples1,<sp/>samples1);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Increment<sp/>s<sp/>one<sp/>blockfull<sp/>of<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>samples2;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>Progress<sp/>meter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_two_pass_simple_mono_1a8e8f6872ffef564a7d58d979b96e73cf" kindref="member">mSecondPassDisabled</ref>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_effect_1af2d07dbe30e0eea547e4533d2da50aa2" kindref="member">TotalProgress</ref>((<ref refid="class_effect_two_pass_simple_mono_1a770ffe6dace72bac2af23410212d42b8" kindref="member">mCurTrackNum</ref><sp/>+<sp/>(s-start)/len)<sp/>/<sp/><ref refid="class_effect_1a8f7eda5a9bc77d963ba4144bcea8fb81" kindref="member">GetNumWaveTracks</ref>());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_effect_1af2d07dbe30e0eea547e4533d2da50aa2" kindref="member">TotalProgress</ref>((<ref refid="class_effect_two_pass_simple_mono_1a770ffe6dace72bac2af23410212d42b8" kindref="member">mCurTrackNum</ref><sp/>+<sp/>(s-start)/len<sp/>+<sp/><ref refid="class_effect_1a8f7eda5a9bc77d963ba4144bcea8fb81" kindref="member">GetNumWaveTracks</ref>()*<ref refid="class_effect_two_pass_simple_mono_1acacb66ebadd5b30fdec32ed28c150716" kindref="member">mPass</ref>)/<sp/>(<ref refid="class_effect_1a8f7eda5a9bc77d963ba4144bcea8fb81" kindref="member">GetNumWaveTracks</ref>()*2));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]buffer1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]buffer2;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>false<sp/>because<sp/>the<sp/>effect<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>the<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpfloat<sp/>=<sp/>buffer1;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer1<sp/>=<sp/>buffer2;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer2<sp/>=<sp/>tmpfloat;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpcount<sp/>=<sp/>samples1;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>samples1<sp/>=<sp/>samples2;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>samples2<sp/>=<sp/>tmpcount;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>last<sp/>buffer<sp/>with<sp/>a<sp/>NULL<sp/>pointer<sp/>for<sp/>the<sp/>current<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_two_pass_simple_mono_1acacb66ebadd5b30fdec32ed28c150716" kindref="member">mPass</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_effect_two_pass_simple_mono_1a51b1556b2e45bc773c854c872c4ec40f" kindref="member">TwoBufferProcessPass1</ref>(buffer1,<sp/>samples1,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_effect_two_pass_simple_mono_1adc8d996222cad02c5bc0448ee19203b7" kindref="member">TwoBufferProcessPass2</ref>(buffer1,<sp/>samples1,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]buffer1;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]buffer2;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>false<sp/>because<sp/>the<sp/>effect<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Processing<sp/>succeeded.<sp/>copy<sp/>the<sp/>newly-changed<sp/>samples<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//onto<sp/>the<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/>track-&gt;<ref refid="class_wave_track_1aea32b02fe3634c9f6d0a79af3da7c987" kindref="member">Set</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)<sp/>buffer1,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>s-samples1,<sp/>samples1);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Clean<sp/>up<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]buffer1;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]buffer2;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>true<sp/>because<sp/>the<sp/>effect<sp/>processing<sp/>succeeded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="class_effect_two_pass_simple_mono_1a39fac2b4a9c6bdb9e51ee98e608cec7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_two_pass_simple_mono_1a39fac2b4a9c6bdb9e51ee98e608cec7d" kindref="member">EffectTwoPassSimpleMono::NewTrackPass1</ref>()</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="class_effect_two_pass_simple_mono_1ae4a87b42d7294c03fdc2eaa49ca68bba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_two_pass_simple_mono_1ae4a87b42d7294c03fdc2eaa49ca68bba" kindref="member">EffectTwoPassSimpleMono::NewTrackPass2</ref>()</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//Initialisations<sp/>before<sp/>the<sp/>first<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="class_effect_two_pass_simple_mono_1a95c60b4193bbdc2bfb2d27b42c0693ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_two_pass_simple_mono_1a95c60b4193bbdc2bfb2d27b42c0693ee" kindref="member">EffectTwoPassSimpleMono::InitPass1</ref>()</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//Initialisations<sp/>before<sp/>the<sp/>second<sp/>pass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//Return<sp/>true<sp/>if<sp/>you<sp/>actually<sp/>want<sp/>the<sp/>second<sp/>pass<sp/>to<sp/>go<sp/>ahead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="class_effect_two_pass_simple_mono_1ada2e5370a99d5579a7a1f42e53f5c130" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_two_pass_simple_mono_1ada2e5370a99d5579a7a1f42e53f5c130" kindref="member">EffectTwoPassSimpleMono::InitPass2</ref>()</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TwoPassSimpleMono.cpp"/>
  </compounddef>
</doxygen>
