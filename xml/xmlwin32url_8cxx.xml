<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="xmlwin32url_8cxx" kind="file" language="C++">
    <compoundname>xmlwin32url.cxx</compoundname>
    <includes local="yes">expat.h</includes>
    <includes local="no">windows.h</includes>
    <includes local="no">urlmon.h</includes>
    <includes local="no">wininet.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">tchar.h</includes>
    <includes refid="xmlurl_8h" local="yes">xmlurl.h</includes>
    <includes refid="xmlmime_8h" local="yes">xmlmime.h</includes>
    <incdepgraph>
      <node id="2914">
        <label>windows.h</label>
      </node>
      <node id="2915">
        <label>urlmon.h</label>
      </node>
      <node id="2920">
        <label>xmlmime.h</label>
        <link refid="xmlmime_8h"/>
      </node>
      <node id="2913">
        <label>expat.h</label>
      </node>
      <node id="2919">
        <label>xmlurl.h</label>
        <link refid="xmlurl_8h"/>
      </node>
      <node id="2916">
        <label>wininet.h</label>
      </node>
      <node id="2918">
        <label>tchar.h</label>
      </node>
      <node id="2917">
        <label>stdio.h</label>
      </node>
      <node id="2912">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx</label>
        <link refid="xmlwin32url.cxx"/>
        <childnode refid="2913" relation="include">
        </childnode>
        <childnode refid="2914" relation="include">
        </childnode>
        <childnode refid="2915" relation="include">
        </childnode>
        <childnode refid="2916" relation="include">
        </childnode>
        <childnode refid="2917" relation="include">
        </childnode>
        <childnode refid="2918" relation="include">
        </childnode>
        <childnode refid="2919" relation="include">
        </childnode>
        <childnode refid="2920" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_callback" prot="public">Callback</innerclass>
    <innerclass refid="struct_quit_info" prot="public">QuitInfo</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="xmlwin32url_8cxx_1ace36e2b8d19cdb4842e0b14e9abf8879" prot="public" static="no">
        <name>READ_MAX</name>
        <initializer>(64*1024)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" line="180" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="xmlwin32url_8cxx_1a3365929afb0a6f6b8ddd19eed0d057d8" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>typedef void(* StopHandler) (void *, HRESULT)</definition>
        <argsstring>)(void *, HRESULT)</argsstring>
        <name>StopHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" line="16" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="xmlwin32url_8cxx_1aff77b47a97a109b2acdd4538d9c30c71" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int processURL</definition>
        <argsstring>(XML_Parser parser, IMoniker *baseMoniker, const XML_Char *url)</argsstring>
        <name>processURL</name>
        <param>
          <type><ref refid="amiga_2include_2libraries_2expat_8h_1a9dc0003156857c67b3a60b3993846013" kindref="member">XML_Parser</ref></type>
          <declname>parser</declname>
        </param>
        <param>
          <type>IMoniker *</type>
          <declname>baseMoniker</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref> *</type>
          <declname>url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" line="14" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" bodystart="363" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="xmlwin32url_8cxx_1a591062555d42e9903b0080b83ae0e538" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void reportError</definition>
        <argsstring>(XML_Parser parser)</argsstring>
        <name>reportError</name>
        <param>
          <type><ref refid="amiga_2include_2libraries_2expat_8h_1a9dc0003156857c67b3a60b3993846013" kindref="member">XML_Parser</ref></type>
          <declname>parser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" line="125" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" bodystart="125" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="xmlwin32url_8cxx_1a511b615f80e13157044476e64d3d2bd8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int externalEntityRef</definition>
        <argsstring>(void *arg, const XML_Char *context, const XML_Char *base, const XML_Char *systemId, const XML_Char *publicId)</argsstring>
        <name>externalEntityRef</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref> *</type>
          <declname>systemId</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref> *</type>
          <declname>publicId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" line="247" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" bodystart="247" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="xmlwin32url_8cxx_1a36721efb9878e0ecb52968ecee1ad4e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref></type>
        <definition>static HRESULT openStream</definition>
        <argsstring>(XML_Parser parser, IMoniker *baseMoniker, const XML_Char *uri, StopHandler stopHandler, void *stopArg)</argsstring>
        <name>openStream</name>
        <param>
          <type><ref refid="amiga_2include_2libraries_2expat_8h_1a9dc0003156857c67b3a60b3993846013" kindref="member">XML_Parser</ref></type>
          <declname>parser</declname>
        </param>
        <param>
          <type>IMoniker *</type>
          <declname>baseMoniker</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref> *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="xmlwin32url_8cxx_1a3365929afb0a6f6b8ddd19eed0d057d8" kindref="member">StopHandler</ref></type>
          <declname>stopHandler</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>stopArg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" line="258" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" bodystart="258" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="xmlwin32url_8cxx_1a88566aec42f847e549695bcebe7a03cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void winPerror</definition>
        <argsstring>(const XML_Char *url, HRESULT hr)</argsstring>
        <name>winPerror</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref> *</type>
          <declname>url</declname>
        </param>
        <param>
          <type><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref></type>
          <declname>hr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" line="312" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" bodystart="312" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="xmlwin32url_8cxx_1a20149a2df8c7d4621a636c09adb6649e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void threadQuit</definition>
        <argsstring>(void *p, HRESULT hr)</argsstring>
        <name>threadQuit</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref></type>
          <declname>hr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" line="341" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" bodystart="341" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="xmlwin32url_8cxx_1abdd05eb9e7e27a681e1a756cb41e79ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int XML_URLInit</definition>
        <argsstring>(void)</argsstring>
        <name>XML_URLInit</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" line="350" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" bodystart="350" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="xmlwin32url_8cxx_1add60cb5da870da8d54f611e0ff056229" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void XML_URLUninit</definition>
        <argsstring>(void)</argsstring>
        <name>XML_URLUninit</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" line="357" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" bodystart="357" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="xmlwin32url_8cxx_1a28a481726cad7ece5fa4f9086aad2995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int XML_ProcessURL</definition>
        <argsstring>(XML_Parser parser, const XML_Char *url, unsigned flags)</argsstring>
        <name>XML_ProcessURL</name>
        <param>
          <type><ref refid="amiga_2include_2libraries_2expat_8h_1a9dc0003156857c67b3a60b3993846013" kindref="member">XML_Parser</ref></type>
          <declname>parser</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref> *</type>
          <declname>url</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" line="390" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx" bodystart="390" bodyend="395"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;expat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XML_UNICODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNICODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;urlmon.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wininet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xmlurl_8h" kindref="compound">xmlurl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xmlmime_8h" kindref="compound">xmlmime.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">processURL(<ref refid="struct_x_m_l___parser_struct" kindref="compound">XML_Parser</ref><sp/>parser,<sp/>IMoniker<sp/>*baseMoniker,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*url);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="xmlwin32url_8cxx_1a3365929afb0a6f6b8ddd19eed0d057d8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*<ref refid="xmlwin32url_8cxx_1a3365929afb0a6f6b8ddd19eed0d057d8" kindref="member">StopHandler</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_callback" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_callback" kindref="compound">Callback</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IBindStatusCallback<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IUnknown<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>STDMETHODIMP<sp/><ref refid="class_callback_1a619cd3328d3293073bb26c3e1935724f" kindref="member">QueryInterface</ref>(<ref refid="px__win__ds_8c_1a80ec49c8ae61e234197d5071d2df497d" kindref="member">REFIID</ref>,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="class_callback_1a2c4397f03d7026fb78521b7367c5e394" kindref="member">STDMETHODIMP_</ref>(ULONG)<sp/>AddRef();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="class_callback_1a2c4397f03d7026fb78521b7367c5e394" kindref="member">STDMETHODIMP_</ref>(ULONG)<sp/>Release();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IBindStatusCallback<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>STDMETHODIMP<sp/><ref refid="class_callback_1a5cf4c6ba0d72d53b6279cd9a2269b573" kindref="member">OnStartBinding</ref>(<ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>,<sp/>IBinding<sp/>*);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>STDMETHODIMP<sp/><ref refid="class_callback_1a3a9153714f7a5cca8809f1a989f7f65d" kindref="member">GetPriority</ref>(LONG<sp/>*);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>STDMETHODIMP<sp/><ref refid="class_callback_1a8ee32df7e5c9e834217e012e4f6e8c6a" kindref="member">OnLowResource</ref>(<ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>STDMETHODIMP<sp/><ref refid="class_callback_1ac9ae59eb7a86a28d393a514aa70a8f32" kindref="member">OnProgress</ref>(ULONG,<sp/>ULONG,<sp/>ULONG,<sp/><ref refid="mapinls_8h_1a25fda90f83ded0efd5456a4e7eda1e0c" kindref="member">LPCWSTR</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>STDMETHODIMP<sp/><ref refid="class_callback_1a6cb1c47a37eeab4f56358a3e66aa12b4" kindref="member">OnStopBinding</ref>(<ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref>,<sp/><ref refid="mapinls_8h_1a25fda90f83ded0efd5456a4e7eda1e0c" kindref="member">LPCWSTR</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>STDMETHODIMP<sp/><ref refid="class_callback_1a615e915e7de6955c3abc4067fa99c1c7" kindref="member">GetBindInfo</ref>(<ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>*,<sp/>BINDINFO<sp/>*);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>STDMETHODIMP<sp/><ref refid="class_callback_1af2c1435cbfa3de6f4f31055d905c9151" kindref="member">OnDataAvailable</ref>(<ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>,<sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>,<sp/>FORMATETC<sp/>*,<sp/>STGMEDIUM<sp/>*);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>STDMETHODIMP<sp/><ref refid="class_callback_1af23ab3465e5ff6666e469a18da5d5576" kindref="member">OnObjectAvailable</ref>(<ref refid="px__win__ds_8c_1a80ec49c8ae61e234197d5071d2df497d" kindref="member">REFIID</ref>,<sp/>IUnknown<sp/>*);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="class_callback_1a925d268be14f5589d7d35b5555636f0d" kindref="member">Callback</ref>(<ref refid="struct_x_m_l___parser_struct" kindref="compound">XML_Parser</ref>,<sp/>IMoniker<sp/>*,<sp/><ref refid="xmlwin32url_8cxx_1a3365929afb0a6f6b8ddd19eed0d057d8" kindref="member">StopHandler</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="class_callback_1ac5a98dfe0ad07d5d0c9b94fc541184e7" kindref="member">~Callback</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_callback_1a61722f8eee1098f07384f99d7cc2d751" kindref="member">externalEntityRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*<ref refid="structcontext" kindref="compound">context</ref>,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*<ref refid="lib_2expat_8h_1a0713b4ddfceba53ef272e377a6d39fc0" kindref="member">systemId</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*<ref refid="lib_2expat_8h_1a8bb3e4080f81b91a05cf10785cd4112e" kindref="member">publicId</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="struct_x_m_l___parser_struct" kindref="compound">XML_Parser</ref><sp/>parser_;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>IMoniker<sp/>*baseMoniker_;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>totalRead_;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>ULONG<sp/>ref_;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>IBinding<sp/>*pBinding_;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="xmlwin32url_8cxx_1a3365929afb0a6f6b8ddd19eed0d057d8" kindref="member">StopHandler</ref><sp/>stopHandler_;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stopArg_;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="class_callback_1a2c4397f03d7026fb78521b7367c5e394" kindref="member">STDMETHODIMP_</ref>(ULONG)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">Callback::AddRef()</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref_++;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="class_callback_1a2c4397f03d7026fb78521b7367c5e394" kindref="member">STDMETHODIMP_</ref>(ULONG)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">Callback::Release()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--ref_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref_;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">STDMETHODIMP</highlight></codeline>
<codeline lineno="64" refid="class_callback_1a619cd3328d3293073bb26c3e1935724f" refkind="member"><highlight class="normal"><ref refid="class_callback_1a619cd3328d3293073bb26c3e1935724f" kindref="member">Callback::QueryInterface</ref>(<ref refid="px__win__ds_8c_1a80ec49c8ae61e234197d5071d2df497d" kindref="member">REFIID</ref><sp/>riid,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>ppv)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsEqualGUID(riid,<sp/>IID_IUnknown))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>*ppv<sp/>=<sp/>(IUnknown<sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsEqualGUID(riid,<sp/>IID_IBindStatusCallback))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>*ppv<sp/>=<sp/>(IBindStatusCallback<sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E_NOINTERFACE;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>((LPUNKNOWN)*ppv)-&gt;AddRef();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_OK;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">STDMETHODIMP</highlight></codeline>
<codeline lineno="77" refid="class_callback_1a5cf4c6ba0d72d53b6279cd9a2269b573" refkind="member"><highlight class="normal"><ref refid="class_callback_1a5cf4c6ba0d72d53b6279cd9a2269b573" kindref="member">Callback::OnStartBinding</ref>(<ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>,<sp/>IBinding*<sp/>pBinding)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>pBinding_<sp/>=<sp/>pBinding;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>pBinding-&gt;AddRef();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_OK;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">STDMETHODIMP</highlight></codeline>
<codeline lineno="85" refid="class_callback_1a3a9153714f7a5cca8809f1a989f7f65d" refkind="member"><highlight class="normal"><ref refid="class_callback_1a3a9153714f7a5cca8809f1a989f7f65d" kindref="member">Callback::GetPriority</ref>(LONG<sp/>*)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E_NOTIMPL;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">STDMETHODIMP</highlight></codeline>
<codeline lineno="91" refid="class_callback_1a8ee32df7e5c9e834217e012e4f6e8c6a" refkind="member"><highlight class="normal"><ref refid="class_callback_1a8ee32df7e5c9e834217e012e4f6e8c6a" kindref="member">Callback::OnLowResource</ref>(<ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E_NOTIMPL;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">STDMETHODIMP</highlight></codeline>
<codeline lineno="97" refid="class_callback_1ac9ae59eb7a86a28d393a514aa70a8f32" refkind="member"><highlight class="normal"><ref refid="class_callback_1ac9ae59eb7a86a28d393a514aa70a8f32" kindref="member">Callback::OnProgress</ref>(ULONG,<sp/>ULONG,<sp/>ULONG,<sp/><ref refid="mapinls_8h_1a25fda90f83ded0efd5456a4e7eda1e0c" kindref="member">LPCWSTR</ref>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_OK;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">STDMETHODIMP</highlight></codeline>
<codeline lineno="103" refid="class_callback_1a6cb1c47a37eeab4f56358a3e66aa12b4" refkind="member"><highlight class="normal"><ref refid="class_callback_1a6cb1c47a37eeab4f56358a3e66aa12b4" kindref="member">Callback::OnStopBinding</ref>(<ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref><sp/>hr,<sp/><ref refid="mapinls_8h_1a25fda90f83ded0efd5456a4e7eda1e0c" kindref="member">LPCWSTR</ref><sp/>szError)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBinding_)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>pBinding_-&gt;Release();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>pBinding_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(baseMoniker_)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>baseMoniker_-&gt;Release();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>baseMoniker_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>stopHandler_(stopArg_,<sp/>hr);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_OK;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">STDMETHODIMP</highlight></codeline>
<codeline lineno="118" refid="class_callback_1a615e915e7de6955c3abc4067fa99c1c7" refkind="member"><highlight class="normal"><ref refid="class_callback_1a615e915e7de6955c3abc4067fa99c1c7" kindref="member">Callback::GetBindInfo</ref>(<ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>*<sp/>pgrfBINDF,<sp/>BINDINFO*<sp/>pbindinfo)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>*pgrfBINDF<sp/>=<sp/>BINDF_ASYNCHRONOUS;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_OK;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">reportError(<ref refid="struct_x_m_l___parser_struct" kindref="compound">XML_Parser</ref><sp/>parser)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code<sp/>=<sp/><ref refid="amiga_2include_2inline4_2expat_8h_1ab8de86da7c641c1d0be62256f61b6175" kindref="member">XML_GetErrorCode</ref>(parser);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*message<sp/>=<sp/><ref refid="amiga_2include_2inline4_2expat_8h_1a6b33020912a3feaa1ede27173eb7fb34" kindref="member">XML_ErrorString</ref>(code);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%s:%d:%ld:<sp/>%s\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amiga_2include_2inline4_2expat_8h_1aa250f26f9bc19ff0147cd8cc5f7af214" kindref="member">XML_GetBase</ref>(parser),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1af9a2f5af4c77c93f28476a8e35885e93" kindref="member">XML_GetErrorLineNumber</ref>(parser),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1adc61c007a99464ed452068125921c8e9" kindref="member">XML_GetErrorColumnNumber</ref>(parser),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%s:<sp/>(unknown<sp/>message<sp/>%d)\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amiga_2include_2inline4_2expat_8h_1aa250f26f9bc19ff0147cd8cc5f7af214" kindref="member">XML_GetBase</ref>(parser),<sp/>code);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">STDMETHODIMP</highlight></codeline>
<codeline lineno="141" refid="class_callback_1af2c1435cbfa3de6f4f31055d905c9151" refkind="member"><highlight class="normal"><ref refid="class_callback_1af2c1435cbfa3de6f4f31055d905c9151" kindref="member">Callback::OnDataAvailable</ref>(<ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>grfBSCF,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>dwSize,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FORMATETC<sp/>*pfmtetc,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STGMEDIUM*<sp/>pstgmed)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grfBSCF<sp/>&amp;<sp/>BSCF_FIRSTDATANOTIFICATION)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>IWinInetHttpInfo<sp/>*hp;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref><sp/>hr<sp/>=<sp/>pBinding_-&gt;QueryInterface(IID_IWinInetHttpInfo,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;hp);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SUCCEEDED(hr))<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>contentType[1024];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>bufSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(contentType);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>contentType[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>hp-&gt;QueryInfo(HTTP_QUERY_CONTENT_TYPE,<sp/>contentType,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;bufSize,<sp/>0,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SUCCEEDED(hr))<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structcharset" kindref="compound">charset</ref>[<ref refid="ct_8c_1a1e97490dc356af2478aa33739f62f381" kindref="member">CHARSET_MAX</ref>];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ct_8c_1a87a87465f30f9d7ffa6cde531f0d6cc8" kindref="member">getXMLCharset</ref>(contentType,<sp/>charset);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(charset[0])<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XML_UNICODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>wcharset[<ref refid="ct_8c_1a1e97490dc356af2478aa33739f62f381" kindref="member">CHARSET_MAX</ref>];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*<ref refid="sound_8c_1ad86bc04f7f667b1bdced8a0f06d96861" kindref="member">p1</ref><sp/>=<sp/>wcharset;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sound_8c_1a938e6a2861f684cc1f7e2de661446e35" kindref="member">p2</ref><sp/>=<sp/><ref refid="charmaps_8h_1ad2ca9f4819fa7cf4dc0fa0e83718f872" kindref="member">charset</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((*p1++<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)*p2++)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amiga_2include_2inline4_2expat_8h_1ac95484231801d3d39db1528e3cad4cfc" kindref="member">XML_SetEncoding</ref>(parser_,<sp/>wcharset);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="amiga_2include_2inline4_2expat_8h_1ac95484231801d3d39db1528e3cad4cfc" kindref="member">XML_SetEncoding</ref>(parser_,<sp/>charset);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hp-&gt;Release();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!parser_)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E_ABORT;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pstgmed-&gt;tymed<sp/>==<sp/>TYMED_ISTREAM)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(totalRead_<sp/>&lt;<sp/>dwSize)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>READ_MAX<sp/>(64*1024)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>nToRead<sp/>=<sp/>dwSize<sp/>-<sp/>totalRead_;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nToRead<sp/>&gt;<sp/><ref refid="xmlwin32url_8cxx_1ace36e2b8d19cdb4842e0b14e9abf8879" kindref="member">READ_MAX</ref>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>nToRead<sp/>=<sp/><ref refid="xmlwin32url_8cxx_1ace36e2b8d19cdb4842e0b14e9abf8879" kindref="member">READ_MAX</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref><sp/>=<sp/><ref refid="amiga_2include_2inline4_2expat_8h_1a464250872fa5dfc27acea8108c97a81d" kindref="member">XML_GetBuffer</ref>(parser_,<sp/>nToRead);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/>_T(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>memory\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E_ABORT;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>nRead;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref><sp/>hr<sp/>=<sp/>pstgmed-&gt;pstm-&gt;Read(buf,<sp/>nToRead,<sp/>&amp;nRead);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SUCCEEDED(hr))<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>totalRead_<sp/>+=<sp/>nRead;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="amiga_2include_2inline4_2expat_8h_1a54198604fcafe3db78fe09c4d7c64e02" kindref="member">XML_ParseBuffer</ref>(parser_,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRead,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(grfBSCF<sp/>&amp;<sp/>BSCF_LASTDATANOTIFICATION)<sp/>!=<sp/>0</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>totalRead_<sp/>==<sp/>dwSize))<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reportError(parser_);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E_ABORT;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_OK;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">STDMETHODIMP</highlight></codeline>
<codeline lineno="207" refid="class_callback_1af23ab3465e5ff6666e469a18da5d5576" refkind="member"><highlight class="normal"><ref refid="class_callback_1af23ab3465e5ff6666e469a18da5d5576" kindref="member">Callback::OnObjectAvailable</ref>(<ref refid="px__win__ds_8c_1a80ec49c8ae61e234197d5071d2df497d" kindref="member">REFIID</ref>,<sp/>IUnknown<sp/>*)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_OK;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="class_callback_1a61722f8eee1098f07384f99d7cc2d751" refkind="member"><highlight class="normal"><ref refid="class_callback_1a61722f8eee1098f07384f99d7cc2d751" kindref="member">Callback::externalEntityRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*<ref refid="structcontext" kindref="compound">context</ref>,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*<ref refid="lib_2expat_8h_1a0713b4ddfceba53ef272e377a6d39fc0" kindref="member">systemId</ref>,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*<ref refid="lib_2expat_8h_1a8bb3e4080f81b91a05cf10785cd4112e" kindref="member">publicId</ref>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="struct_x_m_l___parser_struct" kindref="compound">XML_Parser</ref><sp/>entParser<sp/>=<sp/><ref refid="amiga_2include_2inline4_2expat_8h_1a6ccb07605247cda2bf8595e4ef014cb9" kindref="member">XML_ExternalEntityParserCreate</ref>(parser_,<sp/>context,<sp/>0);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="amiga_2include_2inline4_2expat_8h_1a861d7d0f39ba0b4bd50fc5aa006199d8" kindref="member">XML_SetBase</ref>(entParser,<sp/>systemId);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>processURL(entParser,<sp/>baseMoniker_,<sp/>systemId);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="amiga_2include_2inline4_2expat_8h_1a72fd95e41d1f31a91752792cadff01e0" kindref="member">XML_ParserFree</ref>(entParser);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="class_callback_1a925d268be14f5589d7d35b5555636f0d" refkind="member"><highlight class="normal"><ref refid="class_callback_1a925d268be14f5589d7d35b5555636f0d" kindref="member">Callback::Callback</ref>(<ref refid="struct_x_m_l___parser_struct" kindref="compound">XML_Parser</ref><sp/>parser,<sp/>IMoniker<sp/>*baseMoniker,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xmlwin32url_8cxx_1a3365929afb0a6f6b8ddd19eed0d057d8" kindref="member">StopHandler</ref><sp/>stopHandler,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stopArg)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">:<sp/>parser_(parser),</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>baseMoniker_(baseMoniker),</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>ref_(0),</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>pBinding_(0),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>totalRead_(0),</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>stopHandler_(stopHandler),</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>stopArg_(stopArg)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(baseMoniker_)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>baseMoniker_-&gt;AddRef();</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="class_callback_1ac5a98dfe0ad07d5d0c9b94fc541184e7" refkind="member"><highlight class="normal"><ref refid="class_callback_1ac5a98dfe0ad07d5d0c9b94fc541184e7" kindref="member">Callback::~Callback</ref>()</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBinding_)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>pBinding_-&gt;Release();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(baseMoniker_)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>baseMoniker_-&gt;Release();</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><ref refid="class_callback_1a61722f8eee1098f07384f99d7cc2d751" kindref="member">externalEntityRef</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*<ref refid="structcontext" kindref="compound">context</ref>,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*<ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*<ref refid="lib_2expat_8h_1a0713b4ddfceba53ef272e377a6d39fc0" kindref="member">systemId</ref>,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*<ref refid="lib_2expat_8h_1a8bb3e4080f81b91a05cf10785cd4112e" kindref="member">publicId</ref>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="class_callback" kindref="compound">Callback</ref><sp/>*)arg)-&gt;externalEntityRef(<ref refid="structcontext" kindref="compound">context</ref>,<sp/><ref refid="lib_2expat_8h_1a0713b4ddfceba53ef272e377a6d39fc0" kindref="member">systemId</ref>,<sp/>publicId);</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref></highlight></codeline>
<codeline lineno="258"><highlight class="normal">openStream(<ref refid="struct_x_m_l___parser_struct" kindref="compound">XML_Parser</ref><sp/>parser,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMoniker<sp/>*baseMoniker,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*<ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xmlwin32url_8cxx_1a3365929afb0a6f6b8ddd19eed0d057d8" kindref="member">StopHandler</ref><sp/>stopHandler,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stopArg)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="amiga_2include_2inline4_2expat_8h_1a861d7d0f39ba0b4bd50fc5aa006199d8" kindref="member">XML_SetBase</ref>(parser,<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>))</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E_OUTOFMEMORY;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref><sp/>hr;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>IMoniker<sp/>*<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XML_UNICODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>hr<sp/>=<sp/>CreateURLMoniker(0,<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>,<sp/>&amp;m);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="mapinls_8h_1acc28f72b93422cfd63a60e5a102a77b1" kindref="member">LPWSTR</ref><sp/>uriw<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">[strlen(<ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>uriw[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uriw[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>hr<sp/>=<sp/>CreateURLMoniker(baseMoniker,<sp/>uriw,<sp/>&amp;m);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>uriw;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr))</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>IBindStatusCallback<sp/>*cb<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_callback_1a925d268be14f5589d7d35b5555636f0d" kindref="member">Callback</ref>(parser,<sp/>m,<sp/>stopHandler,<sp/>stopArg);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="amiga_2include_2inline4_2expat_8h_1a5913aa6cecd1a0017762766ffe9972af" kindref="member">XML_SetExternalEntityRefHandler</ref>(parser,<sp/><ref refid="class_callback_1a61722f8eee1098f07384f99d7cc2d751" kindref="member">externalEntityRef</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><ref refid="amiga_2include_2inline4_2expat_8h_1adc497fe8c0cc11e77291f4d9f2fa188a" kindref="member">XML_SetExternalEntityRefHandlerArg</ref>(parser,<sp/>cb);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>cb-&gt;AddRef();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>IBindCtx<sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr<sp/>=<sp/>CreateAsyncBindCtx(0,<sp/>cb,<sp/>0,<sp/>&amp;b)))<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>cb-&gt;Release();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;Release();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>cb-&gt;Release();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>IStream<sp/>*pStream;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>hr<sp/>=<sp/>m-&gt;BindToStorage(b,<sp/>0,<sp/>IID_IStream,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;pStream);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SUCCEEDED(hr))<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pStream)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pStream-&gt;Release();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hr<sp/>==<sp/>MK_S_ASYNCHRONOUS)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>S_OK;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>m-&gt;Release();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>b-&gt;Release();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="struct_quit_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_quit_info" kindref="compound">QuitInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="306" refid="struct_quit_info_1ad49635fec369e07bbfb6c720cbd0fa73" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*<ref refid="struct_quit_info_1ad49635fec369e07bbfb6c720cbd0fa73" kindref="member">url</ref>;</highlight></codeline>
<codeline lineno="307" refid="struct_quit_info_1a8b3a9b275e5c092cd69bba1ae5747bcd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref><sp/><ref refid="struct_quit_info_1a8b3a9b275e5c092cd69bba1ae5747bcd" kindref="member">hr</ref>;</highlight></codeline>
<codeline lineno="308" refid="struct_quit_info_1acb61a6b163a54987a50aaa56141c6110" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_quit_info_1acb61a6b163a54987a50aaa56141c6110" kindref="member">stop</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">};</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">winPerror(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*url,<sp/><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref><sp/>hr)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>LPVOID<sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>FORMAT_MESSAGE_FROM_HMODULE,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetModuleHandleA(</highlight><highlight class="stringliteral">&quot;urlmon.dll&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAKELANGID(LANG_NEUTRAL,<sp/>SUBLANG_DEFAULT),</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="mapinls_8h_1a374c06818df7bdfcb627956b2e49ba08" kindref="member">LPTSTR</ref>)<sp/>&amp;buf,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>FORMAT_MESSAGE_FROM_SYSTEM,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAKELANGID(LANG_NEUTRAL,<sp/>SUBLANG_DEFAULT),</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="mapinls_8h_1a374c06818df7bdfcb627956b2e49ba08" kindref="member">LPTSTR</ref>)<sp/>&amp;buf,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>system<sp/>error<sp/>messages<sp/>seem<sp/>to<sp/>end<sp/>with<sp/>a<sp/>newline.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%s:<sp/>%s&quot;</highlight><highlight class="normal">),<sp/>url,<sp/>buf);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>LocalFree(buf);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/>_T(</highlight><highlight class="stringliteral">&quot;%s:<sp/>error<sp/>%x\n&quot;</highlight><highlight class="normal">),<sp/>url,<sp/>hr);</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal">threadQuit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref><sp/>hr)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="struct_quit_info" kindref="compound">QuitInfo</ref><sp/>*qi<sp/>=<sp/>(<ref refid="struct_quit_info" kindref="compound">QuitInfo</ref><sp/>*)<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>qi-&gt;<ref refid="struct_quit_info_1a8b3a9b275e5c092cd69bba1ae5747bcd" kindref="member">hr</ref><sp/>=<sp/>hr;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>qi-&gt;<ref refid="struct_quit_info_1acb61a6b163a54987a50aaa56141c6110" kindref="member">stop</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="xmlwin32url_8cxx_1abdd05eb9e7e27a681e1a756cb41e79ff" refkind="member"><highlight class="normal"><ref refid="xmlwin32url_8cxx_1abdd05eb9e7e27a681e1a756cb41e79ff" kindref="member">XML_URLInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SUCCEEDED(CoInitialize(0));</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="xmlwin32url_8cxx_1add60cb5da870da8d54f611e0ff056229" refkind="member"><highlight class="normal"><ref refid="xmlwin32url_8cxx_1add60cb5da870da8d54f611e0ff056229" kindref="member">XML_URLUninit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>CoUninitialize();</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal">processURL(<ref refid="struct_x_m_l___parser_struct" kindref="compound">XML_Parser</ref><sp/>parser,<sp/>IMoniker<sp/>*baseMoniker,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*url)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><ref refid="struct_quit_info" kindref="compound">QuitInfo</ref><sp/>qi;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>qi.<ref refid="struct_quit_info_1acb61a6b163a54987a50aaa56141c6110" kindref="member">stop</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>qi.<ref refid="struct_quit_info_1ad49635fec369e07bbfb6c720cbd0fa73" kindref="member">url</ref><sp/>=<sp/>url;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><ref refid="amiga_2include_2inline4_2expat_8h_1a861d7d0f39ba0b4bd50fc5aa006199d8" kindref="member">XML_SetBase</ref>(parser,<sp/>url);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref><sp/>hr<sp/>=<sp/>openStream(parser,<sp/>baseMoniker,<sp/>url,<sp/>threadQuit,<sp/>&amp;qi);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr))<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>winPerror(url,<sp/>hr);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(qi.<ref refid="struct_quit_info_1a8b3a9b275e5c092cd69bba1ae5747bcd" kindref="member">hr</ref>))<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>winPerror(url,<sp/>qi.<ref refid="struct_quit_info_1a8b3a9b275e5c092cd69bba1ae5747bcd" kindref="member">hr</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>MSG<sp/>msg;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!qi.<ref refid="struct_quit_info_1acb61a6b163a54987a50aaa56141c6110" kindref="member">stop</ref><sp/>&amp;&amp;<sp/>GetMessage<sp/>(&amp;msg,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>TranslateMessage<sp/>(&amp;msg);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>DispatchMessage<sp/>(&amp;msg);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="xmlwin32url_8cxx_1a28a481726cad7ece5fa4f9086aad2995" refkind="member"><highlight class="normal"><ref refid="xmlwin32url_8cxx_1a28a481726cad7ece5fa4f9086aad2995" kindref="member">XML_ProcessURL</ref>(<ref refid="struct_x_m_l___parser_struct" kindref="compound">XML_Parser</ref><sp/>parser,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="amiga_2include_2libraries_2expat_8h_1a63da96463e775e1ec3a7d1f076208127" kindref="member">XML_Char</ref><sp/>*url,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>processURL(parser,<sp/>0,<sp/>url);</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/xmlwf/xmlwin32url.cxx"/>
  </compounddef>
</doxygen>
