<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_wave_track" kind="class" language="C++" prot="public" final="yes">
    <compoundname>WaveTrack</compoundname>
    <basecompoundref refid="class_track" prot="public" virt="non-virtual">Track</basecompoundref>
    <includes refid="_wave_track_8h" local="no">WaveTrack.h</includes>
    <innerclass refid="class_wave_track_1_1_location" prot="public">WaveTrack::Location</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" prot="public" static="no">
        <name>WaveTrackDisplay</name>
        <enumvalue id="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5aeef9a24216b729762bfd38161b5b2a83" prot="public">
          <name>Waveform</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a28366f7f02378aa2d22f68aa9749cc77" prot="public">
          <name>MinDisplay</name>
          <initializer>= Waveform</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5af78a59d2fbae6820d78fa0432da86fa9" prot="public">
          <name>obsoleteWaveformDBDisplay</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ac0941a4c239c9e4a1d487f31786fbbc9" prot="public">
          <name>Spectrum</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ae399eda417597cc247dc53089c3ae206" prot="public">
          <name>obsolete1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a2861fcbe6b2c873bc1c4d10934edcd38" prot="public">
          <name>obsolete2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a6d6f7469ba9d186c38170579d4413038" prot="public">
          <name>obsolete3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a446c719ff6418942022165eda0a89bde" prot="public">
          <name>obsolete4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ac03e32af666d2db7c4506d1e8ccb5fe6" prot="public">
          <name>MaxDisplay</name>
          <initializer>= Spectrum</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5aec4136d58eed6538deee71dd3bf5c2d7" prot="public">
          <name>NoDisplay</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="408" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="408" bodyend="429"/>
      </memberdef>
      <memberdef kind="typedef" id="class_wave_track_1a7982000384163865535670612b611529" prot="public" static="no">
        <type><ref refid="struct_wave_track_location" kindref="compound">WaveTrackLocation</ref></type>
        <definition>typedef WaveTrackLocation WaveTrack::Location</definition>
        <argsstring></argsstring>
        <name>Location</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_wave_track_1a9090c4844308a62885cce4b693b74666" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TrackFactory</definition>
        <argsstring></argsstring>
        <name>TrackFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="82" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_wave_track_1aab186786a53179d53c986771c42f5880" prot="protected" static="no" mutable="no">
        <type>WaveClipList</type>
        <definition>WaveClipList WaveTrack::mClips</definition>
        <argsstring></argsstring>
        <name>mClips</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="460" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1a3938299d11824a2314ce22c688468e26" prot="protected" static="no" mutable="no">
        <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
        <definition>sampleFormat WaveTrack::mFormat</definition>
        <argsstring></argsstring>
        <name>mFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="462" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1ac9ff43cf5ca331f25aa7796beaa7c016" prot="protected" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int WaveTrack::mRate</definition>
        <argsstring></argsstring>
        <name>mRate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="463" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1a07150ae1d89338c529717a3a43163bbc" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float WaveTrack::mGain</definition>
        <argsstring></argsstring>
        <name>mGain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="464" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1a342936b12f0ed288970c87eaed874b71" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float WaveTrack::mPan</definition>
        <argsstring></argsstring>
        <name>mPan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="465" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1a144805b8b5d766763d93cf1c47bb0cc0" prot="protected" static="no" mutable="yes">
        <type>float</type>
        <definition>float WaveTrack::mDisplayMin</definition>
        <argsstring></argsstring>
        <name>mDisplayMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="472" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1a8dbec05f10d02f2c2547d846ca8cfc21" prot="protected" static="no" mutable="yes">
        <type>float</type>
        <definition>float WaveTrack::mDisplayMax</definition>
        <argsstring></argsstring>
        <name>mDisplayMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="473" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1a69645755c41a02f3c20f80f0bf5ced79" prot="protected" static="no" mutable="yes">
        <type>float</type>
        <definition>float WaveTrack::mSpectrumMin</definition>
        <argsstring></argsstring>
        <name>mSpectrumMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="474" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1a92d5b6594bbe1a2b7dba5121c52882c6" prot="protected" static="no" mutable="yes">
        <type>float</type>
        <definition>float WaveTrack::mSpectrumMax</definition>
        <argsstring></argsstring>
        <name>mSpectrumMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="475" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1a8c6f228f31fb7b7c144ca775d4600c10" prot="protected" static="no" mutable="no">
        <type><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref></type>
        <definition>WaveTrackDisplay WaveTrack::mDisplay</definition>
        <argsstring></argsstring>
        <name>mDisplay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="477" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1a6bfa61bbb71254a2b5aa643626be09c5" prot="protected" static="no" mutable="yes">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int WaveTrack::mLastScaleType</definition>
        <argsstring></argsstring>
        <name>mLastScaleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="478" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1a8ee50fdd7a4411462b2768151fb0a72f" prot="protected" static="no" mutable="yes">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int WaveTrack::mLastdBRange</definition>
        <argsstring></argsstring>
        <name>mLastdBRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="479" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1a83d2ef555e3b4d6c0a3dab21fa83c2b0" prot="protected" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="class_wave_track_1_1_location" kindref="compound">Location</ref> &gt;</type>
        <definition>std::vector&lt;Location&gt; WaveTrack::mDisplayLocationsCache</definition>
        <argsstring></argsstring>
        <name>mDisplayLocationsCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="480" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_wave_track_1a42455adc4ce25589aaae1fa917519fb7" prot="private" static="no" mutable="no">
        <type>wxCriticalSection</type>
        <definition>wxCriticalSection WaveTrack::mFlushCriticalSection</definition>
        <argsstring></argsstring>
        <name>mFlushCriticalSection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="492" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1ad52926c4ace4545725a61c92532e8fdb" prot="private" static="no" mutable="no">
        <type>wxCriticalSection</type>
        <definition>wxCriticalSection WaveTrack::mAppendCriticalSection</definition>
        <argsstring></argsstring>
        <name>mAppendCriticalSection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="493" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1ac9574d61c68f2fcc196b48efe7c23c53" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double WaveTrack::mLegacyProjectFileOffset</definition>
        <argsstring></argsstring>
        <name>mLegacyProjectFileOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="494" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1ac3c971b1c4964e3d3f39d5bc0120bf8f" prot="private" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int WaveTrack::mAutoSaveIdent</definition>
        <argsstring></argsstring>
        <name>mAutoSaveIdent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="495" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1a815558f1a0e20e09a7885019a237233e" prot="private" static="no" mutable="no">
        <type><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref> *</type>
        <definition>SpectrogramSettings* WaveTrack::mpSpectrumSettings</definition>
        <argsstring></argsstring>
        <name>mpSpectrumSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="497" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_wave_track_1a6df7cbd8410086bc60df159e780981e6" prot="private" static="no" mutable="no">
        <type><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref> *</type>
        <definition>WaveformSettings* WaveTrack::mpWaveformSettings</definition>
        <argsstring></argsstring>
        <name>mpWaveformSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="498" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_wave_track_1a3830f61f0a32fc43f1c0a27574f757f2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WaveTrack::WaveTrack</definition>
        <argsstring>(DirManager *projDirManager, sampleFormat format=(sampleFormat) 0, double rate=0)</argsstring>
        <name>WaveTrack</name>
        <param>
          <type><ref refid="class_dir_manager" kindref="compound">DirManager</ref> *</type>
          <declname>projDirManager</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>format</declname>
          <defval>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref>) 0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>rate</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="72" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="77" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a0bdcb5e63c1589b6cea440e75c3ee819" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WaveTrack::WaveTrack</definition>
        <argsstring>(const WaveTrack &amp;orig)</argsstring>
        <name>WaveTrack</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_wave_track" kindref="compound">WaveTrack</ref> &amp;</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="116" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a67d97b82a4c76f5de83fcb599d093494" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::Init</definition>
        <argsstring>(const WaveTrack &amp;orig)</argsstring>
        <name>Init</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_wave_track" kindref="compound">WaveTrack</ref> &amp;</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="136" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aa9a27d1f1b437b5b7cdb3da31a608d7e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_track" kindref="compound">Track</ref> *</type>
        <definition>Track * WaveTrack::Duplicate</definition>
        <argsstring>() const  override</argsstring>
        <name>Duplicate</name>
        <reimplements refid="class_track_1a7de9a5b87c0309271bc2620c9ed54545">Duplicate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="358" bodyend="361"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_wave_track_1af60cfd7907bd8c1cbb7f263808e0eebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>WaveTrack::~WaveTrack</definition>
        <argsstring>()</argsstring>
        <name>~WaveTrack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="91" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="169" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1af199a667b2c17d34c3428a58dbc0d556" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double WaveTrack::GetOffset</definition>
        <argsstring>() const  override</argsstring>
        <name>GetOffset</name>
        <reimplements refid="class_track_1a7dd93b99ae92788d10c3010127002e6e">GetOffset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="92" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ad46c588dfe6753fc8c1573bbc5517d1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::SetOffset</definition>
        <argsstring>(double o) override</argsstring>
        <name>SetOffset</name>
        <reimplements refid="class_track_1a17a167aaeb971ffb02ca3d62887e69f7">SetOffset</reimplements>
        <param>
          <type>double</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="93" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="189" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1acd39f4f01272e112a2d132e48b60678e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double WaveTrack::GetStartTime</definition>
        <argsstring>() const </argsstring>
        <name>GetStartTime</name>
        <reimplements refid="class_track_1a764ce3c8ef7dd892b8cf64022a946cd5">GetStartTime</reimplements>
        <briefdescription>
<para>Get the time at which the first clip in the track starts. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>time in seconds, or zero if there are no clips in the track </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="99" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1875" bodyend="1893"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double WaveTrack::GetEndTime</definition>
        <argsstring>() const </argsstring>
        <name>GetEndTime</name>
        <reimplements refid="class_track_1a94b9fd13ee5b04493ed1024715e9c62b">GetEndTime</reimplements>
        <briefdescription>
<para>Get the time at which the last clip in the track ends, plus recorded stuff. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>time in seconds, or zero if there are no clips in the track. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="106" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1895" bodyend="1913"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a0a51b188c6a489be981f0af7792b718e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int WaveTrack::GetKind</definition>
        <argsstring>() const  override</argsstring>
        <name>GetKind</name>
        <reimplements refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7">GetKind</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="112" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double WaveTrack::GetRate</definition>
        <argsstring>() const </argsstring>
        <name>GetRate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="120" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="363" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a0ab2aae5fbbcc2b0bd9da119727022ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::SetRate</definition>
        <argsstring>(double newRate)</argsstring>
        <name>SetRate</name>
        <param>
          <type>double</type>
          <declname>newRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="121" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="368" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a2f8be921b1e2c2183e3a3eb367eb3416" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float WaveTrack::GetGain</definition>
        <argsstring>() const </argsstring>
        <name>GetGain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="124" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="375" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aa64cfe45ca3be7f2067f263784d2a864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::SetGain</definition>
        <argsstring>(float newGain)</argsstring>
        <name>SetGain</name>
        <param>
          <type>float</type>
          <declname>newGain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="125" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="380" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a39fb6133b9ead187e3eb8127fd8966c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float WaveTrack::GetPan</definition>
        <argsstring>() const </argsstring>
        <name>GetPan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="128" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="385" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a8711fa41c9fcec3519d80286a96f049d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::SetPan</definition>
        <argsstring>(float newPan)</argsstring>
        <name>SetPan</name>
        <param>
          <type>float</type>
          <declname>newPan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="132" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="421" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a93d35f717c7120f01d93ccb0e1d18db4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float WaveTrack::GetChannelGain</definition>
        <argsstring>(int channel) const </argsstring>
        <name>GetChannelGain</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="135" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="479" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aeacd5bae293c72523bcde439345739f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
        <definition>sampleFormat WaveTrack::GetSampleFormat</definition>
        <argsstring>()</argsstring>
        <name>GetSampleFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="139" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ae54ac2b95b5b6adfcbbba34964f7fee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::ConvertToSampleFormat</definition>
        <argsstring>(sampleFormat format)</argsstring>
        <name>ConvertToSampleFormat</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="140" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="500" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a54f8ed0c9c1d1fae0241867565b33512" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref> &amp;</type>
        <definition>const SpectrogramSettings &amp; WaveTrack::GetSpectrogramSettings</definition>
        <argsstring>() const </argsstring>
        <name>GetSpectrogramSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="142" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="731" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a1a73f266c9172e34b51d6c1b78d2ec8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref> &amp;</type>
        <definition>SpectrogramSettings &amp; WaveTrack::GetSpectrogramSettings</definition>
        <argsstring>()</argsstring>
        <name>GetSpectrogramSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="143" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="739" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1af7353bc939d97b3090ef20a0e0a6707b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref> &amp;</type>
        <definition>SpectrogramSettings &amp; WaveTrack::GetIndependentSpectrogramSettings</definition>
        <argsstring>()</argsstring>
        <name>GetIndependentSpectrogramSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="144" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="747" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a994147b87a99e06d53fdb80acca46e32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::SetSpectrogramSettings</definition>
        <argsstring>(SpectrogramSettings *pSettings)</argsstring>
        <name>SetSpectrogramSettings</name>
        <param>
          <type><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref> *</type>
          <declname>pSettings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="145" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="755" bodyend="761"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a10c50123dc26cba66469b011c1852047" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref> &amp;</type>
        <definition>const WaveformSettings &amp; WaveTrack::GetWaveformSettings</definition>
        <argsstring>() const </argsstring>
        <name>GetWaveformSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="147" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="763" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aa26938c5028c13c0811e68e19ef89274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref> &amp;</type>
        <definition>WaveformSettings &amp; WaveTrack::GetWaveformSettings</definition>
        <argsstring>()</argsstring>
        <name>GetWaveformSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="148" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="771" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aec6387c49dc73248ebc0d2b250e746cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref> &amp;</type>
        <definition>WaveformSettings &amp; WaveTrack::GetIndependentWaveformSettings</definition>
        <argsstring>()</argsstring>
        <name>GetIndependentWaveformSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="149" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="779" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aa07485811d9d93644345e7e2bec9d56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::SetWaveformSettings</definition>
        <argsstring>(WaveformSettings *pSettings)</argsstring>
        <name>SetWaveformSettings</name>
        <param>
          <type><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref> *</type>
          <declname>pSettings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="150" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="786" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ab3baf9ac8b43075bf65786bdf42fba85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Cut</definition>
        <argsstring>(double t0, double t1, Track **dest) override</argsstring>
        <name>Cut</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="class_track" kindref="compound">Track</ref> **</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="156" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="532" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a80d2c62c76195237b5412fa22aae8b46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Copy</definition>
        <argsstring>(double t0, double t1, Track **dest) const  override</argsstring>
        <name>Copy</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="class_track" kindref="compound">Track</ref> **</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="157" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="626" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1afcccee2ff72be9519c5a096a423476ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::CopyNonconst</definition>
        <argsstring>(double t0, double t1, Track **dest)</argsstring>
        <name>CopyNonconst</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="class_track" kindref="compound">Track</ref> **</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="158" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="716" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a0643176c8e3d2b4de917b002af73e0ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Clear</definition>
        <argsstring>(double t0, double t1) override</argsstring>
        <name>Clear</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="159" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="721" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a98b8e8311e6b12bffd18a16b30302c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Paste</definition>
        <argsstring>(double t0, const Track *src) override</argsstring>
        <name>Paste</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_track" kindref="compound">Track</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="160" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1189" bodyend="1350"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a0eddcd7d1b35068c7369145a5d97ee17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::ClearAndPaste</definition>
        <argsstring>(double t0, double t1, const Track *src, bool preserve=true, bool merge=true, TimeWarper *effectWarper=NULL)</argsstring>
        <name>ClearAndPaste</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_track" kindref="compound">Track</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>preserve</declname>
          <defval><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></defval>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>merge</declname>
          <defval><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></defval>
        </param>
        <param>
          <type><ref refid="class_time_warper" kindref="compound">TimeWarper</ref> *</type>
          <declname>effectWarper</declname>
          <defval><ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="161" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="808" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aa033919229edf163f5a484ac9a5d50e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Silence</definition>
        <argsstring>(double t0, double t1) override</argsstring>
        <name>Silence</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="167" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1352" bodyend="1393"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a2baf7d0d8cf05bb018ee3409ee5488cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::InsertSilence</definition>
        <argsstring>(double t, double len) override</argsstring>
        <name>InsertSilence</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="168" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1395" bodyend="1421"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a769938d719138184ef8ba642ba1ae5c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::SplitAt</definition>
        <argsstring>(double t)</argsstring>
        <name>SplitAt</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="170" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2392" bodyend="2429"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ad939e22300f4b4ee7f2ba2840da6ecf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Split</definition>
        <argsstring>(double t0, double t1)</argsstring>
        <name>Split</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="171" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2384" bodyend="2390"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aa12467e5e5da8f444d905f0716701d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::ClearAndAddCutLine</definition>
        <argsstring>(double t0, double t1)</argsstring>
        <name>ClearAndAddCutLine</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="173" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="726" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a23c69640f758645adb7bb25bf59b2f3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::SplitCut</definition>
        <argsstring>(double t0, double t1, Track **dest)</argsstring>
        <name>SplitCut</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="class_track" kindref="compound">Track</ref> **</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="175" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="543" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1afad9695b9e4348602605a60ddecea184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::SplitDelete</definition>
        <argsstring>(double t0, double t1)</argsstring>
        <name>SplitDelete</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="176" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="983" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a7109457670c515101a52f625c0c14334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Join</definition>
        <argsstring>(double t0, double t1)</argsstring>
        <name>Join</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="177" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1507" bodyend="1566"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aa717acd203bf249faa871a6871f6397f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Disjoin</definition>
        <argsstring>(double t0, double t1)</argsstring>
        <name>Disjoin</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="178" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1425" bodyend="1505"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a8c974d0b1252821e7dedb4971316f4ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Trim</definition>
        <argsstring>(double t0, double t1)</argsstring>
        <name>Trim</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="180" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="571" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ab70b3459275bc45091a583cb5b849519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::HandleClear</definition>
        <argsstring>(double t0, double t1, bool addCutLines, bool split)</argsstring>
        <name>HandleClear</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>addCutLines</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>split</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="182" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1005" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a49cda2bf10befe089ebd666260e5c5f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::SyncLockAdjust</definition>
        <argsstring>(double oldT1, double newT1) override</argsstring>
        <name>SyncLockAdjust</name>
        <reimplements refid="class_track_1a8d065b881a5fe83b2d938b62f9eba89e">SyncLockAdjust</reimplements>
        <param>
          <type>double</type>
          <declname>oldT1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>newT1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="184" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1131" bodyend="1187"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a5b87d35cb0fea96b149c43a997b20089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::IsEmpty</definition>
        <argsstring>(double t0, double t1)</argsstring>
        <name>IsEmpty</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
<para>Returns true if there are no WaveClips in the specified region. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if no clips in the track overlap the specified time range, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="191" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="509" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1adc09591a8d9b92cbbed08d8ccf28bac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Append</definition>
        <argsstring>(samplePtr buffer, sampleFormat format, sampleCount len, unsigned int stride=1, XMLWriter *blockFileLog=NULL)</argsstring>
        <name>Append</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref></type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref> *</type>
          <declname>blockFileLog</declname>
          <defval><ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
<para>Append the sample data to the <ref refid="class_wave_track" kindref="compound">WaveTrack</ref>. You must call <ref refid="class_wave_track_1af2ca2143f5fec142410d26cf064ec37c" kindref="member">Flush()</ref> after the last Append. </para>        </briefdescription>
        <detaileddescription>
<para>If there is an existing <ref refid="class_wave_clip" kindref="compound">WaveClip</ref> in the <ref refid="class_wave_track" kindref="compound">WaveTrack</ref> then the data is appended to that clip. If there are no WaveClips in the track, then a NEW one is created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="200" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1568" bodyend="1574"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1af2ca2143f5fec142410d26cf064ec37c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Flush</definition>
        <argsstring>()</argsstring>
        <name>Flush</name>
        <briefdescription>
<para>Flush must be called after last Append. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="204" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1665" bodyend="1669"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a1be99bf9423f1cd5bf86ffdb4320d1cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::AppendAlias</definition>
        <argsstring>(const wxString &amp;fName, sampleCount start, sampleCount len, int channel, bool useOD)</argsstring>
        <name>AppendAlias</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxString &amp;</type>
          <declname>fName</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>useOD</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="206" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1576" bodyend="1580"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a56c95e5c6b671b69de16590932fb0b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::AppendCoded</definition>
        <argsstring>(const wxString &amp;fName, sampleCount start, sampleCount len, int channel, int decodeType)</argsstring>
        <name>AppendCoded</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxString &amp;</type>
          <declname>fName</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>decodeType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>for use with On-Demand decoding of compressed files. decodeType should be an enum from <ref refid="class_o_d_decode_task" kindref="compound">ODDecodeTask</ref> that specifies what Type of encoded file this is, such as eODFLAC </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="213" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1583" bodyend="1587"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a56ce9eef3a87624a428a0c44058a8484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int WaveTrack::GetODFlags</definition>
        <argsstring>()</argsstring>
        <name>GetODFlags</name>
        <briefdescription>
<para>gets an int with OD flags so that we can determine which ODTasks should be run on this track after save/open, etc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="217" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1590" bodyend="1599"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ac2e0fb56a6fd859520ed3f89eba9718b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::DeleteWaveCaches</definition>
        <argsstring>()</argsstring>
        <name>DeleteWaveCaches</name>
        <briefdescription>
<para>Deletes all clips&apos; wavecaches. Careful, This may not be threadsafe. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="220" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2628" bodyend="2632"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a108276d05d8faeb7a961b3400a634006" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::AddInvalidRegion</definition>
        <argsstring>(sampleCount startSample, sampleCount endSample)</argsstring>
        <name>AddInvalidRegion</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>startSample</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>endSample</declname>
        </param>
        <briefdescription>
<para>Adds an invalid region to the wavecache so it redraws that portion only. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="223" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2635" bodyend="2639"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Get</definition>
        <argsstring>(samplePtr buffer, sampleFormat format, sampleCount start, sampleCount len, fillFormat fill=fillZero) const </argsstring>
        <name>Get</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref></type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="_sample_format_8h_1acd5339de9cb74e4e26fe562752273c5e" kindref="member">fillFormat</ref></type>
          <declname>fill</declname>
          <defval><ref refid="_sample_format_8h_1acd5339de9cb74e4e26fe562752273c5ea4ddeed8f52e42d92b8bfb4fcf6d21932" kindref="member">fillZero</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MM: Now that each wave track can contain multiple clips, we don&apos;t have a continous space of samples anymore, but we simulate it, because there are alot of places (e.g. effects) using this interface. This interface makes much sense for modifying samples, but note that it is not time-accurate, because the &quot;offset&quot; is a double value and therefore can lie inbetween samples. But as long as you use the same value for &quot;start&quot; in both calls to &quot;Set&quot; and &quot;Get&quot; it is guaranteed that the same samples are affected. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="235" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2004" bodyend="2073"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aea32b02fe3634c9f6d0a79af3da7c987" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Set</definition>
        <argsstring>(samplePtr buffer, sampleFormat format, sampleCount start, sampleCount len)</argsstring>
        <name>Set</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref></type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="237" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2075" bodyend="2113"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a95b1096a2ace691e8b76c02535a56f1a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::GetEnvelopeValues</definition>
        <argsstring>(double *buffer, int bufferLen, double t0, double tstep) const </argsstring>
        <name>GetEnvelopeValues</name>
        <param>
          <type>double *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bufferLen</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tstep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="239" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2115" bodyend="2179"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ae29a2df788e32b4d84cc550b81ce9212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::GetMinMax</definition>
        <argsstring>(float *min, float *max, double t0, double t1)</argsstring>
        <name>GetMinMax</name>
        <param>
          <type>float *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="241" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1920" bodyend="1964"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1acfebdfdf55f1bf86e258f7beae256958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::GetRMS</definition>
        <argsstring>(float *rms, double t0, double t1)</argsstring>
        <name>GetRMS</name>
        <param>
          <type>float *</type>
          <declname>rms</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="243" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1966" bodyend="2002"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a6f2397064c743a2265ecbc4c9e35fea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> *</type>
        <definition>WaveClip * WaveTrack::GetClipAtX</definition>
        <argsstring>(int xcoord)</argsstring>
        <name>GetClipAtX</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>xcoord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="251" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2181" bodyend="2192"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aa414c35568381768e61b337207933a82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_sequence" kindref="compound">Sequence</ref> *</type>
        <definition>Sequence * WaveTrack::GetSequenceAtX</definition>
        <argsstring>(int xcoord)</argsstring>
        <name>GetSequenceAtX</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>xcoord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="252" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2234" bodyend="2241"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ab5377b2d185a54c4c8f5eb334f1c4285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_envelope" kindref="compound">Envelope</ref> *</type>
        <definition>Envelope * WaveTrack::GetEnvelopeAtX</definition>
        <argsstring>(int xcoord)</argsstring>
        <name>GetEnvelopeAtX</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>xcoord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="253" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2212" bodyend="2219"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ad051f6b5dea67bc6926eef457052f3e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_envelope" kindref="compound">Envelope</ref> *</type>
        <definition>Envelope * WaveTrack::GetActiveEnvelope</definition>
        <argsstring>(void)</argsstring>
        <name>GetActiveEnvelope</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="254" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2222" bodyend="2232"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aa57f503b09b51617bc6b1fd27ac54421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> *</type>
        <definition>WaveClip * WaveTrack::GetClipAtSample</definition>
        <argsstring>(sampleCount sample)</argsstring>
        <name>GetClipAtSample</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>sample</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="256" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2194" bodyend="2210"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ae8a803fab37d72e446c024d1fcc20264" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
        <definition>sampleCount WaveTrack::GetBlockStart</definition>
        <argsstring>(sampleCount t) const </argsstring>
        <name>GetBlockStart</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="263" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1602" bodyend="1615"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1afe9a831f943117dc2f818d0d003c4475" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
        <definition>sampleCount WaveTrack::GetBestBlockSize</definition>
        <argsstring>(sampleCount t) const </argsstring>
        <name>GetBestBlockSize</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="264" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1617" bodyend="1635"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a59ca00cf8abf1c28d043effec2866870" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
        <definition>sampleCount WaveTrack::GetMaxBlockSize</definition>
        <argsstring>() const </argsstring>
        <name>GetMaxBlockSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="265" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1637" bodyend="1658"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1af1df93d6e053c30b707c53f6d224f104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
        <definition>sampleCount WaveTrack::GetIdealBlockSize</definition>
        <argsstring>()</argsstring>
        <name>GetIdealBlockSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="266" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1660" bodyend="1663"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a8914c769a559d645dbace68f0f56fb8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::HandleXMLTag</definition>
        <argsstring>(const wxChar *tag, const wxChar **attrs) override</argsstring>
        <name>HandleXMLTag</name>
        <reimplements refid="class_x_m_l_tag_handler_1aa1891aeb2d34e28a6ee0dd02391039b8">HandleXMLTag</reimplements>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxChar *</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxChar **</type>
          <declname>attrs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="272" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1671" bodyend="1750"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ad71b41c39dce899dba1ef7418b2cd54e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::HandleXMLEndTag</definition>
        <argsstring>(const wxChar *tag) override</argsstring>
        <name>HandleXMLEndTag</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxChar *</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="273" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1752" bodyend="1757"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a1ccd263058aa228a709301e5c442afe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref> *</type>
        <definition>XMLTagHandler * WaveTrack::HandleXMLChild</definition>
        <argsstring>(const wxChar *tag) override</argsstring>
        <name>HandleXMLChild</name>
        <reimplements refid="class_x_m_l_tag_handler_1ad37304e1f592a76a9dd80b5455db741b">HandleXMLChild</reimplements>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxChar *</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="274" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1759" bodyend="1793"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aebbe78d1db8eb38b330686c799456a0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::WriteXML</definition>
        <argsstring>(XMLWriter &amp;xmlFile) override</argsstring>
        <name>WriteXML</name>
        <reimplements refid="class_track_1a1352ca92740f520fc35ad17c79072110">WriteXML</reimplements>
        <param>
          <type><ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref> &amp;</type>
          <declname>xmlFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="275" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1795" bodyend="1829"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a6634d8840f1b87586e594bd628bcd7a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::GetErrorOpening</definition>
        <argsstring>() override</argsstring>
        <name>GetErrorOpening</name>
        <reimplements refid="class_track_1ad4f4b2a5e9fb7ea7cf337010424775f2">GetErrorOpening</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="278" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1831" bodyend="1838"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1af5871fa161f389a2f488857d718ad8fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Lock</definition>
        <argsstring>()</argsstring>
        <name>Lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="285" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1840" bodyend="1846"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1af7e1d96ef2e79cc51a7bf94c00840dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::CloseLock</definition>
        <argsstring>()</argsstring>
        <name>CloseLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="286" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1848" bodyend="1854"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a4302f01c726ed2178ceda8cd7e6c8e5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Unlock</definition>
        <argsstring>()</argsstring>
        <name>Unlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="287" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1857" bodyend="1863"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1afe621ba06a0396725da44e937143972f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
        <definition>AUDACITY_DLL_API sampleCount WaveTrack::TimeToLongSamples</definition>
        <argsstring>(double t0) const </argsstring>
        <name>TimeToLongSamples</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <briefdescription>
<para>Convert correctly between an (absolute) time in seconds and a number of samples. </para>        </briefdescription>
        <detaileddescription>
<para>This method will not give the correct results if used on a relative time (difference of two times). Each absolute time must be converted and the numbers of samples differenced: sampleCount start = track-&gt;TimeToLongSamples(t0); sampleCount end = track-&gt;TimeToLongSamples(t1); sampleCount len = (sampleCount)(end - start); NOT the likes of: sampleCount len = track-&gt;TimeToLongSamples(t1 - t0); See also <ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">WaveTrack::TimeToLongSamples()</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t0</parametername>
</parameternamelist>
<parameterdescription>
<para>The time (floating point seconds) to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of samples from the start of the track which lie before the given time. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="302" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1865" bodyend="1868"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double WaveTrack::LongSamplesToTime</definition>
        <argsstring>(sampleCount pos) const </argsstring>
        <name>LongSamplesToTime</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Convert correctly between an number of samples and an (absolute) time in seconds. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The time number of samples from the start of the track to convert. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The time in seconds. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="308" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="1870" bodyend="1873"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a40a351c828128e85e2ba993107b96ef3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>WaveClipList::compatibility_iterator</type>
        <definition>WaveClipList::compatibility_iterator WaveTrack::GetClipIterator</definition>
        <argsstring>()</argsstring>
        <name>GetClipIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="313" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="313" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a0dd8d940d6fd4a87a273458881a1f63d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> *</type>
        <definition>WaveClip * WaveTrack::CreateClip</definition>
        <argsstring>()</argsstring>
        <name>CreateClip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="317" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2243" bodyend="2248"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a4c2402bda2c645184a3025772b57f87f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> *</type>
        <definition>WaveClip * WaveTrack::NewestOrNewClip</definition>
        <argsstring>()</argsstring>
        <name>NewestOrNewClip</name>
        <briefdescription>
<para>Get access to the most recently added clip, or create a clip, if there is not already one. THIS IS NOT NECESSARILY RIGHTMOST. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a pointer to the most recently added <ref refid="class_wave_clip" kindref="compound">WaveClip</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="324" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2250" bodyend="2259"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aaa23817cfb806f4aa5015d1c6ffeb4db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> *</type>
        <definition>WaveClip * WaveTrack::RightmostOrNewClip</definition>
        <argsstring>()</argsstring>
        <name>RightmostOrNewClip</name>
        <briefdescription>
<para>Get access to the last (rightmost) clip, or create a clip, if there is not already one. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a pointer to a <ref refid="class_wave_clip" kindref="compound">WaveClip</ref> at the end of the track </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="331" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2261" bodyend="2282"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a41bd6c2839fc568f06ea3c10b2dac60b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int WaveTrack::GetClipIndex</definition>
        <argsstring>(WaveClip *clip)</argsstring>
        <name>GetClipIndex</name>
        <param>
          <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> *</type>
          <declname>clip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="334" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2284" bodyend="2287"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a5d0fc3eba22b8a63602e78776efd767a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> *</type>
        <definition>WaveClip * WaveTrack::GetClipByIndex</definition>
        <argsstring>(int index)</argsstring>
        <name>GetClipByIndex</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="339" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2289" bodyend="2295"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a296527181493e5553b86d3447a03bf6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int WaveTrack::GetNumClips</definition>
        <argsstring>() const </argsstring>
        <name>GetNumClips</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="342" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2297" bodyend="2300"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1acb1fc325d50a01d0f9716788d3dc62b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::FillSortedClipArray</definition>
        <argsstring>(WaveClipArray &amp;clips) const </argsstring>
        <name>FillSortedClipArray</name>
        <param>
          <type>WaveClipArray &amp;</type>
          <declname>clips</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="346" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2616" bodyend="2625"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aa3263588cf2b126720215ee551df12d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::CanOffsetClip</definition>
        <argsstring>(WaveClip *clip, double amount, double *allowedAmount=NULL)</argsstring>
        <name>CanOffsetClip</name>
        <param>
          <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> *</type>
          <declname>clip</declname>
        </param>
        <param>
          <type>double</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>allowedAmount</declname>
          <defval><ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="352" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2324" bodyend="2370"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a420ddb9afa44d1dbbf15172edc451107" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::CanInsertClip</definition>
        <argsstring>(WaveClip *clip)</argsstring>
        <name>CanInsertClip</name>
        <param>
          <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> *</type>
          <declname>clip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="357" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2372" bodyend="2382"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ae10af3465e1040ebee762c856a50b3be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::MoveClipToTrack</definition>
        <argsstring>(WaveClip *clip, WaveTrack *dest)</argsstring>
        <name>MoveClipToTrack</name>
        <param>
          <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> *</type>
          <declname>clip</declname>
        </param>
        <param>
          <type><ref refid="class_wave_track" kindref="compound">WaveTrack</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="363" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2311" bodyend="2322"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a87c77243803f525bead9bd6dd98b01fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> *</type>
        <definition>WaveClip * WaveTrack::RemoveAndReturnClip</definition>
        <argsstring>(WaveClip *clip)</argsstring>
        <name>RemoveAndReturnClip</name>
        <param>
          <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> *</type>
          <declname>clip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="366" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="990" bodyend="996"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a67a4e0c18385069f83ae940203854126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::AddClip</definition>
        <argsstring>(WaveClip *clip)</argsstring>
        <name>AddClip</name>
        <param>
          <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> *</type>
          <declname>clip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="369" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="998" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a06a36f1d12be7617ba580664f69f9965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::MergeClips</definition>
        <argsstring>(int clipidx1, int clipidx2)</argsstring>
        <name>MergeClips</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>clipidx1</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>clipidx2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="374" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2573" bodyend="2590"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a00b8ff13124c65a9b937e546cbcff466" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::UpdateLocationsCache</definition>
        <argsstring>() const </argsstring>
        <name>UpdateLocationsCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="377" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2431" bodyend="2498"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aed472b80250f8a6a759d8c43970c6b99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> std::vector&lt; <ref refid="class_wave_track_1_1_location" kindref="compound">Location</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;Location&gt;&amp; WaveTrack::GetCachedLocations</definition>
        <argsstring>() const </argsstring>
        <name>GetCachedLocations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="380" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="380" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a66de941065c151bc6ef012dca3f5ea7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::ExpandCutLine</definition>
        <argsstring>(double cutLinePosition, double *cutlineStart=NULL, double *cutlineEnd=NULL)</argsstring>
        <name>ExpandCutLine</name>
        <param>
          <type>double</type>
          <declname>cutLinePosition</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cutlineStart</declname>
          <defval><ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <param>
          <type>double *</type>
          <declname>cutlineEnd</declname>
          <defval><ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="383" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2501" bodyend="2562"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a72f9ed30336279133f57bee0d1958c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::RemoveCutLine</definition>
        <argsstring>(double cutLinePosition)</argsstring>
        <name>RemoveCutLine</name>
        <param>
          <type>double</type>
          <declname>cutLinePosition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="386" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2564" bodyend="2571"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ab2609e4e0ce9f9d74ad5dd84ad5cf8e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::Merge</definition>
        <argsstring>(const Track &amp;orig) override</argsstring>
        <name>Merge</name>
        <reimplements refid="class_track_1a0345783930c487b7b511f8419f068aa5">Merge</reimplements>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_track" kindref="compound">Track</ref> &amp;</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="390" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="153" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ad3d90c746e52a3b82295d99a50e7549b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool WaveTrack::Resample</definition>
        <argsstring>(int rate, ProgressDialog *progress=NULL)</argsstring>
        <name>Resample</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="class_progress_dialog" kindref="compound">ProgressDialog</ref> *</type>
          <declname>progress</declname>
          <defval><ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="393" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2592" bodyend="2606"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ae148d756ee549d196cc8c24600e01ebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int WaveTrack::GetAutoSaveIdent</definition>
        <argsstring>()</argsstring>
        <name>GetAutoSaveIdent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="399" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2641" bodyend="2644"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a1e9090e6e1bfee1d312528e3d3345025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::SetAutoSaveIdent</definition>
        <argsstring>(int id)</argsstring>
        <name>SetAutoSaveIdent</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="401" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2646" bodyend="2649"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1ab82fb513c3fba956467adc8a8d55b4b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int WaveTrack::GetLastScaleType</definition>
        <argsstring>() const </argsstring>
        <name>GetLastScaleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="440" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="440" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a0692506243ea687501faddd0e767124e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::SetLastScaleType</definition>
        <argsstring>() const </argsstring>
        <name>SetLastScaleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="441" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="286" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a3b73b4b1c0c422cc1b3363757f4ecb07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int WaveTrack::GetLastdBRange</definition>
        <argsstring>() const </argsstring>
        <name>GetLastdBRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="443" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="443" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a9223604210ecf46c9238f43a715ab5f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::SetLastdBRange</definition>
        <argsstring>() const </argsstring>
        <name>SetLastdBRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="444" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="291" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a93e8da76e3495f28b5e17518016f9c9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref></type>
        <definition>WaveTrackDisplay WaveTrack::GetDisplay</definition>
        <argsstring>() const </argsstring>
        <name>GetDisplay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="446" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="446" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a2a72bbf273bff5d040bef6c562d4d400" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::SetDisplay</definition>
        <argsstring>(WaveTrackDisplay display)</argsstring>
        <name>SetDisplay</name>
        <param>
          <type><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref></type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="447" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="447" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aebb4cac69620ce02b4f396fb37d23f82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::GetDisplayBounds</definition>
        <argsstring>(float *min, float *max) const </argsstring>
        <name>GetDisplayBounds</name>
        <param>
          <type>float *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="449" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="296" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1aaf6f597255538feaf1017d046993445c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::SetDisplayBounds</definition>
        <argsstring>(float min, float max) const </argsstring>
        <name>SetDisplayBounds</name>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="450" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="302" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a6c31cef06f382857502ce036b2dc795b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::GetSpectrumBounds</definition>
        <argsstring>(float *min, float *max) const </argsstring>
        <name>GetSpectrumBounds</name>
        <param>
          <type>float *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="451" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="308" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1adc327ebce52049287878201d876de903" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WaveTrack::SetSpectrumBounds</definition>
        <argsstring>(float min, float max) const </argsstring>
        <name>SetSpectrumBounds</name>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="452" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="352" bodyend="356"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_wave_track_1a92b3b5c624dbac625e25d5335afcd7a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref></type>
        <definition>WaveTrack::WaveTrackDisplay WaveTrack::FindDefaultViewMode</definition>
        <argsstring>()</argsstring>
        <name>FindDefaultViewMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="432" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="203" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a7129f7e9044f717d60ae824d3ab156fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref></type>
        <definition>WaveTrack::WaveTrackDisplay WaveTrack::ConvertLegacyDisplayValue</definition>
        <argsstring>(int oldValue)</argsstring>
        <name>ConvertLegacyDisplayValue</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>oldValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="435" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="230" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_wave_track_1a2c0fdb366755a9100946fd7d0c4fae15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref></type>
        <definition>WaveTrack::WaveTrackDisplay WaveTrack::ValidateWaveTrackDisplay</definition>
        <argsstring>(WaveTrackDisplay display)</argsstring>
        <name>ValidateWaveTrackDisplay</name>
        <param>
          <type><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref></type>
          <declname>display</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="438" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="264" bodyend="284"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="class_track" kindref="compound">Track</ref> that contains audio waveform data. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="12443">
        <label>XMLTagHandler</label>
        <link refid="class_x_m_l_tag_handler"/>
      </node>
      <node id="12441">
        <label>WaveTrack</label>
        <link refid="class_wave_track"/>
        <childnode refid="12442" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12442">
        <label>Track</label>
        <link refid="class_track"/>
        <childnode refid="12443" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12447">
        <label>TrackListNode</label>
        <link refid="struct_track_list_node"/>
        <childnode refid="12447" relation="usage">
          <edgelabel>prev</edgelabel>
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="12445" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
      <node id="12446">
        <label>XMLTagHandler</label>
        <link refid="class_x_m_l_tag_handler"/>
      </node>
      <node id="12449">
        <label>wxEvtHandler</label>
      </node>
      <node id="12448">
        <label>TrackList</label>
        <link refid="class_track_list"/>
        <childnode refid="12449" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12450">
        <label>DirManager</label>
        <link refid="class_dir_manager"/>
        <childnode refid="12446" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12444">
        <label>WaveTrack</label>
        <link refid="class_wave_track"/>
        <childnode refid="12445" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12445">
        <label>Track</label>
        <link refid="class_track"/>
        <childnode refid="12446" relation="public-inheritance">
        </childnode>
        <childnode refid="12447" relation="usage">
          <edgelabel>mNode</edgelabel>
        </childnode>
        <childnode refid="12448" relation="usage">
          <edgelabel>mList</edgelabel>
        </childnode>
        <childnode refid="12450" relation="usage">
          <edgelabel>mDirManager</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="62" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="62" bodyend="499"/>
    <listofallmembers>
      <member refid="class_wave_track_1a67a4e0c18385069f83ae940203854126" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>AddClip</name></member>
      <member refid="class_wave_track_1a108276d05d8faeb7a961b3400a634006" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>AddInvalidRegion</name></member>
      <member refid="class_track_1a4a6604845139575dfc25be299aeb60efaa2633d5555a8b46b60c277da23d207f4" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>All</name></member>
      <member refid="class_wave_track_1adc09591a8d9b92cbbed08d8ccf28bac5" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Append</name></member>
      <member refid="class_wave_track_1a1be99bf9423f1cd5bf86ffdb4320d1cf" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>AppendAlias</name></member>
      <member refid="class_wave_track_1a56c95e5c6b671b69de16590932fb0b76" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>AppendCoded</name></member>
      <member refid="class_wave_track_1a420ddb9afa44d1dbbf15172edc451107" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>CanInsertClip</name></member>
      <member refid="class_wave_track_1aa3263588cf2b126720215ee551df12d2" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>CanOffsetClip</name></member>
      <member refid="class_wave_track_1a0643176c8e3d2b4de917b002af73e0ea" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Clear</name></member>
      <member refid="class_track_1a725fa0a27976e10fd01859baa2f29ff7" prot="public" virt="virtual" ambiguityscope="Track::"><scope>WaveTrack</scope><name>Clear</name></member>
      <member refid="class_wave_track_1aa12467e5e5da8f444d905f0716701d07" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>ClearAndAddCutLine</name></member>
      <member refid="class_wave_track_1a0eddcd7d1b35068c7369145a5d97ee17" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>ClearAndPaste</name></member>
      <member refid="class_wave_track_1af7e1d96ef2e79cc51a7bf94c00840dd6" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>CloseLock</name></member>
      <member refid="class_wave_track_1a7129f7e9044f717d60ae824d3ab156fc" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>ConvertLegacyDisplayValue</name></member>
      <member refid="class_wave_track_1ae54ac2b95b5b6adfcbbba34964f7fee3" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>ConvertToSampleFormat</name></member>
      <member refid="class_wave_track_1a80d2c62c76195237b5412fa22aae8b46" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Copy</name></member>
      <member refid="class_track_1ab4090a1d2cf009e12f77ba27b5c3bd34" prot="public" virt="virtual" ambiguityscope="Track::"><scope>WaveTrack</scope><name>Copy</name></member>
      <member refid="class_wave_track_1afcccee2ff72be9519c5a096a423476ff" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>CopyNonconst</name></member>
      <member refid="class_wave_track_1a0dd8d940d6fd4a87a273458881a1f63d" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>CreateClip</name></member>
      <member refid="class_wave_track_1ab3baf9ac8b43075bf65786bdf42fba85" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Cut</name></member>
      <member refid="class_track_1a87915537991939aa4271435995628bac" prot="public" virt="virtual" ambiguityscope="Track::"><scope>WaveTrack</scope><name>Cut</name></member>
      <member refid="class_wave_track_1ac2e0fb56a6fd859520ed3f89eba9718b" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>DeleteWaveCaches</name></member>
      <member refid="class_wave_track_1aa717acd203bf249faa871a6871f6397f" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Disjoin</name></member>
      <member refid="class_wave_track_1aa9a27d1f1b437b5b7cdb3da31a608d7e" prot="private" virt="virtual"><scope>WaveTrack</scope><name>Duplicate</name></member>
      <member refid="class_wave_track_1a66de941065c151bc6ef012dca3f5ea7e" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>ExpandCutLine</name></member>
      <member refid="class_wave_track_1acb1fc325d50a01d0f9716788d3dc62b3" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>FillSortedClipArray</name></member>
      <member refid="class_wave_track_1a92b3b5c624dbac625e25d5335afcd7a5" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>FindDefaultViewMode</name></member>
      <member refid="class_wave_track_1af2ca2143f5fec142410d26cf064ec37c" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Flush</name></member>
      <member refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Get</name></member>
      <member refid="class_wave_track_1ad051f6b5dea67bc6926eef457052f3e4" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetActiveEnvelope</name></member>
      <member refid="class_track_1ac54e9cb9c256f7dd3605f9a63e041479" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetActualHeight</name></member>
      <member refid="class_wave_track_1ae148d756ee549d196cc8c24600e01ebf" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetAutoSaveIdent</name></member>
      <member refid="class_wave_track_1afe9a831f943117dc2f818d0d003c4475" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetBestBlockSize</name></member>
      <member refid="class_wave_track_1ae8a803fab37d72e446c024d1fcc20264" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetBlockStart</name></member>
      <member refid="class_wave_track_1aed472b80250f8a6a759d8c43970c6b99" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetCachedLocations</name></member>
      <member refid="class_track_1a9c988f7695a546bf52ee2dc859db0345" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetChannel</name></member>
      <member refid="class_wave_track_1a93d35f717c7120f01d93ccb0e1d18db4" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetChannelGain</name></member>
      <member refid="class_wave_track_1aa57f503b09b51617bc6b1fd27ac54421" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetClipAtSample</name></member>
      <member refid="class_wave_track_1a6f2397064c743a2265ecbc4c9e35fea7" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetClipAtX</name></member>
      <member refid="class_wave_track_1a5d0fc3eba22b8a63602e78776efd767a" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetClipByIndex</name></member>
      <member refid="class_wave_track_1a41bd6c2839fc568f06ea3c10b2dac60b" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetClipIndex</name></member>
      <member refid="class_wave_track_1a40a351c828128e85e2ba993107b96ef3" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetClipIterator</name></member>
      <member refid="class_track_1ae9c9b6f2e53b0e55b214ae192b30ec60" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetDefaultName</name></member>
      <member refid="class_track_1aebb3ea6b7d480fad55d543b9ca1a888c" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetDirManager</name></member>
      <member refid="class_wave_track_1a93e8da76e3495f28b5e17518016f9c9f" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetDisplay</name></member>
      <member refid="class_wave_track_1aebb4cac69620ce02b4f396fb37d23f82" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetDisplayBounds</name></member>
      <member refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" prot="public" virt="virtual"><scope>WaveTrack</scope><name>GetEndTime</name></member>
      <member refid="class_wave_track_1ab5377b2d185a54c4c8f5eb334f1c4285" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetEnvelopeAtX</name></member>
      <member refid="class_wave_track_1a95b1096a2ace691e8b76c02535a56f1a" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetEnvelopeValues</name></member>
      <member refid="class_wave_track_1a6634d8840f1b87586e594bd628bcd7a5" prot="public" virt="virtual"><scope>WaveTrack</scope><name>GetErrorOpening</name></member>
      <member refid="class_wave_track_1a2f8be921b1e2c2183e3a3eb367eb3416" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetGain</name></member>
      <member refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetHeight</name></member>
      <member refid="class_wave_track_1af1df93d6e053c30b707c53f6d224f104" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetIdealBlockSize</name></member>
      <member refid="class_wave_track_1af7353bc939d97b3090ef20a0e0a6707b" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetIndependentSpectrogramSettings</name></member>
      <member refid="class_wave_track_1aec6387c49dc73248ebc0d2b250e746cd" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetIndependentWaveformSettings</name></member>
      <member refid="class_track_1a1e60222eef94930890417a8cf178153a" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetIndex</name></member>
      <member refid="class_wave_track_1a0a51b188c6a489be981f0af7792b718e" prot="public" virt="virtual"><scope>WaveTrack</scope><name>GetKind</name></member>
      <member refid="class_wave_track_1a3b73b4b1c0c422cc1b3363757f4ecb07" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetLastdBRange</name></member>
      <member refid="class_wave_track_1ab82fb513c3fba956467adc8a8d55b4b8" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetLastScaleType</name></member>
      <member refid="class_track_1afafc93348a2d442bf956fa072d3d769b" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetLink</name></member>
      <member refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetLinked</name></member>
      <member refid="class_wave_track_1a59ca00cf8abf1c28d043effec2866870" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetMaxBlockSize</name></member>
      <member refid="class_track_1ac31a25492781bb0cc61e5f544f59b3d5" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetMinimized</name></member>
      <member refid="class_track_1aa39728150b3da63f63b35b5974f8839a" prot="public" virt="virtual"><scope>WaveTrack</scope><name>GetMinimizedHeight</name></member>
      <member refid="class_wave_track_1ae29a2df788e32b4d84cc550b81ce9212" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetMinMax</name></member>
      <member refid="class_track_1aebabe796d0b3222ef7d23ae13a62769b" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetMute</name></member>
      <member refid="class_track_1a670b88686f99e151d6a305a709f130b1" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetName</name></member>
      <member refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetNode</name></member>
      <member refid="class_wave_track_1a296527181493e5553b86d3447a03bf6d" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetNumClips</name></member>
      <member refid="class_wave_track_1a56ce9eef3a87624a428a0c44058a8484" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetODFlags</name></member>
      <member refid="class_wave_track_1af199a667b2c17d34c3428a58dbc0d556" prot="public" virt="virtual"><scope>WaveTrack</scope><name>GetOffset</name></member>
      <member refid="class_wave_track_1a39fb6133b9ead187e3eb8127fd8966c0" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetPan</name></member>
      <member refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetRate</name></member>
      <member refid="class_wave_track_1acfebdfdf55f1bf86e258f7beae256958" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetRMS</name></member>
      <member refid="class_wave_track_1aeacd5bae293c72523bcde439345739f7" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetSampleFormat</name></member>
      <member refid="class_track_1ac01a2b30ea7a2574d724bae023427905" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetSelected</name></member>
      <member refid="class_wave_track_1aa414c35568381768e61b337207933a82" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetSequenceAtX</name></member>
      <member refid="class_track_1acd2518a3c8c5b82f2a5bd45ce074d781" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetSolo</name></member>
      <member refid="class_wave_track_1a54f8ed0c9c1d1fae0241867565b33512" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetSpectrogramSettings</name></member>
      <member refid="class_wave_track_1a1a73f266c9172e34b51d6c1b78d2ec8c" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetSpectrogramSettings</name></member>
      <member refid="class_wave_track_1a6c31cef06f382857502ce036b2dc795b" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetSpectrumBounds</name></member>
      <member refid="class_wave_track_1acd39f4f01272e112a2d132e48b60678e" prot="public" virt="virtual"><scope>WaveTrack</scope><name>GetStartTime</name></member>
      <member refid="class_wave_track_1a10c50123dc26cba66469b011c1852047" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetWaveformSettings</name></member>
      <member refid="class_wave_track_1aa26938c5028c13c0811e68e19ef89274" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetWaveformSettings</name></member>
      <member refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>GetY</name></member>
      <member refid="class_wave_track_1ab70b3459275bc45091a583cb5b849519" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>HandleClear</name></member>
      <member refid="class_wave_track_1a1ccd263058aa228a709301e5c442afe2" prot="public" virt="virtual"><scope>WaveTrack</scope><name>HandleXMLChild</name></member>
      <member refid="class_x_m_l_tag_handler_1a2440581a01bc2dc3a098083fa694c9bf" prot="public" virt="virtual"><scope>WaveTrack</scope><name>HandleXMLContent</name></member>
      <member refid="class_wave_track_1ad71b41c39dce899dba1ef7418b2cd54e" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>HandleXMLEndTag</name></member>
      <member refid="class_x_m_l_tag_handler_1af4d7389b5029a37c4b3c665eab464660" prot="public" virt="virtual" ambiguityscope="Track::"><scope>WaveTrack</scope><name>HandleXMLEndTag</name></member>
      <member refid="class_wave_track_1a8914c769a559d645dbace68f0f56fb8a" prot="public" virt="virtual"><scope>WaveTrack</scope><name>HandleXMLTag</name></member>
      <member refid="class_wave_track_1a67d97b82a4c76f5de83fcb599d093494" prot="private" virt="non-virtual"><scope>WaveTrack</scope><name>Init</name></member>
      <member refid="class_track_1a947a448d4a6e9c7f2a6e4f36fb017ba5" prot="public" virt="non-virtual" ambiguityscope="Track::"><scope>WaveTrack</scope><name>Init</name></member>
      <member refid="class_wave_track_1a2baf7d0d8cf05bb018ee3409ee5488cc" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>InsertSilence</name></member>
      <member refid="class_track_1a60a17fff33826814476f69f93b702235" prot="public" virt="virtual" ambiguityscope="Track::"><scope>WaveTrack</scope><name>InsertSilence</name></member>
      <member refid="class_wave_track_1a5b87d35cb0fea96b149c43a997b20089" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>IsEmpty</name></member>
      <member refid="class_track_1a4b9d8ec8baa8ce94f9b9b999e324a59f" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>IsSyncLockSelected</name></member>
      <member refid="class_wave_track_1a7109457670c515101a52f625c0c14334" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Join</name></member>
      <member refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Label</name></member>
      <member refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fa4cc8a2bb7bc243eab53ba2abd757d9da" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>LeftChannel</name></member>
      <member refid="class_wave_track_1a7982000384163865535670612b611529" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Location</name></member>
      <member refid="class_wave_track_1af5871fa161f389a2f488857d718ad8fb" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Lock</name></member>
      <member refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>LongSamplesToTime</name></member>
      <member refid="class_wave_track_1ad52926c4ace4545725a61c92532e8fdb" prot="private" virt="non-virtual"><scope>WaveTrack</scope><name>mAppendCriticalSection</name></member>
      <member refid="class_wave_track_1ac3c971b1c4964e3d3f39d5bc0120bf8f" prot="private" virt="non-virtual"><scope>WaveTrack</scope><name>mAutoSaveIdent</name></member>
      <member refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ac03e32af666d2db7c4506d1e8ccb5fe6" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>MaxDisplay</name></member>
      <member refid="class_track_1a95b5b00485210991a838286a6c0c3e96" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mChannel</name></member>
      <member refid="class_wave_track_1aab186786a53179d53c986771c42f5880" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mClips</name></member>
      <member refid="class_track_1a711d329605d3dbda2a57d68294dc7470" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mDefaultName</name></member>
      <member refid="class_track_1ac8edb91d41baf41462a0e1ee9a6c52a0" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mDirManager</name></member>
      <member refid="class_wave_track_1a8c6f228f31fb7b7c144ca775d4600c10" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mDisplay</name></member>
      <member refid="class_wave_track_1a83d2ef555e3b4d6c0a3dab21fa83c2b0" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mDisplayLocationsCache</name></member>
      <member refid="class_wave_track_1a8dbec05f10d02f2c2547d846ca8cfc21" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mDisplayMax</name></member>
      <member refid="class_wave_track_1a144805b8b5d766763d93cf1c47bb0cc0" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mDisplayMin</name></member>
      <member refid="class_wave_track_1ab2609e4e0ce9f9d74ad5dd84ad5cf8e3" prot="public" virt="virtual"><scope>WaveTrack</scope><name>Merge</name></member>
      <member refid="class_wave_track_1a06a36f1d12be7617ba580664f69f9965" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>MergeClips</name></member>
      <member refid="class_wave_track_1a42455adc4ce25589aaae1fa917519fb7" prot="private" virt="non-virtual"><scope>WaveTrack</scope><name>mFlushCriticalSection</name></member>
      <member refid="class_wave_track_1a3938299d11824a2314ce22c688468e26" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mFormat</name></member>
      <member refid="class_wave_track_1a07150ae1d89338c529717a3a43163bbc" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mGain</name></member>
      <member refid="class_track_1ac696598792865dc8f0d6e555ec6e1ee1" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mHeight</name></member>
      <member refid="class_track_1ada3ccc3db7f1c8f6249260335b12d1b4" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mIndex</name></member>
      <member refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a28366f7f02378aa2d22f68aa9749cc77" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>MinDisplay</name></member>
      <member refid="class_wave_track_1a8ee50fdd7a4411462b2768151fb0a72f" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mLastdBRange</name></member>
      <member refid="class_wave_track_1a6bfa61bbb71254a2b5aa643626be09c5" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mLastScaleType</name></member>
      <member refid="class_wave_track_1ac9574d61c68f2fcc196b48efe7c23c53" prot="private" virt="non-virtual"><scope>WaveTrack</scope><name>mLegacyProjectFileOffset</name></member>
      <member refid="class_track_1aaaa8f25fed1beb509a3ada2ca81608b0" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mLinked</name></member>
      <member refid="class_track_1aee09798f96d0ead19b1061b858548dc5" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mList</name></member>
      <member refid="class_track_1ab767c29441016ba672a1f105389190ff" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mMinimized</name></member>
      <member refid="class_track_1a633f85ffde8eda30576b00ee4115570c" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mMute</name></member>
      <member refid="class_track_1a885c04ed00a08ddaa6a3b2d72c55b384" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mName</name></member>
      <member refid="class_track_1a405067641c56a9f23eef63ad646db8f9" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mNode</name></member>
      <member refid="class_track_1a561704af11450071df74b62498a54d1a" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mOffset</name></member>
      <member refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fad1d594e80888976c85f7a4a258dc2f19" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>MonoChannel</name></member>
      <member refid="class_wave_track_1ae10af3465e1040ebee762c856a50b3be" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>MoveClipToTrack</name></member>
      <member refid="class_wave_track_1a342936b12f0ed288970c87eaed874b71" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mPan</name></member>
      <member refid="class_wave_track_1a815558f1a0e20e09a7885019a237233e" prot="private" virt="non-virtual"><scope>WaveTrack</scope><name>mpSpectrumSettings</name></member>
      <member refid="class_wave_track_1a6df7cbd8410086bc60df159e780981e6" prot="private" virt="non-virtual"><scope>WaveTrack</scope><name>mpWaveformSettings</name></member>
      <member refid="class_wave_track_1ac9ff43cf5ca331f25aa7796beaa7c016" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mRate</name></member>
      <member refid="class_track_1a673c205a3e39989f31d2e2e9d6addb5a" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mSelected</name></member>
      <member refid="class_track_1ab21eed7b5982622ba28451c5f76d3156" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mSolo</name></member>
      <member refid="class_wave_track_1a92d5b6594bbe1a2b7dba5121c52882c6" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mSpectrumMax</name></member>
      <member refid="class_wave_track_1a69645755c41a02f3c20f80f0bf5ced79" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mSpectrumMin</name></member>
      <member refid="class_track_1a2735771116264155d95db58912964a52" prot="protected" virt="non-virtual"><scope>WaveTrack</scope><name>mY</name></member>
      <member refid="class_wave_track_1a4c2402bda2c645184a3025772b57f87f" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>NewestOrNewClip</name></member>
      <member refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5aec4136d58eed6538deee71dd3bf5c2d7" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>NoDisplay</name></member>
      <member refid="class_track_1a4a6604845139575dfc25be299aeb60efa3ebf538e767ee3e455126fb4ea4a4e0b" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>None</name></member>
      <member refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ae399eda417597cc247dc53089c3ae206" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>obsolete1</name></member>
      <member refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a2861fcbe6b2c873bc1c4d10934edcd38" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>obsolete2</name></member>
      <member refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a6d6f7469ba9d186c38170579d4413038" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>obsolete3</name></member>
      <member refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a446c719ff6418942022165eda0a89bde" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>obsolete4</name></member>
      <member refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5af78a59d2fbae6820d78fa0432da86fa9" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>obsoleteWaveformDBDisplay</name></member>
      <member refid="class_track_1a0c71dd844bec490b9a291af9ec2bc127" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Offset</name></member>
      <member refid="class_wave_track_1a98b8e8311e6b12bffd18a16b30302c8b" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Paste</name></member>
      <member refid="class_track_1abea1b02917a4dc8ad75331e14f7ea651" prot="public" virt="virtual" ambiguityscope="Track::"><scope>WaveTrack</scope><name>Paste</name></member>
      <member refid="class_x_m_l_tag_handler_1a8e91945b6b8c9a4f85ea3b33d9a4c1ae" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>ReadXMLChild</name></member>
      <member refid="class_x_m_l_tag_handler_1a61e36b40c048430bf94ca82dee0c7b65" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>ReadXMLContent</name></member>
      <member refid="class_x_m_l_tag_handler_1a9e5ffb1c69cf9f5e3168bcefc89d2462" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>ReadXMLEndTag</name></member>
      <member refid="class_x_m_l_tag_handler_1ae4ca0c0282252907d45b65a1ba099fd1" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>ReadXMLTag</name></member>
      <member refid="class_wave_track_1a87c77243803f525bead9bd6dd98b01fc" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>RemoveAndReturnClip</name></member>
      <member refid="class_wave_track_1a72f9ed30336279133f57bee0d1958c38" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>RemoveCutLine</name></member>
      <member refid="class_wave_track_1ad3d90c746e52a3b82295d99a50e7549b" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Resample</name></member>
      <member refid="class_track_1af7ac66dc1b976cffbaee1e01206d362faa9c6ea023df4504361ffa1a31238c87e" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>RightChannel</name></member>
      <member refid="class_wave_track_1aaa23817cfb806f4aa5015d1c6ffeb4db" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>RightmostOrNewClip</name></member>
      <member refid="class_wave_track_1aea32b02fe3634c9f6d0a79af3da7c987" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Set</name></member>
      <member refid="class_wave_track_1a1e9090e6e1bfee1d312528e3d3345025" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetAutoSaveIdent</name></member>
      <member refid="class_track_1a98d028f4a19322ea675fcd33412f9832" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetChannel</name></member>
      <member refid="class_track_1aaa95f9df004e8bc2155ba530d00a6778" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetDefaultName</name></member>
      <member refid="class_wave_track_1a2a72bbf273bff5d040bef6c562d4d400" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetDisplay</name></member>
      <member refid="class_wave_track_1aaf6f597255538feaf1017d046993445c" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetDisplayBounds</name></member>
      <member refid="class_wave_track_1aa64cfe45ca3be7f2067f263784d2a864" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetGain</name></member>
      <member refid="class_track_1a6c03f9842f6f294e69773ab33d794d6e" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetHeight</name></member>
      <member refid="class_track_1a8e7b7fa7741477db3d54de3a10460587" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetIndex</name></member>
      <member refid="class_wave_track_1a9223604210ecf46c9238f43a715ab5f3" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetLastdBRange</name></member>
      <member refid="class_wave_track_1a0692506243ea687501faddd0e767124e" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetLastScaleType</name></member>
      <member refid="class_track_1a23dc5f6265d0383f860d099f44e7d74c" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetLinked</name></member>
      <member refid="class_track_1a7542cc50308134d4f060af0363654234" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetMinimized</name></member>
      <member refid="class_track_1a7f7b67377a0c8b9ebe20394380872032" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetMute</name></member>
      <member refid="class_track_1af91d1579e3d15a0d5fffa3348adae753" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetName</name></member>
      <member refid="class_wave_track_1ad46c588dfe6753fc8c1573bbc5517d1a" prot="public" virt="virtual"><scope>WaveTrack</scope><name>SetOffset</name></member>
      <member refid="class_track_1abea3b67734ed3ac7f9873fa7fdb86c82" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetOwner</name></member>
      <member refid="class_wave_track_1a8711fa41c9fcec3519d80286a96f049d" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetPan</name></member>
      <member refid="class_wave_track_1a0ab2aae5fbbcc2b0bd9da119727022ec" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetRate</name></member>
      <member refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" prot="public" virt="virtual"><scope>WaveTrack</scope><name>SetSelected</name></member>
      <member refid="class_track_1a3e05f682539978be493f9be110082aa3" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetSolo</name></member>
      <member refid="class_wave_track_1a994147b87a99e06d53fdb80acca46e32" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetSpectrogramSettings</name></member>
      <member refid="class_wave_track_1adc327ebce52049287878201d876de903" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetSpectrumBounds</name></member>
      <member refid="class_wave_track_1aa07485811d9d93644345e7e2bec9d56e" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetWaveformSettings</name></member>
      <member refid="class_track_1a5527bdbc39489fa70b4d89d7c7118690" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SetY</name></member>
      <member refid="class_wave_track_1aa033919229edf163f5a484ac9a5d50e1" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Silence</name></member>
      <member refid="class_track_1aecfb56d63d2cb24884a7a562678d31bd" prot="public" virt="virtual" ambiguityscope="Track::"><scope>WaveTrack</scope><name>Silence</name></member>
      <member refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ac0941a4c239c9e4a1d487f31786fbbc9" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Spectrum</name></member>
      <member refid="class_wave_track_1ad939e22300f4b4ee7f2ba2840da6ecf8" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Split</name></member>
      <member refid="class_wave_track_1a769938d719138184ef8ba642ba1ae5c3" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SplitAt</name></member>
      <member refid="class_wave_track_1a23c69640f758645adb7bb25bf59b2f3e" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SplitCut</name></member>
      <member refid="class_wave_track_1afad9695b9e4348602605a60ddecea184" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>SplitDelete</name></member>
      <member refid="class_wave_track_1a49cda2bf10befe089ebd666260e5c5f7" prot="public" virt="virtual"><scope>WaveTrack</scope><name>SyncLockAdjust</name></member>
      <member refid="class_track_1a4a6604845139575dfc25be299aeb60efa2348e03ba06177fe4dbcf87e27d82e33" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Time</name></member>
      <member refid="class_wave_track_1afe621ba06a0396725da44e937143972f" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>TimeToLongSamples</name></member>
      <member refid="class_track_1a108c752f54d215d88076e1feaf55f65c" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Track</name></member>
      <member refid="class_track_1a5e133fa07f696db6d2bbdc440ce3a010" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Track</name></member>
      <member refid="class_wave_track_1a9090c4844308a62885cce4b693b74666" prot="private" virt="non-virtual"><scope>WaveTrack</scope><name>TrackFactory</name></member>
      <member refid="class_track_1a4a6604845139575dfc25be299aeb60ef" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>TrackKindEnum</name></member>
      <member refid="class_wave_track_1a8c974d0b1252821e7dedb4971316f4ef" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Trim</name></member>
      <member refid="class_wave_track_1a4302f01c726ed2178ceda8cd7e6c8e5a" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Unlock</name></member>
      <member refid="class_wave_track_1a00b8ff13124c65a9b937e546cbcff466" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>UpdateLocationsCache</name></member>
      <member refid="class_wave_track_1a2c0fdb366755a9100946fd7d0c4fae15" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>ValidateWaveTrackDisplay</name></member>
      <member refid="class_track_1a798c2a7bb95cde4d9873f09aa08645bd" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>vrulerSize</name></member>
      <member refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Wave</name></member>
      <member refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5aeef9a24216b729762bfd38161b5b2a83" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>Waveform</name></member>
      <member refid="class_wave_track_1a3830f61f0a32fc43f1c0a27574f757f2" prot="private" virt="non-virtual"><scope>WaveTrack</scope><name>WaveTrack</name></member>
      <member refid="class_wave_track_1a0bdcb5e63c1589b6cea440e75c3ee819" prot="private" virt="non-virtual"><scope>WaveTrack</scope><name>WaveTrack</name></member>
      <member refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>WaveTrackDisplay</name></member>
      <member refid="class_wave_track_1aebbe78d1db8eb38b330686c799456a0d" prot="public" virt="virtual"><scope>WaveTrack</scope><name>WriteXML</name></member>
      <member refid="class_x_m_l_tag_handler_1a41758d92758cdaa7c289a66fc2665b1d" prot="public" virt="non-virtual"><scope>WaveTrack</scope><name>XMLTagHandler</name></member>
      <member refid="class_track_1a416e75e66accc8eb9e3fafc3e8555216" prot="public" virt="virtual"><scope>WaveTrack</scope><name>~Track</name></member>
      <member refid="class_wave_track_1af60cfd7907bd8c1cbb7f263808e0eebe" prot="public" virt="virtual"><scope>WaveTrack</scope><name>~WaveTrack</name></member>
      <member refid="class_x_m_l_tag_handler_1a40e32f14dfb9f32faa79ec560803e204" prot="public" virt="virtual"><scope>WaveTrack</scope><name>~XMLTagHandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
