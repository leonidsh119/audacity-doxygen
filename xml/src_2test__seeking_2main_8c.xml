<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="src_2test__seeking_2main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes local="no">signal.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="win_2_projects_2libsndfile_2sys_2time_8h" local="no">sys/time.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes refid="assert_8h" local="yes">FLAC/assert.h</includes>
    <includes local="yes">FLAC/metadata.h</includes>
    <includes refid="include_2_f_l_a_c_2stream__decoder_8h" local="yes">FLAC/stream_decoder.h</includes>
    <includes refid="libflac_2include_2share_2compat_8h" local="yes">share/compat.h</includes>
    <incdepgraph>
      <node id="5804">
        <label>sys/stat.h</label>
      </node>
      <node id="5809">
        <label>format.h</label>
        <link refid="include_2_f_l_a_c_2format_8h"/>
        <childnode refid="5808" relation="include">
        </childnode>
        <childnode refid="5810" relation="include">
        </childnode>
      </node>
      <node id="5814">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="5815" relation="include">
        </childnode>
        <childnode refid="5816" relation="include">
        </childnode>
        <childnode refid="5802" relation="include">
        </childnode>
      </node>
      <node id="5818">
        <label>stdarg.h</label>
      </node>
      <node id="5810">
        <label>ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="5811" relation="include">
        </childnode>
      </node>
      <node id="5807">
        <label>FLAC/stream_decoder.h</label>
        <link refid="include_2_f_l_a_c_2stream__decoder_8h"/>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5808" relation="include">
        </childnode>
        <childnode refid="5809" relation="include">
        </childnode>
      </node>
      <node id="5811">
        <label>stdint.h</label>
      </node>
      <node id="5801">
        <label>stdlib.h</label>
      </node>
      <node id="5805">
        <label>FLAC/assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="5816">
        <label>alloca.h</label>
      </node>
      <node id="5806">
        <label>FLAC/metadata.h</label>
      </node>
      <node id="5815">
        <label>MacTypes.h</label>
      </node>
      <node id="5802">
        <label>string.h</label>
      </node>
      <node id="5817">
        <label>utime.h</label>
      </node>
      <node id="5808">
        <label>export.h</label>
        <link refid="lib-src_2libflac_2include_2_f_l_a_c_2export_8h"/>
      </node>
      <node id="5813">
        <label>unistd.h</label>
      </node>
      <node id="5799">
        <label>signal.h</label>
      </node>
      <node id="5798">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c</label>
        <link refid="src/test_seeking/main.c"/>
        <childnode refid="5799" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5801" relation="include">
        </childnode>
        <childnode refid="5802" relation="include">
        </childnode>
        <childnode refid="5803" relation="include">
        </childnode>
        <childnode refid="5804" relation="include">
        </childnode>
        <childnode refid="5805" relation="include">
        </childnode>
        <childnode refid="5806" relation="include">
        </childnode>
        <childnode refid="5807" relation="include">
        </childnode>
        <childnode refid="5812" relation="include">
        </childnode>
      </node>
      <node id="5812">
        <label>share/compat.h</label>
        <link refid="libflac_2include_2share_2compat_8h"/>
        <childnode refid="5813" relation="include">
        </childnode>
        <childnode refid="5814" relation="include">
        </childnode>
        <childnode refid="5817" relation="include">
        </childnode>
        <childnode refid="5818" relation="include">
        </childnode>
      </node>
      <node id="5803">
        <label>sys/time.h</label>
        <link refid="win_2_projects_2libsndfile_2sys_2time_8h"/>
      </node>
      <node id="5800">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_decoder_client_data" prot="public">DecoderClientData</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="src_2test__seeking_2main_8c_1a4c96e011d42fc4cfbe5aa483f28a3c7f" prot="public" static="no">
        <name>RNDFUNC</name>
        <initializer>random</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" line="83" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="src_2test__seeking_2main_8c_1a1c6e60ab16aa8b2174bcca38f70604e6" prot="public" static="yes" mutable="no">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool stop_signal_</definition>
        <argsstring></argsstring>
        <name>stop_signal_</name>
        <initializer>= <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" line="50" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="src_2test__seeking_2main_8c_1a2efe5b50322af5bb43d6f7fb82fe8133" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void our_sigint_handler_</definition>
        <argsstring>(int signum)</argsstring>
        <name>our_sigint_handler_</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>signum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" line="52" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" bodystart="52" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="src_2test__seeking_2main_8c_1a737b620adf7ded83a969fbad14b11757" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>static FLAC__bool die_</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>die_</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="src_2test__seeking_2main_8c_1ae16a9bc967cb2e114bad44fef14f4bca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>static FLAC__bool die_s_</definition>
        <argsstring>(const char *msg, const FLAC__StreamDecoder *decoder)</argsstring>
        <name>die_s_</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_decoder" kindref="compound">FLAC__StreamDecoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" line="66" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" bodystart="66" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="src_2test__seeking_2main_8c_1a76d420294bd5b823fe6e3454c5127985" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>static unsigned local_rand_</definition>
        <argsstring>(void)</argsstring>
        <name>local_rand_</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" line="80" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" bodystart="80" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="src_2test__seeking_2main_8c_1a5e05bafcd10c47971df6e9b6a09fef1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref></type>
        <definition>static FLAC__off_t get_filesize_</definition>
        <argsstring>(const char *srcpath)</argsstring>
        <name>get_filesize_</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>srcpath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" line="95" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" bodystart="95" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="src_2test__seeking_2main_8c_1abd98d9dc32964df12fb5c19a61e53027" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>static FLAC__bool read_pcm_</definition>
        <argsstring>(FLAC__int32 *pcm[], const char *rawfilename, const char *flacfilename)</argsstring>
        <name>read_pcm_</name>
        <param>
          <type><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref> *</type>
          <declname>pcm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>rawfilename</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>flacfilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" line="105" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" bodystart="105" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="src_2test__seeking_2main_8c_1a776002a5bfa554184600271df655592e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__flac__stream__decoder_1ga73f67eb9e0ab57945afe038751bc62c8" kindref="member">FLAC__StreamDecoderWriteStatus</ref></type>
        <definition>static FLAC__StreamDecoderWriteStatus write_callback_</definition>
        <argsstring>(const FLAC__StreamDecoder *decoder, const FLAC__Frame *frame, const FLAC__int32 *const buffer[], void *client_data)</argsstring>
        <name>write_callback_</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_decoder" kindref="compound">FLAC__StreamDecoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____frame" kindref="compound">FLAC__Frame</ref> *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref> *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref></type>
          <declname>buffer</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>client_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" line="189" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" bodystart="189" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="src_2test__seeking_2main_8c_1ad53af055dfbbcdfe673cab2ccce013f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void metadata_callback_</definition>
        <argsstring>(const FLAC__StreamDecoder *decoder, const FLAC__StreamMetadata *metadata, void *client_data)</argsstring>
        <name>metadata_callback_</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_decoder" kindref="compound">FLAC__StreamDecoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref> *</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>client_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" line="222" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" bodystart="222" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="src_2test__seeking_2main_8c_1a920f9f2de7b223336bb10b4a09b35fe9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void error_callback_</definition>
        <argsstring>(const FLAC__StreamDecoder *decoder, FLAC__StreamDecoderErrorStatus status, void *client_data)</argsstring>
        <name>error_callback_</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____stream_decoder" kindref="compound">FLAC__StreamDecoder</ref> *</type>
          <declname>decoder</declname>
        </param>
        <param>
          <type><ref refid="group__flac__stream__decoder_1ga130e70bd9a73d3c2416247a3e5132ecf" kindref="member">FLAC__StreamDecoderErrorStatus</ref></type>
          <declname>status</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>client_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" line="244" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" bodystart="244" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="src_2test__seeking_2main_8c_1accb581db52f4eba8177ad6bcb578f016" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>static FLAC__bool seek_barrage</definition>
        <argsstring>(FLAC__bool is_ogg, const char *filename, FLAC__off_t filesize, unsigned count, FLAC__int64 total_samples, unsigned read_mode, FLAC__int32 **pcm)</argsstring>
        <name>seek_barrage</name>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>is_ogg</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref></type>
          <declname>filesize</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a12b57f75f760b9062a13bcda1bdb3f3e" kindref="member">FLAC__int64</ref></type>
          <declname>total_samples</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>read_mode</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref> **</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" line="266" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" bodystart="266" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="src_2test__seeking_2main_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" line="393" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c" bodystart="393" bodyend="470"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>test_seeking<sp/>-<sp/>Seeking<sp/>tester<sp/>for<sp/>libFLAC</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2004-2009<sp/><sp/>Josh<sp/>Coalson</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2011-2014<sp/><sp/>Xiph.Org<sp/>Foundation</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_MSC_VER<sp/>||<sp/>defined<sp/>__MINGW32__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="win_2_projects_2libsndfile_2sys_2time_8h" kindref="compound">time.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="win_2_projects_2libsndfile_2sys_2time_8h" kindref="compound">sys/time.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>stat()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assert_8h" kindref="compound">FLAC/assert.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FLAC/metadata.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="include_2_f_l_a_c_2stream__decoder_8h" kindref="compound">FLAC/stream_decoder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libflac_2include_2share_2compat_8h" kindref="compound">share/compat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="struct_decoder_client_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40" refid="struct_decoder_client_data_1af9764f291cb5dffa18770292499ac90b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>**<ref refid="struct_decoder_client_data_1af9764f291cb5dffa18770292499ac90b" kindref="member">pcm</ref>;</highlight></codeline>
<codeline lineno="41" refid="struct_decoder_client_data_1afd933a69af0ab1a785439bc3c2db636a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="struct_decoder_client_data_1afd933a69af0ab1a785439bc3c2db636a" kindref="member">got_data</ref>;</highlight></codeline>
<codeline lineno="42" refid="struct_decoder_client_data_1a2668fbf4f29f34cf1ca74abfe0454b37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/><ref refid="struct_decoder_client_data_1a2668fbf4f29f34cf1ca74abfe0454b37" kindref="member">total_samples</ref>;</highlight></codeline>
<codeline lineno="43" refid="struct_decoder_client_data_1a97c807bb8c0974255fc26115dfbaf69c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_decoder_client_data_1a97c807bb8c0974255fc26115dfbaf69c" kindref="member">channels</ref>;</highlight></codeline>
<codeline lineno="44" refid="struct_decoder_client_data_1a223609fa36d44fec5aef49aee5fdf095" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_decoder_client_data_1a223609fa36d44fec5aef49aee5fdf095" kindref="member">bits_per_sample</ref>;</highlight></codeline>
<codeline lineno="45" refid="struct_decoder_client_data_1af0032c4e37c763ec147dd06a648dd15e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="struct_decoder_client_data_1af0032c4e37c763ec147dd06a648dd15e" kindref="member">quiet</ref>;</highlight></codeline>
<codeline lineno="46" refid="struct_decoder_client_data_1a0e7e18a3cd27e895bb78c54b8ddc5734" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="struct_decoder_client_data_1a0e7e18a3cd27e895bb78c54b8ddc5734" kindref="member">ignore_errors</ref>;</highlight></codeline>
<codeline lineno="47" refid="struct_decoder_client_data_1af674c1095df5e045ec4cea9266de84f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="struct_decoder_client_data_1af674c1095df5e045ec4cea9266de84f5" kindref="member">error_occurred</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}<sp/><ref refid="struct_decoder_client_data" kindref="compound">DecoderClientData</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>stop_signal_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>our_sigint_handler_(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signum)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)signum;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;(caught<sp/>SIGINT)<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>stop_signal_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>die_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>die_s_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____stream_decoder" kindref="compound">FLAC__StreamDecoder</ref><sp/>*decoder)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1ga3adb6891c5871a87cd5bbae6c770ba2d" kindref="member">FLAC__StreamDecoderState</ref><sp/>state<sp/>=<sp/><ref refid="group__flac__stream__decoder_1ga5899c204ad7183ec04e41855090c0635" kindref="member">FLAC__stream_decoder_get_state</ref>(decoder);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(msg)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;FAILED,<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;FAILED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;,<sp/>state<sp/>=<sp/>%u<sp/>(%s)\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)state,<sp/><ref refid="group__flac__stream__decoder_1gae1c6a6fb59fce39e251233fa221fe61d" kindref="member">FLAC__StreamDecoderStateString</ref>[state]);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>local_rand_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>_MSC_VER<sp/>&amp;&amp;<sp/>!defined<sp/>__MINGW32__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RNDFUNC<sp/>random</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RNDFUNC<sp/>rand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>every<sp/>RAND_MAX<sp/>I&apos;ve<sp/>ever<sp/>seen<sp/>is<sp/>2^15-1<sp/>or<sp/>2^31-1,<sp/>so<sp/>a<sp/>little<sp/>hackery<sp/>here:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RAND_MAX<sp/>&gt;<sp/>32767)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="src_2test__seeking_2main_8c_1a4c96e011d42fc4cfbe5aa483f28a3c7f" kindref="member">RNDFUNC</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>usually<sp/>MSVC,<sp/>some<sp/>solaris<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="src_2test__seeking_2main_8c_1a4c96e011d42fc4cfbe5aa483f28a3c7f" kindref="member">RNDFUNC</ref>()&lt;&lt;15)<sp/>|<sp/><ref refid="src_2test__seeking_2main_8c_1a4c96e011d42fc4cfbe5aa483f28a3c7f" kindref="member">RNDFUNC</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>RNDFUNC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref><sp/>get_filesize_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*srcpath)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="libflac_2include_2share_2compat_8h_1aaaa24bcef3a9b01eabb0912fe63bfe7d" kindref="member">flac_stat_s</ref><sp/>srcstat;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/><ref refid="libflac_2include_2share_2compat_8h_1af6be251f8e6e3203a6845e4c10ac4f76" kindref="member">flac_stat</ref>(srcpath,<sp/>&amp;srcstat))</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>srcstat.st_size;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>read_pcm_(<ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>*pcm[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*rawfilename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*flacfilename)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>channels<sp/>=<sp/>0,<sp/>bps<sp/>=<sp/>0,<sp/><ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref><sp/>rawfilesize<sp/>=<sp/>get_filesize_(rawfilename);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rawfilesize<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>can&apos;t<sp/>determine<sp/>filesize<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>rawfilename);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>sample<sp/>format<sp/>from<sp/>flac<sp/>file;<sp/>would<sp/>just<sp/>use<sp/>FLAC__metadata_get_streaminfo()<sp/>except<sp/>it<sp/>doesn&apos;t<sp/>work<sp/>for<sp/>Ogg<sp/>FLAC<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref><sp/>streaminfo;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group__flac__metadata__level0_1gaf248d1ccc8025b9e9d7f532b8af4ab07" kindref="member">FLAC__metadata_get_streaminfo</ref>(flacfilename,<sp/>&amp;streaminfo))<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>getting<sp/>STREAMINFO<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>flacfilename);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channels<sp/>=<sp/>streaminfo.<ref refid="struct_f_l_a_c_____stream_metadata_1a1029e424f4f3814c4465384366afd3f2" kindref="member">data</ref>.<ref refid="struct_f_l_a_c_____stream_metadata_1a827c8671721b01ed3007adbe81ae0c6b" kindref="member">stream_info</ref>.<ref refid="struct_f_l_a_c_____stream_metadata___stream_info_1a13bf6f8e5bdaa2dff48c29c7aff4ef88" kindref="member">channels</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bps<sp/>=<sp/>streaminfo.<ref refid="struct_f_l_a_c_____stream_metadata_1a1029e424f4f3814c4465384366afd3f2" kindref="member">data</ref>.<ref refid="struct_f_l_a_c_____stream_metadata_1a827c8671721b01ed3007adbe81ae0c6b" kindref="member">stream_info</ref>.<ref refid="struct_f_l_a_c_____stream_metadata___stream_info_1af8886c928641f6dcc242652adf4e1bc9" kindref="member">bits_per_sample</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_l_a_c_____metadata___chain" kindref="compound">FLAC__Metadata_Chain</ref><sp/>*chain<sp/>=<sp/><ref refid="group__flac__metadata__level2_1gafd1f4f58af29325b067ebc5dc34a0f69" kindref="member">FLAC__metadata_chain_new</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_l_a_c_____metadata___iterator" kindref="compound">FLAC__Metadata_Iterator</ref><sp/>*<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>ok<sp/>&amp;&amp;<sp/>chain<sp/>&amp;&amp;<sp/>(<ref refid="group__flac__metadata__level2_1gadb7d8e9a82aeb43e256f0a948adf5c45" kindref="member">FLAC__metadata_chain_read</ref>(chain,<sp/>flacfilename)<sp/>||<sp/><ref refid="group__flac__metadata__level2_1gae7b34f2929bedea0e14ac14aca253a40" kindref="member">FLAC__metadata_chain_read_ogg</ref>(chain,<sp/>flacfilename));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>ok<sp/>&amp;&amp;<sp/>(it<sp/>=<sp/><ref refid="group__flac__metadata__level2_1gac988906d63bd2ddc910d8f0b118591f7" kindref="member">FLAC__metadata_iterator_new</ref>());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ok)<sp/><ref refid="group__flac__metadata__level2_1ga4a5af69a1f19436b02f738eb8c97c959" kindref="member">FLAC__metadata_iterator_init</ref>(it,<sp/>chain);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>ok<sp/>&amp;&amp;<sp/>(<ref refid="group__flac__metadata__level2_1ga4a2b00a4312d178a9f55c2e2f8b08904" kindref="member">FLAC__metadata_iterator_get_block</ref>(it)-&gt;<ref refid="struct_f_l_a_c_____stream_metadata_1a39fd0655464f2cc7c9c37ae715088aec" kindref="member">type</ref><sp/>==<sp/><ref refid="group__flac__format_1ggac71714ba8ddbbd66d26bb78a427fac01acffa517e969ba6a868dcf10e5da75c28" kindref="member">FLAC__METADATA_TYPE_STREAMINFO</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>ok<sp/>&amp;&amp;<sp/>(channels<sp/>=<sp/><ref refid="group__flac__metadata__level2_1ga4a2b00a4312d178a9f55c2e2f8b08904" kindref="member">FLAC__metadata_iterator_get_block</ref>(it)-&gt;<ref refid="struct_f_l_a_c_____stream_metadata_1a1029e424f4f3814c4465384366afd3f2" kindref="member">data</ref>.<ref refid="struct_f_l_a_c_____stream_metadata_1a827c8671721b01ed3007adbe81ae0c6b" kindref="member">stream_info</ref>.<ref refid="struct_f_l_a_c_____stream_metadata___stream_info_1a13bf6f8e5bdaa2dff48c29c7aff4ef88" kindref="member">channels</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>ok<sp/>&amp;&amp;<sp/>(bps<sp/>=<sp/><ref refid="group__flac__metadata__level2_1ga4a2b00a4312d178a9f55c2e2f8b08904" kindref="member">FLAC__metadata_iterator_get_block</ref>(it)-&gt;<ref refid="struct_f_l_a_c_____stream_metadata_1a1029e424f4f3814c4465384366afd3f2" kindref="member">data</ref>.<ref refid="struct_f_l_a_c_____stream_metadata_1a827c8671721b01ed3007adbe81ae0c6b" kindref="member">stream_info</ref>.<ref refid="struct_f_l_a_c_____stream_metadata___stream_info_1af8886c928641f6dcc242652adf4e1bc9" kindref="member">bits_per_sample</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it)<sp/><ref refid="group__flac__metadata__level2_1ga1af713d0ae3f7b761579b4fac64f0a9e" kindref="member">FLAC__metadata_iterator_delete</ref>(it);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(chain)<sp/><ref refid="group__flac__metadata__level2_1ga178898eef72ba9d569b1964fffcb4a8b" kindref="member">FLAC__metadata_chain_delete</ref>(chain);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ok)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>getting<sp/>STREAMINFO<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>flacfilename);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channels<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>PCM<sp/>verification<sp/>requires<sp/>1<sp/>or<sp/>2<sp/>channels,<sp/>got<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>channels);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bps<sp/>!=<sp/>8<sp/>&amp;&amp;<sp/>bps<sp/>!=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>PCM<sp/>verification<sp/>requires<sp/>8<sp/>or<sp/>16<sp/>bps,<sp/>got<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>bps);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref><sp/>=<sp/>rawfilesize<sp/>/<sp/>channels<sp/>/<sp/>(bps&gt;&gt;3);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref><sp/>&gt;<sp/>10000000)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>%s<sp/>is<sp/>too<sp/>big\n&quot;</highlight><highlight class="normal">,<sp/>rawfilename);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>channels;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>(pcm[i]<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref>)*<ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>allocating<sp/>space<sp/>for<sp/>PCM<sp/>samples\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>(f<sp/>=<sp/><ref refid="libflac_2include_2share_2compat_8h_1ae07c699856df63caabff61611d79f34d" kindref="member">flac_fopen</ref>(rawfilename,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>opening<sp/>%s<sp/>for<sp/>reading\n&quot;</highlight><highlight class="normal">,<sp/>rawfilename);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>assumes<sp/>signed<sp/>big-endian<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bps<sp/>==<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>channels;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;c,<sp/>1,<sp/>1,<sp/>f)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcm[j][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>bps<sp/>==<sp/>16<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>[2];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>channels;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;c,<sp/>1,<sp/>2,<sp/>f)<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcm[j][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>((<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)((</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)c[0]))<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)c[1];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(f);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__flac__stream__decoder_1ga73f67eb9e0ab57945afe038751bc62c8" kindref="member">FLAC__StreamDecoderWriteStatus</ref><sp/>write_callback_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____stream_decoder" kindref="compound">FLAC__StreamDecoder</ref><sp/>*decoder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____frame" kindref="compound">FLAC__Frame</ref><sp/>*frame,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*client_data)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_decoder_client_data" kindref="compound">DecoderClientData</ref><sp/>*dcd<sp/>=<sp/>(<ref refid="struct_decoder_client_data" kindref="compound">DecoderClientData</ref>*)client_data;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)decoder,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>dcd)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>client_data<sp/>in<sp/>write<sp/>callback<sp/>is<sp/>NULL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__flac__stream__decoder_1gga73f67eb9e0ab57945afe038751bc62c8a23bd6bfec34af704e0d5ea273f14d95d" kindref="member">FLAC__STREAM_DECODER_WRITE_STATUS_ABORT</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dcd-&gt;<ref refid="struct_decoder_client_data_1af674c1095df5e045ec4cea9266de84f5" kindref="member">error_occurred</ref>)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__flac__stream__decoder_1gga73f67eb9e0ab57945afe038751bc62c8a23bd6bfec34af704e0d5ea273f14d95d" kindref="member">FLAC__STREAM_DECODER_WRITE_STATUS_ABORT</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(frame-&gt;<ref refid="struct_f_l_a_c_____frame_1ae39796592bb27512110976fe7b80ce06" kindref="member">header</ref>.<ref refid="struct_f_l_a_c_____frame_header_1a7a62ec09e6f3029297179ef65377265f" kindref="member">number_type</ref><sp/>==<sp/><ref refid="group__flac__format_1gga8fe9ebc78386cd2a3d23b7b8e3818e1ca9220ce93dcc151e5edd5db7e7155b35a" kindref="member">FLAC__FRAME_NUMBER_TYPE_SAMPLE_NUMBER</ref>);<sp/></highlight><highlight class="comment">/*<sp/>decoder<sp/>guarantees<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dcd-&gt;<ref refid="struct_decoder_client_data_1af0032c4e37c763ec147dd06a648dd15e" kindref="member">quiet</ref>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;frame@%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ac582131d7a7c8ee57e73180d1714f9d5" kindref="member">PRIu64</ref><sp/></highlight><highlight class="stringliteral">&quot;(%u)...<sp/>&quot;</highlight><highlight class="normal">,<sp/>frame-&gt;<ref refid="struct_f_l_a_c_____frame_1ae39796592bb27512110976fe7b80ce06" kindref="member">header</ref>.<ref refid="struct_f_l_a_c_____frame_header_1abdb6ca9267e5536f2c6e0f3e3c7adbf2" kindref="member">number</ref>.<ref refid="struct_f_l_a_c_____frame_header_1a4bbe555be68bd9fa48a22624233ee9f0" kindref="member">sample_number</ref>,<sp/>frame-&gt;<ref refid="struct_f_l_a_c_____frame_1ae39796592bb27512110976fe7b80ce06" kindref="member">header</ref>.<ref refid="struct_f_l_a_c_____frame_header_1ace760def6dcbbde3d9d140e5bfda34b3" kindref="member">blocksize</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>against<sp/>PCM<sp/>data<sp/>if<sp/>we<sp/>have<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dcd-&gt;<ref refid="struct_decoder_client_data_1af9764f291cb5dffa18770292499ac90b" kindref="member">pcm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>frame-&gt;<ref refid="struct_f_l_a_c_____frame_1ae39796592bb27512110976fe7b80ce06" kindref="member">header</ref>.<ref refid="struct_f_l_a_c_____frame_header_1a5950c6e4f03ad81f4a03c8c6188b9bf5" kindref="member">channels</ref>;<sp/>c++)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)frame-&gt;<ref refid="struct_f_l_a_c_____frame_1ae39796592bb27512110976fe7b80ce06" kindref="member">header</ref>.<ref refid="struct_f_l_a_c_____frame_header_1abdb6ca9267e5536f2c6e0f3e3c7adbf2" kindref="member">number</ref>.<ref refid="struct_f_l_a_c_____frame_header_1a4bbe555be68bd9fa48a22624233ee9f0" kindref="member">sample_number</ref>,<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>frame-&gt;header.blocksize;<sp/>i++,<sp/>j++)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structbuffer" kindref="compound">buffer</ref>[c][j]<sp/>!=<sp/>dcd-&gt;<ref refid="struct_decoder_client_data_1af9764f291cb5dffa18770292499ac90b" kindref="member">pcm</ref>[c][i])<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>sample<sp/>mismatch<sp/>at<sp/>sample#%u(%u),<sp/>channel=%u,<sp/>expected<sp/>%d,<sp/>got<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>j,<sp/>c,<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[c][j],<sp/>dcd-&gt;<ref refid="struct_decoder_client_data_1af9764f291cb5dffa18770292499ac90b" kindref="member">pcm</ref>[c][i]);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__flac__stream__decoder_1gga73f67eb9e0ab57945afe038751bc62c8a23bd6bfec34af704e0d5ea273f14d95d" kindref="member">FLAC__STREAM_DECODER_WRITE_STATUS_ABORT</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__flac__stream__decoder_1gga73f67eb9e0ab57945afe038751bc62c8acea48326e0ab8370d2814f4126fcb84e" kindref="member">FLAC__STREAM_DECODER_WRITE_STATUS_CONTINUE</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>metadata_callback_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____stream_decoder" kindref="compound">FLAC__StreamDecoder</ref><sp/>*decoder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref><sp/>*metadata,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*client_data)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_decoder_client_data" kindref="compound">DecoderClientData</ref><sp/>*dcd<sp/>=<sp/>(<ref refid="struct_decoder_client_data" kindref="compound">DecoderClientData</ref>*)client_data;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)decoder;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>dcd)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>client_data<sp/>in<sp/>metadata<sp/>callback<sp/>is<sp/>NULL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dcd-&gt;<ref refid="struct_decoder_client_data_1af674c1095df5e045ec4cea9266de84f5" kindref="member">error_occurred</ref>)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dcd-&gt;<ref refid="struct_decoder_client_data_1afd933a69af0ab1a785439bc3c2db636a" kindref="member">got_data</ref><sp/>&amp;&amp;<sp/>metadata-&gt;<ref refid="struct_f_l_a_c_____stream_metadata_1a39fd0655464f2cc7c9c37ae715088aec" kindref="member">type</ref><sp/>==<sp/><ref refid="group__flac__format_1ggac71714ba8ddbbd66d26bb78a427fac01acffa517e969ba6a868dcf10e5da75c28" kindref="member">FLAC__METADATA_TYPE_STREAMINFO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcd-&gt;<ref refid="struct_decoder_client_data_1afd933a69af0ab1a785439bc3c2db636a" kindref="member">got_data</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcd-&gt;<ref refid="struct_decoder_client_data_1a2668fbf4f29f34cf1ca74abfe0454b37" kindref="member">total_samples</ref><sp/>=<sp/>metadata-&gt;<ref refid="struct_f_l_a_c_____stream_metadata_1a1029e424f4f3814c4465384366afd3f2" kindref="member">data</ref>.<ref refid="struct_f_l_a_c_____stream_metadata_1a827c8671721b01ed3007adbe81ae0c6b" kindref="member">stream_info</ref>.<ref refid="struct_f_l_a_c_____stream_metadata___stream_info_1a23d6f6769cb9bbf052a3a4f592f2e383" kindref="member">total_samples</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcd-&gt;<ref refid="struct_decoder_client_data_1a97c807bb8c0974255fc26115dfbaf69c" kindref="member">channels</ref><sp/>=<sp/>metadata-&gt;<ref refid="struct_f_l_a_c_____stream_metadata_1a1029e424f4f3814c4465384366afd3f2" kindref="member">data</ref>.<ref refid="struct_f_l_a_c_____stream_metadata_1a827c8671721b01ed3007adbe81ae0c6b" kindref="member">stream_info</ref>.<ref refid="struct_f_l_a_c_____stream_metadata___stream_info_1a13bf6f8e5bdaa2dff48c29c7aff4ef88" kindref="member">channels</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcd-&gt;<ref refid="struct_decoder_client_data_1a223609fa36d44fec5aef49aee5fdf095" kindref="member">bits_per_sample</ref><sp/>=<sp/>metadata-&gt;<ref refid="struct_f_l_a_c_____stream_metadata_1a1029e424f4f3814c4465384366afd3f2" kindref="member">data</ref>.<ref refid="struct_f_l_a_c_____stream_metadata_1a827c8671721b01ed3007adbe81ae0c6b" kindref="member">stream_info</ref>.<ref refid="struct_f_l_a_c_____stream_metadata___stream_info_1af8886c928641f6dcc242652adf4e1bc9" kindref="member">bits_per_sample</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error_callback_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____stream_decoder" kindref="compound">FLAC__StreamDecoder</ref><sp/>*decoder,<sp/><ref refid="group__flac__stream__decoder_1ga130e70bd9a73d3c2416247a3e5132ecf" kindref="member">FLAC__StreamDecoderErrorStatus</ref><sp/><ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*client_data)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_decoder_client_data" kindref="compound">DecoderClientData</ref><sp/>*dcd<sp/>=<sp/>(<ref refid="struct_decoder_client_data" kindref="compound">DecoderClientData</ref>*)client_data;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)decoder;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>dcd)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>client_data<sp/>in<sp/>error<sp/>callback<sp/>is<sp/>NULL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!dcd-&gt;<ref refid="struct_decoder_client_data_1a0e7e18a3cd27e895bb78c54b8ddc5734" kindref="member">ignore_errors</ref>)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>got<sp/>error<sp/>callback:<sp/>err<sp/>=<sp/>%u<sp/>(%s)\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>,<sp/><ref refid="group__flac__stream__decoder_1gadc56befa033b67dd3befcd2f5f909ec1" kindref="member">FLAC__StreamDecoderErrorStatusString</ref>[status]);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcd-&gt;<ref refid="struct_decoder_client_data_1af674c1095df5e045ec4cea9266de84f5" kindref="member">error_occurred</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>read<sp/>mode:</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>0<sp/>-<sp/>no<sp/>read<sp/>after<sp/>seek</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>1<sp/>-<sp/>read<sp/>2<sp/>frames</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>2<sp/>-<sp/>read<sp/>until<sp/>end</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>seek_barrage(<ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>is_ogg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>,<sp/><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref><sp/>filesize,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>,<sp/><ref refid="ordinals_8h_1a12b57f75f760b9062a13bcda1bdb3f3e" kindref="member">FLAC__int64</ref><sp/>total_samples,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>read_mode,<sp/><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>**pcm)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_l_a_c_____stream_decoder" kindref="compound">FLAC__StreamDecoder</ref><sp/>*decoder;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_decoder_client_data" kindref="compound">DecoderClientData</ref><sp/>decoder_client_data;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>decoder_client_data.<ref refid="struct_decoder_client_data_1af9764f291cb5dffa18770292499ac90b" kindref="member">pcm</ref><sp/>=<sp/>pcm;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>decoder_client_data.<ref refid="struct_decoder_client_data_1afd933a69af0ab1a785439bc3c2db636a" kindref="member">got_data</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>decoder_client_data.<ref refid="struct_decoder_client_data_1a2668fbf4f29f34cf1ca74abfe0454b37" kindref="member">total_samples</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>decoder_client_data.<ref refid="struct_decoder_client_data_1af0032c4e37c763ec147dd06a648dd15e" kindref="member">quiet</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>decoder_client_data.<ref refid="struct_decoder_client_data_1a0e7e18a3cd27e895bb78c54b8ddc5734" kindref="member">ignore_errors</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>decoder_client_data.<ref refid="struct_decoder_client_data_1af674c1095df5e045ec4cea9266de84f5" kindref="member">error_occurred</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\n+++<sp/>seek<sp/>test:<sp/>FLAC__StreamDecoder<sp/>(%s<sp/>FLAC,<sp/>read_mode=%u)\n\n&quot;</highlight><highlight class="normal">,<sp/>is_ogg?<sp/></highlight><highlight class="stringliteral">&quot;Ogg&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;native&quot;</highlight><highlight class="normal">,<sp/>read_mode);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>decoder<sp/>=<sp/><ref refid="group__flac__stream__decoder_1ga7159eefc074dfbab4a37462f69326091" kindref="member">FLAC__stream_decoder_new</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>decoder)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>die_(</highlight><highlight class="stringliteral">&quot;FLAC__stream_decoder_new()<sp/>FAILED,<sp/>returned<sp/>NULL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_ogg)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__flac__stream__decoder_1ga609f2a43987d6abeaef654575462030c" kindref="member">FLAC__stream_decoder_init_ogg_file</ref>(decoder,<sp/><ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>,<sp/>write_callback_,<sp/>metadata_callback_,<sp/>error_callback_,<sp/>&amp;decoder_client_data)<sp/>!=<sp/><ref refid="group__flac__stream__decoder_1ggaaed54a24ac6310d29c5cafba79759c44ac94c7e9396f30642f34805e5d626e011" kindref="member">FLAC__STREAM_DECODER_INIT_STATUS_OK</ref>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>die_s_(</highlight><highlight class="stringliteral">&quot;FLAC__stream_decoder_init_file()<sp/>FAILED&quot;</highlight><highlight class="normal">,<sp/>decoder);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__flac__stream__decoder_1ga1692108a97012d1c5f79baf7df012c33" kindref="member">FLAC__stream_decoder_init_file</ref>(decoder,<sp/><ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>,<sp/>write_callback_,<sp/>metadata_callback_,<sp/>error_callback_,<sp/>&amp;decoder_client_data)<sp/>!=<sp/><ref refid="group__flac__stream__decoder_1ggaaed54a24ac6310d29c5cafba79759c44ac94c7e9396f30642f34805e5d626e011" kindref="member">FLAC__STREAM_DECODER_INIT_STATUS_OK</ref>)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>die_s_(</highlight><highlight class="stringliteral">&quot;FLAC__stream_decoder_init_file()<sp/>FAILED&quot;</highlight><highlight class="normal">,<sp/>decoder);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group__flac__stream__decoder_1ga5e07ca9bf67dabf2521737f63b2156e2" kindref="member">FLAC__stream_decoder_process_until_end_of_metadata</ref>(decoder))</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>die_s_(</highlight><highlight class="stringliteral">&quot;FLAC__stream_decoder_process_until_end_of_metadata()<sp/>FAILED&quot;</highlight><highlight class="normal">,<sp/>decoder);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!is_ogg)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>necessary<sp/>to<sp/>do<sp/>this<sp/>for<sp/>Ogg<sp/>because<sp/>of<sp/>its<sp/>seeking<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>process<sp/>until<sp/>end<sp/>of<sp/>stream<sp/>to<sp/>make<sp/>sure<sp/>we<sp/>can<sp/>still<sp/>seek<sp/>in<sp/>that<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder_client_data.<ref refid="struct_decoder_client_data_1af0032c4e37c763ec147dd06a648dd15e" kindref="member">quiet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group__flac__stream__decoder_1ga4544352442870ea9f16f388a97d81dff" kindref="member">FLAC__stream_decoder_process_until_end_of_stream</ref>(decoder))</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>die_s_(</highlight><highlight class="stringliteral">&quot;FLAC__stream_decoder_process_until_end_of_stream()<sp/>FAILED&quot;</highlight><highlight class="normal">,<sp/>decoder);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder_client_data.<ref refid="struct_decoder_client_data_1af0032c4e37c763ec147dd06a648dd15e" kindref="member">quiet</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;stream<sp/>decoder<sp/>state<sp/>is<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__flac__stream__decoder_1ga0f086d3e2114f378b06e585ab6f4ff6b" kindref="member">FLAC__stream_decoder_get_resolved_state_string</ref>(decoder));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__flac__stream__decoder_1ga5899c204ad7183ec04e41855090c0635" kindref="member">FLAC__stream_decoder_get_state</ref>(decoder)<sp/>!=<sp/><ref refid="group__flac__stream__decoder_1gga3adb6891c5871a87cd5bbae6c770ba2da28ce845052d9d1a780f4107e97f4c853" kindref="member">FLAC__STREAM_DECODER_END_OF_STREAM</ref>)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>die_s_(</highlight><highlight class="stringliteral">&quot;expected<sp/>FLAC__STREAM_DECODER_END_OF_STREAM&quot;</highlight><highlight class="normal">,<sp/>decoder);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;file&apos;s<sp/>total_samples<sp/>is<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ac582131d7a7c8ee57e73180d1714f9d5" kindref="member">PRIu64</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>decoder_client_data.<ref refid="struct_decoder_client_data_1a2668fbf4f29f34cf1ca74abfe0454b37" kindref="member">total_samples</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)decoder_client_data.<ref refid="struct_decoder_client_data_1a2668fbf4f29f34cf1ca74abfe0454b37" kindref="member">total_samples</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>total_samples<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)total_samples;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>total<sp/>samples<sp/>count,<sp/>just<sp/>guess<sp/>based<sp/>on<sp/>the<sp/>file<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@@@<sp/>for<sp/>is_ogg<sp/>we<sp/>should<sp/>get<sp/>it<sp/>from<sp/>last<sp/>page&apos;s<sp/>granulepos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>8<sp/>would<sp/>imply<sp/>no<sp/>compression,<sp/>9<sp/>guarantees<sp/>that<sp/>we<sp/>will<sp/>get<sp/>some<sp/>samples<sp/>off<sp/>the<sp/>end<sp/>of<sp/>the<sp/>stream<sp/>to<sp/>test<sp/>that<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>9<sp/>*<sp/>filesize<sp/>/<sp/>(decoder_client_data.<ref refid="struct_decoder_client_data_1a97c807bb8c0974255fc26115dfbaf69c" kindref="member">channels</ref><sp/>*<sp/>decoder_client_data.<ref refid="struct_decoder_client_data_1a223609fa36d44fec5aef49aee5fdf095" kindref="member">bits_per_sample</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Begin<sp/>seek<sp/>barrage,<sp/>count=%u\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>!stop_signal_<sp/>&amp;&amp;<sp/>(<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>==<sp/>0<sp/>||<sp/>i<sp/>&lt;<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/>pos;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>the<sp/>first<sp/>10,<sp/>seek<sp/>to<sp/>the<sp/>first<sp/>10<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>10<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>the<sp/>second<sp/>10,<sp/>seek<sp/>to<sp/>the<sp/>last<sp/>10<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>10<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>20)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>n<sp/>-<sp/>1<sp/>-<sp/>(i-10);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>the<sp/>third<sp/>10,<sp/>seek<sp/>past<sp/>the<sp/>end<sp/>and<sp/>make<sp/>sure<sp/>we<sp/>fail<sp/>properly<sp/>as<sp/>expected<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>30)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>n<sp/>+<sp/>(i-20);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>(<ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref>)(local_rand_()<sp/>%<sp/>n);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;#%u:seek(%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ac582131d7a7c8ee57e73180d1714f9d5" kindref="member">PRIu64</ref><sp/></highlight><highlight class="stringliteral">&quot;)...<sp/>&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>pos);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group__flac__stream__decoder_1ga5c1c70de72e6ed49db6d61a9131d9117" kindref="member">FLAC__stream_decoder_seek_absolute</ref>(decoder,<sp/>pos))<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos<sp/>&gt;=<sp/>(<ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref>)n)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;seek<sp/>past<sp/>end<sp/>failed<sp/>as<sp/>expected...<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(decoder_client_data.<ref refid="struct_decoder_client_data_1a2668fbf4f29f34cf1ca74abfe0454b37" kindref="member">total_samples</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>total_samples<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;seek<sp/>failed,<sp/>assuming<sp/>it<sp/>was<sp/>past<sp/>EOF...<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>die_s_(</highlight><highlight class="stringliteral">&quot;FLAC__stream_decoder_seek_absolute()<sp/>FAILED&quot;</highlight><highlight class="normal">,<sp/>decoder);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group__flac__stream__decoder_1ga0109ce87f2c648b224b68c08b3c090cb" kindref="member">FLAC__stream_decoder_flush</ref>(decoder))</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>die_s_(</highlight><highlight class="stringliteral">&quot;FLAC__stream_decoder_flush()<sp/>FAILED&quot;</highlight><highlight class="normal">,<sp/>decoder);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(read_mode<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;decode_frame...<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group__flac__stream__decoder_1ga8c4708eb2c5d99595f64dc2473aa2f42" kindref="member">FLAC__stream_decoder_process_single</ref>(decoder))</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>die_s_(</highlight><highlight class="stringliteral">&quot;FLAC__stream_decoder_process_single()<sp/>FAILED&quot;</highlight><highlight class="normal">,<sp/>decoder);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;decode_frame...<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group__flac__stream__decoder_1ga8c4708eb2c5d99595f64dc2473aa2f42" kindref="member">FLAC__stream_decoder_process_single</ref>(decoder))</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>die_s_(</highlight><highlight class="stringliteral">&quot;FLAC__stream_decoder_process_single()<sp/>FAILED&quot;</highlight><highlight class="normal">,<sp/>decoder);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(read_mode<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;decode_all...<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder_client_data.<ref refid="struct_decoder_client_data_1af0032c4e37c763ec147dd06a648dd15e" kindref="member">quiet</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group__flac__stream__decoder_1ga4544352442870ea9f16f388a97d81dff" kindref="member">FLAC__stream_decoder_process_until_end_of_stream</ref>(decoder))</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>die_s_(</highlight><highlight class="stringliteral">&quot;FLAC__stream_decoder_process_until_end_of_stream()<sp/>FAILED&quot;</highlight><highlight class="normal">,<sp/>decoder);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoder_client_data.<ref refid="struct_decoder_client_data_1af0032c4e37c763ec147dd06a648dd15e" kindref="member">quiet</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;OK\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>stop_signal_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__flac__stream__decoder_1ga5899c204ad7183ec04e41855090c0635" kindref="member">FLAC__stream_decoder_get_state</ref>(decoder)<sp/>!=<sp/><ref refid="group__flac__stream__decoder_1gga3adb6891c5871a87cd5bbae6c770ba2da565eaf4d5e68b440ecec771cb22d3427" kindref="member">FLAC__STREAM_DECODER_UNINITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group__flac__stream__decoder_1gaa51bb38f762ee11b320a0839f165c5ce" kindref="member">FLAC__stream_decoder_finish</ref>(decoder))</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>die_s_(</highlight><highlight class="stringliteral">&quot;FLAC__stream_decoder_finish()<sp/>FAILED&quot;</highlight><highlight class="normal">,<sp/>decoder);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1gab958ee28b829be37e541946676ad9677" kindref="member">FLAC__stream_decoder_delete</ref>(decoder);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\nPASSED!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="src_2test__seeking_2main_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="examples_2c_2decode_2file_2main_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[])</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*flacfilename,<sp/>*rawfilename<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>0,<sp/>read_mode;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a12b57f75f760b9062a13bcda1bdb3f3e" kindref="member">FLAC__int64</ref><sp/><ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a125fb0105eee035da35c6a4999d140eb" kindref="member">FLAC__off_t</ref><sp/>flacfilesize;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>*pcm[2]<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="vamp-simple-host_8cpp_1a7cac13da282785878351e0a820104851" kindref="member">usage</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;usage:<sp/>test_seeking<sp/>file.flac<sp/>[#seeks]<sp/>[#samples-in-file.flac]<sp/>[file.raw]\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>2<sp/>||<sp/>argc<sp/>&gt;<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputs(usage,<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>flacfilename<sp/>=<sp/>argv[1];</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>strtoul(argv[2],<sp/>0,<sp/>10);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>3)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples<sp/>=<sp/>strtoull(argv[3],<sp/>0,<sp/>10);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>4)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawfilename<sp/>=<sp/>argv[4];</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&lt;<sp/>30)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>random<sp/>seeks<sp/>don&apos;t<sp/>kick<sp/>in<sp/>until<sp/>after<sp/>30<sp/>preprogrammed<sp/>ones\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>_MSC_VER<sp/>&amp;&amp;<sp/>!defined<sp/>__MINGW32__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gettimeofday(&amp;tv,<sp/>0)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>couldn&apos;t<sp/>seed<sp/>RNG<sp/>with<sp/>time\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv.tv_usec<sp/>=<sp/>4321;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srandom(tv.tv_usec);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>srand((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>(0));</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>flacfilesize<sp/>=<sp/>get_filesize_(flacfilename);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flacfilesize<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>can&apos;t<sp/>determine<sp/>filesize<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>flacfilename);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rawfilename<sp/>&amp;&amp;<sp/>!read_pcm_(pcm,<sp/>rawfilename,<sp/>flacfilename))<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(pcm[0]);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(pcm[1]);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>signal(SIGINT,<sp/>our_sigint_handler_);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(read_mode<sp/>=<sp/>0;<sp/>ok<sp/>&amp;&amp;<sp/>read_mode<sp/>&lt;=<sp/>2;<sp/>read_mode++)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>need<sp/>to<sp/>do<sp/>&quot;decode<sp/>all&quot;<sp/>read_mode<sp/>if<sp/>PCM<sp/>checking<sp/>is<sp/>available<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rawfilename<sp/>&amp;&amp;<sp/>read_mode<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(flacfilename)<sp/>&gt;<sp/>4<sp/>&amp;&amp;<sp/>(0<sp/>==<sp/>strcmp(flacfilename+strlen(flacfilename)-4,<sp/></highlight><highlight class="stringliteral">&quot;.oga&quot;</highlight><highlight class="normal">)<sp/>||<sp/>0<sp/>==<sp/>strcmp(flacfilename+strlen(flacfilename)-4,<sp/></highlight><highlight class="stringliteral">&quot;.ogg&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FLAC__HAS_OGG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>seek_barrage(</highlight><highlight class="comment">/*is_ogg=*/</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>flacfilename,<sp/>flacfilesize,<sp/>count,<sp/>samples,<sp/>read_mode,<sp/>rawfilename?<sp/>pcm<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Ogg<sp/>FLAC<sp/>not<sp/>supported\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>seek_barrage(</highlight><highlight class="comment">/*is_ogg=*/</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>flacfilename,<sp/>flacfilesize,<sp/>count,<sp/>samples,<sp/>read_mode,<sp/>rawfilename?<sp/>pcm<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>free(pcm[0]);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>free(pcm[1]);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok?<sp/>0<sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/test_seeking/main.c"/>
  </compounddef>
</doxygen>
