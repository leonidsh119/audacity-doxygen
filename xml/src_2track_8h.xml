<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="src_2track_8h" kind="file" language="C++">
    <compoundname>Track.h</compoundname>
    <includes refid="_audacity_8h" local="yes">Audacity.h</includes>
    <includes refid="_memory_x_8h" local="yes">MemoryX.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">wx/dynarray.h</includes>
    <includes local="no">wx/event.h</includes>
    <includes local="no">wx/gdicmn.h</includes>
    <includes local="no">wx/longlong.h</includes>
    <includes local="no">wx/string.h</includes>
    <includes refid="_experimental_8h" local="yes">Experimental.h</includes>
    <includes refid="_sample_format_8h" local="yes">SampleFormat.h</includes>
    <includes refid="_x_m_l_tag_handler_8h" local="yes">xml/XMLTagHandler.h</includes>
    <includedby refid="_wave_track_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h</includedby>
    <includedby refid="_label_track_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/LabelTrack.h</includedby>
    <includedby refid="_note_track_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h</includedby>
    <includedby refid="_time_track_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/TimeTrack.h</includedby>
    <includedby refid="_audacity_headers_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</includedby>
    <includedby refid="_batch_commands_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/BatchCommands.cpp</includedby>
    <includedby refid="_batch_process_dialog_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/BatchProcessDialog.cpp</includedby>
    <includedby refid="_track_panel_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/TrackPanel.h</includedby>
    <includedby refid="_get_project_info_command_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/commands/GetProjectInfoCommand.cpp</includedby>
    <includedby refid="_import_export_commands_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/commands/ImportExportCommands.cpp</includedby>
    <includedby refid="_screenshot_command_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/commands/ScreenshotCommand.cpp</includedby>
    <includedby refid="_select_command_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/commands/SelectCommand.cpp</includedby>
    <includedby refid="_set_project_info_command_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/commands/SetProjectInfoCommand.cpp</includedby>
    <includedby refid="_set_track_info_command_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/commands/SetTrackInfoCommand.cpp</includedby>
    <includedby refid="_dir_manager_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/DirManager.cpp</includedby>
    <includedby refid="_export_c_l_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/export/ExportCL.cpp</includedby>
    <includedby refid="_export_f_fmpeg_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/export/ExportFFmpeg.cpp</includedby>
    <includedby refid="_export_m_p3_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/export/ExportMP3.cpp</includedby>
    <includedby refid="_export_p_c_m_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/export/ExportPCM.cpp</includedby>
    <includedby refid="_history_window_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/HistoryWindow.cpp</includedby>
    <includedby refid="_screenshot_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Screenshot.cpp</includedby>
    <includedby refid="_edit_tool_bar_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/toolbars/EditToolBar.cpp</includedby>
    <includedby refid="src_2track_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Track.cpp</includedby>
    <includedby refid="_track_panel_ax_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/TrackPanelAx.cpp</includedby>
    <includedby refid="_x_m_l_tag_handler_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/xml/XMLTagHandler.cpp</includedby>
    <incdepgraph>
      <node id="31943">
        <label>wx/ffile.h</label>
      </node>
      <node id="31931">
        <label>wx/event.h</label>
      </node>
      <node id="31940">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="31926" relation="include">
        </childnode>
        <childnode refid="31934" relation="include">
        </childnode>
        <childnode refid="31941" relation="include">
        </childnode>
        <childnode refid="31942" relation="include">
        </childnode>
      </node>
      <node id="31935">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="31936" relation="include">
        </childnode>
      </node>
      <node id="31932">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="31936">
        <label>wx/defs.h</label>
      </node>
      <node id="31938">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="31934" relation="include">
        </childnode>
        <childnode refid="31939" relation="include">
        </childnode>
      </node>
      <node id="31926">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="31929">
        <label>vector</label>
      </node>
      <node id="31930">
        <label>wx/dynarray.h</label>
      </node>
      <node id="31934">
        <label>wx/string.h</label>
      </node>
      <node id="31939">
        <label>wx/arrstr.h</label>
      </node>
      <node id="31925">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Track.h</label>
        <link refid="src/track.h"/>
        <childnode refid="31926" relation="include">
        </childnode>
        <childnode refid="31927" relation="include">
        </childnode>
        <childnode refid="31929" relation="include">
        </childnode>
        <childnode refid="31930" relation="include">
        </childnode>
        <childnode refid="31931" relation="include">
        </childnode>
        <childnode refid="31932" relation="include">
        </childnode>
        <childnode refid="31933" relation="include">
        </childnode>
        <childnode refid="31934" relation="include">
        </childnode>
        <childnode refid="31935" relation="include">
        </childnode>
        <childnode refid="31937" relation="include">
        </childnode>
        <childnode refid="31940" relation="include">
        </childnode>
      </node>
      <node id="31927">
        <label>MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="31928" relation="include">
        </childnode>
      </node>
      <node id="31933">
        <label>wx/longlong.h</label>
      </node>
      <node id="31941">
        <label>stdio.h</label>
      </node>
      <node id="31937">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="31926" relation="include">
        </childnode>
        <childnode refid="31936" relation="include">
        </childnode>
        <childnode refid="31938" relation="include">
        </childnode>
      </node>
      <node id="31928">
        <label>memory</label>
      </node>
      <node id="31942">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="31939" relation="include">
        </childnode>
        <childnode refid="31930" relation="include">
        </childnode>
        <childnode refid="31943" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="31963">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp</label>
        <link refid="_equalization_8cpp"/>
      </node>
      <node id="31961">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Contrast.cpp</label>
        <link refid="_contrast_8cpp"/>
      </node>
      <node id="32023">
        <label>C:/_dev/OpenU/Audacity/audacity/src/commands/ScreenshotCommand.cpp</label>
        <link refid="_screenshot_command_8cpp"/>
      </node>
      <node id="31991">
        <label>C:/_dev/OpenU/Audacity/audacity/src/prefs/SpectrumPrefs.cpp</label>
        <link refid="_spectrum_prefs_8cpp"/>
      </node>
      <node id="31960">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp</label>
        <link refid="_compressor_8cpp"/>
      </node>
      <node id="32038">
        <label>C:/_dev/OpenU/Audacity/audacity/src/HistoryWindow.cpp</label>
        <link refid="_history_window_8cpp"/>
      </node>
      <node id="31987">
        <label>C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp</label>
        <link refid="_mixer_board_8cpp"/>
      </node>
      <node id="32011">
        <label>C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h</label>
        <link refid="_note_track_8h"/>
        <childnode refid="31947" relation="include">
        </childnode>
        <childnode refid="31982" relation="include">
        </childnode>
        <childnode refid="32012" relation="include">
        </childnode>
        <childnode refid="31995" relation="include">
        </childnode>
        <childnode refid="31999" relation="include">
        </childnode>
        <childnode refid="32001" relation="include">
        </childnode>
        <childnode refid="32002" relation="include">
        </childnode>
      </node>
      <node id="31951">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Benchmark.cpp</label>
        <link refid="_benchmark_8cpp"/>
      </node>
      <node id="32028">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackPanelAx.cpp</label>
        <link refid="_track_panel_ax_8cpp"/>
      </node>
      <node id="32036">
        <label>C:/_dev/OpenU/Audacity/audacity/src/export/ExportMP3.cpp</label>
        <link refid="_export_m_p3_8cpp"/>
      </node>
      <node id="32006">
        <label>C:/_dev/OpenU/Audacity/audacity/src/LabelTrack.h</label>
        <link refid="_label_track_8h"/>
        <childnode refid="32007" relation="include">
        </childnode>
        <childnode refid="31947" relation="include">
        </childnode>
        <childnode refid="31958" relation="include">
        </childnode>
        <childnode refid="31962" relation="include">
        </childnode>
        <childnode refid="31964" relation="include">
        </childnode>
        <childnode refid="31968" relation="include">
        </childnode>
        <childnode refid="31971" relation="include">
        </childnode>
        <childnode refid="31972" relation="include">
        </childnode>
        <childnode refid="31980" relation="include">
        </childnode>
        <childnode refid="32008" relation="include">
        </childnode>
        <childnode refid="32009" relation="include">
        </childnode>
        <childnode refid="32010" relation="include">
        </childnode>
        <childnode refid="31985" relation="include">
        </childnode>
        <childnode refid="31995" relation="include">
        </childnode>
        <childnode refid="31996" relation="include">
        </childnode>
        <childnode refid="32000" relation="include">
        </childnode>
        <childnode refid="32001" relation="include">
        </childnode>
      </node>
      <node id="32032">
        <label>C:/_dev/OpenU/Audacity/audacity/src/commands/SetTrackInfoCommand.cpp</label>
        <link refid="_set_track_info_command_8cpp"/>
      </node>
      <node id="31989">
        <label>C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODDecodeTask.cpp</label>
        <link refid="_o_d_decode_task_8cpp"/>
      </node>
      <node id="31977">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp</label>
        <link refid="_trunc_silence_8cpp"/>
      </node>
      <node id="32035">
        <label>C:/_dev/OpenU/Audacity/audacity/src/export/ExportFFmpeg.cpp</label>
        <link refid="_export_f_fmpeg_8cpp"/>
      </node>
      <node id="32037">
        <label>C:/_dev/OpenU/Audacity/audacity/src/export/ExportPCM.cpp</label>
        <link refid="_export_p_c_m_8cpp"/>
      </node>
      <node id="32004">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveClip.cpp</label>
        <link refid="_wave_clip_8cpp"/>
      </node>
      <node id="31953">
        <label>C:/_dev/OpenU/Audacity/audacity/src/commands/GetTrackInfoCommand.cpp</label>
        <link refid="_get_track_info_command_8cpp"/>
      </node>
      <node id="31950">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AutoRecovery.cpp</label>
        <link refid="_auto_recovery_8cpp"/>
      </node>
      <node id="32018">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackPanel.h</label>
        <link refid="_track_panel_8h"/>
        <childnode refid="32019" relation="include">
        </childnode>
        <childnode refid="32022" relation="include">
        </childnode>
        <childnode refid="31953" relation="include">
        </childnode>
        <childnode refid="32023" relation="include">
        </childnode>
        <childnode refid="32009" relation="include">
        </childnode>
        <childnode refid="32024" relation="include">
        </childnode>
        <childnode refid="31985" relation="include">
        </childnode>
        <childnode refid="31987" relation="include">
        </childnode>
        <childnode refid="31991" relation="include">
        </childnode>
        <childnode refid="31993" relation="include">
        </childnode>
        <childnode refid="31995" relation="include">
        </childnode>
        <childnode refid="31996" relation="include">
        </childnode>
        <childnode refid="32025" relation="include">
        </childnode>
        <childnode refid="32026" relation="include">
        </childnode>
        <childnode refid="32001" relation="include">
        </childnode>
        <childnode refid="32027" relation="include">
        </childnode>
        <childnode refid="32015" relation="include">
        </childnode>
      </node>
      <node id="31983">
        <label>C:/_dev/OpenU/Audacity/audacity/src/import/ImportPCM.cpp</label>
        <link refid="_import_p_c_m_8cpp"/>
      </node>
      <node id="31957">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/BassTreble.cpp</label>
        <link refid="_bass_treble_8cpp"/>
      </node>
      <node id="31954">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Dependencies.cpp</label>
        <link refid="_dependencies_8cpp"/>
      </node>
      <node id="32025">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/DeviceToolBar.cpp</label>
        <link refid="_device_tool_bar_8cpp"/>
      </node>
      <node id="32016">
        <label>C:/_dev/OpenU/Audacity/audacity/src/BatchCommands.cpp</label>
        <link refid="_batch_commands_8cpp"/>
      </node>
      <node id="31952">
        <label>C:/_dev/OpenU/Audacity/audacity/src/commands/CompareAudioCommand.cpp</label>
        <link refid="_compare_audio_command_8cpp"/>
      </node>
      <node id="32030">
        <label>C:/_dev/OpenU/Audacity/audacity/src/commands/SelectCommand.cpp</label>
        <link refid="_select_command_8cpp"/>
      </node>
      <node id="32026">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/ToolsToolBar.cpp</label>
        <link refid="_tools_tool_bar_8cpp"/>
      </node>
      <node id="31975">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/SimpleMono.cpp</label>
        <link refid="_simple_mono_8cpp"/>
      </node>
      <node id="32007">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/mod-nyq-bench/NyqBench.cpp</label>
        <link refid="_nyq_bench_8cpp"/>
      </node>
      <node id="32041">
        <label>C:/_dev/OpenU/Audacity/audacity/src/xml/XMLTagHandler.cpp</label>
        <link refid="_x_m_l_tag_handler_8cpp"/>
      </node>
      <node id="31984">
        <label>C:/_dev/OpenU/Audacity/audacity/src/import/ImportRaw.cpp</label>
        <link refid="_import_raw_8cpp"/>
      </node>
      <node id="31967">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Normalize.cpp</label>
        <link refid="_normalize_8cpp"/>
      </node>
      <node id="32010">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Lyrics.cpp</label>
        <link refid="_lyrics_8cpp"/>
      </node>
      <node id="31966">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp</label>
        <link refid="_noise_reduction_8cpp"/>
      </node>
      <node id="31998">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/TranscriptionToolBar.cpp</label>
        <link refid="_transcription_tool_bar_8cpp"/>
      </node>
      <node id="32017">
        <label>C:/_dev/OpenU/Audacity/audacity/src/BatchProcessDialog.cpp</label>
        <link refid="_batch_process_dialog_8cpp"/>
      </node>
      <node id="32027">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackPanelAx.h</label>
        <link refid="_track_panel_ax_8h"/>
        <childnode refid="32001" relation="include">
        </childnode>
        <childnode refid="32028" relation="include">
        </childnode>
      </node>
      <node id="32034">
        <label>C:/_dev/OpenU/Audacity/audacity/src/export/ExportCL.cpp</label>
        <link refid="_export_c_l_8cpp"/>
      </node>
      <node id="32015">
        <label>C:/_dev/OpenU/Audacity/audacity/src/widgets/Ruler.cpp</label>
        <link refid="_ruler_8cpp"/>
      </node>
      <node id="31992">
        <label>C:/_dev/OpenU/Audacity/audacity/src/prefs/TracksPrefs.cpp</label>
        <link refid="_tracks_prefs_8cpp"/>
      </node>
      <node id="32014">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TimeTrack.cpp</label>
        <link refid="_time_track_8cpp"/>
      </node>
      <node id="32003">
        <label>C:/_dev/OpenU/Audacity/audacity/src/VoiceKey.cpp</label>
        <link refid="_voice_key_8cpp"/>
      </node>
      <node id="31996">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Snap.cpp</label>
        <link refid="_snap_8cpp"/>
      </node>
      <node id="31965">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Generator.cpp</label>
        <link refid="src_2effects_2_generator_8cpp"/>
      </node>
      <node id="32012">
        <label>C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.cpp</label>
        <link refid="_note_track_8cpp"/>
      </node>
      <node id="32019">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/mod-track-panel/TrackPanel2.h</label>
        <link refid="_track_panel2_8h"/>
        <childnode refid="32020" relation="include">
        </childnode>
        <childnode refid="32021" relation="include">
        </childnode>
      </node>
      <node id="31969">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Paulstretch.cpp</label>
        <link refid="_paulstretch_8cpp"/>
      </node>
      <node id="32022">
        <label>C:/_dev/OpenU/Audacity/audacity/src/commands/GetProjectInfoCommand.cpp</label>
        <link refid="_get_project_info_command_8cpp"/>
      </node>
      <node id="31979">
        <label>C:/_dev/OpenU/Audacity/audacity/src/export/Export.cpp</label>
        <link refid="_export_8cpp"/>
      </node>
      <node id="31997">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/ControlToolBar.cpp</label>
        <link refid="_control_tool_bar_8cpp"/>
      </node>
      <node id="32039">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Screenshot.cpp</label>
        <link refid="_screenshot_8cpp"/>
      </node>
      <node id="32009">
        <label>C:/_dev/OpenU/Audacity/audacity/src/LabelTrack.cpp</label>
        <link refid="_label_track_8cpp"/>
      </node>
      <node id="32024">
        <label>C:/_dev/OpenU/Audacity/audacity/src/LyricsWindow.cpp</label>
        <link refid="_lyrics_window_8cpp"/>
      </node>
      <node id="32008">
        <label>C:/_dev/OpenU/Audacity/audacity/src/LabelDialog.cpp</label>
        <link refid="_label_dialog_8cpp"/>
      </node>
      <node id="31972">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Reverse.cpp</label>
        <link refid="_reverse_8cpp"/>
      </node>
      <node id="31962">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Effect.cpp</label>
        <link refid="src_2effects_2_effect_8cpp"/>
      </node>
      <node id="31956">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp</label>
        <link refid="_auto_duck_8cpp"/>
      </node>
      <node id="31981">
        <label>C:/_dev/OpenU/Audacity/audacity/src/FreqWindow.cpp</label>
        <link refid="_freq_window_8cpp"/>
      </node>
      <node id="32020">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/mod-track-panel/ModTrackPanelCallback.cpp</label>
        <link refid="_mod_track_panel_callback_8cpp"/>
      </node>
      <node id="31947">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</label>
        <link refid="_audacity_headers_8h"/>
        <childnode refid="31948" relation="include">
        </childnode>
      </node>
      <node id="31993">
        <label>C:/_dev/OpenU/Audacity/audacity/src/prefs/WaveformPrefs.cpp</label>
        <link refid="_waveform_prefs_8cpp"/>
      </node>
      <node id="31988">
        <label>C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODComputeSummaryTask.cpp</label>
        <link refid="_o_d_compute_summary_task_8cpp"/>
      </node>
      <node id="32033">
        <label>C:/_dev/OpenU/Audacity/audacity/src/DirManager.cpp</label>
        <link refid="_dir_manager_8cpp"/>
      </node>
      <node id="31985">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Menus.cpp</label>
        <link refid="_menus_8cpp"/>
      </node>
      <node id="31971">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Repeat.cpp</label>
        <link refid="_repeat_8cpp"/>
      </node>
      <node id="31999">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Track.cpp</label>
        <link refid="src_2track_8cpp"/>
      </node>
      <node id="32021">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/mod-track-panel/TrackPanel2.cpp</label>
        <link refid="_track_panel2_8cpp"/>
      </node>
      <node id="32005">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp</label>
        <link refid="_wave_track_8cpp"/>
      </node>
      <node id="31995">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Project.cpp</label>
        <link refid="_project_8cpp"/>
      </node>
      <node id="31994">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Printing.cpp</label>
        <link refid="_printing_8cpp"/>
      </node>
      <node id="31982">
        <label>C:/_dev/OpenU/Audacity/audacity/src/import/ImportLOF.cpp</label>
        <link refid="_import_l_o_f_8cpp"/>
      </node>
      <node id="32031">
        <label>C:/_dev/OpenU/Audacity/audacity/src/commands/SetProjectInfoCommand.cpp</label>
        <link refid="_set_project_info_command_8cpp"/>
      </node>
      <node id="32001">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackPanel.cpp</label>
        <link refid="_track_panel_8cpp"/>
      </node>
      <node id="32000">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp</label>
        <link refid="_track_artist_8cpp"/>
      </node>
      <node id="31968">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp</label>
        <link refid="_nyquist_8cpp"/>
      </node>
      <node id="31980">
        <label>C:/_dev/OpenU/Audacity/audacity/src/export/ExportMultiple.cpp</label>
        <link refid="_export_multiple_8cpp"/>
      </node>
      <node id="31986">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Mix.cpp</label>
        <link refid="_mix_8cpp"/>
      </node>
      <node id="32029">
        <label>C:/_dev/OpenU/Audacity/audacity/src/commands/ImportExportCommands.cpp</label>
        <link refid="_import_export_commands_8cpp"/>
      </node>
      <node id="32013">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TimeTrack.h</label>
        <link refid="_time_track_8h"/>
        <childnode refid="31947" relation="include">
        </childnode>
        <childnode refid="31949" relation="include">
        </childnode>
        <childnode refid="31985" relation="include">
        </childnode>
        <childnode refid="31986" relation="include">
        </childnode>
        <childnode refid="31995" relation="include">
        </childnode>
        <childnode refid="32014" relation="include">
        </childnode>
        <childnode refid="31998" relation="include">
        </childnode>
        <childnode refid="32000" relation="include">
        </childnode>
        <childnode refid="32001" relation="include">
        </childnode>
        <childnode refid="32015" relation="include">
        </childnode>
      </node>
      <node id="31978">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/TwoPassSimpleMono.cpp</label>
        <link refid="_two_pass_simple_mono_8cpp"/>
      </node>
      <node id="31944">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Track.h</label>
        <link refid="src/track.h"/>
        <childnode refid="31945" relation="include">
        </childnode>
        <childnode refid="32006" relation="include">
        </childnode>
        <childnode refid="32011" relation="include">
        </childnode>
        <childnode refid="32013" relation="include">
        </childnode>
        <childnode refid="31947" relation="include">
        </childnode>
        <childnode refid="32016" relation="include">
        </childnode>
        <childnode refid="32017" relation="include">
        </childnode>
        <childnode refid="32018" relation="include">
        </childnode>
        <childnode refid="32022" relation="include">
        </childnode>
        <childnode refid="32029" relation="include">
        </childnode>
        <childnode refid="32023" relation="include">
        </childnode>
        <childnode refid="32030" relation="include">
        </childnode>
        <childnode refid="32031" relation="include">
        </childnode>
        <childnode refid="32032" relation="include">
        </childnode>
        <childnode refid="32033" relation="include">
        </childnode>
        <childnode refid="32034" relation="include">
        </childnode>
        <childnode refid="32035" relation="include">
        </childnode>
        <childnode refid="32036" relation="include">
        </childnode>
        <childnode refid="32037" relation="include">
        </childnode>
        <childnode refid="32038" relation="include">
        </childnode>
        <childnode refid="32039" relation="include">
        </childnode>
        <childnode refid="32040" relation="include">
        </childnode>
        <childnode refid="31999" relation="include">
        </childnode>
        <childnode refid="32028" relation="include">
        </childnode>
        <childnode refid="32041" relation="include">
        </childnode>
      </node>
      <node id="31955">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Amplify.cpp</label>
        <link refid="_amplify_8cpp"/>
      </node>
      <node id="31970">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Repair.cpp</label>
        <link refid="_repair_8cpp"/>
      </node>
      <node id="31958">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/ChangeSpeed.cpp</label>
        <link refid="_change_speed_8cpp"/>
      </node>
      <node id="31990">
        <label>C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODTask.cpp</label>
        <link refid="_o_d_task_8cpp"/>
      </node>
      <node id="31973">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/ScienFilter.cpp</label>
        <link refid="_scien_filter_8cpp"/>
      </node>
      <node id="31945">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="31946" relation="include">
        </childnode>
        <childnode refid="31947" relation="include">
        </childnode>
        <childnode refid="31949" relation="include">
        </childnode>
        <childnode refid="31950" relation="include">
        </childnode>
        <childnode refid="31951" relation="include">
        </childnode>
        <childnode refid="31952" relation="include">
        </childnode>
        <childnode refid="31953" relation="include">
        </childnode>
        <childnode refid="31954" relation="include">
        </childnode>
        <childnode refid="31955" relation="include">
        </childnode>
        <childnode refid="31956" relation="include">
        </childnode>
        <childnode refid="31957" relation="include">
        </childnode>
        <childnode refid="31958" relation="include">
        </childnode>
        <childnode refid="31959" relation="include">
        </childnode>
        <childnode refid="31960" relation="include">
        </childnode>
        <childnode refid="31961" relation="include">
        </childnode>
        <childnode refid="31962" relation="include">
        </childnode>
        <childnode refid="31963" relation="include">
        </childnode>
        <childnode refid="31964" relation="include">
        </childnode>
        <childnode refid="31965" relation="include">
        </childnode>
        <childnode refid="31966" relation="include">
        </childnode>
        <childnode refid="31967" relation="include">
        </childnode>
        <childnode refid="31968" relation="include">
        </childnode>
        <childnode refid="31969" relation="include">
        </childnode>
        <childnode refid="31970" relation="include">
        </childnode>
        <childnode refid="31971" relation="include">
        </childnode>
        <childnode refid="31972" relation="include">
        </childnode>
        <childnode refid="31973" relation="include">
        </childnode>
        <childnode refid="31974" relation="include">
        </childnode>
        <childnode refid="31975" relation="include">
        </childnode>
        <childnode refid="31976" relation="include">
        </childnode>
        <childnode refid="31977" relation="include">
        </childnode>
        <childnode refid="31978" relation="include">
        </childnode>
        <childnode refid="31979" relation="include">
        </childnode>
        <childnode refid="31980" relation="include">
        </childnode>
        <childnode refid="31981" relation="include">
        </childnode>
        <childnode refid="31982" relation="include">
        </childnode>
        <childnode refid="31983" relation="include">
        </childnode>
        <childnode refid="31984" relation="include">
        </childnode>
        <childnode refid="31985" relation="include">
        </childnode>
        <childnode refid="31986" relation="include">
        </childnode>
        <childnode refid="31987" relation="include">
        </childnode>
        <childnode refid="31988" relation="include">
        </childnode>
        <childnode refid="31989" relation="include">
        </childnode>
        <childnode refid="31990" relation="include">
        </childnode>
        <childnode refid="31991" relation="include">
        </childnode>
        <childnode refid="31992" relation="include">
        </childnode>
        <childnode refid="31993" relation="include">
        </childnode>
        <childnode refid="31994" relation="include">
        </childnode>
        <childnode refid="31995" relation="include">
        </childnode>
        <childnode refid="31996" relation="include">
        </childnode>
        <childnode refid="31997" relation="include">
        </childnode>
        <childnode refid="31998" relation="include">
        </childnode>
        <childnode refid="31999" relation="include">
        </childnode>
        <childnode refid="32000" relation="include">
        </childnode>
        <childnode refid="32001" relation="include">
        </childnode>
        <childnode refid="32002" relation="include">
        </childnode>
        <childnode refid="32003" relation="include">
        </childnode>
        <childnode refid="32004" relation="include">
        </childnode>
        <childnode refid="32005" relation="include">
        </childnode>
      </node>
      <node id="31976">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/StereoToMono.cpp</label>
        <link refid="_stereo_to_mono_8cpp"/>
      </node>
      <node id="31949">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudioIO.cpp</label>
        <link refid="_audio_i_o_8cpp"/>
      </node>
      <node id="31946">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityApp.cpp</label>
        <link refid="_audacity_app_8cpp"/>
      </node>
      <node id="32002">
        <label>C:/_dev/OpenU/Audacity/audacity/src/UndoManager.cpp</label>
        <link refid="_undo_manager_8cpp"/>
      </node>
      <node id="31974">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Silence.cpp</label>
        <link refid="_silence_8cpp"/>
      </node>
      <node id="32040">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/EditToolBar.cpp</label>
        <link refid="_edit_tool_bar_8cpp"/>
      </node>
      <node id="31959">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/ClickRemoval.cpp</label>
        <link refid="_click_removal_8cpp"/>
      </node>
      <node id="31948">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.cpp</label>
        <link refid="_audacity_headers_8cpp"/>
      </node>
      <node id="31964">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/FindClipping.cpp</label>
        <link refid="_find_clipping_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_wave_track_array" prot="public">WaveTrackArray</innerclass>
    <innerclass refid="class_wave_track_const_array" prot="public">WaveTrackConstArray</innerclass>
    <innerclass refid="class_track" prot="public">Track</innerclass>
    <innerclass refid="struct_track_list_node" prot="public">TrackListNode</innerclass>
    <innerclass refid="class_track_list_iterator" prot="public">TrackListIterator</innerclass>
    <innerclass refid="class_track_list_const_iterator" prot="public">TrackListConstIterator</innerclass>
    <innerclass refid="class_track_list_cond_iterator" prot="public">TrackListCondIterator</innerclass>
    <innerclass refid="class_track_list_of_kind_iterator" prot="public">TrackListOfKindIterator</innerclass>
    <innerclass refid="class_selected_track_list_of_kind_iterator" prot="public">SelectedTrackListOfKindIterator</innerclass>
    <innerclass refid="class_visible_track_iterator" prot="public">VisibleTrackIterator</innerclass>
    <innerclass refid="class_sync_locked_tracks_iterator" prot="public">SyncLockedTracksIterator</innerclass>
    <innerclass refid="class_track_list" prot="public">TrackList</innerclass>
    <innerclass refid="class_track_factory" prot="public">TrackFactory</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="src_2track_8h_1a8a0672de57249ff937e3b4883ae11364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WX_DEFINE_USER_EXPORTED_ARRAY</definition>
        <argsstring>(Track *, TrackArray, class AUDACITY_DLL_API)</argsstring>
        <name>WX_DEFINE_USER_EXPORTED_ARRAY</name>
        <param>
          <type><ref refid="class_track" kindref="compound">Track</ref> *</type>
        </param>
        <param>
          <type>TrackArray</type>
        </param>
        <param>
          <type>class AUDACITY_DLL_API</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Track.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="src_2track_8h_1ac2f3c0f7894980fd3f7b604527f0243f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_EXPORTED_EVENT_TYPE</definition>
        <argsstring>(AUDACITY_DLL_API, EVT_TRACKLIST_RESIZED,-1)</argsstring>
        <name>DECLARE_EXPORTED_EVENT_TYPE</name>
        <param>
          <type>AUDACITY_DLL_API</type>
        </param>
        <param>
          <type>EVT_TRACKLIST_RESIZED</type>
        </param>
        <param>
          <type>-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
<para><ref refid="class_track_list" kindref="compound">TrackList</ref> is a flat linked list of tracks supporting Add, Remove, Clear, and Contains, plus serialization of the list of tracks. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Track.h" line="386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="src_2track_8h_1ae066c6da138eca302ef715826cdfb1ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_EXPORTED_EVENT_TYPE</definition>
        <argsstring>(AUDACITY_DLL_API, EVT_TRACKLIST_UPDATED,-1)</argsstring>
        <name>DECLARE_EXPORTED_EVENT_TYPE</name>
        <param>
          <type>AUDACITY_DLL_API</type>
        </param>
        <param>
          <type>EVT_TRACKLIST_UPDATED</type>
        </param>
        <param>
          <type>-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Track.h" line="391" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Track.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AUDACITY_TRACK__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AUDACITY_TRACK__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_8h" kindref="compound">Audacity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_memory_x_8h" kindref="compound">MemoryX.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dynarray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/event.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/gdicmn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/longlong.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_experimental_8h" kindref="compound">Experimental.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sample_format_8h" kindref="compound">SampleFormat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_x_m_l_tag_handler_8h" kindref="compound">xml/XMLTagHandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WXMSW__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4284)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">wxTextFile;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_dir_manager" kindref="compound">DirManager</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_label_track" kindref="compound">LabelTrack</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_time_track" kindref="compound">TimeTrack</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="src_2track_8h_1a8a0672de57249ff937e3b4883ae11364" kindref="member">WX_DEFINE_USER_EXPORTED_ARRAY</ref>(<ref refid="class_track" kindref="compound">Track</ref>*,<sp/>TrackArray,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>AUDACITY_DLL_API);</highlight></codeline>
<codeline lineno="42" refid="class_wave_track_array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_wave_track_array" kindref="compound">WaveTrackArray</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector<sp/>&lt;<sp/>WaveTrack*<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44" refid="class_wave_track_const_array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_wave_track_const_array" kindref="compound">WaveTrackConstArray</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector<sp/>&lt;<sp/>const<sp/>WaveTrack*<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46" refid="class_wave_track_const_array_1a183eddf2b56886fdacbec0ec97cc8560" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track_const_array_1a183eddf2b56886fdacbec0ec97cc8560" kindref="member">WaveTrackConstArray</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I&apos;d<sp/>like<sp/>to<sp/>use<sp/>an<sp/>inherited<sp/>constructor,<sp/>but<sp/>that&apos;s<sp/>not<sp/>here<sp/>yet<sp/>in<sp/>MSVC<sp/>compiler...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__AUDACITY_OLD_STD__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track_const_array" kindref="compound">WaveTrackConstArray</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(std::initializer_list&lt;value_type&gt;<sp/>tracks)<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reserve(tracks.size());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;track<sp/>:<sp/>tracks)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_back(track);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track_const_array" kindref="compound">WaveTrackConstArray</ref></highlight></codeline>
<codeline lineno="58" refid="class_wave_track_const_array_1a73b10f072deca315fff7a2c36d88ad5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(std::initializer_list&lt;value_type&gt;<sp/>tracks)<sp/>:<sp/>std::vector&lt;value_type&gt;(tracks)<sp/>{}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_MIDI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_note_track" kindref="compound">NoteTrack</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="src_2track_8h_1a8a0672de57249ff937e3b4883ae11364" kindref="member">WX_DEFINE_USER_EXPORTED_ARRAY</ref>(<ref refid="class_note_track" kindref="compound">NoteTrack</ref>*,<sp/>NoteTrackArray,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>AUDACITY_DLL_API);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_track_list" kindref="compound">TrackList</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_track" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>final<sp/>*/</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>To<sp/>be<sp/>TrackDisplay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75" refid="class_track_1aee09798f96d0ead19b1061b858548dc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/><sp/><sp/><sp/><sp/>*<ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref>;</highlight></codeline>
<codeline lineno="76" refid="class_track_1a405067641c56a9f23eef63ad646db8f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>;</highlight></codeline>
<codeline lineno="77" refid="class_track_1ada3ccc3db7f1c8f6249260335b12d1b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1ada3ccc3db7f1c8f6249260335b12d1b4" kindref="member">mIndex</ref>;</highlight></codeline>
<codeline lineno="78" refid="class_track_1a2735771116264155d95db58912964a52" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1a2735771116264155d95db58912964a52" kindref="member">mY</ref>;</highlight></codeline>
<codeline lineno="79" refid="class_track_1ac696598792865dc8f0d6e555ec6e1ee1" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1ac696598792865dc8f0d6e555ec6e1ee1" kindref="member">mHeight</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mYv;<sp/><sp/><sp/></highlight><highlight class="comment">//For<sp/>mono<sp/>a<sp/>virtual<sp/>Y<sp/>value<sp/>is<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mHeightv;<sp/></highlight><highlight class="comment">//<sp/>For<sp/>mono<sp/>a<sp/>virtual<sp/>height<sp/>value<sp/>is<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPerY;<sp/></highlight><highlight class="comment">//mY<sp/>as<sp/>a<sp/>percent<sp/>of<sp/>mYv<sp/>+<sp/>mY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mVirtualStereo;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_track_1a885c04ed00a08ddaa6a3b2d72c55b384" refkind="member"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1a885c04ed00a08ddaa6a3b2d72c55b384" kindref="member">mName</ref>;</highlight></codeline>
<codeline lineno="87" refid="class_track_1a711d329605d3dbda2a57d68294dc7470" refkind="member"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1a711d329605d3dbda2a57d68294dc7470" kindref="member">mDefaultName</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_track_1a673c205a3e39989f31d2e2e9d6addb5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1a673c205a3e39989f31d2e2e9d6addb5a" kindref="member">mSelected</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_track_1aaaa8f25fed1beb509a3ada2ca81608b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1aaaa8f25fed1beb509a3ada2ca81608b0" kindref="member">mLinked</ref>;</highlight></codeline>
<codeline lineno="92" refid="class_track_1ab767c29441016ba672a1f105389190ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1ab767c29441016ba672a1f105389190ff" kindref="member">mMinimized</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95" refid="class_track_1a798c2a7bb95cde4d9873f09aa08645bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>wxSize<sp/><ref refid="class_track_1a798c2a7bb95cde4d9873f09aa08645bd" kindref="member">vrulerSize</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>just<sp/>returns<sp/>a<sp/>constant<sp/>and<sp/>can<sp/>be<sp/>overriden<sp/>by<sp/>subclasses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>specify<sp/>a<sp/>different<sp/>height<sp/>for<sp/>the<sp/>case<sp/>that<sp/>the<sp/>track<sp/>is<sp/>minimized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetMinimizedHeight()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100" refid="class_track_1ac54e9cb9c256f7dd3605f9a63e041479" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_track_1ac54e9cb9c256f7dd3605f9a63e041479" kindref="member">GetActualHeight</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mHeight;<sp/>};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetIndex()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetIndex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetY(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vStereo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vStereo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetHeight(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vStereo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetHeight(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vStereo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetY()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetHeight()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetHeight(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetMinimized()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMinimized(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMinimized);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetVirtualTrackPercentage()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPerY;}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetVirtualTrackPercentage(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/>mPerY<sp/>=<sp/>val;}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetVirtualStereo()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mVirtualStereo;}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetVirtualStereo(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vStereo)<sp/>{<sp/>mVirtualStereo<sp/>=<sp/>vStereo;}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*GetLink()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*GetNode()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetOwner(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*list,<sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<ref refid="structnode" kindref="compound">node</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>in<sp/>Track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="131" refid="class_track_1a95b5b00485210991a838286a6c0c3e96" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1a95b5b00485210991a838286a6c0c3e96" kindref="member">mChannel</ref>;</highlight></codeline>
<codeline lineno="132" refid="class_track_1a561704af11450071df74b62498a54d1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1a561704af11450071df74b62498a54d1a" kindref="member">mOffset</ref>;</highlight></codeline>
<codeline lineno="133" refid="class_track_1a633f85ffde8eda30576b00ee4115570c" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1a633f85ffde8eda30576b00ee4115570c" kindref="member">mMute</ref>;</highlight></codeline>
<codeline lineno="134" refid="class_track_1ab21eed7b5982622ba28451c5f76d3156" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1ab21eed7b5982622ba28451c5f76d3156" kindref="member">mSolo</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_track_1ac8edb91d41baf41462a0e1ee9a6c52a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*<ref refid="class_track_1ac8edb91d41baf41462a0e1ee9a6c52a0" kindref="member">mDirManager</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReorderList(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resize<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145" refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fa4cc8a2bb7bc243eab53ba2abd757d9da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LeftChannel<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="146" refid="class_track_1af7ac66dc1b976cffbaee1e01206d362faa9c6ea023df4504361ffa1a31238c87e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RightChannel<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="147" refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fad1d594e80888976c85f7a4a258dc2f19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MonoChannel<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="class_track_1a4a6604845139575dfc25be299aeb60ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60ef" kindref="member">TrackKindEnum</ref></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152" refid="class_track_1a4a6604845139575dfc25be299aeb60efa3ebf538e767ee3e455126fb4ea4a4e0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efa3ebf538e767ee3e455126fb4ea4a4e0b" kindref="member">None</ref>,</highlight></codeline>
<codeline lineno="153" refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Wave</ref>,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_MIDI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Note,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Label</ref>,</highlight></codeline>
<codeline lineno="158" refid="class_track_1a4a6604845139575dfc25be299aeb60efa2348e03ba06177fe4dbcf87e27d82e33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efa2348e03ba06177fe4dbcf87e27d82e33" kindref="member">Time</ref>,</highlight></codeline>
<codeline lineno="159" refid="class_track_1a4a6604845139575dfc25be299aeb60efaa2633d5555a8b46b60c277da23d207f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>All</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>(<ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*<sp/>projDirManager);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>&amp;orig);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_track" kindref="compound"> Track</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>&amp;orig);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*Duplicate()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Called<sp/>when<sp/>this<sp/>track<sp/>is<sp/>merged<sp/>to<sp/>stereo<sp/>with<sp/>another,<sp/>and<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>on<sp/>some<sp/>paramaters<sp/>of<sp/>its<sp/>partner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Merge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>&amp;orig);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="class_track_1a670b88686f99e151d6a305a709f130b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="class_track_1a670b88686f99e151d6a305a709f130b1" kindref="member">GetName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mName;<sp/>}</highlight></codeline>
<codeline lineno="175" refid="class_track_1af91d1579e3d15a0d5fffa3348adae753" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1af91d1579e3d15a0d5fffa3348adae753" kindref="member">SetName</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;n<sp/>)<sp/>{<sp/>mName<sp/>=<sp/>n;<sp/>}</highlight></codeline>
<codeline lineno="176" refid="class_track_1ae9c9b6f2e53b0e55b214ae192b30ec60" refkind="member"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="class_track_1ae9c9b6f2e53b0e55b214ae192b30ec60" kindref="member">GetDefaultName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDefaultName;<sp/>}</highlight></codeline>
<codeline lineno="177" refid="class_track_1aaa95f9df004e8bc2155ba530d00a6778" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1aaa95f9df004e8bc2155ba530d00a6778" kindref="member">SetDefaultName</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;n<sp/>)<sp/>{<sp/>mDefaultName<sp/>=<sp/>n;<sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="class_track_1ac01a2b30ea7a2574d724bae023427905" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSelected;<sp/>}</highlight></codeline>
<codeline lineno="180" refid="class_track_1aebabe796d0b3222ef7d23ae13a62769b" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1aebabe796d0b3222ef7d23ae13a62769b" kindref="member">GetMute</ref><sp/><sp/><sp/><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMute;<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181" refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref><sp/><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLinked;<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182" refid="class_track_1acd2518a3c8c5b82f2a5bd45ce074d781" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1acd2518a3c8c5b82f2a5bd45ce074d781" kindref="member">GetSolo</ref><sp/><sp/><sp/><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSolo;<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSelected(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="185" refid="class_track_1a7f7b67377a0c8b9ebe20394380872032" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a7f7b67377a0c8b9ebe20394380872032" kindref="member">SetMute</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>)<sp/>{<sp/>mMute<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;<sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetLinked<sp/><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>);</highlight></codeline>
<codeline lineno="187" refid="class_track_1a3e05f682539978be493f9be110082aa3" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a3e05f682539978be493f9be110082aa3" kindref="member">SetSolo</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s)<sp/>{<sp/>mSolo<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;<sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="class_track_1a9c988f7695a546bf52ee2dc859db0345" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_track_1a9c988f7695a546bf52ee2dc859db0345" kindref="member">GetChannel</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mChannel;<sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetOffset()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="class_track_1a0c71dd844bec490b9a291af9ec2bc127" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a0c71dd844bec490b9a291af9ec2bc127" kindref="member">Offset</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)<sp/>{<sp/>SetOffset(GetOffset()<sp/>+<sp/>t);<sp/>}</highlight></codeline>
<codeline lineno="193" refid="class_track_1a17a167aaeb971ffb02ca3d62887e69f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a17a167aaeb971ffb02ca3d62887e69f7" kindref="member">SetOffset</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)<sp/>{<sp/>mOffset<sp/>=<sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>;<sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="class_track_1a98d028f4a19322ea675fcd33412f9832" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a98d028f4a19322ea675fcd33412f9832" kindref="member">SetChannel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)<sp/>{<sp/>mChannel<sp/>=<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AS:<sp/>Note<sp/>that<sp/>the<sp/>dirManager<sp/>is<sp/>mutable.<sp/><sp/>This<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mostly<sp/>to<sp/>support<sp/>&quot;Duplicate&quot;<sp/>of<sp/>const<sp/>objects,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>in<sp/>general,<sp/>mucking<sp/>with<sp/>the<sp/>dir<sp/>manager<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>separate<sp/>from<sp/>the<sp/>Track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="class_track_1aebb3ea6b7d480fad55d543b9ca1a888c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_dir_manager" kindref="compound">DirManager</ref>*<sp/><ref refid="class_track_1aebb3ea6b7d480fad55d543b9ca1a888c" kindref="member">GetDirManager</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDirManager;<sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="class_track_1a87915537991939aa4271435995628bac" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1a87915537991939aa4271435995628bac" kindref="member">Cut</ref><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>WXUNUSED(t0),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>WXUNUSED(t1),<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**<sp/>WXUNUSED(<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>))<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="204" refid="class_track_1ab4090a1d2cf009e12f77ba27b5c3bd34" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1ab4090a1d2cf009e12f77ba27b5c3bd34" kindref="member">Copy</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>WXUNUSED(t0),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>WXUNUSED(t1),<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**<sp/>WXUNUSED(<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>))</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="205" refid="class_track_1a725fa0a27976e10fd01859baa2f29ff7" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1a725fa0a27976e10fd01859baa2f29ff7" kindref="member">Clear</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>WXUNUSED(t0),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>WXUNUSED(t1))<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="206" refid="class_track_1abea1b02917a4dc8ad75331e14f7ea651" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1abea1b02917a4dc8ad75331e14f7ea651" kindref="member">Paste</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>WXUNUSED(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>),<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/>WXUNUSED(src))<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>can<sp/>be<sp/>used<sp/>to<sp/>adjust<sp/>a<sp/>sync-lock<sp/>selected<sp/>track<sp/>when<sp/>the<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>replaced<sp/>by<sp/>one<sp/>of<sp/>a<sp/>different<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SyncLockAdjust(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oldT1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newT1);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="class_track_1aecfb56d63d2cb24884a7a562678d31bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1aecfb56d63d2cb24884a7a562678d31bd" kindref="member">Silence</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>WXUNUSED(t0),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>WXUNUSED(t1))<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="213" refid="class_track_1a60a17fff33826814476f69f93b702235" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1a60a17fff33826814476f69f93b702235" kindref="member">InsertSilence</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>WXUNUSED(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>WXUNUSED(<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>))<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>None;<sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XMLTagHandler<sp/>callback<sp/>methods<sp/>--<sp/>NEW<sp/>virtual<sp/>for<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteXML(<ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref><sp/>&amp;xmlFile)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>an<sp/>error<sp/>was<sp/>encountered<sp/>while<sp/>trying<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>the<sp/>track<sp/>from<sp/>XML</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="class_track_1ad4f4b2a5e9fb7ea7cf337010424775f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1ad4f4b2a5e9fb7ea7cf337010424775f2" kindref="member">GetErrorOpening</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetStartTime()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetEndTime()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>if<sp/>sync-lock<sp/>is<sp/>on<sp/>and<sp/>any<sp/>track<sp/>in<sp/>its<sp/>sync-lock<sp/>group<sp/>is<sp/>selected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsSyncLockSelected()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="struct_track_list_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref></highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233" refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="234" refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="235" refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="class_track_list_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>final<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref>(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/>val<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="242" refid="class_track_list_iterator_1ab2f637d355de5c3acecc9458c818ae45" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_track_list_iterator_1ab2f637d355de5c3acecc9458c818ae45" kindref="member">~TrackListIterator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*First(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/>val<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*StartWith(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/>val);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*Next(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*Prev(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*Last(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*ReplaceCurrent(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*RemoveCurrent(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deletetrack<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>returns<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="255" refid="class_track_list_iterator_1a57f1a96eb694556d450063321859fd51" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="class_track_list_iterator_1a57f1a96eb694556d450063321859fd51" kindref="member">TrackList</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="class_track_list_iterator_1a3175cf862ae1927e1daf02b7d524bff9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<ref refid="class_track_list_iterator_1a3175cf862ae1927e1daf02b7d524bff9" kindref="member">l</ref>;</highlight></codeline>
<codeline lineno="258" refid="class_track_list_iterator_1a318ea42b1c2621226a11e1d005ce51ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<ref refid="class_track_list_iterator_1a318ea42b1c2621226a11e1d005ce51ad" kindref="member">cur</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="class_track_list_const_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_track_list_const_iterator" kindref="compound">TrackListConstIterator</ref></highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264" refid="class_track_list_const_iterator_1a0984bb74eccc55840dee742e5133b450" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_const_iterator_1a0984bb74eccc55840dee742e5133b450" kindref="member">TrackListConstIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/>val<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mIter(const_cast&lt;<ref refid="class_track_list" kindref="compound">TrackList</ref>*&gt;(val))</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="267" refid="class_track_list_const_iterator_1aeff145b821b25abe5a77453fb88dad87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_const_iterator_1aeff145b821b25abe5a77453fb88dad87" kindref="member">~TrackListConstIterator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="class_track_list_const_iterator_1a293ba71ab85b8390b9f60929cb7ff799" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_const_iterator_1a293ba71ab85b8390b9f60929cb7ff799" kindref="member">First</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/>val<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIter.First(const_cast&lt;TrackList*&gt;(val));<sp/>}</highlight></codeline>
<codeline lineno="272" refid="class_track_list_const_iterator_1aa0b1b52c8ca3bc1a9c6f246b3f937f27" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_const_iterator_1aa0b1b52c8ca3bc1a9c6f246b3f937f27" kindref="member">StartWith</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/>val)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIter.StartWith(const_cast&lt;Track*&gt;(val));<sp/>}</highlight></codeline>
<codeline lineno="274" refid="class_track_list_const_iterator_1ac89a3b2236c0cb6ef0a63d7e8622b6af" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_const_iterator_1ac89a3b2236c0cb6ef0a63d7e8622b6af" kindref="member">Next</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIter.Next(skiplinked);<sp/>}</highlight></codeline>
<codeline lineno="276" refid="class_track_list_const_iterator_1a925c804bbe8d0d28e4745609d7ce73db" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_const_iterator_1a925c804bbe8d0d28e4745609d7ce73db" kindref="member">Prev</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIter.Prev(skiplinked);<sp/>}</highlight></codeline>
<codeline lineno="278" refid="class_track_list_const_iterator_1a8740d7b6a59b722e244bae0fba3e6cba" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_const_iterator_1a8740d7b6a59b722e244bae0fba3e6cba" kindref="member">Last</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIter.Last(skiplinked);<sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>mIter;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">};</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TrackListCondIterator<sp/>(base<sp/>class<sp/>for<sp/>iterators<sp/>that<sp/>iterate<sp/>over<sp/>all<sp/>tracks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>meet<sp/>a<sp/>condition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="class_track_list_cond_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_track_list_cond_iterator" kindref="compound">TrackListCondIterator</ref><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>final<sp/>*/</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref></highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="290" refid="class_track_list_cond_iterator_1ae087efb861e158edaf05040659092900" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_cond_iterator_1ae087efb861e158edaf05040659092900" kindref="member">TrackListCondIterator</ref>(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*val<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref>(val)<sp/>{}</highlight></codeline>
<codeline lineno="292" refid="class_track_list_cond_iterator_1a6fe42b930d61f0b671739f66ba7b58a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_track_list_cond_iterator_1a6fe42b930d61f0b671739f66ba7b58a5" kindref="member">~TrackListCondIterator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iteration<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*First(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*val<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*StartWith(<ref refid="class_track" kindref="compound">Track</ref><sp/>*val)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*Next(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*Prev(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*Last(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NEW<sp/>virtual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Condition(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">};</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TrackListOfKindIterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>TrackListIterator<sp/>and<sp/>returns<sp/>only<sp/>tracks<sp/>of<sp/>the<sp/>specified<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_track_list_of_kind_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_track_list_of_kind_iterator" kindref="compound">TrackListOfKindIterator</ref><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>final<sp/>*/</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_track_list_cond_iterator" kindref="compound">TrackListCondIterator</ref></highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_of_kind_iterator" kindref="compound">TrackListOfKindIterator</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kind,<sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/>val<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="315" refid="class_track_list_of_kind_iterator_1a3915bdd25c8afccb78d5c1aae399b17b" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_track_list_of_kind_iterator_1a3915bdd25c8afccb78d5c1aae399b17b" kindref="member">~TrackListOfKindIterator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Condition(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kind;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">};</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SelectedTrackListOfKindIterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>TrackListOfKindIterator<sp/>and<sp/>returns<sp/>only<sp/>tracks<sp/>selected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="class_selected_track_list_of_kind_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_track_list_of_kind_iterator" kindref="compound">TrackListOfKindIterator</ref></highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="332" refid="class_selected_track_list_of_kind_iterator_1a792b87275965586c475140ecea36c39d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator_1a792b87275965586c475140ecea36c39d" kindref="member">SelectedTrackListOfKindIterator</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kind,<sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/>val<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>:<sp/><ref refid="class_track_list_of_kind_iterator" kindref="compound">TrackListOfKindIterator</ref>(kind,<sp/>val)<sp/>{}</highlight></codeline>
<codeline lineno="333" refid="class_selected_track_list_of_kind_iterator_1a9c6a99bab581c3d35dc2490c0ded4729" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_selected_track_list_of_kind_iterator_1a9c6a99bab581c3d35dc2490c0ded4729" kindref="member">~SelectedTrackListOfKindIterator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Condition(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal">};</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VisibleTrackIterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>TrackListIterator<sp/>returns<sp/>only<sp/>the<sp/>currently<sp/>visible<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="class_visible_track_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_visible_track_iterator" kindref="compound">VisibleTrackIterator</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_track_list_cond_iterator" kindref="compound">TrackListCondIterator</ref></highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_visible_track_iterator" kindref="compound">VisibleTrackIterator</ref>(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project);</highlight></codeline>
<codeline lineno="348" refid="class_visible_track_iterator_1abdaae0cfd440b7445bb74fbb3a42b6c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_visible_track_iterator_1abdaae0cfd440b7445bb74fbb3a42b6c4" kindref="member">~VisibleTrackIterator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Condition(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*mProject;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>mPanelRect;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">};</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SyncLockedTracksIterator<sp/>returns<sp/>only<sp/>tracks<sp/>belonging<sp/>to<sp/>the<sp/>sync-locked<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>which<sp/>the<sp/>starting<sp/>track<sp/>is<sp/>a<sp/>member.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="class_sync_locked_tracks_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_sync_locked_tracks_iterator" kindref="compound">SyncLockedTracksIterator</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref></highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_sync_locked_tracks_iterator" kindref="compound">SyncLockedTracksIterator</ref>(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/>val);</highlight></codeline>
<codeline lineno="365" refid="class_sync_locked_tracks_iterator_1ad1589bffe2630a031cf6bcb94b243bfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_sync_locked_tracks_iterator_1ad1589bffe2630a031cf6bcb94b243bfd" kindref="member">~SyncLockedTracksIterator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*StartWith(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="xleval_8c_1a3a669d2cc56c116777f0d573d8194e48" kindref="member">member</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*Next(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*Prev(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*Last(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mInLabelSection;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">};</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="comment">//<sp/>Posted<sp/>when<sp/>the<sp/>horizontal<sp/>positions<sp/>within<sp/>tracks<sp/>have<sp/>beed<sp/>updated.<sp/><sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">//<sp/>wxCommandEvent::GetClientData()<sp/>method<sp/>can<sp/>be<sp/>used<sp/>to<sp/>retrieve<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/>track<sp/>that<sp/>was<sp/>updated.<sp/><sp/>All<sp/>positions<sp/>following<sp/>that<sp/>track<sp/>will<sp/>have<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//<sp/>updated<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><ref refid="src_2track_8h_1ac2f3c0f7894980fd3f7b604527f0243f" kindref="member">DECLARE_EXPORTED_EVENT_TYPE</ref>(AUDACITY_DLL_API,<sp/>EVT_TRACKLIST_RESIZED,<sp/>-1);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Posted<sp/>when<sp/>tracks<sp/>have<sp/>been<sp/>added<sp/>or<sp/>deleted<sp/>from<sp/>a<sp/>tracklist.<sp/><sp/>The<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/>wxCommandEvent::GetClientData()<sp/>returns<sp/>will<sp/>be<sp/>NULL<sp/>for<sp/>deletions<sp/>or<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>track<sp/>that<sp/>was<sp/>added.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><ref refid="src_2track_8h_1ac2f3c0f7894980fd3f7b604527f0243f" kindref="member">DECLARE_EXPORTED_EVENT_TYPE</ref>(AUDACITY_DLL_API,<sp/>EVT_TRACKLIST_UPDATED,<sp/>-1);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="class_track_list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>wxEvtHandler</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>empty<sp/>TrackList</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>destructorDeletesTracks<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>copy<sp/>--<sp/>a<sp/>deep<sp/>copy<sp/>that<sp/>duplicates<sp/>all<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>&amp;that);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>&amp;operator=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>&amp;that);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref>(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>&amp;&amp;that);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref>&amp;<sp/>operator=<sp/>(<ref refid="class_track_list" kindref="compound">TrackList</ref>&amp;&amp;);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>is<sp/>defined<sp/>in<sp/>terms<sp/>of<sp/>Swap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Swap(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>&amp;that);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_track_list" kindref="compound">TrackList</ref>();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="class_track_list_1ac9187679244c6a3414c63aae65f83a2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref>;</highlight></codeline>
<codeline lineno="415" refid="class_track_list_1a05e5c6c85bb364c1b1ee41fbe00dd480" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Add(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddToHead(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Replace(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/>with,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deletetrack<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Remove(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deletetrack<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clear(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deleteTracks<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Select(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*GetLink(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*GetPrev(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>linked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*GetNext(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>linked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetGroupHeight(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CanMoveUp(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CanMoveDown(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MoveUp(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MoveDown(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="451" refid="class_track_list_1a29db68a702bb980e1070a28fd381379d" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1a29db68a702bb980e1070a28fd381379d" kindref="member">Move</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>up)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>up<sp/>?<sp/>MoveUp(t)<sp/>:<sp/>MoveDown(t);<sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_time_track" kindref="compound">TimeTrack</ref><sp/>*GetTimeTrack();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_time_track" kindref="compound">TimeTrack</ref><sp/>*GetTimeTrack()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetNumExportChannels(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectionOnly)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track_array" kindref="compound">WaveTrackArray</ref><sp/>GetWaveTrackArray(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectionOnly,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeMuted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track_const_array" kindref="compound">WaveTrackConstArray</ref><sp/>GetWaveTrackConstArray(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectionOnly,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeMuted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_MIDI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/>NoteTrackArray<sp/>GetNoteTrackArray(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectionOnly);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Contains(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsEmpty()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetCount()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetStartTime()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetEndTime()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetMinOffset()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetHeight()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LEGACY_PROJECT_FILE_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>File<sp/>I/O</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Load(wxTextFile<sp/>*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*<sp/>dirManager)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Save(wxTextFile<sp/>*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overwrite)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoAssign(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>&amp;that);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RecalcPositions(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*node);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdatedEvent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*node);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResizedEvent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*node);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwapNodes(<ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<sp/>s1,<sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<sp/>s2);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*head;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*tail;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mDestructorDeletesTracks;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">};</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="class_track_factory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_track_factory" kindref="compound">TrackFactory</ref></highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_factory" kindref="compound">TrackFactory</ref>(<ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*dirManager,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>*zoomInfo):</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDirManager(dirManager)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mZoomInfo(zoomInfo)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mDirManager;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mZoomInfo;</highlight></codeline>
<codeline lineno="515" refid="class_track_factory_1a4c5c7635a59c124e571761313f848a00" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>;</highlight></codeline>
<codeline lineno="516" refid="class_track_factory_1ad14f349c97896b1506b357222f99ff4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_benchmark_dialog" kindref="compound">BenchmarkDialog</ref>;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>methods<sp/>are<sp/>defined<sp/>in<sp/>WaveTrack.cpp,<sp/>NoteTrack.cpp,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LabelTrack.cpp,<sp/>and<sp/>TimeTrack.cpp<sp/>respectively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>DuplicateWaveTrack(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>&amp;orig);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*NewWaveTrack(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref><sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref>)0,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*NewLabelTrack();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_time_track" kindref="compound">TimeTrack</ref><sp/>*NewTimeTrack();</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_MIDI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_note_track" kindref="compound">NoteTrack</ref><sp/>*NewNoteTrack();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal">};</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/Track.h"/>
  </compounddef>
</doxygen>
