<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="xljump_8c" kind="file" language="C++">
    <compoundname>xljump.c</compoundname>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <incdepgraph>
      <node id="18685">
        <label>stdlib.h</label>
      </node>
      <node id="18688">
        <label>setjmp.h</label>
      </node>
      <node id="18684">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="18685" relation="include">
        </childnode>
        <childnode refid="18686" relation="include">
        </childnode>
        <childnode refid="18687" relation="include">
        </childnode>
        <childnode refid="18688" relation="include">
        </childnode>
        <childnode refid="18689" relation="include">
        </childnode>
      </node>
      <node id="18683">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c</label>
        <link refid="xljump.c"/>
        <childnode refid="18684" relation="include">
        </childnode>
      </node>
      <node id="18689">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="18687">
        <label>ctype.h</label>
      </node>
      <node id="18686">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="xljump_8c_1a3c6f71d3baee0c8c8650914d64189236" prot="public" static="no" mutable="no">
        <type><ref refid="xlisp_8h_1a24fc5785212d4fe8da5e22c8e376a6a0" kindref="member">XLCONTEXT</ref> *</type>
        <definition>XLCONTEXT* xlcontext</definition>
        <argsstring></argsstring>
        <name>xlcontext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="9" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xljump_8c_1a4cd1292c6b4ec8a42096465c4e046118" prot="public" static="no" mutable="no">
        <type><ref refid="xlisp_8h_1a24fc5785212d4fe8da5e22c8e376a6a0" kindref="member">XLCONTEXT</ref> *</type>
        <definition>XLCONTEXT * xltarget</definition>
        <argsstring></argsstring>
        <name>xltarget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="9" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xljump_8c_1ad5c1a0a2660374fc09b5202afe41e512" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xlvalue</definition>
        <argsstring></argsstring>
        <name>xlvalue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="10" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xljump_8c_1a5a6c88581d1d8e12ca427db5ac15929b" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xlenv</definition>
        <argsstring></argsstring>
        <name>xlenv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="10" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xljump_8c_1ad07a27b7254bb6a27fb340c197f635d8" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xlfenv</definition>
        <argsstring></argsstring>
        <name>xlfenv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="10" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xljump_8c_1aad8fcc1c10093a173d7483426c2b072e" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xldenv</definition>
        <argsstring></argsstring>
        <name>xldenv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="10" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xljump_8c_1aca450a053e93c6399e00cad693aef4d7" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int xlmask</definition>
        <argsstring></argsstring>
        <name>xlmask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="11" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="xljump_8c_1ac405c854f68826e3a45167935a3ffa13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>LOCAL void findandjump</definition>
        <argsstring>(int mask, const char *error)</argsstring>
        <name>findandjump</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="13" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" bodystart="155" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="xljump_8c_1a251458382e4fa2fdbf627bc747372254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xlbegin</definition>
        <argsstring>(XLCONTEXT *cptr, int flags, LVAL expr)</argsstring>
        <name>xlbegin</name>
        <param>
          <type><ref refid="xlisp_8h_1a24fc5785212d4fe8da5e22c8e376a6a0" kindref="member">XLCONTEXT</ref> *</type>
          <declname>cptr</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="17" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" bodystart="17" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="xljump_8c_1a164b72160baf2b4e1a413a647ed2dd7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xlend</definition>
        <argsstring>(XLCONTEXT *cptr)</argsstring>
        <name>xlend</name>
        <param>
          <type><ref refid="xlisp_8h_1a24fc5785212d4fe8da5e22c8e376a6a0" kindref="member">XLCONTEXT</ref> *</type>
          <declname>cptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="34" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="xljump_8c_1ac89c2db0b870d55ff1a44045373c18be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xlgo</definition>
        <argsstring>(LVAL label)</argsstring>
        <name>xlgo</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" bodystart="40" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="xljump_8c_1a9a10bd637518dcd2a77455fb7a6bc10c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xlreturn</definition>
        <argsstring>(LVAL name, LVAL val)</argsstring>
        <name>xlreturn</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="62" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" bodystart="62" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="xljump_8c_1a03027b07577e8ed88cda6a41454be299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xlthrow</definition>
        <argsstring>(LVAL tag, LVAL val)</argsstring>
        <name>xlthrow</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" bodystart="74" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="xljump_8c_1a9b656c4d01b22c1538168583ea7774b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xlsignal</definition>
        <argsstring>(const char *emsg, LVAL arg)</argsstring>
        <name>xlsignal</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>emsg</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="86" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" bodystart="86" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="xljump_8c_1af06797df739542e7d44b51bf5b701f38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xltoplevel</definition>
        <argsstring>(void)</argsstring>
        <name>xltoplevel</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="100" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" bodystart="100" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="xljump_8c_1ab214c6c0650b340f51f032c731034e4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xlbrklevel</definition>
        <argsstring>(void)</argsstring>
        <name>xlbrklevel</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="xljump_8c_1aabe86757e710f95ca1e63a15643b2b8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xlcleanup</definition>
        <argsstring>(void)</argsstring>
        <name>xlcleanup</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="114" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" bodystart="114" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="xljump_8c_1aa5a84a18cdd8eb6619491948e4c95661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xlcontinue</definition>
        <argsstring>(void)</argsstring>
        <name>xlcontinue</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="121" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="xljump_8c_1afe789807d9cbd9fb2729a4ddc9bf688f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xljump</definition>
        <argsstring>(XLCONTEXT *target, int mask, LVAL val)</argsstring>
        <name>xljump</name>
        <param>
          <type><ref refid="xlisp_8h_1a24fc5785212d4fe8da5e22c8e376a6a0" kindref="member">XLCONTEXT</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" line="127" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c" bodystart="127" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>xljump<sp/>-<sp/>execution<sp/>context<sp/>routines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Copyright<sp/>(c)<sp/>1985,<sp/>by<sp/>David<sp/>Michael<sp/>Betz</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>for<sp/>unrestricted<sp/>non-commercial<sp/>use<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>external<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structcontext" kindref="compound">XLCONTEXT</ref><sp/>*<ref refid="xljump_8c_1a3c6f71d3baee0c8c8650914d64189236" kindref="member">xlcontext</ref>,*<ref refid="xljump_8c_1a4cd1292c6b4ec8a42096465c4e046118" kindref="member">xltarget</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xljump_8c_1ad5c1a0a2660374fc09b5202afe41e512" kindref="member">xlvalue</ref>,<ref refid="xljump_8c_1a5a6c88581d1d8e12ca427db5ac15929b" kindref="member">xlenv</ref>,<ref refid="xljump_8c_1ad07a27b7254bb6a27fb340c197f635d8" kindref="member">xlfenv</ref>,<ref refid="xljump_8c_1aad8fcc1c10093a173d7483426c2b072e" kindref="member">xldenv</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xljump_8c_1aca450a053e93c6399e00cad693aef4d7" kindref="member">xlmask</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xljump_8c_1ac405c854f68826e3a45167935a3ffa13" kindref="member">findandjump</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmask" kindref="compound">mask</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlbegin<sp/>-<sp/>beginning<sp/>of<sp/>an<sp/>execution<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="xljump_8c_1a251458382e4fa2fdbf627bc747372254" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xljump_8c_1a251458382e4fa2fdbf627bc747372254" kindref="member">xlbegin</ref>(<ref refid="structcontext" kindref="compound">XLCONTEXT</ref><sp/>*cptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>expr)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>cptr-&gt;<ref refid="structcontext_1a7062c84d18a7cf165dabd8374ac5c34c" kindref="member">c_flags</ref><sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>cptr-&gt;<ref refid="structcontext_1a230c537ba0567c96a7adb503ef3f60f6" kindref="member">c_expr</ref><sp/>=<sp/>expr;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>cptr-&gt;<ref refid="structcontext_1ab0cded4b5c36cd31ccc615bd3ef99b96" kindref="member">c_xlstack</ref><sp/>=<sp/><ref refid="xlglob_8c_1a87562c5f52769627a8fbf9c4fbb18651" kindref="member">xlstack</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>cptr-&gt;<ref refid="structcontext_1a2e72d4b066ac227fbc5b58143d9263f4" kindref="member">c_xlenv</ref><sp/>=<sp/><ref refid="xljump_8c_1a5a6c88581d1d8e12ca427db5ac15929b" kindref="member">xlenv</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>cptr-&gt;<ref refid="structcontext_1afad0936bb5bd6e551a30f8c95ee86afb" kindref="member">c_xlfenv</ref><sp/>=<sp/><ref refid="xljump_8c_1ad07a27b7254bb6a27fb340c197f635d8" kindref="member">xlfenv</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>cptr-&gt;<ref refid="structcontext_1a118951781a108d36b70642d908f3e767" kindref="member">c_xldenv</ref><sp/>=<sp/><ref refid="xljump_8c_1aad8fcc1c10093a173d7483426c2b072e" kindref="member">xldenv</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>cptr-&gt;<ref refid="structcontext_1ab875672af9513f4f5a59613c352ab807" kindref="member">c_xlcontext</ref><sp/>=<sp/><ref refid="xljump_8c_1a3c6f71d3baee0c8c8650914d64189236" kindref="member">xlcontext</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>cptr-&gt;<ref refid="structcontext_1aaf337a658ba4dc5c21a1824c5e77ada4" kindref="member">c_xlargv</ref><sp/>=<sp/><ref refid="xlglob_8c_1a41a140ea641b5b83e799d2a1472d7921" kindref="member">xlargv</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>cptr-&gt;<ref refid="structcontext_1a0b1153f557a555aa960fdc31dcddb719" kindref="member">c_xlargc</ref><sp/>=<sp/><ref refid="xlglob_8c_1a5a6bb9549241319e47d3021370af59a7" kindref="member">xlargc</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>cptr-&gt;<ref refid="structcontext_1ac75e092bb4459afcf34642cf84bf6e85" kindref="member">c_xlfp</ref><sp/>=<sp/><ref refid="xlglob_8c_1ad50286de150ad0d899be32de837295fb" kindref="member">xlfp</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>cptr-&gt;<ref refid="structcontext_1acfd34b17e765579d2ea5be18ad44a982" kindref="member">c_xlsp</ref><sp/>=<sp/><ref refid="xlglob_8c_1afbef59becc9c0fba55d0adf9484b55e8" kindref="member">xlsp</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>xlcontext<sp/>=<sp/>cptr;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlend<sp/>-<sp/>end<sp/>of<sp/>an<sp/>execution<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="xljump_8c_1a164b72160baf2b4e1a413a647ed2dd7a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xljump_8c_1a164b72160baf2b4e1a413a647ed2dd7a" kindref="member">xlend</ref>(<ref refid="structcontext" kindref="compound">XLCONTEXT</ref><sp/>*cptr)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>xlcontext<sp/>=<sp/>cptr-&gt;<ref refid="structcontext_1ab875672af9513f4f5a59613c352ab807" kindref="member">c_xlcontext</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlgo<sp/>-<sp/>go<sp/>to<sp/>a<sp/>label<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="xljump_8c_1ac89c2db0b870d55ff1a44045373c18be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xljump_8c_1ac89c2db0b870d55ff1a44045373c18be" kindref="member">xlgo</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcontext" kindref="compound">XLCONTEXT</ref><sp/>*cptr;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>a<sp/>tagbody<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cptr<sp/>=<sp/>xlcontext;<sp/>cptr;<sp/>cptr<sp/>=<sp/>cptr-&gt;<ref refid="structcontext_1ab875672af9513f4f5a59613c352ab807" kindref="member">c_xlcontext</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cptr-&gt;<ref refid="structcontext_1a7062c84d18a7cf165dabd8374ac5c34c" kindref="member">c_flags</ref><sp/>&amp;<sp/><ref refid="xlisp_8h_1a46e002a04eaa7dc50165e8acea566154" kindref="member">CF_GO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argc<sp/>=<sp/>cptr-&gt;<ref refid="structcontext_1a0b1153f557a555aa960fdc31dcddb719" kindref="member">c_xlargc</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argv<sp/>=<sp/>cptr-&gt;<ref refid="structcontext_1aaf337a658ba4dc5c21a1824c5e77ada4" kindref="member">c_xlargv</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--argc<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*argv++<sp/>==<sp/>label)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cptr-&gt;<ref refid="structcontext_1a0b1153f557a555aa960fdc31dcddb719" kindref="member">c_xlargc</ref><sp/>=<sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cptr-&gt;<ref refid="structcontext_1aaf337a658ba4dc5c21a1824c5e77ada4" kindref="member">c_xlargv</ref><sp/>=<sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xljump_8c_1afe789807d9cbd9fb2729a4ddc9bf688f" kindref="member">xljump</ref>(cptr,<ref refid="xlisp_8h_1a46e002a04eaa7dc50165e8acea566154" kindref="member">CF_GO</ref>,<ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;no<sp/>target<sp/>for<sp/>GO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlreturn<sp/>-<sp/>return<sp/>from<sp/>a<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="xljump_8c_1a9a10bd637518dcd2a77455fb7a6bc10c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xljump_8c_1a9a10bd637518dcd2a77455fb7a6bc10c" kindref="member">xlreturn</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>val)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcontext" kindref="compound">XLCONTEXT</ref><sp/>*cptr;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>a<sp/>block<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cptr<sp/>=<sp/>xlcontext;<sp/>cptr;<sp/>cptr<sp/>=<sp/>cptr-&gt;<ref refid="structcontext_1ab875672af9513f4f5a59613c352ab807" kindref="member">c_xlcontext</ref>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cptr-&gt;<ref refid="structcontext_1a7062c84d18a7cf165dabd8374ac5c34c" kindref="member">c_flags</ref><sp/>&amp;<sp/><ref refid="xlisp_8h_1a2443cb03750d9a03f7a0f52590c81de5" kindref="member">CF_RETURN</ref><sp/>&amp;&amp;<sp/>cptr-&gt;<ref refid="structcontext_1a230c537ba0567c96a7adb503ef3f60f6" kindref="member">c_expr</ref><sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xljump_8c_1afe789807d9cbd9fb2729a4ddc9bf688f" kindref="member">xljump</ref>(cptr,<ref refid="xlisp_8h_1a2443cb03750d9a03f7a0f52590c81de5" kindref="member">CF_RETURN</ref>,val);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;no<sp/>target<sp/>for<sp/>RETURN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlthrow<sp/>-<sp/>throw<sp/>to<sp/>a<sp/>catch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="xljump_8c_1a03027b07577e8ed88cda6a41454be299" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xljump_8c_1a03027b07577e8ed88cda6a41454be299" kindref="member">xlthrow</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="structtag" kindref="compound">tag</ref>,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>val)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcontext" kindref="compound">XLCONTEXT</ref><sp/>*cptr;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>a<sp/>catch<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cptr<sp/>=<sp/>xlcontext;<sp/>cptr;<sp/>cptr<sp/>=<sp/>cptr-&gt;<ref refid="structcontext_1ab875672af9513f4f5a59613c352ab807" kindref="member">c_xlcontext</ref>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cptr-&gt;<ref refid="structcontext_1a7062c84d18a7cf165dabd8374ac5c34c" kindref="member">c_flags</ref><sp/>&amp;<sp/><ref refid="xlisp_8h_1accf4180a0a31c13a5b4ecb753f83d392" kindref="member">CF_THROW</ref>)<sp/>&amp;&amp;<sp/>cptr-&gt;<ref refid="structcontext_1a230c537ba0567c96a7adb503ef3f60f6" kindref="member">c_expr</ref><sp/>==<sp/>tag)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xljump_8c_1afe789807d9cbd9fb2729a4ddc9bf688f" kindref="member">xljump</ref>(cptr,<ref refid="xlisp_8h_1accf4180a0a31c13a5b4ecb753f83d392" kindref="member">CF_THROW</ref>,val);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;no<sp/>target<sp/>for<sp/>THROW&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlsignal<sp/>-<sp/>signal<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="xljump_8c_1a9b656c4d01b22c1538168583ea7774b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xljump_8c_1a9b656c4d01b22c1538168583ea7774b3" kindref="member">xlsignal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*emsg,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcontext" kindref="compound">XLCONTEXT</ref><sp/>*cptr;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>an<sp/>error<sp/>catcher<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cptr<sp/>=<sp/>xlcontext;<sp/>cptr;<sp/>cptr<sp/>=<sp/>cptr-&gt;<ref refid="structcontext_1ab875672af9513f4f5a59613c352ab807" kindref="member">c_xlcontext</ref>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cptr-&gt;<ref refid="structcontext_1a7062c84d18a7cf165dabd8374ac5c34c" kindref="member">c_flags</ref><sp/>&amp;<sp/><ref refid="xlisp_8h_1a7c1760ac41775101243e018c6237e406" kindref="member">CF_ERROR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cptr-&gt;<ref refid="structcontext_1a230c537ba0567c96a7adb503ef3f60f6" kindref="member">c_expr</ref><sp/>&amp;&amp;<sp/>emsg)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a8301984d0a70f8bb4403c0987e5bdea3" kindref="member">xlerrprint</ref>(</highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">,<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,emsg,arg);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xljump_8c_1afe789807d9cbd9fb2729a4ddc9bf688f" kindref="member">xljump</ref>(cptr,<ref refid="xlisp_8h_1a7c1760ac41775101243e018c6237e406" kindref="member">CF_ERROR</ref>,<ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xltoplevel<sp/>-<sp/>go<sp/>back<sp/>to<sp/>the<sp/>top<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="xljump_8c_1af06797df739542e7d44b51bf5b701f38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xljump_8c_1af06797df739542e7d44b51bf5b701f38" kindref="member">xltoplevel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a5860c18d50ed8398443a01f793bff7df" kindref="member">close_loadingfiles</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;[<sp/>back<sp/>to<sp/>top<sp/>level<sp/>]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xljump_8c_1ac405c854f68826e3a45167935a3ffa13" kindref="member">findandjump</ref>(<ref refid="xlisp_8h_1aead6301e989d9f37c5eab8a55290ff7a" kindref="member">CF_TOPLEVEL</ref>,</highlight><highlight class="stringliteral">&quot;no<sp/>top<sp/>level&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlbrklevel<sp/>-<sp/>go<sp/>back<sp/>to<sp/>the<sp/>previous<sp/>break<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="xljump_8c_1ab214c6c0650b340f51f032c731034e4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xljump_8c_1ab214c6c0650b340f51f032c731034e4c" kindref="member">xlbrklevel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xljump_8c_1ac405c854f68826e3a45167935a3ffa13" kindref="member">findandjump</ref>(<ref refid="xlisp_8h_1a2ef3277f18438966a122b63e7dc474ff" kindref="member">CF_BRKLEVEL</ref>,</highlight><highlight class="stringliteral">&quot;no<sp/>previous<sp/>break<sp/>level&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlcleanup<sp/>-<sp/>clean-up<sp/>after<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="xljump_8c_1aabe86757e710f95ca1e63a15643b2b8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xljump_8c_1aabe86757e710f95ca1e63a15643b2b8b" kindref="member">xlcleanup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;[<sp/>back<sp/>to<sp/>previous<sp/>break<sp/>level<sp/>]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xljump_8c_1ac405c854f68826e3a45167935a3ffa13" kindref="member">findandjump</ref>(<ref refid="xlisp_8h_1ae0a515de279b7dfcd2506e3939e2c31e" kindref="member">CF_CLEANUP</ref>,</highlight><highlight class="stringliteral">&quot;not<sp/>in<sp/>a<sp/>break<sp/>loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlcontinue<sp/>-<sp/>continue<sp/>from<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="xljump_8c_1aa5a84a18cdd8eb6619491948e4c95661" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xljump_8c_1aa5a84a18cdd8eb6619491948e4c95661" kindref="member">xlcontinue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xljump_8c_1ac405c854f68826e3a45167935a3ffa13" kindref="member">findandjump</ref>(<ref refid="xlisp_8h_1a76bf9642409d6d3b1fe29b087dead0e5" kindref="member">CF_CONTINUE</ref>,</highlight><highlight class="stringliteral">&quot;not<sp/>in<sp/>a<sp/>break<sp/>loop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xljump<sp/>-<sp/>jump<sp/>to<sp/>a<sp/>saved<sp/>execution<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="xljump_8c_1afe789807d9cbd9fb2729a4ddc9bf688f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xljump_8c_1afe789807d9cbd9fb2729a4ddc9bf688f" kindref="member">xljump</ref>(<ref refid="structcontext" kindref="compound">XLCONTEXT</ref><sp/>*<ref refid="lib_2expat_8h_1a15a257516a87decb971420e718853137" kindref="member">target</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmask" kindref="compound">mask</ref>,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>val)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unwind<sp/>the<sp/>execution<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>xlcontext<sp/>!=<sp/><ref refid="lib_2expat_8h_1a15a257516a87decb971420e718853137" kindref="member">target</ref>;<sp/>xlcontext<sp/>=<sp/>xlcontext-&gt;<ref refid="structcontext_1ab875672af9513f4f5a59613c352ab807" kindref="member">c_xlcontext</ref>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>an<sp/>UNWIND-PROTECT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xlcontext-&gt;<ref refid="structcontext_1a7062c84d18a7cf165dabd8374ac5c34c" kindref="member">c_flags</ref><sp/>&amp;<sp/><ref refid="xlisp_8h_1ae756ea1a2406c4824544a3e6c8ba5ce2" kindref="member">CF_UNWIND</ref>))<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xltarget<sp/>=<sp/><ref refid="lib_2expat_8h_1a15a257516a87decb971420e718853137" kindref="member">target</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xljump_8c_1aca450a053e93c6399e00cad693aef4d7" kindref="member">xlmask</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1a87562c5f52769627a8fbf9c4fbb18651" kindref="member">xlstack</ref><sp/>=<sp/>xlcontext-&gt;<ref refid="structcontext_1ab0cded4b5c36cd31ccc615bd3ef99b96" kindref="member">c_xlstack</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>xlenv<sp/>=<sp/>xlcontext-&gt;<ref refid="structcontext_1a2e72d4b066ac227fbc5b58143d9263f4" kindref="member">c_xlenv</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>xlfenv<sp/>=<sp/>xlcontext-&gt;<ref refid="structcontext_1afad0936bb5bd6e551a30f8c95ee86afb" kindref="member">c_xlfenv</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1ab14a4b9709789b6074f7d1580ff6dad8" kindref="member">xlunbind</ref>(xlcontext-&gt;<ref refid="structcontext_1a118951781a108d36b70642d908f3e767" kindref="member">c_xldenv</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1a41a140ea641b5b83e799d2a1472d7921" kindref="member">xlargv</ref><sp/>=<sp/>xlcontext-&gt;<ref refid="structcontext_1aaf337a658ba4dc5c21a1824c5e77ada4" kindref="member">c_xlargv</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1a5a6bb9549241319e47d3021370af59a7" kindref="member">xlargc</ref><sp/>=<sp/>xlcontext-&gt;<ref refid="structcontext_1a0b1153f557a555aa960fdc31dcddb719" kindref="member">c_xlargc</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1ad50286de150ad0d899be32de837295fb" kindref="member">xlfp</ref><sp/>=<sp/>xlcontext-&gt;<ref refid="structcontext_1ac75e092bb4459afcf34642cf84bf6e85" kindref="member">c_xlfp</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1afbef59becc9c0fba55d0adf9484b55e8" kindref="member">xlsp</ref><sp/>=<sp/>xlcontext-&gt;<ref refid="structcontext_1acfd34b17e765579d2ea5be18ad44a982" kindref="member">c_xlsp</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>xlvalue<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>call<sp/>the<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>_longjmp(xlcontext-&gt;<ref refid="structcontext_1a927d089e4e08536e2ac562a8c0f1c482" kindref="member">c_jmpbuf</ref>,mask);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>findandjump<sp/>-<sp/>find<sp/>a<sp/>target<sp/>context<sp/>frame<sp/>and<sp/>jump<sp/>to<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="xljump_8c_1ac405c854f68826e3a45167935a3ffa13" refkind="member"><highlight class="normal"><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xljump_8c_1ac405c854f68826e3a45167935a3ffa13" kindref="member">findandjump</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmask" kindref="compound">mask</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcontext" kindref="compound">XLCONTEXT</ref><sp/>*cptr;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>a<sp/>block<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cptr<sp/>=<sp/>xlcontext;<sp/>cptr;<sp/>cptr<sp/>=<sp/>cptr-&gt;<ref refid="structcontext_1ab875672af9513f4f5a59613c352ab807" kindref="member">c_xlcontext</ref>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cptr-&gt;<ref refid="structcontext_1a7062c84d18a7cf165dabd8374ac5c34c" kindref="member">c_flags</ref><sp/>&amp;<sp/>mask)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xljump_8c_1afe789807d9cbd9fb2729a4ddc9bf688f" kindref="member">xljump</ref>(cptr,mask,<ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_mac_a_e_8c_1abd437fd481d46806b84e0d172a0f1437" kindref="member">xlabort</ref>(error);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xljump.c"/>
  </compounddef>
</doxygen>
