<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pm__linux_2finddefault_8c" kind="file" language="C++">
    <compoundname>finddefault.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="portmidi_8h" local="yes">portmidi.h</includes>
    <incdepgraph>
      <node id="30930">
        <label>stdint.h</label>
      </node>
      <node id="30926">
        <label>stdlib.h</label>
      </node>
      <node id="30925">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/finddefault.c</label>
        <link refid="pm_linux/finddefault.c"/>
        <childnode refid="30926" relation="include">
        </childnode>
        <childnode refid="30927" relation="include">
        </childnode>
        <childnode refid="30928" relation="include">
        </childnode>
        <childnode refid="30929" relation="include">
        </childnode>
      </node>
      <node id="30928">
        <label>string.h</label>
      </node>
      <node id="30929">
        <label>portmidi.h</label>
        <link refid="portmidi_8h"/>
        <childnode refid="30930" relation="include">
        </childnode>
      </node>
      <node id="30927">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pm__linux_2finddefault_8c_1a41f16f17393bc7dfd8c3a44a6ba595ba" prot="public" static="no">
        <name>STRING_MAX</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/finddefault.c" line="10" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/finddefault.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pm__linux_2finddefault_8c_1a733f8a624f52eeaff05bbc42398c947d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void skip_spaces</definition>
        <argsstring>(FILE *inf)</argsstring>
        <name>skip_spaces</name>
        <param>
          <type>FILE *</type>
          <declname>inf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/finddefault.c" line="13" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/finddefault.c" bodystart="13" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="pm__linux_2finddefault_8c_1af81a7534a318b8134777927b6515bece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int match_string</definition>
        <argsstring>(FILE *inf, char *s)</argsstring>
        <name>match_string</name>
        <param>
          <type>FILE *</type>
          <declname>inf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/finddefault.c" line="21" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/finddefault.c" bodystart="21" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="pm__linux_2finddefault_8c_1a8e39a278d0d62cddbbe92d16022a97ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref></type>
        <definition>PmDeviceID find_default_device</definition>
        <argsstring>(char *path, int input, PmDeviceID id)</argsstring>
        <name>find_default_device</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/finddefault.c" line="32" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/finddefault.c" bodystart="32" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>finddefault.c<sp/>--<sp/>find_default_device()<sp/>implementation</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/>Roger<sp/>Dannenberg,<sp/>Jan<sp/>2009</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portmidi_8h" kindref="compound">portmidi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="pm__linux_2finddefault_8c_1a41f16f17393bc7dfd8c3a44a6ba595ba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRING_MAX<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>skip<sp/>over<sp/>spaces,<sp/>return<sp/>first<sp/>non-space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="pm__linux_2finddefault_8c_1a733f8a624f52eeaff05bbc42398c947d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pm__linux_2finddefault_8c_1a733f8a624f52eeaff05bbc42398c947d" kindref="member">skip_spaces</ref>(FILE<sp/>*inf)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(isspace(c<sp/>=<sp/>getc(inf)))<sp/>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>ungetc(c,<sp/>inf);</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>trim<sp/>leading<sp/>spaces<sp/>and<sp/>match<sp/>a<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="pm__linux_2finddefault_8c_1af81a7534a318b8134777927b6515bece" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pm__linux_2finddefault_8c_1af81a7534a318b8134777927b6515bece" kindref="member">match_string</ref>(FILE<sp/>*inf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pm__linux_2finddefault_8c_1a733f8a624f52eeaff05bbc42398c947d" kindref="member">skip_spaces</ref>(inf);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*s<sp/>&amp;&amp;<sp/>*s<sp/>==<sp/>getc(inf))<sp/>s++;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*s<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment">/*<sp/>Parse<sp/>preference<sp/>files,<sp/>find<sp/>default<sp/>device,<sp/>search<sp/>devices<sp/>--</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="pmmacosxcm_8h_1a8e39a278d0d62cddbbe92d16022a97ff" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref><sp/><ref refid="pm__linux_2finddefault_8c_1a8e39a278d0d62cddbbe92d16022a97ff" kindref="member">find_default_device</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>input,<sp/><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>path<sp/>--<sp/>the<sp/>name<sp/>of<sp/>the<sp/>preference<sp/>we<sp/>are<sp/>searching<sp/>for</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/>input<sp/>--<sp/>true<sp/>iff<sp/>this<sp/>is<sp/>an<sp/>input<sp/>device</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/>id<sp/>--<sp/>current<sp/>default<sp/>device<sp/>id</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/>returns<sp/>matching<sp/>device<sp/>id<sp/>if<sp/>found,<sp/>otherwise<sp/>id</highlight></codeline>
<codeline lineno="37"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pref_2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/.java/.userPrefs/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pref_3<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;prefs.xml&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pref_1<sp/>=<sp/><ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(</highlight><highlight class="stringliteral">&quot;HOME&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*full_name,<sp/>*path_ptr;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*inf;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pref_1)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>nopref;<sp/></highlight><highlight class="comment">//<sp/>cannot<sp/>find<sp/>preference<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>full_name<sp/>will<sp/>be<sp/>larger<sp/>than<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>full_name<sp/><sp/>=<sp/>malloc(strlen(pref_1)<sp/>+<sp/>strlen(pref_2)<sp/>+<sp/>strlen(pref_3)<sp/>+</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strlen(path)<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(full_name,<sp/>pref_1);<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(full_name,<sp/>pref_2);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>all<sp/>but<sp/>last<sp/>path<sp/>segment<sp/>to<sp/>full_name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*path<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>path++;<sp/></highlight><highlight class="comment">//<sp/>skip<sp/>initial<sp/>slash<sp/>in<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>path_ptr<sp/>=<sp/>strrchr(path,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path_ptr)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>up<sp/>to<sp/>slash<sp/>after<sp/>full_name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_ptr++;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref><sp/>=<sp/>strlen(full_name);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(full_name<sp/>+<sp/>offset,<sp/>path,<sp/>path_ptr<sp/>-<sp/>path);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_name[offset<sp/>+<sp/>path_ptr<sp/>-<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_ptr<sp/>=<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(full_name,<sp/>pref_3);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>inf<sp/>=<sp/>fopen(full_name,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inf)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>nopref;<sp/></highlight><highlight class="comment">//<sp/>cannot<sp/>open<sp/>preference<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>not<sp/>going<sp/>to<sp/>build<sp/>or<sp/>link<sp/>in<sp/>a<sp/>full<sp/>XML<sp/>parser.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Instead,<sp/>find<sp/>the<sp/>path<sp/>string<sp/>and<sp/>quoute.<sp/>Then,<sp/>look<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;value&quot;,<sp/>&quot;=&quot;,<sp/>quote.<sp/>Then<sp/>get<sp/>string<sp/>up<sp/>to<sp/>quote.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>getc(inf))<sp/>!=<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pref_str[<ref refid="pm__linux_2finddefault_8c_1a41f16f17393bc7dfd8c3a44a6ba595ba" kindref="member">STRING_MAX</ref>];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>scan<sp/>up<sp/>to<sp/>quote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>for<sp/>quote<sp/>string<sp/>quote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="pm__linux_2finddefault_8c_1af81a7534a318b8134777927b6515bece" kindref="member">match_string</ref>(inf,<sp/>path_ptr))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>path<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getc(inf)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>path<sp/>not<sp/>found,<sp/>keep<sp/>scanning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="pm__linux_2finddefault_8c_1af81a7534a318b8134777927b6515bece" kindref="member">match_string</ref>(inf,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>nopref;<sp/></highlight><highlight class="comment">//<sp/>value<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="pm__linux_2finddefault_8c_1af81a7534a318b8134777927b6515bece" kindref="member">match_string</ref>(inf,<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>nopref;<sp/></highlight><highlight class="comment">//<sp/>=<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="pm__linux_2finddefault_8c_1af81a7534a318b8134777927b6515bece" kindref="member">match_string</ref>(inf,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>nopref;<sp/></highlight><highlight class="comment">//<sp/>quote<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>read<sp/>the<sp/>value<sp/>up<sp/>to<sp/>the<sp/>close<sp/>quote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="pm__linux_2finddefault_8c_1a41f16f17393bc7dfd8c3a44a6ba595ba" kindref="member">STRING_MAX</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>getc(inf))<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pref_str[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>STRING_MAX)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>value<sp/>too<sp/>long,<sp/>ignore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pref_str[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/><ref refid="pminternal_8h_1a7c21a21a0dbab33bf9f3bb9122879142" kindref="member">pm_find_default_device</ref>(pref_str,<sp/>input);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/><ref refid="portmidi_8h_1acffb28dc8bc99dcae9f6a7f35945e1b5" kindref="member">pmNoDevice</ref>)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/>nopref:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/finddefault.c"/>
  </compounddef>
</doxygen>
