<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="suil_2waflib_2_tools_2winres_8py" kind="file" language="Python">
    <compoundname>winres.py</compoundname>
    <innerclass refid="classwaflib_1_1_tools_1_1winres_1_1rc__parser" prot="public">waflib::Tools::winres::rc_parser</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1winres_1_1winrc" prot="public">waflib::Tools::winres::winrc</innerclass>
    <innernamespace refid="namespacewaflib_1_1_tools_1_1winres">waflib::Tools::winres</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>encoding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WARNING!<sp/>Do<sp/>not<sp/>edit!<sp/>http://waf.googlecode.com/git/docs/wafbook/single.html#_obtaining_the_waf_file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re,traceback</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>waflib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Task,Logs,Utils</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_task_gen" kindref="compound">waflib.TaskGen</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>extension</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools" kindref="compound">waflib.Tools</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>c_preproc</highlight></codeline>
<codeline lineno="9"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref>(</highlight><highlight class="stringliteral">&apos;.rc&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1winres_1ac3e0ca77b048ed70a3403f4bbda55f9e" kindref="member">rc_file</ref>(self,node):</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>obj_ext=</highlight><highlight class="stringliteral">&apos;.rc.o&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.env[</highlight><highlight class="stringliteral">&apos;WINRC_TGT_F&apos;</highlight><highlight class="normal">]==</highlight><highlight class="stringliteral">&apos;/fo&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj_ext=</highlight><highlight class="stringliteral">&apos;.res&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>rctask=self.create_task(</highlight><highlight class="stringliteral">&apos;winrc&apos;</highlight><highlight class="normal">,node,node.change_ext(obj_ext))</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.compiled_tasks.append(rctask)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.compiled_tasks=[rctask]</highlight></codeline>
<codeline lineno="19"><highlight class="normal">re_lines=re.compile(</highlight><highlight class="stringliteral">&apos;(?:^[<sp/>\t]*(#|%:)[<sp/>\t]*(ifdef|ifndef|if|else|elif|endif|include|import|define|undef|pragma)[<sp/>\t]*(.*?)\s*$)|&apos;</highlight><highlight class="stringliteral">&apos;(?:^\w+[<sp/>\t]*(ICON|BITMAP|CURSOR|HTML|FONT|MESSAGETABLE|TYPELIB|REGISTRY|D3DFX)[<sp/>\t]*(.*?)\s*$)&apos;</highlight><highlight class="normal">,re.IGNORECASE|re.MULTILINE)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">rc_parser(c_preproc.c_parser):</highlight></codeline>
<codeline lineno="21" refid="classwaflib_1_1_tools_1_1winres_1_1rc__parser_1af948ecfd6555b3bf5134319a34f469a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1winres_1_1rc__parser_1af948ecfd6555b3bf5134319a34f469a4" kindref="member">filter_comments</ref>(self,filepath):</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code=Utils.readf(filepath)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c_preproc.use_trigraphs:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1af69473f95324d0c0f91fdfb1d1a00360" kindref="member">for</ref>(a,b)</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>c_preproc.trig_def:code=code.split(a).join(b)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code=c_preproc.re_nl.sub(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,code)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code=c_preproc.re_cpp.sub(c_preproc.repl,code)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret=[]</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>re.finditer(re_lines,code):</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>m.group(2):</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.append((m.group(2),m.group(3)))</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.append((</highlight><highlight class="stringliteral">&apos;include&apos;</highlight><highlight class="normal">,m.group(5)))</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret</highlight></codeline>
<codeline lineno="34" refid="classwaflib_1_1_tools_1_1winres_1_1rc__parser_1ad526be39acab6315dcb188e48d9d506e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1winres_1_1rc__parser_1ad526be39acab6315dcb188e48d9d506e" kindref="member">addlines</ref>(self,node):</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.currentnode_stack.append(node.parent)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filepath=node.abspath()</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_tools_1_1c__preproc_1_1c__parser_1af84f8750efedc8bc34ade1af8755640e" kindref="member">count_files</ref>+=1</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_tools_1_1c__preproc_1_1c__parser_1af84f8750efedc8bc34ade1af8755640e" kindref="member">count_files</ref>&gt;c_preproc.recursion_limit:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classwaflib_1_1_tools_1_1c__preproc_1_1_preproc_error" kindref="compound">c_preproc.PreprocError</ref>(</highlight><highlight class="stringliteral">&quot;recursion<sp/>limit<sp/>exceeded&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc=self.<ref refid="classwaflib_1_1_tools_1_1c__preproc_1_1c__parser_1a28b1dbbf9b3188c9c75cefc68446067c" kindref="member">parse_cache</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.debug(</highlight><highlight class="stringliteral">&apos;preproc:<sp/>reading<sp/>file<sp/>%r&apos;</highlight><highlight class="normal">,filepath)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lns=pc[filepath]</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.lines.extend(lns)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines=self.<ref refid="classwaflib_1_1_tools_1_1winres_1_1rc__parser_1af948ecfd6555b3bf5134319a34f469a4" kindref="member">filter_comments</ref>(filepath)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.append((c_preproc.POPFILE,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.reverse()</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc[filepath]=lines</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.lines.extend(lines)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>IOError:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classwaflib_1_1_tools_1_1c__preproc_1_1_preproc_error" kindref="compound">c_preproc.PreprocError</ref>(</highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>read<sp/>the<sp/>file<sp/>%s&quot;</highlight><highlight class="normal">%filepath)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Logs.verbose&gt;0:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.error(</highlight><highlight class="stringliteral">&quot;parsing<sp/>%s<sp/>failed&quot;</highlight><highlight class="normal">%filepath)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traceback.print_exc()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1winres_1_1winrc" kindref="compound">winrc</ref>(<ref refid="classwaflib_1_1_task_1_1_task" kindref="compound">Task.Task</ref>):</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${WINRC}<sp/>${WINRCFLAGS}<sp/>${CPPPATH_ST:INCPATHS}<sp/>${DEFINES_ST:DEFINES}<sp/>${WINRC_TGT_F}<sp/>${TGT}<sp/>${WINRC_SRC_F}<sp/>${SRC}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classwaflib_1_1_tools_1_1winres_1_1winrc_1a7a306976a792ece0336a2e4a2cccf0e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1winres_1_1winrc_1a7a306976a792ece0336a2e4a2cccf0e8" kindref="member">scan</ref>(self):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp=<ref refid="classwaflib_1_1_tools_1_1winres_1_1rc__parser" kindref="compound">rc_parser</ref>(self.generator.includes_nodes)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.start(self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>[0],self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes=tmp.nodes</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names=tmp.names</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Logs.verbose:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.debug(</highlight><highlight class="stringliteral">&apos;deps:<sp/>deps<sp/>for<sp/>%s:<sp/>%r;<sp/>unresolved<sp/>%r&apos;</highlight><highlight class="normal">%(<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(self),nodes,names))</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref>(nodes,names)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1winres_1a61d49dde1a942da70092bb59fe817f18" kindref="member">configure</ref>(conf):</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>v=conf.env</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;WINRC_TGT_F&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-o&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;WINRC_SRC_F&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-i&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>conf.env.WINRC:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>v.CC_NAME==</highlight><highlight class="stringliteral">&apos;msvc&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.find_program(</highlight><highlight class="stringliteral">&apos;RC&apos;</highlight><highlight class="normal">,var=</highlight><highlight class="stringliteral">&apos;WINRC&apos;</highlight><highlight class="normal">,path_list=v[</highlight><highlight class="stringliteral">&apos;PATH&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;WINRC_TGT_F&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;/fo&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;WINRC_SRC_F&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.find_program(</highlight><highlight class="stringliteral">&apos;windres&apos;</highlight><highlight class="normal">,var=</highlight><highlight class="stringliteral">&apos;WINRC&apos;</highlight><highlight class="normal">,path_list=v[</highlight><highlight class="stringliteral">&apos;PATH&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>conf.env.WINRC:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;winrc<sp/>was<sp/>not<sp/>found!&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;WINRCFLAGS&apos;</highlight><highlight class="normal">]=[]</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/waflib/Tools/winres.py"/>
  </compounddef>
</doxygen>
