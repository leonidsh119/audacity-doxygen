<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_sequence_test_8cpp" kind="file" language="C++">
    <compoundname>SequenceTest.cpp</compoundname>
    <includes refid="_sequence_8h" local="yes">Sequence.h</includes>
    <includes refid="_dir_manager_8h" local="yes">DirManager.h</includes>
    <includes local="no">wx/hash.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="60778">
        <label>wx/hashmap.h</label>
      </node>
      <node id="60772">
        <label>wx/ffile.h</label>
      </node>
      <node id="60769">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="60765" relation="include">
        </childnode>
        <childnode refid="60762" relation="include">
        </childnode>
        <childnode refid="60770" relation="include">
        </childnode>
        <childnode refid="60771" relation="include">
        </childnode>
      </node>
      <node id="60773">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="60774" relation="include">
        </childnode>
        <childnode refid="60765" relation="include">
        </childnode>
      </node>
      <node id="60779">
        <label>wx/utils.h</label>
      </node>
      <node id="60776">
        <label>wx/list.h</label>
      </node>
      <node id="60766">
        <label>wx/defs.h</label>
      </node>
      <node id="60767">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="60762" relation="include">
        </childnode>
        <childnode refid="60768" relation="include">
        </childnode>
      </node>
      <node id="60777">
        <label>wx/filename.h</label>
      </node>
      <node id="60760">
        <label>Sequence.h</label>
        <link refid="_sequence_8h"/>
        <childnode refid="60761" relation="include">
        </childnode>
        <childnode refid="60762" relation="include">
        </childnode>
        <childnode refid="60763" relation="include">
        </childnode>
        <childnode refid="60764" relation="include">
        </childnode>
        <childnode refid="60769" relation="include">
        </childnode>
        <childnode refid="60771" relation="include">
        </childnode>
        <childnode refid="60773" relation="include">
        </childnode>
        <childnode refid="60767" relation="include">
        </childnode>
      </node>
      <node id="60765">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="60761">
        <label>vector</label>
      </node>
      <node id="60759">
        <label>C:/_dev/OpenU/Audacity/audacity/tests/SequenceTest.cpp</label>
        <link refid="SequenceTest.cpp"/>
        <childnode refid="60760" relation="include">
        </childnode>
        <childnode refid="60775" relation="include">
        </childnode>
        <childnode refid="60780" relation="include">
        </childnode>
        <childnode refid="60761" relation="include">
        </childnode>
        <childnode refid="60781" relation="include">
        </childnode>
      </node>
      <node id="60763">
        <label>wx/dynarray.h</label>
      </node>
      <node id="60762">
        <label>wx/string.h</label>
      </node>
      <node id="60775">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="60776" relation="include">
        </childnode>
        <childnode refid="60762" relation="include">
        </childnode>
        <childnode refid="60777" relation="include">
        </childnode>
        <childnode refid="60778" relation="include">
        </childnode>
        <childnode refid="60779" relation="include">
        </childnode>
        <childnode refid="60767" relation="include">
        </childnode>
        <childnode refid="60769" relation="include">
        </childnode>
      </node>
      <node id="60768">
        <label>wx/arrstr.h</label>
      </node>
      <node id="60781">
        <label>iostream</label>
      </node>
      <node id="60774">
        <label>wx/thread.h</label>
      </node>
      <node id="60780">
        <label>wx/hash.h</label>
      </node>
      <node id="60770">
        <label>stdio.h</label>
      </node>
      <node id="60764">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="60765" relation="include">
        </childnode>
        <childnode refid="60766" relation="include">
        </childnode>
        <childnode refid="60767" relation="include">
        </childnode>
      </node>
      <node id="60771">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="60768" relation="include">
        </childnode>
        <childnode refid="60763" relation="include">
        </childnode>
        <childnode refid="60772" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_sequence_test" prot="public">SequenceTest</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_sequence_test_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/tests/SequenceTest.cpp" line="136" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/tests/SequenceTest.cpp" bodystart="136" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="_sequence_test_8cpp_1ab04da9471a6d6ff7e7a500fac17f9247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ShowWarningDialog</definition>
        <argsstring>(wxWindow *parent, wxString internalDialogName, wxString message)</argsstring>
        <name>ShowWarningDialog</name>
        <param>
          <type>wxWindow *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>wxString</type>
          <declname>internalDialogName</declname>
        </param>
        <param>
          <type>wxString</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/tests/SequenceTest.cpp" line="157" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/tests/SequenceTest.cpp" bodystart="157" bodyend="162"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sequence_8h" kindref="compound">Sequence.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_dir_manager_8h" kindref="compound">DirManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/hash.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_sequence_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sequence_test" kindref="compound">SequenceTest</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref><sp/>*mSequence;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*mDirManager;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>mMemorySequence;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16" refid="class_sequence_test_1a12cefc766b0c21abc5d638be1d5abd7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_sequence_test_1a12cefc766b0c21abc5d638be1d5abd7d" kindref="member">SequenceTest</ref>()</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==&gt;<sp/>Testing<sp/>Sequence\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srand(<ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_sequence_test_1a66af366ccd7b3014169a347e71e802d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sequence_test_1a66af366ccd7b3014169a347e71e802d3" kindref="member">SetUp</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_dir_manager_1aeaa74f74860153cd04044f5212d3da82" kindref="member">DirManager::SetTempDir</ref>(</highlight><highlight class="stringliteral">&quot;/tmp/sequence-test-dir&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDirManager<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_dir_manager" kindref="compound">DirManager</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSequence<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref>(mDirManager,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMemorySequence.clear();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_sequence_test_1aff2faa249785dd39655f20ccb06fd749" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sequence_test_1aff2faa249785dd39655f20ccb06fd749" kindref="member">TearDown</ref>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mSequence;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mDirManager;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMemorySequence.clear();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_sequence_test_1a51c07afeba3fe635d867e78dfb11e5d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sequence_test_1a51c07afeba3fe635d867e78dfb11e5d5" kindref="member">TestReferencing</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Thrash<sp/>the<sp/>Sequence<sp/>through<sp/>repeated<sp/>appends,<sp/>deletes,<sp/>etc.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Then<sp/>delete<sp/>the<sp/>sequence<sp/>and<sp/>ensure<sp/>that<sp/>all<sp/>blocks<sp/>have</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>been<sp/>unreferenced<sp/>to<sp/>the<sp/>point<sp/>of<sp/>deletion<sp/>--<sp/>the<sp/>dirmanager</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>should<sp/>be<sp/>empty.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tafter<sp/>thrashing<sp/>the<sp/>sequence<sp/>and<sp/>deleting<sp/>it,<sp/>all<sp/>block<sp/>files<sp/>should<sp/>have<sp/>been<sp/>deleted...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="mm_8c_1a16c5a58c6350aaae15268b27e4e5d5ba" kindref="member">std::flush</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appendBufLen<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(mSequence-&gt;<ref refid="class_sequence_1ab55738fa6a1ca2941242bae22a37c343" kindref="member">GetMaxBlockSize</ref>()<sp/>*<sp/>1.4);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>appendBuf<sp/>=<sp/><ref refid="_sample_format_8cpp_1a22bcfb288f8c9f67c6f21de603e25a92" kindref="member">NewSamples</ref>(appendBufLen,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSequence-&gt;<ref refid="class_sequence_1af9f0194f9270cd7dda4e2629d3f05515" kindref="member">Append</ref>(appendBuf,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>appendBufLen);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref><sp/>*tmpSequence;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>append<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSequence-&gt;<ref refid="class_sequence_1af9f0194f9270cd7dda4e2629d3f05515" kindref="member">Append</ref>(appendBuf,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>appendBufLen);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy/paste<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s0<sp/>=<sp/>rand()%mSequence-&gt;<ref refid="class_sequence_1a6187391eb53aa896f5dda602c87d0e7f" kindref="member">GetNumSamples</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>rand()%(mSequence-&gt;<ref refid="class_sequence_1a6187391eb53aa896f5dda602c87d0e7f" kindref="member">GetNumSamples</ref>()<sp/>-<sp/>s0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSequence-&gt;<ref refid="class_sequence_1a2ddb679457dc9059bb328f194cdbe6b3" kindref="member">Copy</ref>(s0,<sp/>s0+len,<sp/>&amp;tmpSequence);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref><sp/>=<sp/>rand()%mSequence-&gt;<ref refid="class_sequence_1a6187391eb53aa896f5dda602c87d0e7f" kindref="member">GetNumSamples</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSequence-&gt;<ref refid="class_sequence_1ae1be03bcb01e4cc477de4d1cf8eae19c" kindref="member">Paste</ref>(dest,<sp/>tmpSequence);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tmpSequence;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>del<sp/>=<sp/>rand()%mSequence-&gt;<ref refid="class_sequence_1a6187391eb53aa896f5dda602c87d0e7f" kindref="member">GetNumSamples</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dellen<sp/>=<sp/>rand()%((mSequence-&gt;<ref refid="class_sequence_1a6187391eb53aa896f5dda602c87d0e7f" kindref="member">GetNumSamples</ref>()-del)/2);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSequence-&gt;<ref refid="class_sequence_1a935d75f6972115c5a6ca335601780aaf" kindref="member">Delete</ref>(del,<sp/>dellen);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mSequence;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSequence<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(mDirManager-&gt;blockFileHash-&gt;GetCount()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ok\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_sequence_test_1aed5df341cc4c34339b7c174828fea260" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sequence_test_1aed5df341cc4c34339b7c174828fea260" kindref="member">TestSetGarbageInput</ref>()</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tSequence::Set()<sp/>should<sp/>return<sp/>false<sp/>(and<sp/>not<sp/>crash)<sp/>if<sp/>given<sp/>garbage<sp/>input...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="mm_8c_1a16c5a58c6350aaae15268b27e4e5d5ba" kindref="member">std::flush</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>10<sp/>samples<sp/>in<sp/>the<sp/>sequence<sp/>so<sp/>the<sp/>Set<sp/>requests<sp/>will</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>be<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>appendBuf<sp/>=<sp/><ref refid="_sample_format_8cpp_1a22bcfb288f8c9f67c6f21de603e25a92" kindref="member">NewSamples</ref>(10,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSequence-&gt;<ref refid="class_sequence_1af9f0194f9270cd7dda4e2629d3f05515" kindref="member">Append</ref>(appendBuf,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>10);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>fail,<sp/>&quot;set&quot;<sp/>buffer<sp/>should<sp/>not<sp/>be<sp/>null<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(mSequence-&gt;<ref refid="class_sequence_1abe72411eeff43e0f5117f6ebacc92b51" kindref="member">Set</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>0,<sp/>10)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>fail,<sp/>-5<sp/>is<sp/>not<sp/>a<sp/>sample<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(mSequence-&gt;<ref refid="class_sequence_1abe72411eeff43e0f5117f6ebacc92b51" kindref="member">Set</ref>(appendBuf,<sp/>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref>)-5,<sp/>0,<sp/>10)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>fail,<sp/>-1<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(mSequence-&gt;<ref refid="class_sequence_1abe72411eeff43e0f5117f6ebacc92b51" kindref="member">Set</ref>(appendBuf,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>-1,<sp/>10)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>fail,<sp/>the<sp/>sequence<sp/>is<sp/>only<sp/>10<sp/>samples<sp/>long<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(mSequence-&gt;<ref refid="class_sequence_1abe72411eeff43e0f5117f6ebacc92b51" kindref="member">Set</ref>(appendBuf,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>0,<sp/>15)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ok\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_sequence_test_1a7da68416d63f58aa2ee7e1895181d930" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sequence_test_1a7da68416d63f58aa2ee7e1895181d930" kindref="member">TestGetGarbageInput</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tSequence::Get()<sp/>should<sp/>return<sp/>false<sp/>(and<sp/>not<sp/>crash)<sp/>if<sp/>given<sp/>garbage<sp/>input...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="mm_8c_1a16c5a58c6350aaae15268b27e4e5d5ba" kindref="member">std::flush</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>10<sp/>samples<sp/>in<sp/>the<sp/>sequence<sp/>so<sp/>the<sp/>Set<sp/>requests<sp/>will</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>be<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>appendBuf<sp/>=<sp/><ref refid="_sample_format_8cpp_1a22bcfb288f8c9f67c6f21de603e25a92" kindref="member">NewSamples</ref>(10,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSequence-&gt;<ref refid="class_sequence_1af9f0194f9270cd7dda4e2629d3f05515" kindref="member">Append</ref>(appendBuf,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>10);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>fail,<sp/>&quot;get&quot;<sp/>buffer<sp/>should<sp/>not<sp/>be<sp/>null<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(mSequence-&gt;<ref refid="class_sequence_1a047ff72fc3914414cbb6e20316e0ede9" kindref="member">Get</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>0,<sp/>10)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>fail,<sp/>-1<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(mSequence-&gt;<ref refid="class_sequence_1a047ff72fc3914414cbb6e20316e0ede9" kindref="member">Get</ref>(appendBuf,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>-1,<sp/>10)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>fail,<sp/>the<sp/>sequence<sp/>is<sp/>only<sp/>10<sp/>samples<sp/>long<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(mSequence-&gt;<ref refid="class_sequence_1a047ff72fc3914414cbb6e20316e0ede9" kindref="member">Get</ref>(appendBuf,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>0,<sp/>15)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ok\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="_sequence_test_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_sequence_test_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_sequence_test" kindref="compound">SequenceTest</ref><sp/>tester;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>tester.<ref refid="class_sequence_test_1a66af366ccd7b3014169a347e71e802d3" kindref="member">SetUp</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>tester.<ref refid="class_sequence_test_1a51c07afeba3fe635d867e78dfb11e5d5" kindref="member">TestReferencing</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>tester.<ref refid="class_sequence_test_1aff2faa249785dd39655f20ccb06fd749" kindref="member">TearDown</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>tester.<ref refid="class_sequence_test_1a66af366ccd7b3014169a347e71e802d3" kindref="member">SetUp</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>tester.<ref refid="class_sequence_test_1aed5df341cc4c34339b7c174828fea260" kindref="member">TestSetGarbageInput</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>tester.<ref refid="class_sequence_test_1aff2faa249785dd39655f20ccb06fd749" kindref="member">TearDown</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>tester.<ref refid="class_sequence_test_1a66af366ccd7b3014169a347e71e802d3" kindref="member">SetUp</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>tester.<ref refid="class_sequence_test_1a7da68416d63f58aa2ee7e1895181d930" kindref="member">TestGetGarbageInput</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>tester.<ref refid="class_sequence_test_1aff2faa249785dd39655f20ccb06fd749" kindref="member">TearDown</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">wxWindow;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="_sequence_test_8cpp_1ab04da9471a6d6ff7e7a500fac17f9247" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_sequence_test_8cpp_1ab04da9471a6d6ff7e7a500fac17f9247" kindref="member">ShowWarningDialog</ref>(wxWindow<sp/>*parent,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>internalDialogName,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>message)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;warning:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>message<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Indentation<sp/>settings<sp/>for<sp/>Vim<sp/>and<sp/>Emacs<sp/>and<sp/>unique<sp/>identifier<sp/>for<sp/>Arch,<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>version<sp/>control<sp/>system.<sp/>Please<sp/>do<sp/>not<sp/>modify<sp/>past<sp/>this<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>Variables:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>c-basic-offset:<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>indent-tabs-mode:<sp/>nil</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>End:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vim:<sp/>et<sp/>sts=3<sp/>sw=3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arch-tag:<sp/>854b5b56-912e-4903-97f6-55314045153d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/tests/SequenceTest.cpp"/>
  </compounddef>
</doxygen>
