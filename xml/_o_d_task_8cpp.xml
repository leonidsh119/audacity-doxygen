<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_o_d_task_8cpp" kind="file" language="C++">
    <compoundname>ODTask.cpp</compoundname>
    <includes refid="_o_d_task_8h" local="yes">ODTask.h</includes>
    <includes refid="_o_d_manager_8h" local="yes">ODManager.h</includes>
    <includes refid="_wave_track_8h" local="yes">../WaveTrack.h</includes>
    <includes refid="_project_8h" local="yes">../Project.h</includes>
    <includes refid="_undo_manager_8h" local="yes">../UndoManager.h</includes>
    <incdepgraph>
      <node id="50089">
        <label>wx/dir.h</label>
      </node>
      <node id="50098">
        <label>wx/choice.h</label>
      </node>
      <node id="50138">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="50056" relation="include">
        </childnode>
        <childnode refid="50066" relation="include">
        </childnode>
        <childnode refid="50122" relation="include">
        </childnode>
        <childnode refid="50054" relation="include">
        </childnode>
        <childnode refid="50061" relation="include">
        </childnode>
        <childnode refid="50070" relation="include">
        </childnode>
        <childnode refid="50139" relation="include">
        </childnode>
        <childnode refid="50137" relation="include">
        </childnode>
        <childnode refid="50121" relation="include">
        </childnode>
        <childnode refid="50072" relation="include">
        </childnode>
        <childnode refid="50140" relation="include">
        </childnode>
        <childnode refid="50076" relation="include">
        </childnode>
      </node>
      <node id="50073">
        <label>wx/hashmap.h</label>
      </node>
      <node id="50126">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="50124">
        <label>wx/gauge.h</label>
      </node>
      <node id="50090">
        <label>wx/event.h</label>
      </node>
      <node id="50059">
        <label>wx/ffile.h</label>
      </node>
      <node id="50113">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="50068" relation="include">
        </childnode>
        <childnode refid="50105" relation="include">
        </childnode>
        <childnode refid="50114" relation="include">
        </childnode>
      </node>
      <node id="50053">
        <label>ODTask.h</label>
        <link refid="_o_d_task_8h"/>
        <childnode refid="50054" relation="include">
        </childnode>
        <childnode refid="50057" relation="include">
        </childnode>
        <childnode refid="50069" relation="include">
        </childnode>
        <childnode refid="50076" relation="include">
        </childnode>
        <childnode refid="50133" relation="include">
        </childnode>
      </node>
      <node id="50131">
        <label>wx/dcclient.h</label>
      </node>
      <node id="50088">
        <label>wx/cmdline.h</label>
      </node>
      <node id="50104">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="50068" relation="include">
        </childnode>
        <childnode refid="50105" relation="include">
        </childnode>
        <childnode refid="50106" relation="include">
        </childnode>
        <childnode refid="50107" relation="include">
        </childnode>
        <childnode refid="50102" relation="include">
        </childnode>
      </node>
      <node id="50120">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="50064" relation="include">
        </childnode>
        <childnode refid="50058" relation="include">
        </childnode>
        <childnode refid="50121" relation="include">
        </childnode>
      </node>
      <node id="50061">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="50056" relation="include">
        </childnode>
        <childnode refid="50058" relation="include">
        </childnode>
        <childnode refid="50062" relation="include">
        </childnode>
        <childnode refid="50063" relation="include">
        </childnode>
      </node>
      <node id="50080">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="50078">
        <label>wx/wxchar.h</label>
      </node>
      <node id="50130">
        <label>wx/frame.h</label>
      </node>
      <node id="50054">
        <label>ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="50055" relation="include">
        </childnode>
        <childnode refid="50056" relation="include">
        </childnode>
      </node>
      <node id="50106">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="50068" relation="include">
        </childnode>
      </node>
      <node id="50074">
        <label>wx/utils.h</label>
      </node>
      <node id="50134">
        <label>ODManager.h</label>
        <link refid="_o_d_manager_8h"/>
        <childnode refid="50076" relation="include">
        </childnode>
        <childnode refid="50053" relation="include">
        </childnode>
        <childnode refid="50054" relation="include">
        </childnode>
        <childnode refid="50055" relation="include">
        </childnode>
        <childnode refid="50133" relation="include">
        </childnode>
      </node>
      <node id="50123">
        <label>wx/evtloop.h</label>
      </node>
      <node id="50070">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="50067" relation="include">
        </childnode>
      </node>
      <node id="50096">
        <label>wx/timer.h</label>
      </node>
      <node id="50137">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="50075">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="50076" relation="include">
        </childnode>
        <childnode refid="50077" relation="include">
        </childnode>
      </node>
      <node id="50119">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="50109">
        <label>wx/fileconf.h</label>
      </node>
      <node id="50111">
        <label>map</label>
      </node>
      <node id="50141">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="50114">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="50068" relation="include">
        </childnode>
        <childnode refid="50106" relation="include">
        </childnode>
        <childnode refid="50104" relation="include">
        </childnode>
        <childnode refid="50105" relation="include">
        </childnode>
        <childnode refid="50112" relation="include">
        </childnode>
        <childnode refid="50113" relation="include">
        </childnode>
      </node>
      <node id="50139">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="50070" relation="include">
        </childnode>
      </node>
      <node id="50127">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="50056" relation="include">
        </childnode>
      </node>
      <node id="50125">
        <label>wx/stattext.h</label>
      </node>
      <node id="50095">
        <label>wx/socket.h</label>
      </node>
      <node id="50129">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="50105">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="50068" relation="include">
        </childnode>
      </node>
      <node id="50072">
        <label>wx/list.h</label>
      </node>
      <node id="50085">
        <label>wx/menu.h</label>
      </node>
      <node id="50067">
        <label>wx/defs.h</label>
      </node>
      <node id="50100">
        <label>wx/window.h</label>
      </node>
      <node id="50092">
        <label>wx/intl.h</label>
      </node>
      <node id="50122">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="50056" relation="include">
        </childnode>
        <childnode refid="50067" relation="include">
        </childnode>
        <childnode refid="50102" relation="include">
        </childnode>
        <childnode refid="50123" relation="include">
        </childnode>
        <childnode refid="50124" relation="include">
        </childnode>
        <childnode refid="50125" relation="include">
        </childnode>
        <childnode refid="50074" relation="include">
        </childnode>
      </node>
      <node id="50117">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="50068">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="50058" relation="include">
        </childnode>
        <childnode refid="50064" relation="include">
        </childnode>
      </node>
      <node id="50057">
        <label>../BlockFile.h</label>
        <link refid="_block_file_8h"/>
        <childnode refid="50058" relation="include">
        </childnode>
        <childnode refid="50059" relation="include">
        </childnode>
        <childnode refid="50060" relation="include">
        </childnode>
        <childnode refid="50061" relation="include">
        </childnode>
        <childnode refid="50063" relation="include">
        </childnode>
        <childnode refid="50066" relation="include">
        </childnode>
      </node>
      <node id="50110">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="50067" relation="include">
        </childnode>
        <childnode refid="50065" relation="include">
        </childnode>
        <childnode refid="50109" relation="include">
        </childnode>
        <childnode refid="50058" relation="include">
        </childnode>
        <childnode refid="50111" relation="include">
        </childnode>
        <childnode refid="50104" relation="include">
        </childnode>
        <childnode refid="50112" relation="include">
        </childnode>
        <childnode refid="50113" relation="include">
        </childnode>
        <childnode refid="50114" relation="include">
        </childnode>
      </node>
      <node id="50102">
        <label>wx/dialog.h</label>
      </node>
      <node id="50060">
        <label>wx/filename.h</label>
      </node>
      <node id="50101">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="50070" relation="include">
        </childnode>
        <childnode refid="50098" relation="include">
        </childnode>
        <childnode refid="50102" relation="include">
        </childnode>
        <childnode refid="50090" relation="include">
        </childnode>
        <childnode refid="50103" relation="include">
        </childnode>
        <childnode refid="50058" relation="include">
        </childnode>
        <childnode refid="50104" relation="include">
        </childnode>
        <childnode refid="50110" relation="include">
        </childnode>
        <childnode refid="50115" relation="include">
        </childnode>
      </node>
      <node id="50107">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="50108" relation="include">
        </childnode>
        <childnode refid="50088" relation="include">
        </childnode>
        <childnode refid="50109" relation="include">
        </childnode>
        <childnode refid="50092" relation="include">
        </childnode>
      </node>
      <node id="50082">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="50070" relation="include">
        </childnode>
        <childnode refid="50083" relation="include">
        </childnode>
        <childnode refid="50076" relation="include">
        </childnode>
        <childnode refid="50058" relation="include">
        </childnode>
        <childnode refid="50065" relation="include">
        </childnode>
        <childnode refid="50085" relation="include">
        </childnode>
        <childnode refid="50073" relation="include">
        </childnode>
        <childnode refid="50086" relation="include">
        </childnode>
        <childnode refid="50061" relation="include">
        </childnode>
        <childnode refid="50068" relation="include">
        </childnode>
      </node>
      <node id="50056">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="50099">
        <label>wx/grid.h</label>
      </node>
      <node id="50076">
        <label>vector</label>
      </node>
      <node id="50115">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="50056" relation="include">
        </childnode>
        <childnode refid="50083" relation="include">
        </childnode>
        <childnode refid="50116" relation="include">
        </childnode>
        <childnode refid="50117" relation="include">
        </childnode>
        <childnode refid="50065" relation="include">
        </childnode>
        <childnode refid="50092" relation="include">
        </childnode>
        <childnode refid="50058" relation="include">
        </childnode>
        <childnode refid="50118" relation="include">
        </childnode>
        <childnode refid="50106" relation="include">
        </childnode>
        <childnode refid="50104" relation="include">
        </childnode>
        <childnode refid="50070" relation="include">
        </childnode>
        <childnode refid="50077" relation="include">
        </childnode>
        <childnode refid="50119" relation="include">
        </childnode>
        <childnode refid="50120" relation="include">
        </childnode>
        <childnode refid="50122" relation="include">
        </childnode>
      </node>
      <node id="50065">
        <label>wx/dynarray.h</label>
      </node>
      <node id="50069">
        <label>../Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="50056" relation="include">
        </childnode>
        <childnode refid="50070" relation="include">
        </childnode>
        <childnode refid="50071" relation="include">
        </childnode>
        <childnode refid="50075" relation="include">
        </childnode>
        <childnode refid="50080" relation="include">
        </childnode>
        <childnode refid="50081" relation="include">
        </childnode>
        <childnode refid="50082" relation="include">
        </childnode>
        <childnode refid="50101" relation="include">
        </childnode>
        <childnode refid="50061" relation="include">
        </childnode>
        <childnode refid="50126" relation="include">
        </childnode>
        <childnode refid="50127" relation="include">
        </childnode>
        <childnode refid="50067" relation="include">
        </childnode>
        <childnode refid="50090" relation="include">
        </childnode>
        <childnode refid="50094" relation="include">
        </childnode>
        <childnode refid="50128" relation="include">
        </childnode>
        <childnode refid="50129" relation="include">
        </childnode>
        <childnode refid="50130" relation="include">
        </childnode>
        <childnode refid="50092" relation="include">
        </childnode>
        <childnode refid="50131" relation="include">
        </childnode>
        <childnode refid="50132" relation="include">
        </childnode>
      </node>
      <node id="50112">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="50068" relation="include">
        </childnode>
        <childnode refid="50106" relation="include">
        </childnode>
        <childnode refid="50105" relation="include">
        </childnode>
      </node>
      <node id="50058">
        <label>wx/string.h</label>
      </node>
      <node id="50086">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="50056" relation="include">
        </childnode>
        <childnode refid="50087" relation="include">
        </childnode>
        <childnode refid="50088" relation="include">
        </childnode>
        <childnode refid="50089" relation="include">
        </childnode>
        <childnode refid="50090" relation="include">
        </childnode>
        <childnode refid="50091" relation="include">
        </childnode>
        <childnode refid="50092" relation="include">
        </childnode>
        <childnode refid="50093" relation="include">
        </childnode>
        <childnode refid="50094" relation="include">
        </childnode>
        <childnode refid="50095" relation="include">
        </childnode>
        <childnode refid="50096" relation="include">
        </childnode>
        <childnode refid="50097" relation="include">
        </childnode>
        <childnode refid="50054" relation="include">
        </childnode>
        <childnode refid="50070" relation="include">
        </childnode>
      </node>
      <node id="50103">
        <label>wx/listbox.h</label>
      </node>
      <node id="50140">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="50094">
        <label>wx/log.h</label>
      </node>
      <node id="50079">
        <label>math.h</label>
      </node>
      <node id="50071">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="50072" relation="include">
        </childnode>
        <childnode refid="50058" relation="include">
        </childnode>
        <childnode refid="50060" relation="include">
        </childnode>
        <childnode refid="50073" relation="include">
        </childnode>
        <childnode refid="50074" relation="include">
        </childnode>
        <childnode refid="50068" relation="include">
        </childnode>
        <childnode refid="50061" relation="include">
        </childnode>
      </node>
      <node id="50077">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="50056" relation="include">
        </childnode>
        <childnode refid="50070" relation="include">
        </childnode>
        <childnode refid="50067" relation="include">
        </childnode>
        <childnode refid="50078" relation="include">
        </childnode>
        <childnode refid="50079" relation="include">
        </childnode>
      </node>
      <node id="50064">
        <label>wx/arrstr.h</label>
      </node>
      <node id="50133">
        <label>wx/wx.h</label>
      </node>
      <node id="50093">
        <label>wx/snglinst.h</label>
      </node>
      <node id="50136">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="50056" relation="include">
        </childnode>
        <childnode refid="50083" relation="include">
        </childnode>
        <childnode refid="50076" relation="include">
        </childnode>
        <childnode refid="50065" relation="include">
        </childnode>
        <childnode refid="50090" relation="include">
        </childnode>
        <childnode refid="50137" relation="include">
        </childnode>
        <childnode refid="50121" relation="include">
        </childnode>
        <childnode refid="50058" relation="include">
        </childnode>
        <childnode refid="50070" relation="include">
        </childnode>
        <childnode refid="50066" relation="include">
        </childnode>
        <childnode refid="50061" relation="include">
        </childnode>
      </node>
      <node id="50055">
        <label>wx/thread.h</label>
      </node>
      <node id="50128">
        <label>wx/dragimag.h</label>
      </node>
      <node id="50118">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="50083">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="50084" relation="include">
        </childnode>
      </node>
      <node id="50052">
        <label>C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODTask.cpp</label>
        <link refid="ODTask.cpp"/>
        <childnode refid="50053" relation="include">
        </childnode>
        <childnode refid="50134" relation="include">
        </childnode>
        <childnode refid="50135" relation="include">
        </childnode>
        <childnode refid="50069" relation="include">
        </childnode>
        <childnode refid="50142" relation="include">
        </childnode>
      </node>
      <node id="50097">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="50067" relation="include">
        </childnode>
        <childnode refid="50098" relation="include">
        </childnode>
        <childnode refid="50065" relation="include">
        </childnode>
        <childnode refid="50090" relation="include">
        </childnode>
        <childnode refid="50099" relation="include">
        </childnode>
        <childnode refid="50058" relation="include">
        </childnode>
        <childnode refid="50100" relation="include">
        </childnode>
      </node>
      <node id="50116">
        <label>set</label>
      </node>
      <node id="50132">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="50070" relation="include">
        </childnode>
      </node>
      <node id="50087">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="50121">
        <label>wx/longlong.h</label>
      </node>
      <node id="50135">
        <label>../WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="50136" relation="include">
        </childnode>
        <childnode refid="50066" relation="include">
        </childnode>
        <childnode refid="50138" relation="include">
        </childnode>
        <childnode refid="50070" relation="include">
        </childnode>
        <childnode refid="50122" relation="include">
        </childnode>
        <childnode refid="50076" relation="include">
        </childnode>
        <childnode refid="50137" relation="include">
        </childnode>
        <childnode refid="50121" relation="include">
        </childnode>
        <childnode refid="50055" relation="include">
        </childnode>
        <childnode refid="50141" relation="include">
        </childnode>
      </node>
      <node id="50142">
        <label>../UndoManager.h</label>
        <link refid="_undo_manager_8h"/>
        <childnode refid="50083" relation="include">
        </childnode>
        <childnode refid="50076" relation="include">
        </childnode>
        <childnode refid="50058" relation="include">
        </childnode>
        <childnode refid="50054" relation="include">
        </childnode>
        <childnode refid="50077" relation="include">
        </childnode>
      </node>
      <node id="50062">
        <label>stdio.h</label>
      </node>
      <node id="50066">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="50056" relation="include">
        </childnode>
        <childnode refid="50067" relation="include">
        </childnode>
        <childnode refid="50068" relation="include">
        </childnode>
      </node>
      <node id="50108">
        <label>locale.h</label>
      </node>
      <node id="50091">
        <label>wx/docview.h</label>
      </node>
      <node id="50084">
        <label>memory</label>
      </node>
      <node id="50063">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="50064" relation="include">
        </childnode>
        <childnode refid="50065" relation="include">
        </childnode>
        <childnode refid="50059" relation="include">
        </childnode>
      </node>
      <node id="50081">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="50058" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>ODTask.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Created<sp/>by<sp/>Michael<sp/>Chinen<sp/>(mchinen)</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Audacity(R)<sp/>is<sp/>copyright<sp/>(c)<sp/>1999-2008<sp/>Audacity<sp/>Team.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>License:<sp/>GPL<sp/>v2.<sp/><sp/>See<sp/>License.txt.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_task_8h" kindref="compound">ODTask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_manager_8h" kindref="compound">ODManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../WaveTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Project.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../UndoManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//temporarilly<sp/>commented<sp/>out<sp/>till<sp/>it<sp/>is<sp/>added<sp/>to<sp/>all<sp/>projects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;../Profiler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="_audacity_app_8cpp_1acc4d5c7c1aac56df05e7969028118e4b" kindref="member">DEFINE_EVENT_TYPE</ref>(EVT_ODTASK_COMPLETE)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="class_o_d_task" kindref="compound">ODTask</ref>::<ref refid="class_o_d_task" kindref="compound">ODTask</ref>()</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sTaskNumber=0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/>mPercentComplete=0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>mDoingTask=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>mTerminate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>mNeedsODUpdate=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>mIsRunning<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>mTaskNumber=sTaskNumber++;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>mDemandSample=0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//outside<sp/>code<sp/>must<sp/>ensure<sp/>this<sp/>task<sp/>is<sp/>not<sp/>scheduled<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_o_d_task_1a5aced75c29548ca75bd363b223d02216" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1a5aced75c29548ca75bd363b223d02216" kindref="member">ODTask::TerminateAndBlock</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//one<sp/>mutex<sp/>pair<sp/>for<sp/>the<sp/>value<sp/>of<sp/>mTerminate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1aa534f7033d7c3fc06a55f24aac50482a" kindref="member">mTerminateMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a38dd3cdea39254e59c505f5bfc9127e5" kindref="member">mTerminate</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//release<sp/>all<sp/>data<sp/>the<sp/>derived<sp/>class<sp/>may<sp/>have<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1aa534f7033d7c3fc06a55f24aac50482a" kindref="member">mTerminateMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>one<sp/>mutex<sp/>pair<sp/>for<sp/>the<sp/>exit<sp/>of<sp/>the<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a645d01cc507dfa49c3f7032753812bb2" kindref="member">mBlockUntilTerminateMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//TODO<sp/>lock<sp/>mTerminate?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a645d01cc507dfa49c3f7032753812bb2" kindref="member">mBlockUntilTerminateMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//wait<sp/>till<sp/>we<sp/>are<sp/>out<sp/>of<sp/>doSome()<sp/>to<sp/>terminate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a80d76840ecaa7efb4b5f42aadd84884c" kindref="member">Terminate</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_o_d_task_1af144a3997d1d3c9a26ee4d5fc7a36e3d" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1af144a3997d1d3c9a26ee4d5fc7a36e3d" kindref="member">ODTask::DoSome</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amountWork)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ac018f7c48b1eb6a096dba290b9c0c7b2" kindref="member">SetIsRunning</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a645d01cc507dfa49c3f7032753812bb2" kindref="member">mBlockUntilTerminateMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>printf(&quot;%s<sp/>%i<sp/>subtask<sp/>starting<sp/>on<sp/>new<sp/>thread<sp/>with<sp/>priority\n&quot;,<sp/>GetTaskName(),GetTaskNumber());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ad90a5f35f8ec6c50357c9328781ee542" kindref="member">mDoingTask</ref>=<ref refid="class_o_d_task_1a0f4099666c884667eebb9433bcc3d6c7" kindref="member">mTaskStarted</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>workUntil<sp/>=<sp/>amountWork+<ref refid="class_o_d_task_1a7b714f63d612ef0e18db8afcccd2223a" kindref="member">PercentComplete</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>periodically<sp/>to<sp/>see<sp/>if<sp/>we<sp/>should<sp/>exit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1aa534f7033d7c3fc06a55f24aac50482a" kindref="member">mTerminateMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_task_1a38dd3cdea39254e59c505f5bfc9127e5" kindref="member">mTerminate</ref>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1aa534f7033d7c3fc06a55f24aac50482a" kindref="member">mTerminateMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1ac018f7c48b1eb6a096dba290b9c0c7b2" kindref="member">SetIsRunning</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1a645d01cc507dfa49c3f7032753812bb2" kindref="member">mBlockUntilTerminateMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1aa534f7033d7c3fc06a55f24aac50482a" kindref="member">mTerminateMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a6348e90d6b64fd775ca020e69705d7aa" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_task_1a7a2b1b0c6d3d264424ebb543813a2c69" kindref="member">UsesCustomWorkUntilPercentage</ref>())</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>workUntil<sp/>=<sp/><ref refid="class_o_d_task_1a092be4b67467f5b5e717861bbc0b5e89" kindref="member">ComputeNextWorkUntilPercentageComplete</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(workUntil&lt;<ref refid="class_o_d_task_1a7b714f63d612ef0e18db8afcccd2223a" kindref="member">PercentComplete</ref>())</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>workUntil<sp/>=<sp/><ref refid="class_o_d_task_1a7b714f63d612ef0e18db8afcccd2223a" kindref="member">PercentComplete</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Do<sp/>Some<sp/>of<sp/>the<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1aa534f7033d7c3fc06a55f24aac50482a" kindref="member">mTerminateMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="class_o_d_task_1a7b714f63d612ef0e18db8afcccd2223a" kindref="member">PercentComplete</ref>()<sp/>&lt;<sp/>workUntil<sp/>&amp;&amp;<sp/><ref refid="class_o_d_task_1a7b714f63d612ef0e18db8afcccd2223a" kindref="member">PercentComplete</ref>()<sp/>&lt;<sp/>1.0<sp/>&amp;&amp;<sp/>!<ref refid="class_o_d_task_1a38dd3cdea39254e59c505f5bfc9127e5" kindref="member">mTerminate</ref>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxThread::This()-&gt;Yield();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//release<sp/>within<sp/>the<sp/>loop<sp/>so<sp/>we<sp/>can<sp/>cut<sp/>the<sp/>number<sp/>of<sp/>iterations<sp/>short</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1a45888cf5d09536d7e600f5c6afeb65f1" kindref="member">DoSomeInternal</ref>();<sp/></highlight><highlight class="comment">//keep<sp/>the<sp/>terminate<sp/>mutex<sp/>on<sp/>so<sp/>we<sp/>don&apos;t<sp/>remo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1aa534f7033d7c3fc06a55f24aac50482a" kindref="member">mTerminateMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>to<sp/>see<sp/>if<sp/>ondemand<sp/>has<sp/>been<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_task_1ab2451ca624aa10332d5faeaaae994fa9" kindref="member">GetNeedsODUpdate</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_o_d_task_1a7b714f63d612ef0e18db8afcccd2223a" kindref="member">PercentComplete</ref>()<sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1a441c889eed01e475ca55b8a6e6d8e100" kindref="member">ODUpdate</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//But<sp/>add<sp/>the<sp/>mutex<sp/>lock<sp/>back<sp/>before<sp/>we<sp/>check<sp/>the<sp/>value<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1aa534f7033d7c3fc06a55f24aac50482a" kindref="member">mTerminateMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1aa534f7033d7c3fc06a55f24aac50482a" kindref="member">mTerminateMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ad90a5f35f8ec6c50357c9328781ee542" kindref="member">mDoingTask</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1aa534f7033d7c3fc06a55f24aac50482a" kindref="member">mTerminateMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>it<sp/>is<sp/>not<sp/>done,<sp/>put<sp/>it<sp/>back<sp/>onto<sp/>the<sp/>ODManager<sp/>queue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_task_1a7b714f63d612ef0e18db8afcccd2223a" kindref="member">PercentComplete</ref>()<sp/>&lt;<sp/>1.0&amp;&amp;<sp/>!<ref refid="class_o_d_task_1a38dd3cdea39254e59c505f5bfc9127e5" kindref="member">mTerminate</ref>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1aef1bcdded223f015b22a0d1d439c23ad" kindref="member">ODManager::Instance</ref>()-&gt;<ref refid="class_o_d_manager_1a83ff55a20825529c681bede89cd1da8e" kindref="member">AddTask</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>did<sp/>a<sp/>bit<sp/>of<sp/>progress<sp/>-<sp/>we<sp/>should<sp/>allow<sp/>a<sp/>resave.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project_1a66167817d6645121d0bef796d32368cb" kindref="member">AudacityProject::AllProjectsDeleteLock</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_task_1a0abf3d0247adbf354be5d207d0800cec" kindref="member">IsTaskAssociatedWithProject</ref>(<ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mark<sp/>the<sp/>changes<sp/>so<sp/>that<sp/>the<sp/>project<sp/>can<sp/>be<sp/>resaved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;GetUndoManager()-&gt;SetODChangesFlag();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project_1a54a02858f8e34c2cda5eb9b3f3ff0522" kindref="member">AudacityProject::AllProjectsDeleteUnlock</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;%s<sp/>%i<sp/>is<sp/>%f<sp/>done\n&quot;,<sp/>GetTaskName(),GetTaskNumber(),PercentComplete());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>profiling,<sp/>uncomment<sp/>and<sp/>look<sp/>in<sp/>audacity.app/exe&apos;s<sp/>folder<sp/>for<sp/>AudacityProfile.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//static<sp/>int<sp/>tempLog<sp/>=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(++tempLog<sp/>%<sp/>5==0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//END_TASK_PROFILING(&quot;On<sp/>Demand<sp/>Drag<sp/>and<sp/>Drop<sp/>5<sp/>80<sp/>mb<sp/>files<sp/>into<sp/>audacity,<sp/>5<sp/>wavs<sp/>per<sp/>task&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//END_TASK_PROFILING(&quot;On<sp/>Demand<sp/>open<sp/>an<sp/>80<sp/>mb<sp/>wav<sp/>stereo<sp/>file&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEvent<sp/>event(<sp/>EVT_ODTASK_COMPLETE<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project_1a66167817d6645121d0bef796d32368cb" kindref="member">AudacityProject::AllProjectsDeleteLock</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_task_1a0abf3d0247adbf354be5d207d0800cec" kindref="member">IsTaskAssociatedWithProject</ref>(<ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]))</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>assumes<sp/>tasks<sp/>are<sp/>only<sp/>associated<sp/>with<sp/>one<sp/>project.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;GetEventHandler()-&gt;AddPendingEvent(event);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mark<sp/>the<sp/>changes<sp/>so<sp/>that<sp/>the<sp/>project<sp/>can<sp/>be<sp/>resaved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_project_8cpp_1abc1207c91a492b32e9c5971ddd301671" kindref="member">gAudacityProjects</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;GetUndoManager()-&gt;SetODChangesFlag();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project_1a54a02858f8e34c2cda5eb9b3f3ff0522" kindref="member">AudacityProject::AllProjectsDeleteUnlock</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;%s<sp/>%i<sp/>complete\n&quot;,<sp/>GetTaskName(),GetTaskNumber());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1aa534f7033d7c3fc06a55f24aac50482a" kindref="member">mTerminateMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ac018f7c48b1eb6a096dba290b9c0c7b2" kindref="member">SetIsRunning</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a645d01cc507dfa49c3f7032753812bb2" kindref="member">mBlockUntilTerminateMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_o_d_task_1a0abf3d0247adbf354be5d207d0800cec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1a0abf3d0247adbf354be5d207d0800cec" kindref="member">ODTask::IsTaskAssociatedWithProject</ref>(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>*<sp/>proj)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*tracks<sp/>=<sp/>proj-&gt;<ref refid="class_audacity_project_1afaedffb2cf04d79c1ee7ff5f941b3644" kindref="member">GetTracks</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter1(tracks);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*tr<sp/>=<sp/>iter1.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tr)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//go<sp/>over<sp/>all<sp/>tracks<sp/>in<sp/>the<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tr-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//look<sp/>inside<sp/>our<sp/>task&apos;s<sp/>track<sp/>list<sp/>for<sp/>one<sp/>that<sp/>matches<sp/>this<sp/>projects<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]==tr)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>we<sp/>find<sp/>one,<sp/>then<sp/>the<sp/>project<sp/>is<sp/>associated<sp/>with<sp/>us;return<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tr<sp/>=<sp/>iter1.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="class_o_d_task_1a441c889eed01e475ca55b8a6e6d8e100" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1a441c889eed01e475ca55b8a6e6d8e100" kindref="member">ODTask::ODUpdate</ref>()</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a6348e90d6b64fd775ca020e69705d7aa" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a2dc57dc72cc1c8e057cee5d471d217e5" kindref="member">ResetNeedsODUpdate</ref>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="class_o_d_task_1ac018f7c48b1eb6a096dba290b9c0c7b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1ac018f7c48b1eb6a096dba290b9c0c7b2" kindref="member">ODTask::SetIsRunning</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a56765162fb9180721fddf08e8993e9ec" kindref="member">mIsRunningMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a01b2cdf425a94cc4c1cb450a40e19f34" kindref="member">mIsRunning</ref>=<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a56765162fb9180721fddf08e8993e9ec" kindref="member">mIsRunningMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="class_o_d_task_1a42704b882937363771e1b9924e0f6c7a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1a42704b882937363771e1b9924e0f6c7a" kindref="member">ODTask::IsRunning</ref>()</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a56765162fb9180721fddf08e8993e9ec" kindref="member">mIsRunningMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>ret=<sp/><ref refid="class_o_d_task_1a01b2cdf425a94cc4c1cb450a40e19f34" kindref="member">mIsRunning</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a56765162fb9180721fddf08e8993e9ec" kindref="member">mIsRunningMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="class_o_d_task_1ace2d7a68e5f8681025c539000487aa81" refkind="member"><highlight class="normal"><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="class_o_d_task_1ace2d7a68e5f8681025c539000487aa81" kindref="member">ODTask::GetDemandSample</ref>()</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>retval;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a24ad4b2b8c1b2d647200b86bc9aabf50" kindref="member">mDemandSampleMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="class_o_d_task_1a2805d376b4e66174128836a31ce4b4ce" kindref="member">mDemandSample</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a24ad4b2b8c1b2d647200b86bc9aabf50" kindref="member">mDemandSampleMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="class_o_d_task_1aee81f26145371152b579f16c90af78cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1aee81f26145371152b579f16c90af78cb" kindref="member">ODTask::SetDemandSample</ref>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>sample)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a24ad4b2b8c1b2d647200b86bc9aabf50" kindref="member">mDemandSampleMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a2805d376b4e66174128836a31ce4b4ce" kindref="member">mDemandSample</ref>=sample;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1a24ad4b2b8c1b2d647200b86bc9aabf50" kindref="member">mDemandSampleMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="class_o_d_task_1a7b714f63d612ef0e18db8afcccd2223a" refkind="member"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1a7b714f63d612ef0e18db8afcccd2223a" kindref="member">ODTask::PercentComplete</ref>()</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1add5ff78b44107292569dfdeeb90c8118" kindref="member">mPercentCompleteMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="class_o_d_task_1a81842f8c6d99d72ce3cd215c113a261d" kindref="member">mPercentComplete</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1add5ff78b44107292569dfdeeb90c8118" kindref="member">mPercentCompleteMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="class_o_d_task_1a8753fd6fa8de7ca45b8ba4cf88cd75d5" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1a8753fd6fa8de7ca45b8ba4cf88cd75d5" kindref="member">ODTask::IsComplete</ref>()</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1a7b714f63d612ef0e18db8afcccd2223a" kindref="member">PercentComplete</ref>()<sp/>&gt;=<sp/>1.0<sp/>&amp;&amp;<sp/>!<ref refid="class_o_d_task_1a42704b882937363771e1b9924e0f6c7a" kindref="member">IsRunning</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="class_o_d_task_1a33106da71ce2e3e6c2124c38e211efd9" refkind="member"><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/><ref refid="class_o_d_task_1a33106da71ce2e3e6c2124c38e211efd9" kindref="member">ODTask::GetWaveTrack</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>track<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&lt;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>.size())</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track<sp/>=<sp/><ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[i];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>track;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="class_o_d_task_1a3438e8f3f97a2ad2954913b23beaa0a6" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1a3438e8f3f97a2ad2954913b23beaa0a6" kindref="member">ODTask::AddWaveTrack</ref>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>track)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>.push_back(track);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="class_o_d_task_1afaadfdc39a36023fdf2d434240a71f92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1afaadfdc39a36023fdf2d434240a71f92" kindref="member">ODTask::GetNumWaveTracks</ref>()</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/>num<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>.size();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="class_o_d_task_1a70cfd63300b8bcdbe42e224046f86932" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1a70cfd63300b8bcdbe42e224046f86932" kindref="member">ODTask::SetNeedsODUpdate</ref>()</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>mNeedsODUpdateMutex.Lock();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>mNeedsODUpdate=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>mNeedsODUpdateMutex.Unlock();</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298" refid="class_o_d_task_1ab2451ca624aa10332d5faeaaae994fa9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1ab2451ca624aa10332d5faeaaae994fa9" kindref="member">ODTask::GetNeedsODUpdate</ref>()</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/>mNeedsODUpdateMutex.Lock();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/>ret=mNeedsODUpdate;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>mNeedsODUpdateMutex.Unlock();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="class_o_d_task_1a2dc57dc72cc1c8e057cee5d471d217e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1a2dc57dc72cc1c8e057cee5d471d217e5" kindref="member">ODTask::ResetNeedsODUpdate</ref>()</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/>mNeedsODUpdateMutex.Lock();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>mNeedsODUpdate=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>mNeedsODUpdateMutex.Unlock();</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="class_o_d_task_1a5c6c1265c7f3abe2de27c77806cb6819" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1a5c6c1265c7f3abe2de27c77806cb6819" kindref="member">ODTask::RecalculatePercentComplete</ref>()</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_task_1ab2451ca624aa10332d5faeaaae994fa9" kindref="member">GetNeedsODUpdate</ref>())</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1a441c889eed01e475ca55b8a6e6d8e100" kindref="member">ODUpdate</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1abbe5b9fc9d3dd4420876ac1364980ca2" kindref="member">CalculatePercentComplete</ref>();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="class_o_d_task_1a6dfeaa8283bb419c3584dd77f642d0d2" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1a6dfeaa8283bb419c3584dd77f642d0d2" kindref="member">ODTask::DemandTrackUpdate</ref>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>track,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>seconds)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>demandSampleChanged=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(track<sp/>==<sp/><ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>newDemandSample<sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)(seconds<sp/>*<sp/>track-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>());</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>demandSampleChanged<sp/>=<sp/>newDemandSample<sp/>!=<sp/><ref refid="class_o_d_task_1ace2d7a68e5f8681025c539000487aa81" kindref="member">GetDemandSample</ref>();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1aee81f26145371152b579f16c90af78cb" kindref="member">SetDemandSample</ref>(newDemandSample);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(demandSampleChanged)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1a70cfd63300b8bcdbe42e224046f86932" kindref="member">SetNeedsODUpdate</ref>();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="class_o_d_task_1a3ac4c171329ece3638adc06285e34b5c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1a3ac4c171329ece3638adc06285e34b5c" kindref="member">ODTask::StopUsingWaveTrack</ref>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>track)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>==<sp/>track)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="class_o_d_task_1ad1517b5142eebf42ff5155fb17e4ffbe" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_task_1ad1517b5142eebf42ff5155fb17e4ffbe" kindref="member">ODTask::ReplaceWaveTrack</ref>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>oldTrack,<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>newTrack)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oldTrack<sp/>==<sp/><ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_task_1aba0bd65cc43443f5eb27bc5278334bf2" kindref="member">mWaveTracks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>newTrack;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_task_1ae51c8c57331a0caea29ac0e26a295685" kindref="member">mWaveTrackMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODTask.cpp"/>
  </compounddef>
</doxygen>
