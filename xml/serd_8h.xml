<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="serd_8h" kind="file" language="C++">
    <compoundname>serd.h</compoundname>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdbool.h</includes>
    <includedby refid="lilv__internal_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/lilv_internal.h</includedby>
    <includedby refid="serd__internal_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h</includedby>
    <includedby refid="serd__test_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/tests/serd_test.c</includedby>
    <includedby refid="sord_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sord.h</includedby>
    <includedby refid="sordmm_8hpp" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp</includedby>
    <includedby refid="sord__validate_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c</includedby>
    <includedby refid="sordi_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sordi.c</includedby>
    <includedby refid="syntax_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c</includedby>
    <includedby refid="sratom_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h</includedby>
    <incdepgraph>
      <node id="27046">
        <label>stdbool.h</label>
      </node>
      <node id="27042">
        <label>stdarg.h</label>
      </node>
      <node id="27044">
        <label>stdint.h</label>
      </node>
      <node id="27041">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h</label>
        <link refid="serd.h"/>
        <childnode refid="27042" relation="include">
        </childnode>
        <childnode refid="27043" relation="include">
        </childnode>
        <childnode refid="27044" relation="include">
        </childnode>
        <childnode refid="27045" relation="include">
        </childnode>
        <childnode refid="27046" relation="include">
        </childnode>
      </node>
      <node id="27043">
        <label>stddef.h</label>
      </node>
      <node id="27045">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="27048">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/lilv_internal.h</label>
        <link refid="lilv__internal_8h"/>
        <childnode refid="27049" relation="include">
        </childnode>
        <childnode refid="27050" relation="include">
        </childnode>
        <childnode refid="27051" relation="include">
        </childnode>
        <childnode refid="27052" relation="include">
        </childnode>
        <childnode refid="27053" relation="include">
        </childnode>
        <childnode refid="27054" relation="include">
        </childnode>
        <childnode refid="27055" relation="include">
        </childnode>
        <childnode refid="27056" relation="include">
        </childnode>
        <childnode refid="27057" relation="include">
        </childnode>
        <childnode refid="27058" relation="include">
        </childnode>
        <childnode refid="27059" relation="include">
        </childnode>
        <childnode refid="27060" relation="include">
        </childnode>
        <childnode refid="27061" relation="include">
        </childnode>
        <childnode refid="27062" relation="include">
        </childnode>
      </node>
      <node id="27077">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/syntax.c</label>
        <link refid="syntax_8c"/>
      </node>
      <node id="27057">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/scalepoint.c</label>
        <link refid="scalepoint_8c"/>
      </node>
      <node id="27075">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_internal.h</label>
        <link refid="sord__internal_8h"/>
        <childnode refid="27076" relation="include">
        </childnode>
        <childnode refid="27077" relation="include">
        </childnode>
      </node>
      <node id="27070">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c</label>
        <link refid="writer_8c"/>
      </node>
      <node id="27082">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c</label>
        <link refid="sratom_8c"/>
      </node>
      <node id="27067">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c</label>
        <link refid="serdnode_8c"/>
      </node>
      <node id="27051">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/lib.c</label>
        <link refid="lib_8c"/>
      </node>
      <node id="27053">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c</label>
        <link refid="lv2_2lilv_2src_2plugin_8c"/>
      </node>
      <node id="27049">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/collections.c</label>
        <link refid="collections_8c"/>
      </node>
      <node id="27065">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c</label>
        <link refid="reader_8c"/>
      </node>
      <node id="27059">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c</label>
        <link refid="ui_8c"/>
      </node>
      <node id="27081">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h</label>
        <link refid="sratom_8h"/>
        <childnode refid="27058" relation="include">
        </childnode>
        <childnode refid="27082" relation="include">
        </childnode>
        <childnode refid="27083" relation="include">
        </childnode>
      </node>
      <node id="27047">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h</label>
        <link refid="serd.h"/>
        <childnode refid="27048" relation="include">
        </childnode>
        <childnode refid="27063" relation="include">
        </childnode>
        <childnode refid="27071" relation="include">
        </childnode>
        <childnode refid="27072" relation="include">
        </childnode>
        <childnode refid="27073" relation="include">
        </childnode>
        <childnode refid="27079" relation="include">
        </childnode>
        <childnode refid="27080" relation="include">
        </childnode>
        <childnode refid="27077" relation="include">
        </childnode>
        <childnode refid="27081" relation="include">
        </childnode>
      </node>
      <node id="27063">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h</label>
        <link refid="serd__internal_8h"/>
        <childnode refid="27064" relation="include">
        </childnode>
        <childnode refid="27065" relation="include">
        </childnode>
        <childnode refid="27066" relation="include">
        </childnode>
        <childnode refid="27067" relation="include">
        </childnode>
        <childnode refid="27068" relation="include">
        </childnode>
        <childnode refid="27069" relation="include">
        </childnode>
        <childnode refid="27070" relation="include">
        </childnode>
      </node>
      <node id="27066">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdi.c</label>
        <link refid="serdi_8c"/>
      </node>
      <node id="27072">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sord.h</label>
        <link refid="sord_8h"/>
        <childnode refid="27048" relation="include">
        </childnode>
        <childnode refid="27073" relation="include">
        </childnode>
        <childnode refid="27075" relation="include">
        </childnode>
        <childnode refid="27078" relation="include">
        </childnode>
        <childnode refid="27079" relation="include">
        </childnode>
        <childnode refid="27080" relation="include">
        </childnode>
        <childnode refid="27081" relation="include">
        </childnode>
      </node>
      <node id="27050">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/instance.c</label>
        <link refid="lilv_2src_2instance_8c"/>
      </node>
      <node id="27068">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/string.c</label>
        <link refid="string_8c"/>
      </node>
      <node id="27055">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/port.c</label>
        <link refid="port_8c"/>
      </node>
      <node id="27052">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/node.c</label>
        <link refid="lilv_2src_2node_8c"/>
      </node>
      <node id="27056">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/query.c</label>
        <link refid="query_8c"/>
      </node>
      <node id="27061">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/world.c</label>
        <link refid="world_8c"/>
      </node>
      <node id="27073">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp</label>
        <link refid="sordmm_8hpp"/>
        <childnode refid="27074" relation="include">
        </childnode>
      </node>
      <node id="27062">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/test/lilv_test.c</label>
        <link refid="lilv__test_8c"/>
      </node>
      <node id="27064">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/env.c</label>
        <link refid="env_8c"/>
      </node>
      <node id="27079">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c</label>
        <link refid="sord__validate_8c"/>
      </node>
      <node id="27083">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c</label>
        <link refid="sratom__test_8c"/>
      </node>
      <node id="27074">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sordmm_test.cpp</label>
        <link refid="sordmm__test_8cpp"/>
      </node>
      <node id="27069">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/uri.c</label>
        <link refid="uri_8c"/>
      </node>
      <node id="27076">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord.c</label>
        <link refid="sord_8c"/>
      </node>
      <node id="27054">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c</label>
        <link refid="pluginclass_8c"/>
      </node>
      <node id="27078">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_test.c</label>
        <link refid="sord__test_8c"/>
      </node>
      <node id="27058">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/state.c</label>
        <link refid="state_8c"/>
      </node>
      <node id="27080">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sordi.c</label>
        <link refid="sordi_8c"/>
      </node>
      <node id="27060">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/util.c</label>
        <link refid="lv2_2lilv_2src_2util_8c"/>
      </node>
      <node id="27071">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/tests/serd_test.c</label>
        <link refid="serd__test_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_serd_node" prot="public">SerdNode</innerclass>
    <innerclass refid="struct_serd_chunk" prot="public">SerdChunk</innerclass>
    <innerclass refid="struct_serd_error" prot="public">SerdError</innerclass>
    <innerclass refid="struct_serd_u_r_i" prot="public">SerdURI</innerclass>
      <sectiondef kind="user-defined">
      <header>String Utilities</header>
      <memberdef kind="function" id="group__serd_1gac0743f37f7890c255a2960dbe30ff25d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
        <definition>SERD_API const uint8_t* serd_strerror</definition>
        <argsstring>(SerdStatus status)</argsstring>
        <name>serd_strerror</name>
        <param>
          <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a string describing a status code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="276" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/string.c" bodystart="23" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga0fa8f5d6cd20c3a255bd812c7c29a540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> size_t</type>
        <definition>SERD_API size_t serd_strlen</definition>
        <argsstring>(const uint8_t *str, size_t *n_bytes, SerdNodeFlags *flags)</argsstring>
        <name>serd_strlen</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>n_bytes</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" kindref="member">SerdNodeFlags</ref> *</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Measure a UTF-8 string. <simplesect kind="return"><para>Length of <computeroutput>str</computeroutput> in characters (except NULL). </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>A null-terminated UTF-8 string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>(Output) Set to the size of <computeroutput>str</computeroutput> in bytes (except NULL). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>(Output) Set to the applicable flags. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="287" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/string.c" bodystart="41" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gaf763f9aee7bfba6f051963dae8a8d3c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> double</type>
        <definition>SERD_API double serd_strtod</definition>
        <argsstring>(const char *str, char **endptr)</argsstring>
        <name>serd_strtod</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>endptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse a string to a double.</para><para>The API of this function is identical to the standard C strtod function, except this function is locale-independent and always matches the lexical format used in the Turtle grammar (the decimal point is always &quot;.&quot;). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="298" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/string.c" bodystart="78" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga506aa651496034ea9c53e547a5a7ed48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>SERD_API void* serd_base64_decode</definition>
        <argsstring>(const uint8_t *str, size_t len, size_t *size)</argsstring>
        <name>serd_base64_decode</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decode a base64 string. This function can be used to deserialise a blob node created with <ref refid="group__serd_1ga249f78dce10d57cf78d191a087c3ac71" kindref="member">serd_node_new_blob()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>Base64 string to decode. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of <computeroutput>str</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the size of the returned blob in bytes. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A newly allocated blob which must be freed with free(). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="312" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/string.c" bodystart="149" bodyend="165"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>URI</header>
      <memberdef kind="typedef" id="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" prot="public" static="no">
        <type>size_t(*</type>
        <definition>typedef size_t(* SerdSink) (const void *buf, size_t len, void *stream)</definition>
        <argsstring>)(const void *buf, size_t len, void *stream)</argsstring>
        <name>SerdSink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sink function for raw string output. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="370" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__serd_1gad75e4db3c2315c31a3a05043a811a698" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref></type>
        <definition>const SerdURI SERD_URI_NULL</definition>
        <argsstring></argsstring>
        <name>SERD_URI_NULL</name>
        <initializer>= {{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="320" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga5d9bf71e7a2beae95fdec28956aecc00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
        <definition>SERD_API const uint8_t* serd_uri_to_path</definition>
        <argsstring>(const uint8_t *uri)</argsstring>
        <name>serd_uri_to_path</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the local path for <computeroutput>uri</computeroutput>, or NULL if <computeroutput>uri</computeroutput> is not a file URI. Note this (inappropriately named) function only removes the file scheme if necessary, and returns <computeroutput>uri</computeroutput> unmodified if it is an absolute path. Percent encoding and other issues are not handled, to properly convert a file URI to a path, use <ref refid="group__serd_1gac927c22020c48c591d70d15ef9e3e606" kindref="member">serd_file_uri_parse()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="331" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/uri.c" bodystart="26" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gac927c22020c48c591d70d15ef9e3e606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
        <definition>SERD_API uint8_t* serd_file_uri_parse</definition>
        <argsstring>(const uint8_t *uri, uint8_t **hostname)</argsstring>
        <name>serd_file_uri_parse</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> **</type>
          <declname>hostname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the unescaped path and hostname from a file URI. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>A file URI. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hostname</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-NULL, set to the hostname, if present. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The path component of the URI.</para></simplesect>
Both the returned path and <computeroutput>hostname</computeroutput> (if applicable) are owned by the caller and must be freed with free(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="344" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/uri.c" bodystart="50" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gaaddea01f53227c6d984a94e94164f603" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>SERD_API bool serd_uri_string_has_scheme</definition>
        <argsstring>(const uint8_t *utf8)</argsstring>
        <name>serd_uri_string_has_scheme</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>utf8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true iff <computeroutput>utf8</computeroutput> starts with a valid URI scheme. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="351" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/uri.c" bodystart="100" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga448a194144052f3edea6030d3a950eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_uri_parse</definition>
        <argsstring>(const uint8_t *utf8, SerdURI *out)</argsstring>
        <name>serd_uri_parse</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>utf8</declname>
        </param>
        <param>
          <type><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse <computeroutput>utf8</computeroutput>, writing result to <computeroutput>out</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="358" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/uri.c" bodystart="144" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga5af85594b54a6bcfd252cefeaf367f22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_uri_resolve</definition>
        <argsstring>(const SerdURI *uri, const SerdURI *base, SerdURI *out)</argsstring>
        <name>serd_uri_resolve</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>See <ulink url="http://tools.ietf.org/html/rfc3986#section-5.2.2">http://tools.ietf.org/html/rfc3986#section-5.2.2</ulink>. </para>        </briefdescription>
        <detaileddescription>
<para>Set <computeroutput>out</computeroutput> to <computeroutput>uri</computeroutput> resolved against <computeroutput>base</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="365" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/uri.c" bodystart="350" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga210c50472dac0f3772f1067382cd2763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> size_t</type>
        <definition>SERD_API size_t serd_uri_serialise</definition>
        <argsstring>(const SerdURI *uri, SerdSink sink, void *stream)</argsstring>
        <name>serd_uri_serialise</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" kindref="member">SerdSink</ref></type>
          <declname>sink</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>See <ulink url="http://tools.ietf.org/html/rfc3986#section-5.3">http://tools.ietf.org/html/rfc3986#section-5.3</ulink>. </para>        </briefdescription>
        <detaileddescription>
<para>Serialise <computeroutput>uri</computeroutput> with a series of calls to <computeroutput>sink</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="377" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/uri.c" bodystart="501" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga9f7fedb16a93ccddbddbbdf93d6f4165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> size_t</type>
        <definition>SERD_API size_t serd_uri_serialise_relative</definition>
        <argsstring>(const SerdURI *uri, const SerdURI *base, const SerdURI *root, SerdSink sink, void *stream)</argsstring>
        <name>serd_uri_serialise_relative</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" kindref="member">SerdSink</ref></type>
          <declname>sink</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>See <ulink url="http://tools.ietf.org/html/rfc3986#section-5.3">http://tools.ietf.org/html/rfc3986#section-5.3</ulink>. </para>        </briefdescription>
        <detaileddescription>
<para>Serialise <computeroutput>uri</computeroutput> relative to <computeroutput>base</computeroutput> with a series of calls to <computeroutput>sink</computeroutput>.</para><para>The <computeroutput>uri</computeroutput> is written as a relative URI iff if it a child of <computeroutput>base</computeroutput> and <computeroutput>root</computeroutput>. The optional <computeroutput>root</computeroutput> parameter must be a prefix of <computeroutput>base</computeroutput> and can be used keep up-references (&quot;../&quot;) within a certain namespace. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="388" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/uri.c" bodystart="465" bodyend="496"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Node</header>
      <memberdef kind="variable" id="group__serd_1ga6e0fbb7791102622cf8caf174843b0d1" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref></type>
        <definition>const SerdNode SERD_NODE_NULL</definition>
        <argsstring></argsstring>
        <name>SERD_NODE_NULL</name>
        <initializer>= { 0, 0, 0, 0, <ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" kindref="member">SERD_NOTHING</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="400" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gae76caf1b4e7a6465c9cb73ec11f568ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref></type>
        <definition>SERD_API SerdNode serd_node_from_string</definition>
        <argsstring>(SerdType type, const uint8_t *str)</argsstring>
        <name>serd_node_from_string</name>
        <param>
          <type><ref refid="group__serd_1ga7ccd8d4fb2c3a6ad690ed6d6fe1b45fa" kindref="member">SerdType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a (shallow) node from <computeroutput>str</computeroutput>.</para><para>This measures, but does not copy, <computeroutput>str</computeroutput>. No memory is allocated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="409" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c" bodystart="32" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga5a25ffa37534176468ffc8e4e6ce8d7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref></type>
        <definition>SERD_API SerdNode serd_node_copy</definition>
        <argsstring>(const SerdNode *node)</argsstring>
        <name>serd_node_copy</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a deep copy of <computeroutput>node</computeroutput>.</para><para><simplesect kind="return"><para>a node that the caller must free with <ref refid="group__serd_1ga037ef71317b8afff0a020072099cd14f" kindref="member">serd_node_free()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="418" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c" bodystart="47" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga19e58c93a79966be1e74d9d92f5ea167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>SERD_API bool serd_node_equals</definition>
        <argsstring>(const SerdNode *a, const SerdNode *b)</argsstring>
        <name>serd_node_equals</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true iff <computeroutput>a</computeroutput> is equal to <computeroutput>b</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="425" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c" bodystart="62" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga08700bbb56c7faaa1c4d979b922b839e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref></type>
        <definition>SERD_API SerdNode serd_node_new_uri_from_node</definition>
        <argsstring>(const SerdNode *uri_node, const SerdURI *base, SerdURI *out)</argsstring>
        <name>serd_node_new_uri_from_node</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>uri_node</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simple wrapper for serd_node_new_uri to resolve a URI node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="432" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c" bodystart="101" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga4285ae7168a9fd4a9dfb5c8ccce66222" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref></type>
        <definition>SERD_API SerdNode serd_node_new_uri_from_string</definition>
        <argsstring>(const uint8_t *str, const SerdURI *base, SerdURI *out)</argsstring>
        <name>serd_node_new_uri_from_string</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simple wrapper for serd_node_new_uri to resolve a URI string. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="441" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c" bodystart="112" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gafeaacb37341cb84e36b8ada129691d39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref></type>
        <definition>SERD_API SerdNode serd_node_new_file_uri</definition>
        <argsstring>(const uint8_t *path, const uint8_t *hostname, SerdURI *out, bool escape)</argsstring>
        <name>serd_node_new_file_uri</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>hostname</declname>
        </param>
        <param>
          <type><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>escape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new file URI node from a file system path and optional hostname.</para><para>Backslashes in Windows paths will be converted and &apos;&apos; will always be percent encoded. If <computeroutput>escape</computeroutput> is true, all other invalid characters will be percent encoded as well.</para><para>If <computeroutput>path</computeroutput> is relative, <computeroutput>hostname</computeroutput> is ignored. If <computeroutput>out</computeroutput> is not NULL, it will be set to the parsed URI. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="457" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c" bodystart="149" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga051e899e23a1f3cad1ae4a882ad010af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref></type>
        <definition>SERD_API SerdNode serd_node_new_uri</definition>
        <argsstring>(const SerdURI *uri, const SerdURI *base, SerdURI *out)</argsstring>
        <name>serd_node_new_uri</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new node by serialising <computeroutput>uri</computeroutput> into a new string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The URI to parse and serialise.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Base URI to resolve <computeroutput>uri</computeroutput> against (or NULL for no resolution).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the parsing of the new URI (i.e. points only to memory owned by the new returned node). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="474" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c" bodystart="193" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gaed31dfb8fedccfb82eb7c7b5f81931eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref></type>
        <definition>SERD_API SerdNode serd_node_new_decimal</definition>
        <argsstring>(double d, unsigned frac_digits)</argsstring>
        <name>serd_node_new_decimal</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>frac_digits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new node by serialising <computeroutput>d</computeroutput> into an xsd:decimal string.</para><para>The resulting node will always contain a `.&apos;, start with a digit, and end with a digit (i.e. will have a leading and/or trailing `0&apos; if necessary). It will never be in scientific notation. A maximum of <computeroutput>frac_digits</computeroutput> digits will be written after the decimal point, but trailing zeros will automatically be omitted (except one if <computeroutput>d</computeroutput> is a round integer).</para><para>Note that about 16 and 8 fractional digits are required to precisely represent a double and float, respectively.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>The value for the new node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frac_digits</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of digits after the decimal place. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="493" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c" bodystart="221" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gae2a0afeb436855f98c26e2bec0ab2d09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref></type>
        <definition>SERD_API SerdNode serd_node_new_integer</definition>
        <argsstring>(int64_t i)</argsstring>
        <name>serd_node_new_integer</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new node by serialising <computeroutput>i</computeroutput> into an xsd:integer string. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="500" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c" bodystart="276" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga249f78dce10d57cf78d191a087c3ac71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref></type>
        <definition>SERD_API SerdNode serd_node_new_blob</definition>
        <argsstring>(const void *buf, size_t size, bool wrap_lines)</argsstring>
        <name>serd_node_new_blob</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>wrap_lines</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a node by serialising <computeroutput>buf</computeroutput> into an xsd:base64Binary string. This function can be used to make a serialisable node out of arbitrary binary data, which can be decoded using <ref refid="group__serd_1ga506aa651496034ea9c53e547a5a7ed48" kindref="member">serd_base64_decode()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw binary input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of <computeroutput>buf</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wrap_lines</parametername>
</parameternamelist>
<parameterdescription>
<para>Wrap lines at 76 characters to conform to RFC 2045. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="513" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c" bodystart="323" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga037ef71317b8afff0a020072099cd14f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_node_free</definition>
        <argsstring>(SerdNode *node)</argsstring>
        <name>serd_node_free</name>
        <param>
          <type><ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free any data owned by <computeroutput>node</computeroutput>.</para><para>Note that if <computeroutput>node</computeroutput> is itself dynamically allocated (which is not the case for nodes created internally by serd), it will not be freed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="523" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c" bodystart="345" bodyend="351"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Event Handlers</header>
      <memberdef kind="typedef" id="group__serd_1ga925d2fda236697a3e643b307ffe242e5" prot="public" static="no">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref>(*</type>
        <definition>typedef SerdStatus(* SerdErrorSink) (void *handle, const SerdError *error)</definition>
        <argsstring>)(void *handle, const SerdError *error)</argsstring>
        <name>SerdErrorSink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sink (callback) for errors.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle for user data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>Error description. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="537" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__serd_1ga9f1652e78562130337b519f309dd5125" prot="public" static="no">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref>(*</type>
        <definition>typedef SerdStatus(* SerdBaseSink) (void *handle, const SerdNode *uri)</definition>
        <argsstring>)(void *handle, const SerdNode *uri)</argsstring>
        <name>SerdBaseSink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sink (callback) for base URI changes.</para><para>Called whenever the base URI of the serialisation changes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="545" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__serd_1ga692f0bbdf5e2576191ee3556ecde7d55" prot="public" static="no">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref>(*</type>
        <definition>typedef SerdStatus(* SerdPrefixSink) (void *handle, const SerdNode *name, const SerdNode *uri)</definition>
        <argsstring>)(void *handle, const SerdNode *name, const SerdNode *uri)</argsstring>
        <name>SerdPrefixSink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sink (callback) for namespace definitions.</para><para>Called whenever a prefix is defined in the serialisation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="553" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__serd_1ga9cd6dc709f738ed9770d0d2cd1195bd4" prot="public" static="no">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref>(*</type>
        <definition>typedef SerdStatus(* SerdStatementSink) (void *handle, SerdStatementFlags flags, const SerdNode *graph, const SerdNode *subject, const SerdNode *predicate, const SerdNode *object, const SerdNode *object_datatype, const SerdNode *object_lang)</definition>
        <argsstring>)(void *handle, SerdStatementFlags flags, const SerdNode *graph, const SerdNode *subject, const SerdNode *predicate, const SerdNode *object, const SerdNode *object_datatype, const SerdNode *object_lang)</argsstring>
        <name>SerdStatementSink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sink (callback) for statements.</para><para>Called for every RDF statement in the serialisation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="562" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__serd_1gae67888543462e4127e6a4f6af047026b" prot="public" static="no">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref>(*</type>
        <definition>typedef SerdStatus(* SerdEndSink) (void *handle, const SerdNode *node)</definition>
        <argsstring>)(void *handle, const SerdNode *node)</argsstring>
        <name>SerdEndSink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sink (callback) for anonymous node end markers.</para><para>This is called to indicate that the anonymous node with the given <computeroutput>value</computeroutput> will no longer be referred to by any future statements (i.e. the anonymous serialisation of the node is finished). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="578" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="578" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Environment</header>
      <memberdef kind="function" id="group__serd_1ga64ffdd637dad39a2483e727125c2c285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
        <definition>SERD_API SerdEnv* serd_env_new</definition>
        <argsstring>(const SerdNode *base_uri)</argsstring>
        <name>serd_env_new</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>base_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new environment. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="592" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/env.c" bodystart="36" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga09d49846b7fc7dbd9a4c0fdc1e84e915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_env_free</definition>
        <argsstring>(SerdEnv *env)</argsstring>
        <name>serd_env_free</name>
        <param>
          <type><ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free <computeroutput>ns</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="599" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/env.c" bodystart="47" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga94b861ea65187556a473dcb668ab8667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
        <definition>SERD_API const SerdNode* serd_env_get_base_uri</definition>
        <argsstring>(const SerdEnv *env, SerdURI *out)</argsstring>
        <name>serd_env_get_base_uri</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current base URI. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="606" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/env.c" bodystart="60" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gaddd2dd19cd0a36ce4ea39ade113eab62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_env_set_base_uri</definition>
        <argsstring>(SerdEnv *env, const SerdNode *uri)</argsstring>
        <name>serd_env_set_base_uri</name>
        <param>
          <type><ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the current base URI. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="614" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/env.c" bodystart="71" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gafd42745aa586531608eb4a23c560cef2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_env_set_prefix</definition>
        <argsstring>(SerdEnv *env, const SerdNode *name, const SerdNode *uri)</argsstring>
        <name>serd_env_set_prefix</name>
        <param>
          <type><ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a namespace prefix. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="622" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/env.c" bodystart="129" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gac41d573e81de34506463612e0c464889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_env_set_prefix_from_strings</definition>
        <argsstring>(SerdEnv *env, const uint8_t *name, const uint8_t *uri)</argsstring>
        <name>serd_env_set_prefix_from_strings</name>
        <param>
          <type><ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a namespace prefix. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="631" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/env.c" bodystart="153" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gabeffe38076753a62dab52e0eeb1ff770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>SERD_API bool serd_env_qualify</definition>
        <argsstring>(const SerdEnv *env, const SerdNode *uri, SerdNode *prefix, SerdChunk *suffix)</argsstring>
        <name>serd_env_qualify</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref> *</type>
          <declname>suffix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Qualify <computeroutput>uri</computeroutput> into a CURIE if possible. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="640" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/env.c" bodystart="186" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gac5a39f1201094a76d12b0bb509b8536f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_env_expand</definition>
        <argsstring>(const SerdEnv *env, const SerdNode *curie, SerdChunk *uri_prefix, SerdChunk *uri_suffix)</argsstring>
        <name>serd_env_expand</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>curie</declname>
        </param>
        <param>
          <type><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref> *</type>
          <declname>uri_prefix</declname>
        </param>
        <param>
          <type><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref> *</type>
          <declname>uri_suffix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expand <computeroutput>curie</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="650" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/env.c" bodystart="211" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga625355c8383d9db384edd7d95058b712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref></type>
        <definition>SERD_API SerdNode serd_env_expand_node</definition>
        <argsstring>(const SerdEnv *env, const SerdNode *node)</argsstring>
        <name>serd_env_expand_node</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expand <computeroutput>node</computeroutput>, which must be a CURIE or URI, to a full URI. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="660" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/env.c" bodystart="236" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga4e179ef13f5ad5ec23ff0b9b9d944c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_env_foreach</definition>
        <argsstring>(const SerdEnv *env, SerdPrefixSink func, void *handle)</argsstring>
        <name>serd_env_foreach</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga692f0bbdf5e2576191ee3556ecde7d55" kindref="member">SerdPrefixSink</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call <computeroutput>func</computeroutput> for each prefix defined in <computeroutput>env</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="668" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/env.c" bodystart="263" bodyend="270"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Reader</header>
      <memberdef kind="function" id="group__serd_1ga99a5f1ae546409bcb9a56d89e68902bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
        <definition>SERD_API SerdReader* serd_reader_new</definition>
        <argsstring>(SerdSyntax syntax, void *handle, void(*free_handle)(void *), SerdBaseSink base_sink, SerdPrefixSink prefix_sink, SerdStatementSink statement_sink, SerdEndSink end_sink)</argsstring>
        <name>serd_reader_new</name>
        <param>
          <type><ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref></type>
          <declname>syntax</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *)</type>
          <declname>free_handle</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga9f1652e78562130337b519f309dd5125" kindref="member">SerdBaseSink</ref></type>
          <declname>base_sink</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga692f0bbdf5e2576191ee3556ecde7d55" kindref="member">SerdPrefixSink</ref></type>
          <declname>prefix_sink</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga9cd6dc709f738ed9770d0d2cd1195bd4" kindref="member">SerdStatementSink</ref></type>
          <declname>statement_sink</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gae67888543462e4127e6a4f6af047026b" kindref="member">SerdEndSink</ref></type>
          <declname>end_sink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new RDF reader. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="683" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1440" bodyend="1481"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga3a64910235c2c8bedb0e9244b338c5c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_reader_set_error_sink</definition>
        <argsstring>(SerdReader *reader, SerdErrorSink error_sink, void *handle)</argsstring>
        <name>serd_reader_set_error_sink</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga925d2fda236697a3e643b307ffe242e5" kindref="member">SerdErrorSink</ref></type>
          <declname>error_sink</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a function to be called when errors occur during reading.</para><para>The <computeroutput>error_sink</computeroutput> will be called with <computeroutput>handle</computeroutput> as its first argument. If no error function is set, errors are printed to stderr in GCC style. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="699" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1485" bodyend="1491"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gaad5ac334bdf5d0c531dc0526c2310862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>SERD_API void* serd_reader_get_handle</definition>
        <argsstring>(const SerdReader *reader)</argsstring>
        <name>serd_reader_get_handle</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>handle</computeroutput> passed to <ref refid="group__serd_1ga99a5f1ae546409bcb9a56d89e68902bf" kindref="member">serd_reader_new()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="708" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1515" bodyend="1518"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga18b1d46abcd156310e0b18221aa80e31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_reader_add_blank_prefix</definition>
        <argsstring>(SerdReader *reader, const uint8_t *prefix)</argsstring>
        <name>serd_reader_add_blank_prefix</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a prefix to be added to all blank node identifiers.</para><para>This is useful when multiple files are to be parsed into the same output (e.g. a store, or other files). Since Serd preserves blank node IDs, this could cause conflicts where two non-equivalent blank nodes are merged, resulting in corrupt data. By setting a unique blank node prefix for each parsed file, this can be avoided, while preserving blank node names. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="721" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1522" bodyend="1533"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga7f5f4f5a6b224b0f04df3c078f9e3eaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_reader_set_default_graph</definition>
        <argsstring>(SerdReader *reader, const SerdNode *graph)</argsstring>
        <name>serd_reader_set_default_graph</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the URI of the default graph.</para><para>If this is set, the reader will emit quads with the graph set to the given node for any statements that are not in a named graph (which is currently all of them since Serd currently does not support any graph syntaxes). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="733" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1537" bodyend="1542"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gad0fe4c7359478679e69b397620dc7f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_reader_read_file</definition>
        <argsstring>(SerdReader *reader, const uint8_t *uri)</argsstring>
        <name>serd_reader_read_file</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a file at a given <computeroutput>uri</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="741" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1546" bodyend="1562"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga0cc5b3a7ec36893d67e70564d3f326a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_reader_start_stream</definition>
        <argsstring>(SerdReader *me, FILE *file, const uint8_t *name, bool bulk)</argsstring>
        <name>serd_reader_start_stream</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>me</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>bulk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start an incremental read from a file handle.</para><para>Iff <computeroutput>bulk</computeroutput> is true, <computeroutput>file</computeroutput> will be read a page at a time. This is more efficient, but uses a page of memory and means that an entire page of input must be ready before any callbacks will fire. To react as soon as input arrives, set <computeroutput>bulk</computeroutput> to false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="754" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1575" bodyend="1604"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga832ee2aae7c3d9f6b7de4c793ec3a21c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_reader_read_chunk</definition>
        <argsstring>(SerdReader *me)</argsstring>
        <name>serd_reader_read_chunk</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>me</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a single &quot;chunk&quot; of data during an incremental read.</para><para>This function will read a single top level description, and return. This may be a directive, statement, or several statements; essentially it reads until a &apos;.&apos; is encountered. This is particularly useful for reading directly from a pipe or socket. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="769" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1608" bodyend="1620"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga55a5a06fdc2fc6a50913f64798e980cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_reader_end_stream</definition>
        <argsstring>(SerdReader *me)</argsstring>
        <name>serd_reader_end_stream</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>me</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finish an incremental read from a file handle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="776" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1624" bodyend="1632"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga001d19e0eac46f43a011f6266a7b3d59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_reader_read_file_handle</definition>
        <argsstring>(SerdReader *reader, FILE *file, const uint8_t *name)</argsstring>
        <name>serd_reader_read_file_handle</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read <computeroutput>file</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="783" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1636" bodyend="1644"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga3ebc4139f1b992135bdd86fc6959b566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_reader_read_string</definition>
        <argsstring>(SerdReader *me, const uint8_t *utf8)</argsstring>
        <name>serd_reader_read_string</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>me</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>utf8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read <computeroutput>utf8</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="792" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1648" bodyend="1664"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga26a4070db2f9ef59c94adeaa9dac6752" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_reader_free</definition>
        <argsstring>(SerdReader *reader)</argsstring>
        <name>serd_reader_free</name>
        <param>
          <type><ref refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" kindref="member">SerdReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free <computeroutput>reader</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="799" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c" bodystart="1495" bodyend="1511"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Writer</header>
      <memberdef kind="function" id="group__serd_1gae87f48adca211a7fa2c0432e9ba68d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
        <definition>SERD_API SerdWriter* serd_writer_new</definition>
        <argsstring>(SerdSyntax syntax, SerdStyle style, SerdEnv *env, const SerdURI *base_uri, SerdSink sink, void *stream)</argsstring>
        <name>serd_writer_new</name>
        <param>
          <type><ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref></type>
          <declname>syntax</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gae51da58ac1f1886c75ee2326495daeb2" kindref="member">SerdStyle</ref></type>
          <declname>style</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>base_uri</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" kindref="member">SerdSink</ref></type>
          <declname>sink</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new RDF writer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="812" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="771" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga50c06e138081328c46e9dfa593814f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_writer_free</definition>
        <argsstring>(SerdWriter *writer)</argsstring>
        <name>serd_writer_free</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free <computeroutput>writer</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="824" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="895" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gaf48894b46c202d07055c0de23431f13a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
        <definition>SERD_API SerdEnv* serd_writer_get_env</definition>
        <argsstring>(SerdWriter *writer)</argsstring>
        <name>serd_writer_get_env</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the env used by <computeroutput>writer</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="831" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="909" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga08303ceed3102e9fe2ae6bf39eb5b0ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> size_t</type>
        <definition>SERD_API size_t serd_file_sink</definition>
        <argsstring>(const void *buf, size_t len, void *stream)</argsstring>
        <name>serd_file_sink</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A convenience sink function for writing to a FILE*.</para><para>This function can be used as a SerdSink when writing to a FILE*. The <computeroutput>stream</computeroutput> parameter must be a FILE* opened for writing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="841" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="916" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gaec4335743b7d78339d8c133111ec8319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> size_t</type>
        <definition>SERD_API size_t serd_chunk_sink</definition>
        <argsstring>(const void *buf, size_t len, void *stream)</argsstring>
        <name>serd_chunk_sink</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A convenience sink function for writing to a string.</para><para>This function can be used as a SerdSink to write to a <ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref> which is resized as necessary with realloc(). The <computeroutput>stream</computeroutput> parameter must point to an initialized <ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref>. When the write is finished, the string should be retrieved with <ref refid="group__serd_1gad91b770366f31f3ae83dcdde8c1d6c5d" kindref="member">serd_chunk_sink_finish()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="853" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="923" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gad91b770366f31f3ae83dcdde8c1d6c5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
        <definition>SERD_API uint8_t* serd_chunk_sink_finish</definition>
        <argsstring>(SerdChunk *stream)</argsstring>
        <name>serd_chunk_sink_finish</name>
        <param>
          <type><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finish a serialisation to a chunk with <ref refid="group__serd_1gaec4335743b7d78339d8c133111ec8319" kindref="member">serd_chunk_sink()</ref>.</para><para>The returned string is the result of the serialisation, which is NULL terminated (by this function) and owned by the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="863" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="934" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gae5b20ff80e98f8b945bf268f7dd1b1aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_writer_set_error_sink</definition>
        <argsstring>(SerdWriter *writer, SerdErrorSink error_sink, void *handle)</argsstring>
        <name>serd_writer_set_error_sink</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga925d2fda236697a3e643b307ffe242e5" kindref="member">SerdErrorSink</ref></type>
          <declname>error_sink</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a function to be called when errors occur during writing.</para><para>The <computeroutput>error_sink</computeroutput> will be called with <computeroutput>handle</computeroutput> as its first argument. If no error function is set, errors are printed to stderr. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="873" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="807" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gaa924d2dcd23afb02ade707be75c7771b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_writer_chop_blank_prefix</definition>
        <argsstring>(SerdWriter *writer, const uint8_t *prefix)</argsstring>
        <name>serd_writer_chop_blank_prefix</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a prefix to be removed from matching blank node identifiers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="882" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="817" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga4149ade7ac611ba531af6d47d821ae3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_writer_set_base_uri</definition>
        <argsstring>(SerdWriter *writer, const SerdNode *uri)</argsstring>
        <name>serd_writer_set_base_uri</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the current output base URI (and emit directive if applicable).</para><para>Note this function can be safely casted to SerdBaseSink. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="892" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="832" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gaf15a4cba59efb5ed1a19fabc0c825825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_writer_set_root_uri</definition>
        <argsstring>(SerdWriter *writer, const SerdNode *uri)</argsstring>
        <name>serd_writer_set_root_uri</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the current root URI.</para><para>The root URI should be a prefix of the base URI. The path of the root URI is the highest path any relative up-reference can refer to. For example, with root <ulink url="file:///foo/root">file:///foo/root</ulink> and base <ulink url="file:///foo/root/base">file:///foo/root/base</ulink>, <ulink url="file:///foo/root">file:///foo/root</ulink> will be written as &lt;../&gt;, but <ulink url="file:///foo">file:///foo</ulink> will be written non-relatively as <ulink url="file:///foo">file:///foo</ulink>. If the root is not explicitly set, it defaults to the base URI, so no up-references will be created at all. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="907" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="855" bodyend="867"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gae850607b6b240aea9d3676b1230c3c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_writer_set_prefix</definition>
        <argsstring>(SerdWriter *writer, const SerdNode *name, const SerdNode *uri)</argsstring>
        <name>serd_writer_set_prefix</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a namespace prefix (and emit directive if applicable).</para><para>Note this function can be safely casted to SerdPrefixSink. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="917" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="871" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga0c055816f6eb769e55128701402e68b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_writer_write_statement</definition>
        <argsstring>(SerdWriter *writer, SerdStatementFlags flags, const SerdNode *graph, const SerdNode *subject, const SerdNode *predicate, const SerdNode *object, const SerdNode *object_datatype, const SerdNode *object_lang)</argsstring>
        <name>serd_writer_write_statement</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>graph</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>object_datatype</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>object_lang</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a statement.</para><para>Note this function can be safely casted to SerdStatementSink. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="928" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="619" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga2452df8462454202657ecad76bb26812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_writer_end_anon</definition>
        <argsstring>(SerdWriter *writer, const SerdNode *node)</argsstring>
        <name>serd_writer_end_anon</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark the end of an anonymous node&apos;s description.</para><para>Note this function can be safely casted to SerdEndSink. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="944" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="731" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gad983c2d9400df1819b821583188b1025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_writer_finish</definition>
        <argsstring>(SerdWriter *writer)</argsstring>
        <name>serd_writer_finish</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finish a write. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="952" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="757" bodyend="767"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" prot="public" static="no">
        <name>SERD_API</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="43" column="14" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" prot="public" static="no">
        <name>SerdStatus</name>
        <enumvalue id="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" prot="public">
          <name>SERD_SUCCESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No error </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" prot="public">
          <name>SERD_FAILURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Non-fatal failure </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dada1292115013f04e99b2ecfe32acd9a5" prot="public">
          <name>SERD_ERR_UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Unknown error </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" prot="public">
          <name>SERD_ERR_BAD_SYNTAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Invalid syntax </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da138e7b6b98684e9f408bb91e49bbb315" prot="public">
          <name>SERD_ERR_BAD_ARG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Invalid argument </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga104d544e48b6282ef2447bb3ac7c330daa92193f18699e3e21cce770c95eae842" prot="public">
          <name>SERD_ERR_NOT_FOUND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Not found </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da129e75e2f73cc16a2aeb9da549cdc3c8" prot="public">
          <name>SERD_ERR_ID_CLASH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Encountered clashing blank node IDs </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dab48fe996907c25db18ab33e6f97255b3" prot="public">
          <name>SERD_ERR_BAD_CURIE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Invalid CURIE (e.g. prefix does not exist) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da80c3ada89b84f63901565856dd56389b" prot="public">
          <name>SERD_ERR_INTERNAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Unexpected internal error (should not happen) </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return status code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="87" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="87" bodyend="97"/>
      </memberdef>
      <memberdef kind="enum" id="group__serd_1ga42683406fcfa9046b28dd951cefd3391" prot="public" static="no">
        <name>SerdSyntax</name>
        <enumvalue id="group__serd_1gga42683406fcfa9046b28dd951cefd3391a4acfee57d17213dcb55e94c55a4fd78e" prot="public">
          <name>SERD_TURTLE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Turtle - Terse RDF Triple Language (UTF-8). <simplesect kind="see"><para><ulink url="http://www.w3.org/TeamSubmission/turtle/">Turtle</ulink> </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" prot="public">
          <name>SERD_NTRIPLES</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>NTriples - Line-based RDF triples (ASCII). <simplesect kind="see"><para><ulink url="http://www.w3.org/TR/rdf-testcases#ntriples">NTriples</ulink> </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RDF syntax type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="102" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="102" bodyend="114"/>
      </memberdef>
      <memberdef kind="enum" id="group__serd_1ga9f7ab02c389af900f04d29be09c57647" prot="public" static="no">
        <name>SerdStatementFlag</name>
        <enumvalue id="group__serd_1gga9f7ab02c389af900f04d29be09c57647a09c7af768d2df031e453af6cd4b5c443" prot="public">
          <name>SERD_EMPTY_S</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Empty blank node subject </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga9f7ab02c389af900f04d29be09c57647a392894ad449f66514ac9395708bf7a2e" prot="public">
          <name>SERD_EMPTY_O</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Empty blank node object </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga9f7ab02c389af900f04d29be09c57647a4884dff61b0d7db44be17bb950158f8e" prot="public">
          <name>SERD_ANON_S_BEGIN</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Start of anonymous subject </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga9f7ab02c389af900f04d29be09c57647aae52aa2d821bdd02e828cfcf07692978" prot="public">
          <name>SERD_ANON_O_BEGIN</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Start of anonymous object </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga9f7ab02c389af900f04d29be09c57647ac4825dca7b59b50762a87174fc4148b2" prot="public">
          <name>SERD_ANON_CONT</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Continuation of anonymous node </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga9f7ab02c389af900f04d29be09c57647ada6665ea768d1fa37766c7a9b5e38d2f" prot="public">
          <name>SERD_LIST_S_BEGIN</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Start of list subject </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga9f7ab02c389af900f04d29be09c57647a546d2b47940fe7e7fcf866dcb278788d" prot="public">
          <name>SERD_LIST_O_BEGIN</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Start of list object </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga9f7ab02c389af900f04d29be09c57647a0d0a1d37007f3e9524ad05fb42fee24a" prot="public">
          <name>SERD_LIST_CONT</name>
          <initializer>= 1 &lt;&lt; 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Continuation of list </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flags indication inline abbreviation information for a statement. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="119" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="119" bodyend="128"/>
      </memberdef>
      <memberdef kind="enum" id="group__serd_1ga7ccd8d4fb2c3a6ad690ed6d6fe1b45fa" prot="public" static="no">
        <name>SerdType</name>
        <enumvalue id="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" prot="public">
          <name>SERD_NOTHING</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The type of a nonexistent node.</para><para>This type is useful as a sentinel, but is never emitted by the reader. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaa661a7e84228e32f0b979839658bf4c6" prot="public">
          <name>SERD_LITERAL</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Literal value.</para><para>A literal optionally has either a language, or a datatype (not both). </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" prot="public">
          <name>SERD_URI</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>URI (absolute or relative).</para><para>Value is an unquoted URI string, which is either a relative reference with respect to the current base URI (e.g. &quot;foo/bar&quot;), or an absolute URI (e.g. &quot;http://example.org/foo&quot;). <simplesect kind="see"><para><ulink url="http://tools.ietf.org/html/rfc3986">RFC3986</ulink>. </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa8a72fff2f6f94adeb11ccadf12c117d8" prot="public">
          <name>SERD_CURIE</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CURIE, a shortened URI.</para><para>Value is an unquoted CURIE string relative to the current environment, e.g. &quot;rdf:type&quot;. <simplesect kind="see"><para><ulink url="http://www.w3.org/TR/curie">CURIE Syntax 1.0</ulink> </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaed82589a7355a2086b1c9cd91ec261c7" prot="public">
          <name>SERD_BLANK</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A blank node.</para><para>Value is a blank node ID, e.g. &quot;id3&quot;, which is meaningful only within this serialisation. <simplesect kind="see"><para><ulink url="http://www.w3.org/TeamSubmission/turtle#nodeID">Turtle <computeroutput>nodeID</computeroutput></ulink> </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type of a syntactic RDF node.</para><para>This is more precise than the type of an abstract RDF node. An abstract node is either a resource, literal, or blank. In syntax there are two ways to refer to a resource (by URI or CURIE) and two ways to refer to a blank (by ID or anonymously). Anonymous (inline) blank nodes are expressed using SerdStatementFlags rather than this type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="144" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="144" bodyend="188"/>
      </memberdef>
      <memberdef kind="enum" id="group__serd_1gaf4ef160dcb28ebf5786dfd138807d8b5" prot="public" static="no">
        <name>SerdNodeFlag</name>
        <enumvalue id="group__serd_1ggaf4ef160dcb28ebf5786dfd138807d8b5adfeaf2c1a43d47c219474095fbba2a5a" prot="public">
          <name>SERD_HAS_NEWLINE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Contains line breaks (&apos;\n&apos; or &apos;\r&apos;) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1ggaf4ef160dcb28ebf5786dfd138807d8b5ac3f09d734dd3ec4325e7b2f1c4bfdaca" prot="public">
          <name>SERD_HAS_QUOTE</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Contains quotes (&apos;&quot;&apos;) </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flags indicating certain string properties relevant to serialisation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="193" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="enum" id="group__serd_1gae51da58ac1f1886c75ee2326495daeb2" prot="public" static="no">
        <name>SerdStyle</name>
        <enumvalue id="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2aa69f36bfcb18a88f514d5a763f8daaad" prot="public">
          <name>SERD_STYLE_ABBREVIATED</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Abbreviate triples when possible. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a1e7d60e2c01ba5b990ba96807ef429fe" prot="public">
          <name>SERD_STYLE_ASCII</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Escape all non-ASCII characters. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a5e2df70862512f94f6b2535ae63119be" prot="public">
          <name>SERD_STYLE_RESOLVED</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Resolve <ref refid="struct_u_r_is" kindref="compound">URIs</ref> against base URI. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a765d540f7a2e3dd87d57fa641c0a8488" prot="public">
          <name>SERD_STYLE_CURIED</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shorten <ref refid="struct_u_r_is" kindref="compound">URIs</ref> into CURIEs. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a16f426a166de90e1e52da3787bcc77aa" prot="public">
          <name>SERD_STYLE_BULK</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write output in pages. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Syntax style options.</para><para>The style of the writer output can be controlled by ORing together values from this enumeration. Note that some options are only supported for some syntaxes (e.g. NTriples does not support abbreviation and is always ASCII). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="258" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="258" bodyend="264"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__serd_1gaea4226dd80abea7afa05986f195d4755" prot="public" static="no">
        <type>struct <ref refid="struct_serd_env_impl" kindref="compound">SerdEnvImpl</ref></type>
        <definition>typedef struct SerdEnvImpl SerdEnv</definition>
        <argsstring></argsstring>
        <name>SerdEnv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Environment.</para><para>Represents the state required to resolve a CURIE or relative URI, e.g. the base URI and set of namespace prefixes at a particular point. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__serd_1ga69c709eacb062f9e7777726ec80b2796" prot="public" static="no">
        <type>struct <ref refid="struct_serd_reader_impl" kindref="compound">SerdReaderImpl</ref></type>
        <definition>typedef struct SerdReaderImpl SerdReader</definition>
        <argsstring></argsstring>
        <name>SerdReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RDF reader.</para><para>Parses RDF by calling user-provided sink functions as input is consumed (much like an XML SAX parser). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" prot="public" static="no">
        <type>struct <ref refid="struct_serd_writer_impl" kindref="compound">SerdWriterImpl</ref></type>
        <definition>typedef struct SerdWriterImpl SerdWriter</definition>
        <argsstring></argsstring>
        <name>SerdWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RDF writer.</para><para>Provides a number of functions to allow writing RDF syntax out to some stream. These functions are deliberately compatible with the sink functions used by SerdReader, so a reader can be directly connected to a writer to re-serialise a document with minimal overhead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" prot="public" static="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
        <definition>typedef uint32_t SerdStatementFlags</definition>
        <argsstring></argsstring>
        <name>SerdStatementFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bitwise OR of SerdNodeFlag values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="133" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__serd_1gafa75ae761bd7490db787b2f9e237595a" prot="public" static="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
        <definition>typedef uint32_t SerdNodeFlags</definition>
        <argsstring></argsstring>
        <name>SerdNodeFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bitwise OR of SerdNodeFlag values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" line="201" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>API for Serd, a lightweight RDF syntax library. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2011-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor">#ifndef<sp/>SERD_SERD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERD_SERD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SERD_SHARED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>SERD_LIB_IMPORT<sp/>__declspec(dllimport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>SERD_LIB_EXPORT<sp/>__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>SERD_LIB_IMPORT<sp/>__attribute__((visibility(&quot;default&quot;)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>SERD_LIB_EXPORT<sp/>__attribute__((visibility(&quot;default&quot;)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>ifdef<sp/>SERD_INTERNAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>SERD_API<sp/>SERD_LIB_EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>SERD_API<sp/>SERD_LIB_IMPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>SERD_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_serd_env_impl" kindref="compound">SerdEnvImpl</ref><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group__serd_1ga69c709eacb062f9e7777726ec80b2796" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_serd_reader_impl" kindref="compound">SerdReaderImpl</ref><sp/><ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_serd_writer_impl" kindref="compound">SerdWriterImpl</ref><sp/><ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88" refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89" refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da826a381ebe3341da46e3557924de0340" kindref="member">SERD_FAILURE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90" refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dada1292115013f04e99b2ecfe32acd9a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dada1292115013f04e99b2ecfe32acd9a5" kindref="member">SERD_ERR_UNKNOWN</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da3f4b92675b7fb3fa8ee46611a0963a46" kindref="member">SERD_ERR_BAD_SYNTAX</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="92" refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da138e7b6b98684e9f408bb91e49bbb315" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da138e7b6b98684e9f408bb91e49bbb315" kindref="member">SERD_ERR_BAD_ARG</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93" refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330daa92193f18699e3e21cce770c95eae842" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330daa92193f18699e3e21cce770c95eae842" kindref="member">SERD_ERR_NOT_FOUND</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94" refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da129e75e2f73cc16a2aeb9da549cdc3c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da129e75e2f73cc16a2aeb9da549cdc3c8" kindref="member">SERD_ERR_ID_CLASH</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95" refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dab48fe996907c25db18ab33e6f97255b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dab48fe996907c25db18ab33e6f97255b3" kindref="member">SERD_ERR_BAD_CURIE</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96" refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da80c3ada89b84f63901565856dd56389b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da80c3ada89b84f63901565856dd56389b" kindref="member">SERD_ERR_INTERNAL</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}<sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107" refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a4acfee57d17213dcb55e94c55a4fd78e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a4acfee57d17213dcb55e94c55a4fd78e" kindref="member">SERD_TURTLE</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" kindref="member">SERD_NTRIPLES</ref><sp/>=<sp/>2</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}<sp/><ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="group__serd_1ga9f7ab02c389af900f04d29be09c57647" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120" refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a09c7af768d2df031e453af6cd4b5c443" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a09c7af768d2df031e453af6cd4b5c443" kindref="member">SERD_EMPTY_S</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,<sp/><sp/></highlight></codeline>
<codeline lineno="121" refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a392894ad449f66514ac9395708bf7a2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a392894ad449f66514ac9395708bf7a2e" kindref="member">SERD_EMPTY_O</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,<sp/><sp/></highlight></codeline>
<codeline lineno="122" refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a4884dff61b0d7db44be17bb950158f8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a4884dff61b0d7db44be17bb950158f8e" kindref="member">SERD_ANON_S_BEGIN</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,<sp/><sp/></highlight></codeline>
<codeline lineno="123" refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647aae52aa2d821bdd02e828cfcf07692978" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647aae52aa2d821bdd02e828cfcf07692978" kindref="member">SERD_ANON_O_BEGIN</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,<sp/><sp/></highlight></codeline>
<codeline lineno="124" refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647ac4825dca7b59b50762a87174fc4148b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647ac4825dca7b59b50762a87174fc4148b2" kindref="member">SERD_ANON_CONT</ref><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>5,<sp/><sp/></highlight></codeline>
<codeline lineno="125" refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647ada6665ea768d1fa37766c7a9b5e38d2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647ada6665ea768d1fa37766c7a9b5e38d2f" kindref="member">SERD_LIST_S_BEGIN</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>6,<sp/><sp/></highlight></codeline>
<codeline lineno="126" refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a546d2b47940fe7e7fcf866dcb278788d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a546d2b47940fe7e7fcf866dcb278788d" kindref="member">SERD_LIST_O_BEGIN</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>7,<sp/><sp/></highlight></codeline>
<codeline lineno="127" refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a0d0a1d37007f3e9524ad05fb42fee24a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a0d0a1d37007f3e9524ad05fb42fee24a" kindref="member">SERD_LIST_CONT</ref><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>8<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}<sp/><ref refid="group__serd_1ga9f7ab02c389af900f04d29be09c57647" kindref="member">SerdStatementFlag</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="group__serd_1ga7ccd8d4fb2c3a6ad690ed6d6fe1b45fa" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="150" refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" kindref="member">SERD_NOTHING</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaa661a7e84228e32f0b979839658bf4c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaa661a7e84228e32f0b979839658bf4c6" kindref="member">SERD_LITERAL</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa8a72fff2f6f94adeb11ccadf12c117d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa8a72fff2f6f94adeb11ccadf12c117d8" kindref="member">SERD_CURIE</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaed82589a7355a2086b1c9cd91ec261c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaed82589a7355a2086b1c9cd91ec261c7" kindref="member">SERD_BLANK</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal">}<sp/><ref refid="group__serd_1ga7ccd8d4fb2c3a6ad690ed6d6fe1b45fa" kindref="member">SerdType</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="group__serd_1gaf4ef160dcb28ebf5786dfd138807d8b5" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="194" refid="group__serd_1ggaf4ef160dcb28ebf5786dfd138807d8b5adfeaf2c1a43d47c219474095fbba2a5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ggaf4ef160dcb28ebf5786dfd138807d8b5adfeaf2c1a43d47c219474095fbba2a5a" kindref="member">SERD_HAS_NEWLINE</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195" refid="group__serd_1ggaf4ef160dcb28ebf5786dfd138807d8b5ac3f09d734dd3ec4325e7b2f1c4bfdaca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ggaf4ef160dcb28ebf5786dfd138807d8b5ac3f09d734dd3ec4325e7b2f1c4bfdaca" kindref="member">SERD_HAS_QUOTE</ref><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1<sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal">}<sp/><ref refid="group__serd_1gaf4ef160dcb28ebf5786dfd138807d8b5" kindref="member">SerdNodeFlag</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="group__serd_1gafa75ae761bd7490db787b2f9e237595a" kindref="member">SerdNodeFlags</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="struct_serd_node" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="207" refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208" refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="209" refid="struct_serd_node_1ad4816721933bbd19f904ff67d3beb40e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_node_1ad4816721933bbd19f904ff67d3beb40e" kindref="member">n_chars</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="210" refid="struct_serd_node_1a945891f8a5762a5739fc6ad7e023b50c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SerdNodeFlags<sp/><sp/><ref refid="struct_serd_node_1a945891f8a5762a5739fc6ad7e023b50c" kindref="member">flags</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211" refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga7ccd8d4fb2c3a6ad690ed6d6fe1b45fa" kindref="member">SerdType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal">}<sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="struct_serd_chunk" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218" refid="struct_serd_chunk_1a1fb21c23d2c2eecac5cf57b10ac370f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="struct_serd_chunk_1a1fb21c23d2c2eecac5cf57b10ac370f6" kindref="member">buf</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="219" refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" kindref="member">len</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal">}<sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="struct_serd_error" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="226" refid="struct_serd_error_1ad24bd4cffdaeacbe833b20ded1e81e4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SerdStatus<sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_error_1ad24bd4cffdaeacbe833b20ded1e81e4c" kindref="member">status</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227" refid="struct_serd_error_1a7ce492ac3be5bf5dae7394edd260bc79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="struct_serd_error_1a7ce492ac3be5bf5dae7394edd260bc79" kindref="member">filename</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="228" refid="struct_serd_error_1af168bcd27bcecea6a3560195cebca4d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_error_1af168bcd27bcecea6a3560195cebca4d8" kindref="member">line</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229" refid="struct_serd_error_1aa44d03c985deafe03b6c6e9b2241aebe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_error_1aa44d03c985deafe03b6c6e9b2241aebe" kindref="member">col</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230" refid="struct_serd_error_1a79ca1a8093c602b5c8a2aa21aa711e0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><ref refid="struct_serd_error_1a79ca1a8093c602b5c8a2aa21aa711e0a" kindref="member">fmt</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231" refid="struct_serd_error_1ad887f45444a7531e0507fb19651db0f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_error_1ad887f45444a7531e0507fb19651db0f3" kindref="member">args</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal">}<sp/><ref refid="struct_serd_error" kindref="compound">SerdError</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="struct_serd_u_r_i" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="242" refid="struct_serd_u_r_i_1a98a86ede5302ca626225d097f31c2cf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref><sp/><ref refid="struct_serd_u_r_i_1a98a86ede5302ca626225d097f31c2cf1" kindref="member">scheme</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243" refid="struct_serd_u_r_i_1a8e5ad5cdcf67e04b5704d879c17d8f78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref><sp/><ref refid="struct_serd_u_r_i_1a8e5ad5cdcf67e04b5704d879c17d8f78" kindref="member">authority</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="244" refid="struct_serd_u_r_i_1a127adf8cc7c49ef5dd5cb2f2064c08ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref><sp/><ref refid="struct_serd_u_r_i_1a127adf8cc7c49ef5dd5cb2f2064c08ef" kindref="member">path_base</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="245" refid="struct_serd_u_r_i_1a70b1052b735a7b0b602bce0398e2ad96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref><sp/><ref refid="struct_serd_u_r_i_1a70b1052b735a7b0b602bce0398e2ad96" kindref="member">path</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246" refid="struct_serd_u_r_i_1a807d95462e4b97801f6a24115b2cdf46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref><sp/><ref refid="struct_serd_u_r_i_1a807d95462e4b97801f6a24115b2cdf46" kindref="member">query</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247" refid="struct_serd_u_r_i_1ab9e639a2f3c0183c4c8d0b44dc22a00a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref><sp/><ref refid="struct_serd_u_r_i_1ab9e639a2f3c0183c4c8d0b44dc22a00a" kindref="member">fragment</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal">}<sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="group__serd_1gae51da58ac1f1886c75ee2326495daeb2" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259" refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2aa69f36bfcb18a88f514d5a763f8daaad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2aa69f36bfcb18a88f514d5a763f8daaad" kindref="member">SERD_STYLE_ABBREVIATED</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260" refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a1e7d60e2c01ba5b990ba96807ef429fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a1e7d60e2c01ba5b990ba96807ef429fe" kindref="member">SERD_STYLE_ASCII</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,<sp/><sp/></highlight></codeline>
<codeline lineno="261" refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a5e2df70862512f94f6b2535ae63119be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a5e2df70862512f94f6b2535ae63119be" kindref="member">SERD_STYLE_RESOLVED</ref><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,<sp/><sp/></highlight></codeline>
<codeline lineno="262" refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a765d540f7a2e3dd87d57fa641c0a8488" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a765d540f7a2e3dd87d57fa641c0a8488" kindref="member">SERD_STYLE_CURIED</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,<sp/><sp/></highlight></codeline>
<codeline lineno="263" refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a16f426a166de90e1e52da3787bcc77aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a16f426a166de90e1e52da3787bcc77aa" kindref="member">SERD_STYLE_BULK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal">}<sp/><ref refid="group__serd_1gae51da58ac1f1886c75ee2326495daeb2" kindref="member">SerdStyle</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><ref refid="group__serd_1gac0743f37f7890c255a2960dbe30ff25d" kindref="member">serd_strerror</ref>(SerdStatus<sp/><ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><ref refid="group__serd_1ga0fa8f5d6cd20c3a255bd812c7c29a540" kindref="member">serd_strlen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>n_bytes,<sp/>SerdNodeFlags*<sp/>flags);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="group__serd_1gaf763f9aee7bfba6f051963dae8a8d3c7" kindref="member">serd_strtod</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>endptr);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><ref refid="group__serd_1ga506aa651496034ea9c53e547a5a7ed48" kindref="member">serd_base64_decode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref><sp/>SERD_URI_NULL<sp/>=<sp/>{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}};</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><ref refid="group__serd_1ga5d9bf71e7a2beae95fdec28956aecc00" kindref="member">serd_uri_to_path</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><ref refid="group__serd_1gac927c22020c48c591d70d15ef9e3e606" kindref="member">serd_file_uri_parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>**<sp/>hostname);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><ref refid="group__serd_1gaaddea01f53227c6d984a94e94164f603" kindref="member">serd_uri_string_has_scheme</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>utf8);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="357"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><ref refid="group__serd_1ga448a194144052f3edea6030d3a950eb0" kindref="member">serd_uri_parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>utf8,<sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><ref refid="group__serd_1ga5af85594b54a6bcfd252cefeaf367f22" kindref="member">serd_uri_resolve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>,<sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>size_t<sp/>(*<ref refid="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" kindref="member">SerdSink</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><ref refid="group__serd_1ga210c50472dac0f3772f1067382cd2763" kindref="member">serd_uri_serialise</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>,<sp/><ref refid="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" kindref="member">SerdSink</ref><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><ref refid="group__serd_1ga9f7fedb16a93ccddbddbbdf93d6f4165" kindref="member">serd_uri_serialise_relative</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/>root,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" kindref="member">SerdSink</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/>SERD_NODE_NULL<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" kindref="member">SERD_NOTHING</ref><sp/>};</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><ref refid="struct_serd_node" kindref="compound">SerdNode</ref></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><ref refid="group__serd_1gae76caf1b4e7a6465c9cb73ec11f568ea" kindref="member">serd_node_from_string</ref>(<ref refid="group__serd_1ga7ccd8d4fb2c3a6ad690ed6d6fe1b45fa" kindref="member">SerdType</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><ref refid="struct_serd_node" kindref="compound">SerdNode</ref></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><ref refid="group__serd_1ga5a25ffa37534176468ffc8e4e6ce8d7c" kindref="member">serd_node_copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="structnode" kindref="compound">node</ref>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><ref refid="group__serd_1ga19e58c93a79966be1e74d9d92f5ea167" kindref="member">serd_node_equals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><ref refid="struct_serd_node" kindref="compound">SerdNode</ref></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><ref refid="group__serd_1ga08700bbb56c7faaa1c4d979b922b839e" kindref="member">serd_node_new_uri_from_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>uri_node,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><ref refid="struct_serd_node" kindref="compound">SerdNode</ref></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><ref refid="group__serd_1ga4285ae7168a9fd4a9dfb5c8ccce66222" kindref="member">serd_node_new_uri_from_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><ref refid="struct_serd_node" kindref="compound">SerdNode</ref></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><ref refid="group__serd_1gafeaacb37341cb84e36b8ada129691d39" kindref="member">serd_node_new_file_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>hostname,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>escape);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><ref refid="struct_serd_node" kindref="compound">SerdNode</ref></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><ref refid="group__serd_1ga051e899e23a1f3cad1ae4a882ad010af" kindref="member">serd_node_new_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>,<sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><ref refid="struct_serd_node" kindref="compound">SerdNode</ref></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><ref refid="group__serd_1gaed31dfb8fedccfb82eb7c7b5f81931eb" kindref="member">serd_node_new_decimal</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>frac_digits);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><ref refid="struct_serd_node" kindref="compound">SerdNode</ref></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><ref refid="group__serd_1gae2a0afeb436855f98c26e2bec0ab2d09" kindref="member">serd_node_new_integer</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><ref refid="struct_serd_node" kindref="compound">SerdNode</ref></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><ref refid="group__serd_1ga249f78dce10d57cf78d191a087c3ac71" kindref="member">serd_node_new_blob</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wrap_lines);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><ref refid="group__serd_1ga037ef71317b8afff0a020072099cd14f" kindref="member">serd_node_free</ref>(<ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="structnode" kindref="compound">node</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="537" refid="group__serd_1ga925d2fda236697a3e643b307ffe242e5" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref><sp/>(*<ref refid="group__serd_1ga925d2fda236697a3e643b307ffe242e5" kindref="member">SerdErrorSink</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle,</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_error" kindref="compound">SerdError</ref>*<sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="group__serd_1ga9f1652e78562130337b519f309dd5125" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref><sp/>(*<ref refid="group__serd_1ga9f1652e78562130337b519f309dd5125" kindref="member">SerdBaseSink</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="group__serd_1ga692f0bbdf5e2576191ee3556ecde7d55" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref><sp/>(*<ref refid="group__serd_1ga692f0bbdf5e2576191ee3556ecde7d55" kindref="member">SerdPrefixSink</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="group__serd_1ga9cd6dc709f738ed9770d0d2cd1195bd4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref><sp/>(*<ref refid="group__serd_1ga9cd6dc709f738ed9770d0d2cd1195bd4" kindref="member">SerdStatementSink</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerdStatementFlags<sp/>flags,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>graph,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>subject,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/><ref refid="xlmath_8c_1a767c5fa064d0a1e1f8b447769f1a890b" kindref="member">predicate</ref>,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>object,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>object_datatype,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>object_lang);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="group__serd_1gae67888543462e4127e6a4f6af047026b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref><sp/>(*<ref refid="group__serd_1gae67888543462e4127e6a4f6af047026b" kindref="member">SerdEndSink</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="structnode" kindref="compound">node</ref>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><ref refid="group__serd_1ga64ffdd637dad39a2483e727125c2c285" kindref="member">serd_env_new</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="struct_serd_writer_impl_1ae17130ea21f914dedbf71c16dd6059e5" kindref="member">base_uri</ref>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><ref refid="group__serd_1ga09d49846b7fc7dbd9a4c0fdc1e84e915" kindref="member">serd_env_free</ref>(<ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><ref refid="group__serd_1ga94b861ea65187556a473dcb668ab8667" kindref="member">serd_env_get_base_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="613"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><ref refid="group__serd_1gaddd2dd19cd0a36ce4ea39ade113eab62" kindref="member">serd_env_set_base_uri</ref>(<ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="621"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><ref refid="group__serd_1gafd42745aa586531608eb4a23c560cef2" kindref="member">serd_env_set_prefix</ref>(<ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>name,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="630"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><ref refid="group__serd_1gac41d573e81de34506463612e0c464889" kindref="member">serd_env_set_prefix_from_strings</ref>(<ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>name,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><ref refid="group__serd_1gabeffe38076753a62dab52e0eeb1ff770" kindref="member">serd_env_qualify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structprefix" kindref="compound">prefix</ref>,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>suffix);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="649"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><ref refid="group__serd_1gac5a39f1201094a76d12b0bb509b8536f" kindref="member">serd_env_expand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>curie,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>uri_prefix,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>uri_suffix);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><ref refid="struct_serd_node" kindref="compound">SerdNode</ref></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><ref refid="group__serd_1ga625355c8383d9db384edd7d95058b712" kindref="member">serd_env_expand_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="structnode" kindref="compound">node</ref>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><ref refid="group__serd_1ga4e179ef13f5ad5ec23ff0b9b9d944c8e" kindref="member">serd_env_foreach</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga692f0bbdf5e2576191ee3556ecde7d55" kindref="member">SerdPrefixSink</ref><sp/>func,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><ref refid="group__serd_1ga99a5f1ae546409bcb9a56d89e68902bf" kindref="member">serd_reader_new</ref>(<ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref>,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*free_handle)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga9f1652e78562130337b519f309dd5125" kindref="member">SerdBaseSink</ref><sp/><sp/><sp/><sp/><sp/><sp/>base_sink,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga692f0bbdf5e2576191ee3556ecde7d55" kindref="member">SerdPrefixSink</ref><sp/><sp/><sp/><sp/>prefix_sink,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga9cd6dc709f738ed9770d0d2cd1195bd4" kindref="member">SerdStatementSink</ref><sp/>statement_sink,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1gae67888543462e4127e6a4f6af047026b" kindref="member">SerdEndSink</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_sink);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><ref refid="group__serd_1ga3a64910235c2c8bedb0e9244b338c5c5" kindref="member">serd_reader_set_error_sink</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/><sp/><sp/>reader,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga925d2fda236697a3e643b307ffe242e5" kindref="member">SerdErrorSink</ref><sp/><ref refid="struct_serd_writer_impl_1aaa70bfa3692cc1306a44829465b8e3e6" kindref="member">error_sink</ref>,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><ref refid="group__serd_1gaad5ac334bdf5d0c531dc0526c2310862" kindref="member">serd_reader_get_handle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><ref refid="group__serd_1ga18b1d46abcd156310e0b18221aa80e31" kindref="member">serd_reader_add_blank_prefix</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/><sp/><sp/><sp/>reader,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="structprefix" kindref="compound">prefix</ref>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><ref refid="group__serd_1ga7f5f4f5a6b224b0f04df3c078f9e3eaf" kindref="member">serd_reader_set_default_graph</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/><sp/><sp/><sp/><sp/>reader,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>graph);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="740"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><ref refid="group__serd_1gad0fe4c7359478679e69b397620dc7f52" kindref="member">serd_reader_read_file</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/><sp/><sp/><sp/>reader,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="753"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><ref refid="group__serd_1ga0cc5b3a7ec36893d67e70564d3f326a7" kindref="member">serd_reader_start_stream</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/><sp/><sp/><sp/>me,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>name,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bulk);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="768"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><ref refid="group__serd_1ga832ee2aae7c3d9f6b7de4c793ec3a21c" kindref="member">serd_reader_read_chunk</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>me);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="775"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><ref refid="group__serd_1ga55a5a06fdc2fc6a50913f64798e980cd" kindref="member">serd_reader_end_stream</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>me);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="782"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><ref refid="group__serd_1ga001d19e0eac46f43a011f6266a7b3d59" kindref="member">serd_reader_read_file_handle</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/><sp/><sp/><sp/>reader,</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file,</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>name);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="791"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><ref refid="group__serd_1ga3ebc4139f1b992135bdd86fc6959b566" kindref="member">serd_reader_read_string</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>me,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>utf8);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><ref refid="group__serd_1ga26a4070db2f9ef59c94adeaa9dac6752" kindref="member">serd_reader_free</ref>(<ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><ref refid="group__serd_1gae87f48adca211a7fa2c0432e9ba68d29" kindref="member">serd_writer_new</ref>(<ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref><sp/><sp/><sp/><sp/><sp/>syntax,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1gae51da58ac1f1886c75ee2326495daeb2" kindref="member">SerdStyle</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a731bcb7aa9fdd36e19e9e857b9a75b57" kindref="member">style</ref>,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><ref refid="struct_serd_writer_impl_1ae17130ea21f914dedbf71c16dd6059e5" kindref="member">base_uri</ref>,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" kindref="member">SerdSink</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><ref refid="group__serd_1ga50c06e138081328c46e9dfa593814f73" kindref="member">serd_writer_free</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><ref refid="group__serd_1gaf48894b46c202d07055c0de23431f13a" kindref="member">serd_writer_get_env</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><ref refid="group__serd_1ga08303ceed3102e9fe2ae6bf39eb5b0ff" kindref="member">serd_file_sink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><ref refid="group__serd_1gaec4335743b7d78339d8c133111ec8319" kindref="member">serd_chunk_sink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><ref refid="group__serd_1gad91b770366f31f3ae83dcdde8c1d6c5d" kindref="member">serd_chunk_sink_finish</ref>(<ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref>*<sp/><ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><ref refid="group__serd_1gae5b20ff80e98f8b945bf268f7dd1b1aa" kindref="member">serd_writer_set_error_sink</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga925d2fda236697a3e643b307ffe242e5" kindref="member">SerdErrorSink</ref><sp/><ref refid="struct_serd_writer_impl_1aaa70bfa3692cc1306a44829465b8e3e6" kindref="member">error_sink</ref>,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><ref refid="group__serd_1gaa924d2dcd23afb02ade707be75c7771b" kindref="member">serd_writer_chop_blank_prefix</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="structprefix" kindref="compound">prefix</ref>);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="891"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><ref refid="group__serd_1ga4149ade7ac611ba531af6d47d821ae3e" kindref="member">serd_writer_set_base_uri</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="906"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><ref refid="group__serd_1gaf15a4cba59efb5ed1a19fabc0c825825" kindref="member">serd_writer_set_root_uri</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="916"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><ref refid="group__serd_1gae850607b6b240aea9d3676b1230c3c63" kindref="member">serd_writer_set_prefix</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>name,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="927"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><ref refid="group__serd_1ga0c055816f6eb769e55128701402e68b4" kindref="member">serd_writer_write_statement</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerdStatementFlags<sp/>flags,</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>graph,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>subject,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>predicate,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>object_datatype,</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>object_lang);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="943"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><ref refid="group__serd_1ga2452df8462454202657ecad76bb26812" kindref="member">serd_writer_end_anon</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="structnode" kindref="compound">node</ref>);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="951"><highlight class="normal">SerdStatus</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><ref refid="group__serd_1gad983c2d9400df1819b821583188b1025" kindref="member">serd_writer_finish</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>SERD_SERD_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/serd/serd.h"/>
  </compounddef>
</doxygen>
