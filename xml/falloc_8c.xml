<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="falloc_8c" kind="file" language="C++">
    <compoundname>falloc.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <includes refid="falloc_8h" local="yes">falloc.h</includes>
    <incdepgraph>
      <node id="12226">
        <label>stdlib.h</label>
      </node>
      <node id="12228">
        <label>setjmp.h</label>
      </node>
      <node id="12222">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c</label>
        <link refid="falloc.c"/>
        <childnode refid="12223" relation="include">
        </childnode>
        <childnode refid="12224" relation="include">
        </childnode>
        <childnode refid="12225" relation="include">
        </childnode>
        <childnode refid="12230" relation="include">
        </childnode>
        <childnode refid="12238" relation="include">
        </childnode>
      </node>
      <node id="12238">
        <label>falloc.h</label>
        <link refid="falloc_8h"/>
        <childnode refid="12239" relation="include">
        </childnode>
        <childnode refid="12240" relation="include">
        </childnode>
      </node>
      <node id="12225">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="12226" relation="include">
        </childnode>
        <childnode refid="12223" relation="include">
        </childnode>
        <childnode refid="12227" relation="include">
        </childnode>
        <childnode refid="12228" relation="include">
        </childnode>
        <childnode refid="12229" relation="include">
        </childnode>
      </node>
      <node id="12224">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="12237">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="12236">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="12235">
        <label>string.h</label>
      </node>
      <node id="12239">
        <label>cque.h</label>
        <link refid="cque_8h"/>
      </node>
      <node id="12230">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="12231" relation="include">
        </childnode>
        <childnode refid="12232" relation="include">
        </childnode>
      </node>
      <node id="12231">
        <label>math.h</label>
      </node>
      <node id="12234">
        <label>switches.h</label>
      </node>
      <node id="12232">
        <label>stdefs.h</label>
        <link refid="stdefs_8h"/>
        <childnode refid="12233" relation="include">
        </childnode>
      </node>
      <node id="12229">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="12227">
        <label>ctype.h</label>
      </node>
      <node id="12240">
        <label>debug.h</label>
        <link refid="libnyquist_2nyquist_2nyqsrc_2debug_8h"/>
      </node>
      <node id="12223">
        <label>stdio.h</label>
      </node>
      <node id="12233">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="12234" relation="include">
        </childnode>
        <childnode refid="12223" relation="include">
        </childnode>
        <childnode refid="12235" relation="include">
        </childnode>
        <childnode refid="12231" relation="include">
        </childnode>
        <childnode refid="12236" relation="include">
        </childnode>
        <childnode refid="12237" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="falloc_8c_1ad400c1a739f5dd19edee0dfd8ba5eece" prot="public" static="no">
        <name>POOL_HEAD_SIZE</name>
        <initializer>(<ref refid="falloc_8h_1abf2d8364f4b400c4be3eccfeb94aaffe" kindref="member">round_size</ref>(sizeof(<ref refid="cque_8h_1a282fb22ec6d88ce825494a03b5b34a79" kindref="member">CQUE</ref>)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="44" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="falloc_8c_1a1fd93fd5c080a8031b8330936d640dfe" prot="public" static="no" mutable="no">
        <type><ref refid="cque_8h_1a282fb22ec6d88ce825494a03b5b34a79" kindref="member">CQUE</ref> *</type>
        <definition>CQUE* sample_block_free</definition>
        <argsstring></argsstring>
        <name>sample_block_free</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="13" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="falloc_8c_1a9c763fc113431d8e379295efca1ad7a9" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int sample_block_used</definition>
        <argsstring></argsstring>
        <name>sample_block_used</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="16" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="falloc_8c_1a3151e2b341c3c23715aaa87497859934" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int sample_block_low_water</definition>
        <argsstring></argsstring>
        <name>sample_block_low_water</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="17" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="falloc_8c_1ac18839ae8099cc4419a7bb9550a622e2" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int sample_block_total</definition>
        <argsstring></argsstring>
        <name>sample_block_total</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="18" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="falloc_8c_1a34e71a731dad5e369ad008c1c04e0443" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int snd_list_used</definition>
        <argsstring></argsstring>
        <name>snd_list_used</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="19" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="falloc_8c_1a734b7c4360be0cd210e13dd3a42da0f4" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int sound_used</definition>
        <argsstring></argsstring>
        <name>sound_used</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="20" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="falloc_8c_1af31dd2d8a03925f814ed1db446e437c0" prot="public" static="no" mutable="no">
        <type><ref refid="cque_8h_1a282fb22ec6d88ce825494a03b5b34a79" kindref="member">CQUE</ref> *</type>
        <definition>CQUE* generic_free[MAXLISTS]</definition>
        <argsstring>[MAXLISTS]</argsstring>
        <name>generic_free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="23" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="falloc_8c_1ab5c12785a28e8ce575d06644263023fa" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* poolp</definition>
        <argsstring></argsstring>
        <name>poolp</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="34" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="falloc_8c_1a444fdacb201fddf6b2ecae2e604ccbd4" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* poolend</definition>
        <argsstring></argsstring>
        <name>poolend</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="35" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* spoolp</definition>
        <argsstring></argsstring>
        <name>spoolp</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="falloc_8c_1a53f0fde72f8b98cfc6dc3a35319350a4" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* spoolend</definition>
        <argsstring></argsstring>
        <name>spoolend</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="39" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="falloc_8c_1a901ae4c0301ee7422fa2c24420bbe450" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int npools</definition>
        <argsstring></argsstring>
        <name>npools</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="41" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="falloc_8c_1ac0514869cf0cb4f8aca9694e7ec4cc19" prot="public" static="no" mutable="no">
        <type><ref refid="cque_8h_1a282fb22ec6d88ce825494a03b5b34a79" kindref="member">CQUE</ref> *</type>
        <definition>CQUE* pools</definition>
        <argsstring></argsstring>
        <name>pools</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="45" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="falloc_8c_1a5dd9588c5ed15e07c42ae2c6595be38e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void falloc_init</definition>
        <argsstring>(void)</argsstring>
        <name>falloc_init</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="26" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="falloc_8c_1a295c5d348caa68c1cb9708efd426cb43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sound_already_free_test</definition>
        <argsstring>(sound_type s)</argsstring>
        <name>sound_already_free_test</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="48" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="falloc_8c_1a568abd2b4be256d010866bb1f9889286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void new_pool</definition>
        <argsstring>(void)</argsstring>
        <name>new_pool</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="64" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="64" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="falloc_8c_1a9da693737a241764264d6f25105b839e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void new_spool</definition>
        <argsstring>(void)</argsstring>
        <name>new_spool</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="81" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="81" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="falloc_8c_1a7cfcfbc8dce52b537f435f9108040b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref></type>
        <definition>sample_block_type find_sample_block</definition>
        <argsstring>(void)</argsstring>
        <name>find_sample_block</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="116" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="116" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="falloc_8c_1ae139b9c94049ab774748124fb107e795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* get_from_pool</definition>
        <argsstring>(size_t siz)</argsstring>
        <name>get_from_pool</name>
        <param>
          <type>size_t</type>
          <declname>siz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="155" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="155" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="falloc_8c_1a87d807202950d174aadb82fff42ef745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void falloc_gc</definition>
        <argsstring>()</argsstring>
        <name>falloc_gc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" line="175" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c" bodystart="175" bodyend="268"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>falloc.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>data<sp/>for<sp/>Nyquist<sp/>memory<sp/>allocation.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sound_8h" kindref="compound">sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="falloc_8h" kindref="compound">falloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>special<sp/>free<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="falloc_8h_1a1fd93fd5c080a8031b8330936d640dfe" refkind="member"><highlight class="normal"><ref refid="structcque" kindref="compound">CQUE</ref><sp/>*<ref refid="falloc_8c_1a1fd93fd5c080a8031b8330936d640dfe" kindref="member">sample_block_free</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>really<sp/>a<sp/>sample_block_type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>special<sp/>counts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="local_8c_1a9c763fc113431d8e379295efca1ad7a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="falloc_8c_1a9c763fc113431d8e379295efca1ad7a9" kindref="member">sample_block_used</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17" refid="falloc_8c_1a3151e2b341c3c23715aaa87497859934" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="falloc_8c_1a3151e2b341c3c23715aaa87497859934" kindref="member">sample_block_low_water</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18" refid="local_8c_1ac18839ae8099cc4419a7bb9550a622e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="falloc_8c_1ac18839ae8099cc4419a7bb9550a622e2" kindref="member">sample_block_total</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19" refid="falloc_8h_1a34e71a731dad5e369ad008c1c04e0443" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="falloc_8c_1a34e71a731dad5e369ad008c1c04e0443" kindref="member">snd_list_used</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20" refid="falloc_8h_1a734b7c4360be0cd210e13dd3a42da0f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="falloc_8c_1a734b7c4360be0cd210e13dd3a42da0f4" kindref="member">sound_used</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>generic<sp/>free<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="falloc_8h_1af31dd2d8a03925f814ed1db446e437c0" refkind="member"><highlight class="normal"><ref refid="structcque" kindref="compound">CQUE</ref><sp/>*<ref refid="falloc_8c_1af31dd2d8a03925f814ed1db446e437c0" kindref="member">generic_free</ref>[<ref refid="falloc_8h_1a9af1836af7301ab245b6d2fcc7271b57" kindref="member">MAXLISTS</ref>];</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="falloc_8h_1a5dd9588c5ed15e07c42ae2c6595be38e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="falloc_8c_1a5dd9588c5ed15e07c42ae2c6595be38e" kindref="member">falloc_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="falloc_8h_1a9af1836af7301ab245b6d2fcc7271b57" kindref="member">MAXLISTS</ref>;<sp/>i++)<sp/>generic_free[i]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>memory<sp/>pool<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="falloc_8h_1ab5c12785a28e8ce575d06644263023fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="falloc_8c_1ab5c12785a28e8ce575d06644263023fa" kindref="member">poolp</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="35" refid="falloc_8h_1a444fdacb201fddf6b2ecae2e604ccbd4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="falloc_8c_1a444fdacb201fddf6b2ecae2e604ccbd4" kindref="member">poolend</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sample<sp/>block<sp/>memory<sp/>pool<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="falloc_8h_1a9c9eb2ff2b4ed56c0de04000518ee529" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="39" refid="falloc_8h_1a53f0fde72f8b98cfc6dc3a35319350a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="falloc_8c_1a53f0fde72f8b98cfc6dc3a35319350a4" kindref="member">spoolend</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="falloc_8h_1a901ae4c0301ee7422fa2c24420bbe450" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="falloc_8c_1a901ae4c0301ee7422fa2c24420bbe450" kindref="member">npools</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TRACK_POOLS)<sp/>&amp;&amp;<sp/>TRACK_POOLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="falloc_8c_1ad400c1a739f5dd19edee0dfd8ba5eece" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POOL_HEAD_SIZE<sp/>(round_size(sizeof(CQUE)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="falloc_8c_1ac0514869cf0cb4f8aca9694e7ec4cc19" refkind="member"><highlight class="normal"><ref refid="structcque" kindref="compound">CQUE</ref><sp/>*<ref refid="falloc_8c_1ac0514869cf0cb4f8aca9694e7ec4cc19" kindref="member">pools</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="falloc_8c_1a295c5d348caa68c1cb9708efd426cb43" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="falloc_8c_1a295c5d348caa68c1cb9708efd426cb43" kindref="member">sound_already_free_test</ref>(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>sp;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sp<sp/>=<sp/>(<ref refid="structsound__struct" kindref="compound">sound_type</ref>)<sp/><ref refid="falloc_8h_1abf874d6a4a66bfbdf1510ee6de26cf24" kindref="member">sound_free</ref>;<sp/>sp;<sp/>sp<sp/>=<sp/>(<ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref>)<sp/>((<ref refid="structcque" kindref="compound">CQUE</ref><sp/>*)<sp/>sp)-&gt;qnext)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>sp)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;SOUND<sp/>ALREADY<sp/>FREE!!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>0;<sp/>sp-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref><sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>trap<sp/>to<sp/>debugger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>new_pool<sp/>--<sp/>allocate<sp/>a<sp/>new<sp/>pool<sp/>from<sp/>which<sp/>mem<sp/>is<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="falloc_8h_1a568abd2b4be256d010866bb1f9889286" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="falloc_8c_1a568abd2b4be256d010866bb1f9889286" kindref="member">new_pool</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1ab5c12785a28e8ce575d06644263023fa" kindref="member">poolp</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>malloc(<ref refid="falloc_8h_1abb6cc22446445d050d740dd8b650f27e" kindref="member">MAXPOOLSIZE</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="falloc_8c_1ab5c12785a28e8ce575d06644263023fa" kindref="member">poolp</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="xlisp_8h_1a3a540e3eef339eec06aff31c4ba1eb25" kindref="member">STDERR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Nyquist:<sp/>out<sp/>of<sp/>memory!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a444fdacb201fddf6b2ecae2e604ccbd4" kindref="member">poolend</ref><sp/>=<sp/><ref refid="falloc_8c_1ab5c12785a28e8ce575d06644263023fa" kindref="member">poolp</ref><sp/>+<sp/><ref refid="falloc_8h_1abb6cc22446445d050d740dd8b650f27e" kindref="member">MAXPOOLSIZE</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a901ae4c0301ee7422fa2c24420bbe450" kindref="member">npools</ref>++;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stick<sp/>to<sp/>double<sp/>word<sp/>boundaries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1ab5c12785a28e8ce575d06644263023fa" kindref="member">poolp</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="falloc_8h_1abf2d8364f4b400c4be3eccfeb94aaffe" kindref="member">round_size</ref>(((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/><ref refid="falloc_8c_1ab5c12785a28e8ce575d06644263023fa" kindref="member">poolp</ref>));</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>new_spool<sp/>--<sp/>allocate<sp/>a<sp/>new<sp/>spool<sp/>from<sp/>which<sp/>sample<sp/>blocks<sp/>are<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="falloc_8h_1a9da693737a241764264d6f25105b839e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="falloc_8c_1a9da693737a241764264d6f25105b839e" kindref="member">new_spool</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TRACK_POOLS)<sp/>&amp;&amp;<sp/>TRACK_POOLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>malloc(<ref refid="falloc_8h_1ad2a07dd946fb0eed995ddb97fe2d8399" kindref="member">MAXSPOOLSIZE</ref><sp/>+<sp/><ref refid="falloc_8c_1ad400c1a739f5dd19edee0dfd8ba5eece" kindref="member">POOL_HEAD_SIZE</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>malloc(<ref refid="falloc_8h_1ad2a07dd946fb0eed995ddb97fe2d8399" kindref="member">MAXSPOOLSIZE</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="xlisp_8h_1a3a540e3eef339eec06aff31c4ba1eb25" kindref="member">STDERR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Nyquist:<sp/>out<sp/>of<sp/>memory!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TRACK_POOLS)<sp/>&amp;&amp;<sp/>TRACK_POOLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cque_8h_1a829dfbb838d6a53d467e6af5e7a58610" kindref="member">Qenter</ref>(pools,<sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>+=<sp/><ref refid="falloc_8c_1ad400c1a739f5dd19edee0dfd8ba5eece" kindref="member">POOL_HEAD_SIZE</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a53f0fde72f8b98cfc6dc3a35319350a4" kindref="member">spoolend</ref><sp/>=<sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>+<sp/><ref refid="falloc_8h_1ad2a07dd946fb0eed995ddb97fe2d8399" kindref="member">MAXSPOOLSIZE</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a901ae4c0301ee7422fa2c24420bbe450" kindref="member">npools</ref>++;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stick<sp/>to<sp/>double<sp/>word<sp/>boundaries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="falloc_8h_1abf2d8364f4b400c4be3eccfeb94aaffe" kindref="member">round_size</ref>(((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref>));</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>find_sample_block<sp/>--<sp/>get<sp/>sample<sp/>block<sp/>when<sp/>freelist<sp/>is<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Try<sp/>these<sp/>strategies<sp/>in<sp/>order:</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/>1)<sp/>try<sp/>free<sp/>list</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/>2)<sp/>use<sp/>pool<sp/>to<sp/>get<sp/>sample_blocks_low_water<sp/>+<sp/>BLOCKS_PER_GC<sp/>blocks<sp/>or<sp/>until</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>pool<sp/>runs<sp/>out</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/>3)<sp/>GC<sp/>and<sp/>try<sp/>free<sp/>list<sp/>again,<sp/>set<sp/>sample_blocks_low_water<sp/>to<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>sample_blocks_used</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/>4)<sp/>try<sp/>pool<sp/>again</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/>5)<sp/>allocate<sp/>new<sp/>pool<sp/>and<sp/>use<sp/>it</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="falloc_8h_1a7cfcfbc8dce52b537f435f9108040b4e" refkind="member"><highlight class="normal"><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="falloc_8c_1a7cfcfbc8dce52b537f435f9108040b4e" kindref="member">find_sample_block</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>sp;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="falloc_8c_1ac18839ae8099cc4419a7bb9550a622e2" kindref="member">sample_block_total</ref><sp/>&lt;<sp/><ref refid="falloc_8c_1a3151e2b341c3c23715aaa87497859934" kindref="member">sample_block_low_water</ref><sp/>+<sp/><ref refid="falloc_8h_1a62c29f8aea051ed906b8ca8dcf52aed9" kindref="member">BLOCKS_PER_GC</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1ab939335bf87c76712d41bfbe7a006a48" kindref="member">check_spool</ref>(<ref refid="falloc_8h_1abf2d8364f4b400c4be3eccfeb94aaffe" kindref="member">round_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structsample__block__node" kindref="compound">sample_block_node</ref>))))<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="falloc_8h_1ab5f6b65aa5fa2b22443dd966aa13b84a" kindref="member">DEBUG_MEM</ref>)<sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>+=<sp/><ref refid="falloc_8h_1a0d10ba20fb3097fdaea36d5317b599f5" kindref="member">DEBUG_MEM_INFO_SIZE</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>(<ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref>)<sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>+=<sp/><ref refid="falloc_8h_1abf2d8364f4b400c4be3eccfeb94aaffe" kindref="member">round_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structsample__block__node" kindref="compound">sample_block_node</ref>));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1ac18839ae8099cc4419a7bb9550a622e2" kindref="member">sample_block_total</ref>++;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>printf(&quot;fp%d<sp/>&quot;,<sp/>sample_block_total<sp/>-<sp/>sample_block_low_water);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>printf(&quot;falloc<sp/>calling<sp/>gc\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8c_1a71585bbcbe370a0790ee9d60b9f6dfd1" kindref="member">gc</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a3151e2b341c3c23715aaa87497859934" kindref="member">sample_block_low_water</ref><sp/>=<sp/><ref refid="falloc_8c_1a9c763fc113431d8e379295efca1ad7a9" kindref="member">sample_block_used</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cque_8h_1afc10bf58169dfbd8792fe7664ec33e43" kindref="member">Qempty</ref>(sample_block_free))<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cque_8h_1a72bd6c373d82d18d6dbb7a5d56337347" kindref="member">Qget</ref>(sample_block_free,<sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref>,<sp/>sp);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;gc,<sp/>then<sp/>from<sp/>freelist\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="falloc_8h_1ab939335bf87c76712d41bfbe7a006a48" kindref="member">check_spool</ref>(<ref refid="falloc_8h_1abf2d8364f4b400c4be3eccfeb94aaffe" kindref="member">round_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structsample__block__node" kindref="compound">sample_block_node</ref>))))<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="falloc_8h_1ab5f6b65aa5fa2b22443dd966aa13b84a" kindref="member">DEBUG_MEM</ref>)<sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>+=<sp/><ref refid="falloc_8h_1a0d10ba20fb3097fdaea36d5317b599f5" kindref="member">DEBUG_MEM_INFO_SIZE</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>(<ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref>)<sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>+=<sp/><ref refid="falloc_8h_1abf2d8364f4b400c4be3eccfeb94aaffe" kindref="member">round_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structsample__block__node" kindref="compound">sample_block_node</ref>));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1ac18839ae8099cc4419a7bb9550a622e2" kindref="member">sample_block_total</ref>++;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;gc,<sp/>then<sp/>from<sp/>spool\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a9da693737a241764264d6f25105b839e" kindref="member">new_spool</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="falloc_8h_1ab5f6b65aa5fa2b22443dd966aa13b84a" kindref="member">DEBUG_MEM</ref>)<sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>+=<sp/><ref refid="falloc_8h_1a0d10ba20fb3097fdaea36d5317b599f5" kindref="member">DEBUG_MEM_INFO_SIZE</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>(<ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref>)<sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>+=<sp/><ref refid="falloc_8h_1abf2d8364f4b400c4be3eccfeb94aaffe" kindref="member">round_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structsample__block__node" kindref="compound">sample_block_node</ref>));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1ac18839ae8099cc4419a7bb9550a622e2" kindref="member">sample_block_total</ref>++;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;gc,<sp/>then<sp/>new<sp/>spool\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sp;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>get_from_pool<sp/>--<sp/>return<sp/>size<sp/>bytes<sp/>from<sp/>pool<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="falloc_8h_1ae139b9c94049ab774748124fb107e795" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="falloc_8c_1ae139b9c94049ab774748124fb107e795" kindref="member">get_from_pool</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>siz)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="falloc_8h_1a1bd313e2a360e6cb501aad6ba58613a8" kindref="member">check_pool</ref>(siz))<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a568abd2b4be256d010866bb1f9889286" kindref="member">new_pool</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1ab5c12785a28e8ce575d06644263023fa" kindref="member">poolp</ref><sp/>+=<sp/>siz;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="falloc_8h_1ab5f6b65aa5fa2b22443dd966aa13b84a" kindref="member">DEBUG_MEM</ref>)<sp/><ref refid="falloc_8c_1ab5c12785a28e8ce575d06644263023fa" kindref="member">poolp</ref><sp/>+=<sp/><ref refid="falloc_8h_1a0d10ba20fb3097fdaea36d5317b599f5" kindref="member">DEBUG_MEM_INFO_SIZE</ref>;<sp/></highlight><highlight class="comment">/*<sp/>allow<sp/>for<sp/>debug<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="falloc_8c_1ab5c12785a28e8ce575d06644263023fa" kindref="member">poolp</ref><sp/>-<sp/>siz;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TRACK_POOLS)<sp/>&amp;&amp;<sp/>TRACK_POOLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>falloc_gc<sp/>--<sp/>return<sp/>empty<sp/>pools<sp/>to<sp/>the<sp/>system<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>Algorithm:<sp/>for<sp/>each<sp/>pool,<sp/>move<sp/>all<sp/>free<sp/>sample<sp/>blocks<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>(on<sp/>the<sp/>sample_block_free<sp/>list)<sp/>to<sp/>tlist.<sp/>If<sp/>tlist</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>has<sp/>ALL<sp/>of<sp/>the<sp/>blocks<sp/>in<sp/>the<sp/>pool<sp/>(determined<sp/>by</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>byte<sp/>counts),<sp/>the<sp/>pool<sp/>is<sp/>returned<sp/>to<sp/>the<sp/>heap.</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="falloc_8h_1a87d807202950d174aadb82fff42ef745" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="falloc_8c_1a87d807202950d174aadb82fff42ef745" kindref="member">falloc_gc</ref>()</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><ref refid="structcque" kindref="compound">CQUE</ref><sp/>*lp<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><ref refid="structcque" kindref="compound">CQUE</ref><sp/>*cp;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><ref refid="structcque" kindref="compound">CQUE</ref><sp/>*np;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><ref refid="structcque" kindref="compound">CQUE</ref><sp/>*tlist<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scan<sp/>all<sp/>allocated<sp/>pools<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>pools;<sp/>cp;<sp/>lp<sp/>=<sp/>cp,<sp/>cp<sp/>=<sp/>np)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)cp)<sp/>+<sp/><ref refid="falloc_8c_1ad400c1a739f5dd19edee0dfd8ba5eece" kindref="member">POOL_HEAD_SIZE</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>str<sp/>+<sp/><ref refid="falloc_8h_1ad2a07dd946fb0eed995ddb97fe2d8399" kindref="member">MAXSPOOLSIZE</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tsiz<sp/>=<sp/>end<sp/>-<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>csiz<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcque" kindref="compound">CQUE</ref><sp/>*tsave<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcque" kindref="compound">CQUE</ref><sp/>*ln<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcque" kindref="compound">CQUE</ref><sp/>*cn;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcque" kindref="compound">CQUE</ref><sp/>*nn;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>pointer<sp/>to<sp/>next<sp/>pool<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>np<sp/>=<sp/>cp-&gt;<ref refid="structcque_1a57f045c1684a63180f84e5726ddc4afe" kindref="member">qnext</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remember<sp/>head<sp/>of<sp/>temp<sp/>free<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tsave<sp/>=<sp/>tlist;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scan<sp/>all<sp/>nodes<sp/>on<sp/>the<sp/>free<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cn<sp/>=<sp/>sample_block_free;<sp/>cn;<sp/>ln<sp/>=<sp/>cn,<sp/>cn<sp/>=<sp/>nn)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>next<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn<sp/>=<sp/>cn-&gt;<ref refid="structcque_1a57f045c1684a63180f84e5726ddc4afe" kindref="member">qnext</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Count<sp/>it<sp/>if<sp/>the<sp/>node<sp/>belongs<sp/>to<sp/>this<sp/>pool<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cn<sp/>&gt;=<sp/>(<ref refid="structcque" kindref="compound">CQUE</ref><sp/>*)<sp/>str<sp/>&amp;&amp;<sp/>cn<sp/>&lt;=<sp/>(<ref refid="structcque" kindref="compound">CQUE</ref><sp/>*)<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csiz<sp/>+=<sp/><ref refid="falloc_8h_1abf2d8364f4b400c4be3eccfeb94aaffe" kindref="member">round_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structsample__block__node" kindref="compound">sample_block_node</ref>));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cque_8h_1a829dfbb838d6a53d467e6af5e7a58610" kindref="member">Qenter</ref>(tlist,<sp/>cn);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unlink<sp/>the<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cn<sp/>==<sp/>sample_block_free)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_block_free<sp/>=<sp/>nn;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cn<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ln-&gt;<ref refid="structcque_1a57f045c1684a63180f84e5726ddc4afe" kindref="member">qnext</ref><sp/>=<sp/>nn;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cn<sp/>=<sp/>ln;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>pool<sp/>had<sp/>inuse<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(csiz<sp/>!=<sp/>tsiz)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>the<sp/>nodes<sp/>from<sp/>the<sp/>temp<sp/>free<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tlist<sp/>=<sp/>tsave;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Maintain<sp/>stats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1ac18839ae8099cc4419a7bb9550a622e2" kindref="member">sample_block_total</ref><sp/>-=<sp/>(tsiz<sp/>/<sp/><ref refid="falloc_8h_1abf2d8364f4b400c4be3eccfeb94aaffe" kindref="member">round_size</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structsample__block__node" kindref="compound">sample_block_node</ref>)));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a901ae4c0301ee7422fa2c24420bbe450" kindref="member">npools</ref>--;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>the<sp/>active<sp/>pool,<sp/>then<sp/>reset<sp/>current<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>&gt;=<sp/>str<sp/>&amp;&amp;<sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>&lt;=<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a9c9eb2ff2b4ed56c0de04000518ee529" kindref="member">spoolp</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8c_1a53f0fde72f8b98cfc6dc3a35319350a4" kindref="member">spoolend</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>the<sp/>pool<sp/>to<sp/>the<sp/>system<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(cp);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unlink<sp/>this<sp/>pool<sp/>from<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp<sp/>==<sp/>pools)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pools<sp/>=<sp/>np;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lp<sp/>cannot<sp/>be<sp/>null<sp/>here:<sp/>On<sp/>1st<sp/>iteration,<sp/>lp<sp/>==<sp/>NULL,<sp/>but</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>cp<sp/>==<sp/>pools,<sp/>so<sp/>code<sp/>above<sp/>is<sp/>executed.<sp/>Before<sp/>the<sp/>for-loop</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>iterates,<sp/>pools<sp/>==<sp/>np<sp/>(assigned<sp/>above),<sp/>and<sp/>cp<sp/>==<sp/>NULL.<sp/>The</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>for-loop<sp/>update<sp/>(lp=cp,cp=np)<sp/>produces<sp/>lp<sp/>==<sp/>NULL,<sp/>cp<sp/>==<sp/>pools.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Since<sp/>cp<sp/>==<sp/>pools,<sp/>this<sp/>else<sp/>branch<sp/>will<sp/>not<sp/>be<sp/>taken.</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>other<sp/>path<sp/>to<sp/>this<sp/>code<sp/>is<sp/>via<sp/>the<sp/>&quot;continue&quot;<sp/>above.<sp/>In<sp/>that</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>case,<sp/>the<sp/>update<sp/>(lp=cp,cp=np)<sp/>makes<sp/>lp<sp/>a<sp/>valid<sp/>pointer<sp/>or<sp/>else</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>loop<sp/>exits.</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>assert(lp)<sp/>is<sp/>here<sp/>to<sp/>possibly<sp/>make<sp/>static<sp/>analyzers<sp/>happy.</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(lp);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lp-&gt;<ref refid="structcque_1a57f045c1684a63180f84e5726ddc4afe" kindref="member">qnext</ref><sp/>=<sp/>np;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>lp;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Resave<sp/>list<sp/>of<sp/>free<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/>sample_block_free<sp/>=<sp/>tlist;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/falloc.c"/>
  </compounddef>
</doxygen>
