<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__lavu__audio" kind="group">
    <compoundname>lavu_audio</compoundname>
    <title>Audio related</title>
    <innergroup refid="group__channel__masks">Audio channel masks</innergroup>
    <innergroup refid="group__channel__mask__c">Audio channel convenience macros</innergroup>
    <innergroup refid="group__downmix__info">Audio downmix metadata</innergroup>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__lavu__audio_1ga328abb21e9abb2c455d2d9c212d5230f" prot="public" static="no">
        <type>struct <ref refid="group__lavu__audio_1ga328abb21e9abb2c455d2d9c212d5230f" kindref="member">AVAudioFifo</ref></type>
        <definition>typedef struct AVAudioFifo AVAudioFifo</definition>
        <argsstring></argsstring>
        <name>AVAudioFifo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Context for an Audio FIFO Buffer.</para><para><itemizedlist>
<listitem><para>Operates at the sample level rather than the byte level.</para></listitem><listitem><para>Supports multiple channels with either planar or packed sample format.</para></listitem><listitem><para>Automatic reallocation when writing to a full buffer. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/audio_fifo.h" line="59" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/audio_fifo.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lavu__audio_1ga74e029e47f7aa99217ad1f315c434875" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_audio_fifo_free</definition>
        <argsstring>(AVAudioFifo *af)</argsstring>
        <name>av_audio_fifo_free</name>
        <param>
          <type><ref refid="group__lavu__audio_1ga328abb21e9abb2c455d2d9c212d5230f" kindref="member">AVAudioFifo</ref> *</type>
          <declname>af</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free an AVAudioFifo.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>af</parametername>
</parameternamelist>
<parameterdescription>
<para>AVAudioFifo to free </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/audio_fifo.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1ga9d792394f0615a329aec47847f8f8784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__lavu__audio_1ga328abb21e9abb2c455d2d9c212d5230f" kindref="member">AVAudioFifo</ref> *</type>
        <definition>AVAudioFifo* av_audio_fifo_alloc</definition>
        <argsstring>(enum AVSampleFormat sample_fmt, int channels, int nb_samples)</argsstring>
        <name>av_audio_fifo_alloc</name>
        <param>
          <type>enum <ref refid="samplefmt_8h_1af9a51ca15301871723577c730b5865c5" kindref="member">AVSampleFormat</ref></type>
          <declname>sample_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channels</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nb_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate an AVAudioFifo.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sample_fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>sample format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channels</parametername>
</parameternamelist>
<parameterdescription>
<para>number of channels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>initial allocation size, in samples </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>newly allocated AVAudioFifo, or NULL on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/audio_fifo.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1gae34e4eb0928f8e4539730d8c044c6139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_audio_fifo_realloc</definition>
        <argsstring>(AVAudioFifo *af, int nb_samples)</argsstring>
        <name>av_audio_fifo_realloc</name>
        <param>
          <type><ref refid="group__lavu__audio_1ga328abb21e9abb2c455d2d9c212d5230f" kindref="member">AVAudioFifo</ref> *</type>
          <declname>af</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nb_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reallocate an AVAudioFifo.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>af</parametername>
</parameternamelist>
<parameterdescription>
<para>AVAudioFifo to reallocate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>new allocation size, in samples </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if OK, or negative AVERROR code on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/audio_fifo.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1ga0e7fadeea09c52a96eb4082a9e169bb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_audio_fifo_write</definition>
        <argsstring>(AVAudioFifo *af, void **data, int nb_samples)</argsstring>
        <name>av_audio_fifo_write</name>
        <param>
          <type><ref refid="group__lavu__audio_1ga328abb21e9abb2c455d2d9c212d5230f" kindref="member">AVAudioFifo</ref> *</type>
          <declname>af</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> **</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nb_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write data to an AVAudioFifo.</para><para>The AVAudioFifo will be reallocated automatically if the available space is less than nb_samples.</para><para><simplesect kind="see"><para>enum <ref refid="samplefmt_8h_1af9a51ca15301871723577c730b5865c5" kindref="member">AVSampleFormat</ref> The documentation <ref refid="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" kindref="member">for</ref> <ref refid="samplefmt_8h_1af9a51ca15301871723577c730b5865c5" kindref="member">AVSampleFormat</ref> describes <ref refid="nasm_8h_1aaf57ffcfef0bee04f46c6ada2a905a8c" kindref="member">the</ref> <ref refid="sndfile__save_8m_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref> layout.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>af</parametername>
</parameternamelist>
<parameterdescription>
<para>AVAudioFifo to write to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>audio data plane pointers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to write </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of samples actually written, or negative AVERROR code on failure. If successful, the number of samples actually written will always be nb_samples. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/audio_fifo.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1gab256fc29188d91311bd2fbd78eb356af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_audio_fifo_read</definition>
        <argsstring>(AVAudioFifo *af, void **data, int nb_samples)</argsstring>
        <name>av_audio_fifo_read</name>
        <param>
          <type><ref refid="group__lavu__audio_1ga328abb21e9abb2c455d2d9c212d5230f" kindref="member">AVAudioFifo</ref> *</type>
          <declname>af</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> **</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nb_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read data from an AVAudioFifo.</para><para><simplesect kind="see"><para>enum <ref refid="samplefmt_8h_1af9a51ca15301871723577c730b5865c5" kindref="member">AVSampleFormat</ref> The documentation <ref refid="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" kindref="member">for</ref> <ref refid="samplefmt_8h_1af9a51ca15301871723577c730b5865c5" kindref="member">AVSampleFormat</ref> describes <ref refid="nasm_8h_1aaf57ffcfef0bee04f46c6ada2a905a8c" kindref="member">the</ref> <ref refid="sndfile__save_8m_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref> layout.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>af</parametername>
</parameternamelist>
<parameterdescription>
<para>AVAudioFifo to read from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>audio data plane pointers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of samples actually read, or negative AVERROR code on failure. The number of samples actually read will not be greater than nb_samples, and will only be less than nb_samples if av_audio_fifo_size is less than nb_samples. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/audio_fifo.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1gacac9b187b9c27c5a0374f6f83224a77b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_audio_fifo_drain</definition>
        <argsstring>(AVAudioFifo *af, int nb_samples)</argsstring>
        <name>av_audio_fifo_drain</name>
        <param>
          <type><ref refid="group__lavu__audio_1ga328abb21e9abb2c455d2d9c212d5230f" kindref="member">AVAudioFifo</ref> *</type>
          <declname>af</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nb_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drain data from an AVAudioFifo.</para><para>Removes the data without reading it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>af</parametername>
</parameternamelist>
<parameterdescription>
<para>AVAudioFifo to drain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to drain </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if OK, or negative AVERROR code on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/audio_fifo.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1ga3f070386d11d425302437a3b60fc5dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_audio_fifo_reset</definition>
        <argsstring>(AVAudioFifo *af)</argsstring>
        <name>av_audio_fifo_reset</name>
        <param>
          <type><ref refid="group__lavu__audio_1ga328abb21e9abb2c455d2d9c212d5230f" kindref="member">AVAudioFifo</ref> *</type>
          <declname>af</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset the AVAudioFifo buffer.</para><para>This empties all data in the buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>af</parametername>
</parameternamelist>
<parameterdescription>
<para>AVAudioFifo to reset </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/audio_fifo.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1gaa0a4742ecac52a999e8b4478d27f3b9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_audio_fifo_size</definition>
        <argsstring>(AVAudioFifo *af)</argsstring>
        <name>av_audio_fifo_size</name>
        <param>
          <type><ref refid="group__lavu__audio_1ga328abb21e9abb2c455d2d9c212d5230f" kindref="member">AVAudioFifo</ref> *</type>
          <declname>af</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current number of samples in the AVAudioFifo available for reading.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>af</parametername>
</parameternamelist>
<parameterdescription>
<para>the AVAudioFifo to query </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of samples available for reading </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/audio_fifo.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1ga2bed2f01fe34228ee8a73617b3177d00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_audio_fifo_space</definition>
        <argsstring>(AVAudioFifo *af)</argsstring>
        <name>av_audio_fifo_space</name>
        <param>
          <type><ref refid="group__lavu__audio_1ga328abb21e9abb2c455d2d9c212d5230f" kindref="member">AVAudioFifo</ref> *</type>
          <declname>af</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current number of samples in the AVAudioFifo available for writing.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>af</parametername>
</parameternamelist>
<parameterdescription>
<para>the AVAudioFifo to query </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of samples available for writing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/audio_fifo.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1ga3e8a7ab3d4c1ac98b902ab6b00741343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
        <definition>uint64_t av_get_channel_layout</definition>
        <argsstring>(const char *name)</argsstring>
        <name>av_get_channel_layout</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a channel layout id that matches name, or 0 if no match is found.</para><para>name can be one or several of the following notations, separated by &apos;+&apos; or &apos;|&apos;:<itemizedlist>
<listitem><para>the name of an usual channel layout (mono, stereo, 4.0, quad, 5.0, 5.0(side), 5.1, 5.1(side), 7.1, 7.1(wide), downmix);</para></listitem><listitem><para>the name of a single channel (FL, FR, FC, LFE, BL, BR, FLC, FRC, BC, SL, SR, TC, TFL, TFC, TFR, TBL, TBC, TBR, DL, DR);</para></listitem><listitem><para>a number of channels, in decimal, optionally followed by &apos;c&apos;, yielding the default channel layout for that number of channels (<simplesect kind="see"><para><ref refid="group__lavu__audio_1gacb84f3e93a583e1f84a5283162a606a2" kindref="member">av_get_default_channel_layout</ref>);</para></simplesect>
</para></listitem><listitem><para>a channel layout mask, in hexadecimal starting with &quot;0x&quot; (see the AV_CH_* macros).</para></listitem></itemizedlist>
</para><para><simplesect kind="warning"><para>Starting from the next major bump the trailing character &apos;c&apos; to specify a number of channels will be required, while a channel layout mask could also be specified as a decimal number (if and only if not followed by &quot;c&quot;).</para></simplesect>
Example: &quot;stereo+FC&quot; = &quot;2c+FC&quot; = &quot;2c+1c&quot; = &quot;0x7&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/channel_layout.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1ga99d0b5bb80534d13a6cc96336cf9076a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_get_channel_layout_string</definition>
        <argsstring>(char *buf, int buf_size, int nb_channels, uint64_t channel_layout)</argsstring>
        <name>av_get_channel_layout_string</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>buf_size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nb_channels</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>channel_layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a description of a channel layout. If nb_channels is &lt;= 0, it is guessed from the channel_layout.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>put here the string containing the channel layout </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size in bytes of the buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/channel_layout.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1ga48cdbfac1bbb45835eae8bcdc9877b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_bprint_channel_layout</definition>
        <argsstring>(struct AVBPrint *bp, int nb_channels, uint64_t channel_layout)</argsstring>
        <name>av_bprint_channel_layout</name>
        <param>
          <type>struct <ref refid="struct_a_v_b_print" kindref="compound">AVBPrint</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nb_channels</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>channel_layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Append a description of a channel layout to a bprint buffer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/channel_layout.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1gac95619abeb32e4a3daa18e3ff3419380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_get_channel_layout_nb_channels</definition>
        <argsstring>(uint64_t channel_layout)</argsstring>
        <name>av_get_channel_layout_nb_channels</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>channel_layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of channels in the channel layout. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/channel_layout.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1gacb84f3e93a583e1f84a5283162a606a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t av_get_default_channel_layout</definition>
        <argsstring>(int nb_channels)</argsstring>
        <name>av_get_default_channel_layout</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nb_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return default channel layout for a given number of channels. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/channel_layout.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1ga0669978493902b5ae723e386013da3ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_get_channel_layout_channel_index</definition>
        <argsstring>(uint64_t channel_layout, uint64_t channel)</argsstring>
        <name>av_get_channel_layout_channel_index</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>channel_layout</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the index of a channel in channel_layout.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>a channel layout describing exactly one channel which must be present in channel_layout.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>index of channel in channel_layout on success, a negative AVERROR on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/channel_layout.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1gaf492843360fb4ecee6b5ec4166b04fcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
        <definition>uint64_t av_channel_layout_extract_channel</definition>
        <argsstring>(uint64_t channel_layout, int index)</argsstring>
        <name>av_channel_layout_extract_channel</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>channel_layout</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the channel with the given index in channel_layout. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/channel_layout.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1gaf9a5e23a9bbf5909f2dc84b25d78e35e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* av_get_channel_name</definition>
        <argsstring>(uint64_t channel)</argsstring>
        <name>av_get_channel_name</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of a given channel.</para><para><simplesect kind="return"><para>channel name on success, NULL on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/channel_layout.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1gade4b74b99e3fb954b88b0cb8eddb785a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* av_get_channel_description</definition>
        <argsstring>(uint64_t channel)</argsstring>
        <name>av_get_channel_description</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the description of a given channel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>a channel layout with a single channel </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>channel description on success, NULL on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/channel_layout.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__audio_1ga00447bfae43d690f1f549a9e2521bf85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_get_standard_channel_layout</definition>
        <argsstring>(unsigned index, uint64_t *layout, const char **name)</argsstring>
        <name>av_get_standard_channel_layout</name>
        <param>
          <type>unsigned</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref> *</type>
          <declname>layout</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char **</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the value and name of a standard channel layout.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>index in an internal list, starting at 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">layout</parametername>
</parameternamelist>
<parameterdescription>
<para>channel layout mask </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the layout </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the layout exists, &lt;0 if index is beyond the limits </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/channel_layout.h" line="218" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
