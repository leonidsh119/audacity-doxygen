<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_auto_duck_8cpp" kind="file" language="C++">
    <compoundname>AutoDuck.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">../Audacity.h</includes>
    <includes refid="_auto_duck_8h" local="yes">AutoDuck.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="float_8h" local="no">float.h</includes>
    <includes local="no">wx/dcclient.h</includes>
    <includes local="no">wx/dcmemory.h</includes>
    <includes local="no">wx/dynarray.h</includes>
    <includes local="no">wx/intl.h</includes>
    <includes local="no">wx/msgdlg.h</includes>
    <includes refid="_a_color_8h" local="yes">../AColor.h</includes>
    <includes refid="_all_theme_resources_8h" local="yes">../AllThemeResources.h</includes>
    <includes refid="_internat_8h" local="yes">../Internat.h</includes>
    <includes refid="_prefs_8h" local="yes">../Prefs.h</includes>
    <includes refid="_shuttle_gui_8h" local="yes">../ShuttleGui.h</includes>
    <includes refid="_theme_8h" local="yes">../Theme.h</includes>
    <includes refid="valnum_8h" local="yes">../widgets/valnum.h</includes>
    <includes refid="_wave_track_8h" local="yes">../WaveTrack.h</includes>
    <includes local="no">wx/arrimpl.cpp</includes>
    <incdepgraph>
      <node id="40669">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="40598" relation="include">
        </childnode>
        <childnode refid="40664" relation="include">
        </childnode>
        <childnode refid="40633" relation="include">
        </childnode>
        <childnode refid="40670" relation="include">
        </childnode>
        <childnode refid="40665" relation="include">
        </childnode>
        <childnode refid="40625" relation="include">
        </childnode>
        <childnode refid="40672" relation="include">
        </childnode>
        <childnode refid="40602" relation="include">
        </childnode>
        <childnode refid="40632" relation="include">
        </childnode>
        <childnode refid="40673" relation="include">
        </childnode>
        <childnode refid="40643" relation="include">
        </childnode>
        <childnode refid="40663" relation="include">
        </childnode>
      </node>
      <node id="40635">
        <label>wx/gauge.h</label>
      </node>
      <node id="40668">
        <label>wx/ffile.h</label>
      </node>
      <node id="40601">
        <label>wx/event.h</label>
      </node>
      <node id="40651">
        <label>wx/font.h</label>
      </node>
      <node id="40641">
        <label>wx/dcclient.h</label>
      </node>
      <node id="40622">
        <label>wx/cmdline.h</label>
      </node>
      <node id="40639">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="40640" relation="include">
        </childnode>
      </node>
      <node id="40618">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="40616" relation="include">
        </childnode>
        <childnode refid="40619" relation="include">
        </childnode>
        <childnode refid="40615" relation="include">
        </childnode>
        <childnode refid="40620" relation="include">
        </childnode>
        <childnode refid="40624" relation="include">
        </childnode>
      </node>
      <node id="40631">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="40617" relation="include">
        </childnode>
        <childnode refid="40604" relation="include">
        </childnode>
        <childnode refid="40632" relation="include">
        </childnode>
      </node>
      <node id="40665">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="40598" relation="include">
        </childnode>
        <childnode refid="40604" relation="include">
        </childnode>
        <childnode refid="40666" relation="include">
        </childnode>
        <childnode refid="40667" relation="include">
        </childnode>
      </node>
      <node id="40640">
        <label>stdint.h</label>
      </node>
      <node id="40628">
        <label>wx/wxchar.h</label>
      </node>
      <node id="40652">
        <label>wx/image.h</label>
      </node>
      <node id="40646">
        <label>wx/pen.h</label>
      </node>
      <node id="40670">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="40671" relation="include">
        </childnode>
        <childnode refid="40598" relation="include">
        </childnode>
      </node>
      <node id="40615">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="40616" relation="include">
        </childnode>
      </node>
      <node id="40637">
        <label>wx/utils.h</label>
      </node>
      <node id="40634">
        <label>wx/evtloop.h</label>
      </node>
      <node id="40658">
        <label>WrappedType.h</label>
        <link refid="_wrapped_type_8h"/>
        <childnode refid="40598" relation="include">
        </childnode>
      </node>
      <node id="40625">
        <label>../Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="40626" relation="include">
        </childnode>
      </node>
      <node id="40602">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="40630">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="40623">
        <label>wx/fileconf.h</label>
      </node>
      <node id="40648">
        <label>MacroMagic.h</label>
        <link refid="_macro_magic_8h"/>
        <childnode refid="40649" relation="include">
        </childnode>
      </node>
      <node id="40674">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="40659">
        <label>wx/scrolbar.h</label>
      </node>
      <node id="40672">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="40625" relation="include">
        </childnode>
      </node>
      <node id="40636">
        <label>wx/stattext.h</label>
      </node>
      <node id="40647">
        <label>../AllThemeResources.h</label>
        <link refid="_all_theme_resources_8h"/>
        <childnode refid="40625" relation="include">
        </childnode>
        <childnode refid="40648" relation="include">
        </childnode>
      </node>
      <node id="40619">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="40616" relation="include">
        </childnode>
      </node>
      <node id="40673">
        <label>wx/list.h</label>
      </node>
      <node id="40626">
        <label>wx/defs.h</label>
      </node>
      <node id="40606">
        <label>wx/window.h</label>
      </node>
      <node id="40613">
        <label>wx/intl.h</label>
      </node>
      <node id="40633">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="40598" relation="include">
        </childnode>
        <childnode refid="40626" relation="include">
        </childnode>
        <childnode refid="40624" relation="include">
        </childnode>
        <childnode refid="40634" relation="include">
        </childnode>
        <childnode refid="40635" relation="include">
        </childnode>
        <childnode refid="40636" relation="include">
        </childnode>
        <childnode refid="40637" relation="include">
        </childnode>
      </node>
      <node id="40611">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="40616">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="40604" relation="include">
        </childnode>
        <childnode refid="40617" relation="include">
        </childnode>
      </node>
      <node id="40624">
        <label>wx/dialog.h</label>
      </node>
      <node id="40650">
        <label>wx/colour.h</label>
      </node>
      <node id="40620">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="40621" relation="include">
        </childnode>
        <childnode refid="40622" relation="include">
        </childnode>
        <childnode refid="40623" relation="include">
        </childnode>
        <childnode refid="40613" relation="include">
        </childnode>
      </node>
      <node id="40597">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp</label>
        <link refid="AutoDuck.cpp"/>
        <childnode refid="40598" relation="include">
        </childnode>
        <childnode refid="40599" relation="include">
        </childnode>
        <childnode refid="40629" relation="include">
        </childnode>
        <childnode refid="40638" relation="include">
        </childnode>
        <childnode refid="40641" relation="include">
        </childnode>
        <childnode refid="40642" relation="include">
        </childnode>
        <childnode refid="40612" relation="include">
        </childnode>
        <childnode refid="40613" relation="include">
        </childnode>
        <childnode refid="40643" relation="include">
        </childnode>
        <childnode refid="40644" relation="include">
        </childnode>
        <childnode refid="40647" relation="include">
        </childnode>
        <childnode refid="40631" relation="include">
        </childnode>
        <childnode refid="40653" relation="include">
        </childnode>
        <childnode refid="40655" relation="include">
        </childnode>
        <childnode refid="40649" relation="include">
        </childnode>
        <childnode refid="40660" relation="include">
        </childnode>
        <childnode refid="40661" relation="include">
        </childnode>
        <childnode refid="40675" relation="include">
        </childnode>
      </node>
      <node id="40653">
        <label>../Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="40598" relation="include">
        </childnode>
        <childnode refid="40654" relation="include">
        </childnode>
        <childnode refid="40623" relation="include">
        </childnode>
      </node>
      <node id="40645">
        <label>wx/brush.h</label>
      </node>
      <node id="40598">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="40656">
        <label>wx/grid.h</label>
      </node>
      <node id="40638">
        <label>float.h</label>
        <link refid="float_8h"/>
        <childnode refid="40639" relation="include">
        </childnode>
      </node>
      <node id="40663">
        <label>vector</label>
      </node>
      <node id="40607">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="40598" relation="include">
        </childnode>
        <childnode refid="40608" relation="include">
        </childnode>
        <childnode refid="40610" relation="include">
        </childnode>
        <childnode refid="40611" relation="include">
        </childnode>
        <childnode refid="40612" relation="include">
        </childnode>
        <childnode refid="40613" relation="include">
        </childnode>
        <childnode refid="40604" relation="include">
        </childnode>
        <childnode refid="40614" relation="include">
        </childnode>
        <childnode refid="40615" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40625" relation="include">
        </childnode>
        <childnode refid="40627" relation="include">
        </childnode>
        <childnode refid="40630" relation="include">
        </childnode>
        <childnode refid="40631" relation="include">
        </childnode>
        <childnode refid="40633" relation="include">
        </childnode>
      </node>
      <node id="40612">
        <label>wx/dynarray.h</label>
      </node>
      <node id="40649">
        <label>Theme.h</label>
        <link refid="_theme_8h"/>
        <childnode refid="40598" relation="include">
        </childnode>
        <childnode refid="40600" relation="include">
        </childnode>
        <childnode refid="40650" relation="include">
        </childnode>
        <childnode refid="40626" relation="include">
        </childnode>
        <childnode refid="40612" relation="include">
        </childnode>
        <childnode refid="40651" relation="include">
        </childnode>
        <childnode refid="40652" relation="include">
        </childnode>
      </node>
      <node id="40644">
        <label>../AColor.h</label>
        <link refid="_a_color_8h"/>
        <childnode refid="40645" relation="include">
        </childnode>
        <childnode refid="40646" relation="include">
        </childnode>
      </node>
      <node id="40604">
        <label>wx/string.h</label>
      </node>
      <node id="40643">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="40629">
        <label>math.h</label>
      </node>
      <node id="40627">
        <label>../SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="40598" relation="include">
        </childnode>
        <childnode refid="40625" relation="include">
        </childnode>
        <childnode refid="40626" relation="include">
        </childnode>
        <childnode refid="40628" relation="include">
        </childnode>
        <childnode refid="40629" relation="include">
        </childnode>
      </node>
      <node id="40617">
        <label>wx/arrstr.h</label>
      </node>
      <node id="40654">
        <label>wx/config.h</label>
      </node>
      <node id="40657">
        <label>wx/sizer.h</label>
      </node>
      <node id="40599">
        <label>AutoDuck.h</label>
        <link refid="_auto_duck_8h"/>
        <childnode refid="40600" relation="include">
        </childnode>
        <childnode refid="40601" relation="include">
        </childnode>
        <childnode refid="40602" relation="include">
        </childnode>
        <childnode refid="40603" relation="include">
        </childnode>
        <childnode refid="40604" relation="include">
        </childnode>
        <childnode refid="40605" relation="include">
        </childnode>
        <childnode refid="40606" relation="include">
        </childnode>
        <childnode refid="40607" relation="include">
        </childnode>
      </node>
      <node id="40662">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="40598" relation="include">
        </childnode>
        <childnode refid="40608" relation="include">
        </childnode>
        <childnode refid="40663" relation="include">
        </childnode>
        <childnode refid="40612" relation="include">
        </childnode>
        <childnode refid="40601" relation="include">
        </childnode>
        <childnode refid="40602" relation="include">
        </childnode>
        <childnode refid="40632" relation="include">
        </childnode>
        <childnode refid="40604" relation="include">
        </childnode>
        <childnode refid="40625" relation="include">
        </childnode>
        <childnode refid="40664" relation="include">
        </childnode>
        <childnode refid="40665" relation="include">
        </childnode>
      </node>
      <node id="40671">
        <label>wx/thread.h</label>
      </node>
      <node id="40660">
        <label>../widgets/valnum.h</label>
        <link refid="valnum_8h"/>
        <childnode refid="40626" relation="include">
        </childnode>
      </node>
      <node id="40614">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="40608">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="40609" relation="include">
        </childnode>
      </node>
      <node id="40655">
        <label>../ShuttleGui.h</label>
        <link refid="_shuttle_gui_8h"/>
        <childnode refid="40598" relation="include">
        </childnode>
        <childnode refid="40608" relation="include">
        </childnode>
        <childnode refid="40656" relation="include">
        </childnode>
        <childnode refid="40657" relation="include">
        </childnode>
        <childnode refid="40604" relation="include">
        </childnode>
        <childnode refid="40658" relation="include">
        </childnode>
        <childnode refid="40659" relation="include">
        </childnode>
      </node>
      <node id="40610">
        <label>set</label>
      </node>
      <node id="40632">
        <label>wx/longlong.h</label>
      </node>
      <node id="40603">
        <label>wx/panel.h</label>
      </node>
      <node id="40661">
        <label>../WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="40662" relation="include">
        </childnode>
        <childnode refid="40664" relation="include">
        </childnode>
        <childnode refid="40669" relation="include">
        </childnode>
        <childnode refid="40625" relation="include">
        </childnode>
        <childnode refid="40633" relation="include">
        </childnode>
        <childnode refid="40663" relation="include">
        </childnode>
        <childnode refid="40602" relation="include">
        </childnode>
        <childnode refid="40632" relation="include">
        </childnode>
        <childnode refid="40671" relation="include">
        </childnode>
        <childnode refid="40674" relation="include">
        </childnode>
      </node>
      <node id="40600">
        <label>wx/bitmap.h</label>
      </node>
      <node id="40666">
        <label>stdio.h</label>
      </node>
      <node id="40605">
        <label>wx/textctrl.h</label>
      </node>
      <node id="40664">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="40598" relation="include">
        </childnode>
        <childnode refid="40626" relation="include">
        </childnode>
        <childnode refid="40616" relation="include">
        </childnode>
      </node>
      <node id="40621">
        <label>locale.h</label>
      </node>
      <node id="40642">
        <label>wx/dcmemory.h</label>
      </node>
      <node id="40675">
        <label>wx/arrimpl.cpp</label>
      </node>
      <node id="40609">
        <label>memory</label>
      </node>
      <node id="40667">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="40617" relation="include">
        </childnode>
        <childnode refid="40612" relation="include">
        </childnode>
        <childnode refid="40668" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_auto_duck_region" prot="public">AutoDuckRegion</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_auto_duck_8cpp_1a5b614884f8690945eaf040c37259628b" prot="public" static="no">
        <name>CONTROL_POINT_REGION</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="588" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_auto_duck_8cpp_1afb98e6bf32cc7be29a96ef3bd81f2a78" prot="public" static="no">
        <name>CONTROL_POINT_MIN_MOVE</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="589" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" bodystart="589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_auto_duck_8cpp_1ade04c5fd12730b5a4e85fa2da36e989d" prot="public" static="no">
        <name>TEXT_DISTANCE</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="591" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" bodystart="591" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_auto_duck_8cpp_1a2601c8b0cfe95e5e0610ddbe31dd76e2" prot="public" static="no">
        <name>FADE_DOWN_START</name>
        <initializer>150</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="593" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" bodystart="593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_auto_duck_8cpp_1a49b4b2dc58a598009d3dd37ddc0b05a1" prot="public" static="no">
        <name>FADE_UP_START</name>
        <initializer>450</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="594" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_auto_duck_8cpp_1abe46772fa63e1b5ab4ac122a8b911725" prot="public" static="no">
        <name>DUCK_AMOUNT_START</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="595" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_auto_duck_8cpp_1a5a3b6696316dadd7e6639da97a45177c" prot="public" static="no">
        <name>FADE_SCALE</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="597" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" bodystart="597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_auto_duck_8cpp_1abd740c71bbf17d18d412af3d172efde6" prot="public" static="no">
        <name>DUCK_AMOUNT_SCALE</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="598" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" bodystart="598" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_auto_duck_8cpp_1a229fff211e9af01cc2b685b9a1b0b78c" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>const int kBufSize</definition>
        <argsstring></argsstring>
        <name>kBufSize</name>
        <initializer>= 131072</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_auto_duck_8cpp_1a6a4b8619e4ef5e58d267752676149706" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>const int kRMSWindowSize</definition>
        <argsstring></argsstring>
        <name>kRMSWindowSize</name>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="54" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_auto_duck_8cpp_1a81855ab77d595b028f491af0adc48acc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(DuckAmountDb, double, XO(&quot;DuckAmountDb&quot;),-12.0,-24.0, 0.0, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>DuckAmountDb</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;DuckAmountDb&quot;)</type>
        </param>
        <param>
          <type>-12.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>-24.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>0.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_auto_duck_8cpp_1a1cac5d13d902cc4b6eedac257596fd51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(InnerFadeDownLen, double, XO(&quot;InnerFadeDownLen&quot;), 0.0, 0.0, 3.0, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>InnerFadeDownLen</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;InnerFadeDownLen&quot;)</type>
        </param>
        <param>
          <type>0.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>0.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>3.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_auto_duck_8cpp_1a242cae43c8357a16bfd1ac572820accf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(InnerFadeUpLen, double, XO(&quot;InnerFadeUpLen&quot;), 0.0, 0.0, 3.0, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>InnerFadeUpLen</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;InnerFadeUpLen&quot;)</type>
        </param>
        <param>
          <type>0.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>0.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>3.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_auto_duck_8cpp_1a3bc0981db6a47a156ea9fe4ad75c0e50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(OuterFadeDownLen, double, XO(&quot;OuterFadeDownLen&quot;), 0.5, 0.0, 3.0, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>OuterFadeDownLen</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;OuterFadeDownLen&quot;)</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>0.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>3.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_auto_duck_8cpp_1af5df0f869ab1209961420770bc174636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(OuterFadeUpLen, double, XO(&quot;OuterFadeUpLen&quot;), 0.5, 0.0, 3.0, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>OuterFadeUpLen</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;OuterFadeUpLen&quot;)</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>0.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>3.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_auto_duck_8cpp_1a9b3b13d8e3e7fa1c147973393be76458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(ThresholdDb, double, XO(&quot;ThresholdDb&quot;),-30.0,-100.0, 0.0, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>ThresholdDb</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;ThresholdDb&quot;)</type>
        </param>
        <param>
          <type>-30.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>-100.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>0.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_auto_duck_8cpp_1ae9ad356d49844cbed2a035a0dbf0e0d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(MaximumPause, double, XO(&quot;MaximumPause&quot;), 1.0, 0.0, DBL_MAX, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>MaximumPause</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;MaximumPause&quot;)</type>
        </param>
        <param>
          <type>1.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>0.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>DBL_MAX</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_auto_duck_8cpp_1a157426bfb1fdc71d18d6a0a71b0b8c32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WX_DECLARE_OBJARRAY</definition>
        <argsstring>(AutoDuckRegion, AutoDuckRegionArray)</argsstring>
        <name>WX_DECLARE_OBJARRAY</name>
        <param>
          <type><ref refid="struct_auto_duck_region" kindref="compound">AutoDuckRegion</ref></type>
        </param>
        <param>
          <type>AutoDuckRegionArray</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_auto_duck_8cpp_1a95e2da918431450c9983e3509c9d6e32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WX_DEFINE_OBJARRAY</definition>
        <argsstring>(AutoDuckRegionArray)</argsstring>
        <name>WX_DEFINE_OBJARRAY</name>
        <param>
          <type>AutoDuckRegionArray</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_auto_duck_8cpp_1a7e27c8a0b8d8112190af60ec0d2cd177" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int GetDistance</definition>
        <argsstring>(const wxPoint &amp;first, const wxPoint &amp;second)</argsstring>
        <name>GetDistance</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxPoint &amp;</type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxPoint &amp;</type>
          <declname>second</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" line="600" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp" bodystart="600" bodyend="608"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>AutoDuck.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Markus<sp/>Meyer</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*******************************************************************/</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor">#include<sp/>&quot;../Audacity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_auto_duck_8h" kindref="compound">AutoDuck.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="float_8h" kindref="compound">float.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcclient.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcmemory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dynarray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/msgdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../AColor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../AllThemeResources.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Internat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Prefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ShuttleGui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Theme.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../widgets/valnum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../WaveTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>keys,<sp/>defaults,<sp/>minimums,<sp/>and<sp/>maximums<sp/>for<sp/>the<sp/>effect<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type<sp/><sp/><sp/><sp/><sp/>Key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Def<sp/><sp/><sp/><sp/><sp/><sp/>Min<sp/><sp/><sp/><sp/><sp/><sp/>Max<sp/><sp/><sp/><sp/><sp/><sp/>Scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="_auto_duck_8cpp_1a81855ab77d595b028f491af0adc48acc" kindref="member">Param</ref>(<sp/>DuckAmountDb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;DuckAmountDb&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/>-12.0,<sp/><sp/><sp/>-24.0,<sp/><sp/><sp/>0.0,<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="_auto_duck_8cpp_1a81855ab77d595b028f491af0adc48acc" kindref="member">Param</ref>(<sp/>InnerFadeDownLen,<sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;InnerFadeDownLen&quot;</highlight><highlight class="normal">),<sp/>0.0,<sp/><sp/><sp/><sp/><sp/>0.0,<sp/><sp/><sp/><sp/><sp/>3.0,<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="_auto_duck_8cpp_1a81855ab77d595b028f491af0adc48acc" kindref="member">Param</ref>(<sp/>InnerFadeUpLen,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;InnerFadeUpLen&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/>0.0,<sp/><sp/><sp/><sp/><sp/>0.0,<sp/><sp/><sp/><sp/><sp/>3.0,<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="_auto_duck_8cpp_1a81855ab77d595b028f491af0adc48acc" kindref="member">Param</ref>(<sp/>OuterFadeDownLen,<sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;OuterFadeDownLen&quot;</highlight><highlight class="normal">),<sp/>0.5,<sp/><sp/><sp/><sp/><sp/>0.0,<sp/><sp/><sp/><sp/><sp/>3.0,<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="_auto_duck_8cpp_1a81855ab77d595b028f491af0adc48acc" kindref="member">Param</ref>(<sp/>OuterFadeUpLen,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;OuterFadeUpLen&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/>0.5,<sp/><sp/><sp/><sp/><sp/>0.0,<sp/><sp/><sp/><sp/><sp/>3.0,<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="_auto_duck_8cpp_1a81855ab77d595b028f491af0adc48acc" kindref="member">Param</ref>(<sp/>ThresholdDb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;ThresholdDb&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/>-30.0,<sp/><sp/><sp/>-100.0,<sp/><sp/>0.0,<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="_auto_duck_8cpp_1a81855ab77d595b028f491af0adc48acc" kindref="member">Param</ref>(<sp/>MaximumPause,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;MaximumPause&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/>1.0,<sp/><sp/><sp/><sp/><sp/>0.0,<sp/><sp/><sp/><sp/><sp/>DBL_MAX,<sp/>1<sp/><sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>Common<sp/>constants</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kBufSize<sp/>=<sp/>131072;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>samples<sp/>to<sp/>process<sp/>at<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kRMSWindowSize<sp/>=<sp/>100;<sp/><sp/></highlight><highlight class="comment">//<sp/>samples<sp/>in<sp/>circular<sp/>RMS<sp/>window<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>A<sp/>auto<sp/>duck<sp/>region<sp/>and<sp/>an<sp/>array<sp/>of<sp/>auto<sp/>duck<sp/>regions</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="struct_auto_duck_region" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_auto_duck_region" kindref="compound">AutoDuckRegion</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62" refid="struct_auto_duck_region_1a6346ed2e37ef9cf856cc240cf1ab96f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_auto_duck_region_1a6346ed2e37ef9cf856cc240cf1ab96f6" kindref="member">AutoDuckRegion</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_auto_duck_region_1a979129b9eea0a53c80956edb805079ae" kindref="member">t0</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_auto_duck_region_1ab36d9a31ca0d4cb1dd673dd7fc5e9f01" kindref="member">t1</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;t0<sp/>=<sp/><ref refid="struct_auto_duck_region_1a979129b9eea0a53c80956edb805079ae" kindref="member">t0</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;t1<sp/>=<sp/><ref refid="struct_auto_duck_region_1ab36d9a31ca0d4cb1dd673dd7fc5e9f01" kindref="member">t1</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="struct_auto_duck_region_1a979129b9eea0a53c80956edb805079ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_auto_duck_region_1a979129b9eea0a53c80956edb805079ae" kindref="member">t0</ref>;</highlight></codeline>
<codeline lineno="69" refid="struct_auto_duck_region_1ab36d9a31ca0d4cb1dd673dd7fc5e9f01" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_auto_duck_region_1ab36d9a31ca0d4cb1dd673dd7fc5e9f01" kindref="member">t1</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/arrimpl.cpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="_auto_duck_8cpp_1a157426bfb1fdc71d18d6a0a71b0b8c32" kindref="member">WX_DECLARE_OBJARRAY</ref>(<ref refid="struct_auto_duck_region" kindref="compound">AutoDuckRegion</ref>,<sp/>AutoDuckRegionArray);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="_auto_duck_8cpp_1a95e2da918431450c9983e3509c9d6e32" kindref="member">WX_DEFINE_OBJARRAY</ref>(AutoDuckRegionArray);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>Effect<sp/>implementation</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_effect_auto_duck" kindref="compound">EffectAutoDuck</ref>,<sp/>wxEvtHandler)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>EVT_TEXT(wxID_ANY,<sp/><ref refid="class_effect_auto_duck" kindref="compound">EffectAutoDuck</ref>::OnValueChanged)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_effect_auto_duck_1aa60461caaaa637f8e24fdf9b630e69a8" refkind="member"><highlight class="normal"><ref refid="class_effect_auto_duck" kindref="compound">EffectAutoDuck</ref>::<ref refid="class_effect_auto_duck" kindref="compound">EffectAutoDuck</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>mDuckAmountDb<sp/>=<sp/>DEF_DuckAmountDb;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>mInnerFadeDownLen<sp/>=<sp/>DEF_InnerFadeDownLen;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>mInnerFadeUpLen<sp/>=<sp/>DEF_InnerFadeUpLen;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>mOuterFadeDownLen<sp/>=<sp/>DEF_OuterFadeDownLen;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>mOuterFadeUpLen<sp/>=<sp/>DEF_OuterFadeUpLen;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/>mThresholdDb<sp/>=<sp/>DEF_ThresholdDb;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>mMaximumPause<sp/>=<sp/>DEF_MaximumPause;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>SetLinearEffectFlag(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>mControlTrack<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>mPanel<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_effect_auto_duck_1a9328416bed39a223602322c74ddf3cd8" refkind="member"><highlight class="normal"><ref refid="class_effect_auto_duck_1a9328416bed39a223602322c74ddf3cd8" kindref="member">EffectAutoDuck::~EffectAutoDuck</ref>()</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IdentInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_effect_auto_duck_1a49b925b81f84e3d536f477f3f4b07f1f" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_effect_auto_duck_1a49b925b81f84e3d536f477f3f4b07f1f" kindref="member">EffectAutoDuck::GetSymbol</ref>()</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_auto_duck_8h_1a6cf31e858a528fe951f02f99abc2fc7a" kindref="member">AUTODUCK_PLUGIN_SYMBOL</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_effect_auto_duck_1a218f2b1b87efca0638354f5c1e5bb9f7" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_effect_auto_duck_1a218f2b1b87efca0638354f5c1e5bb9f7" kindref="member">EffectAutoDuck::GetDescription</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Reduces<sp/>(ducks)<sp/>the<sp/>volume<sp/>of<sp/>one<sp/>or<sp/>more<sp/>tracks<sp/>whenever<sp/>the<sp/>volume<sp/>of<sp/>a<sp/>specified<sp/>\&quot;control\&quot;<sp/>track<sp/>reaches<sp/>a<sp/>particular<sp/>level&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectIdentInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_effect_auto_duck_1a16cc38e2db2a26de15ff454e3ea221dd" refkind="member"><highlight class="normal"><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43" kindref="member">EffectType</ref><sp/><ref refid="class_effect_auto_duck_1a16cc38e2db2a26de15ff454e3ea221dd" kindref="member">EffectAutoDuck::GetType</ref>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectClientInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_effect_auto_duck_1a7cc304ccbd96c9b8d5fc9aaecab69a82" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_auto_duck_1a7cc304ccbd96c9b8d5fc9aaecab69a82" kindref="member">EffectAutoDuck::GetAutomationParameters</ref>(<ref refid="class_effect_automation_parameters" kindref="compound">EffectAutomationParameters</ref><sp/>&amp;<sp/>parms)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_DuckAmountDb,<sp/>mDuckAmountDb);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_InnerFadeDownLen,<sp/>mInnerFadeDownLen);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_InnerFadeUpLen,<sp/>mInnerFadeUpLen);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_OuterFadeDownLen,<sp/>mOuterFadeDownLen);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_OuterFadeUpLen,<sp/>mOuterFadeUpLen);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_ThresholdDb,<sp/>mThresholdDb);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_MaximumPause,<sp/>mMaximumPause);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="class_effect_auto_duck_1a531bfb96e7f898b0fbca7842b2dccc52" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_auto_duck_1a531bfb96e7f898b0fbca7842b2dccc52" kindref="member">EffectAutoDuck::SetAutomationParameters</ref>(<ref refid="class_effect_automation_parameters" kindref="compound">EffectAutomationParameters</ref><sp/>&amp;<sp/>parms)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(DuckAmountDb);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(InnerFadeDownLen);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(InnerFadeUpLen);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(OuterFadeDownLen);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(OuterFadeUpLen);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(ThresholdDb);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(MaximumPause);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>mDuckAmountDb<sp/>=<sp/>DuckAmountDb;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>mInnerFadeDownLen<sp/>=<sp/>InnerFadeDownLen;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>mInnerFadeUpLen<sp/>=<sp/>InnerFadeUpLen;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>mOuterFadeDownLen<sp/>=<sp/>OuterFadeDownLen;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>mOuterFadeUpLen<sp/>=<sp/>OuterFadeUpLen;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/>mThresholdDb<sp/>=<sp/>ThresholdDb;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>mMaximumPause<sp/>=<sp/>MaximumPause;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Effect<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_effect_auto_duck_1aef0d3469118bf08a8fd97fb5df6f2404" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_auto_duck_1aef0d3469118bf08a8fd97fb5df6f2404" kindref="member">EffectAutoDuck::Startup</ref>()</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref><sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;/Effects/AutoDuck/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Migrate<sp/>settings<sp/>from<sp/>2.1.0<sp/>or<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Already<sp/>migrated,<sp/>so<sp/>bail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Exists(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Migrated&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>old<sp/>&quot;current&quot;<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Exists(base))</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;DuckAmountDb&quot;</highlight><highlight class="normal">),<sp/>&amp;mDuckAmountDb,<sp/>DEF_DuckAmountDb);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;InnerFadeDownLen&quot;</highlight><highlight class="normal">),<sp/>&amp;mInnerFadeDownLen,<sp/>DEF_InnerFadeDownLen);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;InnerFadeUpLen&quot;</highlight><highlight class="normal">),<sp/>&amp;mInnerFadeUpLen,<sp/>DEF_InnerFadeUpLen);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;OuterFadeDownLen&quot;</highlight><highlight class="normal">),<sp/>&amp;mOuterFadeDownLen,<sp/>DEF_OuterFadeDownLen);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;OuterFadeUpLen&quot;</highlight><highlight class="normal">),<sp/>&amp;mOuterFadeUpLen,<sp/>DEF_OuterFadeUpLen);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ThresholdDb&quot;</highlight><highlight class="normal">),<sp/>&amp;mThresholdDb,<sp/>DEF_ThresholdDb);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;MaximumPause&quot;</highlight><highlight class="normal">),<sp/>&amp;mMaximumPause,<sp/>DEF_MaximumPause);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SaveUserPreset(GetCurrentSettingsGroup());</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>migrate<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Migrated&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="class_effect_auto_duck_1a44f499ebebf6b86d30fb44a5d2fb78b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_auto_duck_1a44f499ebebf6b86d30fb44a5d2fb78b7" kindref="member">EffectAutoDuck::Init</ref>()</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>mControlTrack<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mTracks);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lastWasSelectedWaveTrack<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*controlTrackCandidate<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(t)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastWasSelectedWaveTrack<sp/>&amp;&amp;<sp/>!t-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>could<sp/>be<sp/>the<sp/>control<sp/>track,<sp/>so<sp/>remember<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>controlTrackCandidate<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)t;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastWasSelectedWaveTrack<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>())</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastWasSelectedWaveTrack<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;You<sp/>selected<sp/>a<sp/>track<sp/>which<sp/>does<sp/>not<sp/>contain<sp/>audio.<sp/>AutoDuck<sp/>can<sp/>only<sp/>process<sp/>audio<sp/>tracks.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>Auto<sp/>duck<sp/>is<sp/>the<sp/>name<sp/>of<sp/>an<sp/>effect<sp/>that<sp/>&apos;ducks&apos;<sp/>(reduces<sp/>the<sp/>volume)</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>the<sp/>audio<sp/>automatically<sp/>when<sp/>there<sp/>is<sp/>sound<sp/>on<sp/>another<sp/>track.<sp/><sp/>Not<sp/>as</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>&apos;Donald-Duck&apos;!*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Auto<sp/>Duck&quot;</highlight><highlight class="normal">),<sp/>wxICON_ERROR,<sp/>mUIParent);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!controlTrackCandidate)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Auto<sp/>Duck<sp/>needs<sp/>a<sp/>control<sp/>track<sp/>which<sp/>must<sp/>be<sp/>placed<sp/>below<sp/>the<sp/>selected<sp/>track(s).&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Auto<sp/>Duck&quot;</highlight><highlight class="normal">),<sp/>wxICON_ERROR,<sp/>mUIParent);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/>mControlTrack<sp/>=<sp/>controlTrackCandidate;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="class_effect_auto_duck_1a2c650875598de07b220407ff339f81cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_effect_auto_duck_1a2c650875598de07b220407ff339f81cb" kindref="member">EffectAutoDuck::End</ref>()</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/>mControlTrack<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_effect_auto_duck_1ae2b2d4a063e93e3e1662c06129164d8d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_auto_duck_1ae2b2d4a063e93e3e1662c06129164d8d" kindref="member">EffectAutoDuck::Process</ref>()</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetNumWaveTracks()<sp/>==<sp/>0<sp/>||<sp/>!mControlTrack)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cancel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mControlTrack-&gt;TimeToLongSamples(mT0<sp/>+<sp/>mOuterFadeDownLen);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mControlTrack-&gt;TimeToLongSamples(mT1<sp/>-<sp/>mOuterFadeUpLen);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>&lt;=<sp/>start)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>minimum<sp/>number<sp/>of<sp/>samples<sp/>we<sp/>have<sp/>to<sp/>wait<sp/>until<sp/>the<sp/>maximum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pause<sp/>has<sp/>been<sp/>exceeded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxPause<sp/>=<sp/>mMaximumPause;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>fade<sp/>in<sp/>until<sp/>we<sp/>have<sp/>time<sp/>enough<sp/>to<sp/>actually<sp/>fade<sp/>out<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxPause<sp/>&lt;<sp/>mOuterFadeDownLen<sp/>+<sp/>mOuterFadeUpLen)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxPause<sp/>=<sp/>mOuterFadeDownLen<sp/>+<sp/>mOuterFadeUpLen;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>minSamplesPause<sp/>=</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mControlTrack-&gt;TimeToLongSamples(maxPause);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold<sp/>=<sp/><ref refid="_audacity_8h_1ae65fedb390ed942548ca02213e6a2813" kindref="member">DB_TO_LINEAR</ref>(mThresholdDb);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>the<sp/>threshold<sp/>so<sp/>we<sp/>can<sp/>compare<sp/>it<sp/>to<sp/>the<sp/>rmsSum<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/>threshold<sp/>=<sp/>threshold<sp/>*<sp/>threshold<sp/>*<sp/>kRMSWindowSize;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rmsPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rmsSum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*rmsWindow<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[kRMSWindowSize];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>kRMSWindowSize;<sp/>i++)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rmsWindow[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[kBufSize];</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inDuckRegion<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>following<sp/>two<sp/>variables<sp/>to<sp/>prevent<sp/>compiler<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>duckRegionStart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>curSamplesPause<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>the<sp/>progress<sp/>bar<sp/>appear<sp/>more<sp/>natural,<sp/>we<sp/>first<sp/>look<sp/>for<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>duck<sp/>regions<sp/>and<sp/>apply<sp/>them<sp/>all<sp/>at<sp/>once<sp/>afterwards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>AutoDuckRegionArray<sp/>regions;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>pos<sp/>=<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/>end)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>end<sp/>-<sp/>pos;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>kBufSize)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>kBufSize;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mControlTrack-&gt;Get((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buf,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>pos,<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)len);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>pos;<sp/>i<sp/>&lt;<sp/>pos<sp/>+<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmsSum<sp/>-=<sp/>rmsWindow[rmsPos];</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmsWindow[rmsPos]<sp/>=<sp/>buf[i<sp/>-<sp/>pos]<sp/>*<sp/>buf[i<sp/>-<sp/>pos];</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmsSum<sp/>+=<sp/>rmsWindow[rmsPos];</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmsPos<sp/>=<sp/>(rmsPos<sp/>+<sp/>1)<sp/>%<sp/>kRMSWindowSize;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>thresholdExceeded<sp/>=<sp/>rmsSum<sp/>&gt;<sp/>threshold;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thresholdExceeded)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>everytime<sp/>the<sp/>threshold<sp/>is<sp/>exceeded,<sp/>reset<sp/>our<sp/>count<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>number<sp/>of<sp/>pause<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curSamplesPause<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inDuckRegion)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>threshold<sp/>has<sp/>been<sp/>exceeded<sp/>for<sp/>the<sp/>first<sp/>time,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>let<sp/>the<sp/>duck<sp/>region<sp/>begin<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDuckRegion<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duckRegionStart<sp/>=<sp/>mControlTrack-&gt;LongSamplesToTime(i);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!thresholdExceeded<sp/>&amp;&amp;<sp/>inDuckRegion)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>threshold<sp/>has<sp/>not<sp/>been<sp/>exceeded<sp/>and<sp/>we<sp/>are<sp/>in<sp/>a<sp/>duck</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>region,<sp/>but<sp/>only<sp/>fade<sp/>in<sp/>if<sp/>the<sp/>maximum<sp/>pause<sp/>has<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exceeded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curSamplesPause<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curSamplesPause<sp/>&gt;=<sp/>minSamplesPause)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>the<sp/>actual<sp/>duck<sp/>fade<sp/>and<sp/>reset<sp/>all<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>duckRegionEnd<sp/>=</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mControlTrack-&gt;LongSamplesToTime(i<sp/>-<sp/>curSamplesPause);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regions.Add(<ref refid="struct_auto_duck_region_1a6346ed2e37ef9cf856cc240cf1ab96f6" kindref="member">AutoDuckRegion</ref>(</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duckRegionStart<sp/>-<sp/>mOuterFadeDownLen,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duckRegionEnd<sp/>+<sp/>mOuterFadeUpLen));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDuckRegion<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TotalProgress(<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(pos-start))<sp/>/<sp/>(end-start)<sp/>/</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetNumWaveTracks()<sp/>+<sp/>1)<sp/>))</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cancel<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>last<sp/>duck<sp/>fade,<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inDuckRegion)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>duckRegionEnd<sp/>=</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mControlTrack-&gt;LongSamplesToTime(end<sp/>-<sp/>curSamplesPause);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regions.Add(<ref refid="struct_auto_duck_region_1a6346ed2e37ef9cf856cc240cf1ab96f6" kindref="member">AutoDuckRegion</ref>(</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duckRegionStart<sp/>-<sp/>mOuterFadeDownLen,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duckRegionEnd<sp/>+<sp/>mOuterFadeUpLen));</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>rmsWindow;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cancel)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CopyInputTracks();<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>mOutputTracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/>mOutputTracks);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*iterTrack<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trackNumber<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iterTrack)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(iterTrack-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)iterTrack;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)regions.GetCount();<sp/>i++)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_auto_duck_region" kindref="compound">AutoDuckRegion</ref>&amp;<sp/>region<sp/>=<sp/>regions[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ApplyDuckFade(trackNumber,<sp/>t,<sp/>region.<ref refid="struct_auto_duck_region_1a979129b9eea0a53c80956edb805079ae" kindref="member">t0</ref>,<sp/>region.<ref refid="struct_auto_duck_region_1ab36d9a31ca0d4cb1dd673dd7fc5e9f01" kindref="member">t1</ref>))</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cancel<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cancel)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterTrack<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trackNumber++;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>ReplaceProcessedTracks(!cancel);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!cancel;</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="class_effect_auto_duck_1a54d67cb6c72e92c44e09d71de05dcabb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_effect_auto_duck_1a54d67cb6c72e92c44e09d71de05dcabb" kindref="member">EffectAutoDuck::PopulateOrExchange</ref>(<ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/>&amp;<sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a026838575f360f2d1d8414827d18457d" kindref="member">SetBorder</ref>(5);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a6f8c4113388aa33dbb64204cd5ab1571" kindref="member">StartVerticalLay</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(0,<sp/>5);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPanel<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_effect_auto_duck_panel" kindref="compound">EffectAutoDuckPanel</ref>(S.<ref refid="class_shuttle_gui_base_1a8cf9a32c04e6cbbe231e629b1902871d" kindref="member">GetParent</ref>(),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ab9c4e1935a85180c4aff8b056b29c418" kindref="member">AddWindow</ref>(mPanel);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(0,<sp/>5);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(6,<sp/>wxCENTER);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vldDuckAmountDb(1,<sp/>&amp;mDuckAmountDb,<sp/>NUM_VAL_NO_TRAILING_ZEROES);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vldDuckAmountDb.SetRange(MIN_DuckAmountDb,<sp/>MAX_DuckAmountDb);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDuckAmountDbBox<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Duck<sp/>amount:&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>10);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDuckAmountDbBox-&gt;SetValidator(vldDuckAmountDb);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a54816a02cbcc4d09b3d40c2b731ba9e5" kindref="member">AddUnits</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vldMaximumPause(2,<sp/>&amp;mMaximumPause,<sp/>NUM_VAL_NO_TRAILING_ZEROES);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vldMaximumPause.SetRange(MIN_MaximumPause,<sp/>MAX_MaximumPause);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMaximumPauseBox<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>pause:&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>10);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMaximumPauseBox-&gt;SetValidator(vldMaximumPause);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a54816a02cbcc4d09b3d40c2b731ba9e5" kindref="member">AddUnits</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;seconds&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vldOuterFadeDownLen(2,<sp/>&amp;mOuterFadeDownLen,<sp/>NUM_VAL_NO_TRAILING_ZEROES);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vldOuterFadeDownLen.SetRange(MIN_OuterFadeDownLen,<sp/>MAX_OuterFadeDownLen);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOuterFadeDownLenBox<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Outer<sp/>fade<sp/>down<sp/>length:&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>10);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOuterFadeDownLenBox-&gt;SetValidator(vldOuterFadeDownLen);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a54816a02cbcc4d09b3d40c2b731ba9e5" kindref="member">AddUnits</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;seconds&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vldOuterFadeUpLen(2,<sp/>&amp;mOuterFadeUpLen,<sp/>NUM_VAL_NO_TRAILING_ZEROES);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vldOuterFadeUpLen.SetRange(MIN_OuterFadeUpLen,<sp/>MAX_OuterFadeUpLen);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOuterFadeUpLenBox<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Outer<sp/>fade<sp/>up<sp/>length:&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>10);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOuterFadeUpLenBox-&gt;SetValidator(vldOuterFadeUpLen);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a54816a02cbcc4d09b3d40c2b731ba9e5" kindref="member">AddUnits</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;seconds&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vldInnerFadeDownLen(2,<sp/>&amp;mInnerFadeDownLen,<sp/>NUM_VAL_NO_TRAILING_ZEROES);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vldInnerFadeDownLen.SetRange(MIN_InnerFadeDownLen,<sp/>MAX_InnerFadeDownLen);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInnerFadeDownLenBox<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Inner<sp/>fade<sp/>down<sp/>length:&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>10);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInnerFadeDownLenBox-&gt;SetValidator(vldInnerFadeDownLen);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a54816a02cbcc4d09b3d40c2b731ba9e5" kindref="member">AddUnits</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;seconds&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vldInnerFadeUpLen(2,<sp/>&amp;mInnerFadeUpLen,<sp/>NUM_VAL_NO_TRAILING_ZEROES);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vldInnerFadeUpLen.SetRange(MIN_InnerFadeUpLen,<sp/>MAX_InnerFadeUpLen);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInnerFadeUpLenBox<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Inner<sp/>fade<sp/>up<sp/>length:&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>10);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInnerFadeUpLenBox-&gt;SetValidator(vldInnerFadeUpLen);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a54816a02cbcc4d09b3d40c2b731ba9e5" kindref="member">AddUnits</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;seconds&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(3,<sp/>wxCENTER);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vldThresholdDb(2,<sp/>&amp;mThresholdDb,<sp/>NUM_VAL_NO_TRAILING_ZEROES);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vldThresholdDb.SetRange(MIN_ThresholdDb,<sp/>MAX_ThresholdDb);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mThresholdDbBox<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Threshold:&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>10);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mThresholdDbBox-&gt;SetValidator(vldThresholdDb);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a54816a02cbcc4d09b3d40c2b731ba9e5" kindref="member">AddUnits</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a0286cb0ae146afcf8c589ceb16b37144" kindref="member">EndVerticalLay</ref>();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="class_effect_auto_duck_1ad2bb85f15c3bf9d92b9c1ab92eee0001" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_auto_duck_1ad2bb85f15c3bf9d92b9c1ab92eee0001" kindref="member">EffectAutoDuck::TransferDataToWindow</ref>()</highlight></codeline>
<codeline lineno="489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mUIParent-&gt;TransferDataToWindow())</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/>mPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="class_effect_auto_duck_1af9dd6ba57de189d209d758c674e8cb43" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_auto_duck_1af9dd6ba57de189d209d758c674e8cb43" kindref="member">EffectAutoDuck::TransferDataFromWindow</ref>()</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mUIParent-&gt;Validate()<sp/>||<sp/>!mUIParent-&gt;TransferDataFromWindow())</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectAutoDuck<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>currently<sp/>does<sp/>an<sp/>exponential<sp/>fade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectAutoDuck::ApplyDuckFade(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trackNumber,<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_auto_duck_region_1a979129b9eea0a53c80956edb805079ae" kindref="member">t0</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_auto_duck_region_1ab36d9a31ca0d4cb1dd673dd7fc5e9f01" kindref="member">t1</ref>)</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cancel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=<sp/>t-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(t0);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>t-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(t1);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[kBufSize];</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>pos<sp/>=<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fadeDownSamples<sp/>=<sp/>t-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mOuterFadeDownLen<sp/>+<sp/>mInnerFadeDownLen);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fadeDownSamples<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fadeDownSamples<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fadeUpSamples<sp/>=<sp/>t-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mOuterFadeUpLen<sp/>+<sp/>mInnerFadeUpLen);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fadeUpSamples<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fadeUpSamples<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fadeDownStep<sp/>=<sp/>mDuckAmountDb<sp/>/<sp/>fadeDownSamples;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fadeUpStep<sp/>=<sp/>mDuckAmountDb<sp/>/<sp/>fadeUpSamples;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/>end)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>end<sp/>-<sp/>pos;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>kBufSize)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>kBufSize;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" kindref="member">Get</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buf,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>pos,<sp/>len);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>pos;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>pos<sp/>+<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gainDown<sp/>=<sp/>fadeDownStep<sp/>*<sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>-<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gainUp<sp/>=<sp/>fadeUpStep<sp/>*<sp/>(end<sp/>-<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gain;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gainDown<sp/>&gt;<sp/>gainUp)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gain<sp/>=<sp/>gainDown;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gain<sp/>=<sp/>gainUp;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gain<sp/>&lt;<sp/>mDuckAmountDb)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gain<sp/>=<sp/>mDuckAmountDb;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>-<sp/>pos]<sp/>*=<sp/><ref refid="_audacity_8h_1ae65fedb390ed942548ca02213e6a2813" kindref="member">DB_TO_LINEAR</ref>(gain);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_wave_track_1aea32b02fe3634c9f6d0a79af3da7c987" kindref="member">Set</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buf,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>pos,<sp/>len);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>curTime<sp/>=<sp/>t-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(pos);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fractionFinished<sp/>=<sp/>(curTime<sp/>-<sp/>mT0)<sp/>/<sp/>(mT1<sp/>-<sp/>mT0);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TotalProgress(<sp/>(trackNumber<sp/>+<sp/>1<sp/>+<sp/>fractionFinished)<sp/>/</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GetNumWaveTracks()<sp/>+<sp/>1)<sp/>))</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cancel<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cancel;</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectAutoDuck::OnValueChanged(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/>mPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*<sp/>EffectAutoDuckPanel<sp/>implementation</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="_auto_duck_8cpp_1a5b614884f8690945eaf040c37259628b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONTROL_POINT_REGION<sp/>10<sp/>//<sp/>pixel<sp/>distance<sp/>to<sp/>click<sp/>on<sp/>a<sp/>control<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="_auto_duck_8cpp_1afb98e6bf32cc7be29a96ef3bd81f2a78" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONTROL_POINT_MIN_MOVE<sp/>5<sp/>//<sp/>min<sp/>mouse<sp/>move<sp/>until<sp/>value<sp/>is<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="_auto_duck_8cpp_1ade04c5fd12730b5a4e85fa2da36e989d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEXT_DISTANCE<sp/>15<sp/>//<sp/>pixel<sp/>distance<sp/>text<sp/>&lt;-&gt;<sp/>center<sp/>of<sp/>control<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593" refid="_auto_duck_8cpp_1a2601c8b0cfe95e5e0610ddbe31dd76e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FADE_DOWN_START<sp/>150<sp/>//<sp/>x<sp/>coordinate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="_auto_duck_8cpp_1a49b4b2dc58a598009d3dd37ddc0b05a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FADE_UP_START<sp/>450<sp/>//<sp/>x<sp/>coordinate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595" refid="_auto_duck_8cpp_1abe46772fa63e1b5ab4ac122a8b911725" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DUCK_AMOUNT_START<sp/>50<sp/>//<sp/>y<sp/>coordinate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597" refid="_auto_duck_8cpp_1a5a3b6696316dadd7e6639da97a45177c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FADE_SCALE<sp/>40<sp/>//<sp/>scale<sp/>factor<sp/>for<sp/>second<sp/>-&gt;<sp/>pixel<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="_auto_duck_8cpp_1abd740c71bbf17d18d412af3d172efde6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DUCK_AMOUNT_SCALE<sp/>8<sp/>//<sp/>scale<sp/>factor<sp/>for<sp/>db<sp/>-&gt;<sp/>pixel<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetDistance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPoint&amp;<sp/>first,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPoint&amp;<sp/>second)</highlight></codeline>
<codeline lineno="601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distanceX<sp/>=<sp/>abs(first.x<sp/>-<sp/>second.x);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distanceY<sp/>=<sp/>abs(first.y<sp/>-<sp/>second.y);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distanceX<sp/>&gt;<sp/>distanceY)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distanceX;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distanceY;</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_effect_auto_duck_panel" kindref="compound">EffectAutoDuckPanel</ref>,<sp/>wxPanel)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/>EVT_PAINT(EffectAutoDuckPanel::OnPaint)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/>EVT_MOUSE_CAPTURE_CHANGED(EffectAutoDuckPanel::OnMouseCaptureChanged)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/>EVT_MOUSE_CAPTURE_LOST(EffectAutoDuckPanel::OnMouseCaptureLost)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/>EVT_LEFT_DOWN(EffectAutoDuckPanel::OnLeftDown)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/>EVT_LEFT_UP(EffectAutoDuckPanel::OnLeftUp)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/>EVT_MOTION(EffectAutoDuckPanel::OnMotion)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="class_effect_auto_duck_panel_1a361fe20afd2b0d6e494475af5f44e10d" refkind="member"><highlight class="normal"><ref refid="class_effect_auto_duck_panel" kindref="compound">EffectAutoDuckPanel</ref>::<ref refid="class_effect_auto_duck_panel" kindref="compound">EffectAutoDuckPanel</ref>(wxWindow<sp/>*parent,<sp/><ref refid="class_effect_auto_duck" kindref="compound">EffectAutoDuck</ref><sp/>*effect)</highlight></codeline>
<codeline lineno="620"><highlight class="normal">:<sp/><sp/>wxPanel(parent,<sp/>wxID_ANY,<sp/>wxDefaultPosition,<sp/>wxSize(600,<sp/>300))</highlight></codeline>
<codeline lineno="621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/>mParent<sp/>=<sp/>parent;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/>mEffect<sp/>=<sp/>effect;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/>mCurrentControlPoint<sp/>=<sp/>none;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/>mBackgroundBitmap<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/>ResetControlPoints();</highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630" refid="class_effect_auto_duck_panel_1a85bf7f322036812cfdb28bcc85003540" refkind="member"><highlight class="normal"><ref refid="class_effect_auto_duck_panel_1a85bf7f322036812cfdb28bcc85003540" kindref="member">EffectAutoDuckPanel::~EffectAutoDuckPanel</ref>()</highlight></codeline>
<codeline lineno="631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mBackgroundBitmap)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mBackgroundBitmap;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectAutoDuckPanel::ResetControlPoints()</highlight></codeline>
<codeline lineno="637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/>mControlPoints[innerFadeDown]<sp/>=<sp/>wxPoint(-100,-100);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/>mControlPoints[innerFadeUp]<sp/>=<sp/>wxPoint(-100,-100);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/>mControlPoints[outerFadeDown]<sp/>=<sp/>wxPoint(-100,-100);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/>mControlPoints[outerFadeUp]<sp/>=<sp/>wxPoint(-100,-100);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/>mControlPoints[duckAmount]<sp/>=<sp/>wxPoint(-100,-100);</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectAutoDuckPanel::OnPaint(wxPaintEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clientWidth,<sp/>clientHeight;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/>GetSize(&amp;clientWidth,<sp/>&amp;clientHeight);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mBackgroundBitmap<sp/>||<sp/>mBackgroundBitmap-&gt;GetWidth()<sp/>!=<sp/>clientWidth<sp/>||</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBackgroundBitmap-&gt;GetHeight()<sp/>!=<sp/>clientHeight)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mBackgroundBitmap)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mBackgroundBitmap;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBackgroundBitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap(clientWidth,<sp/>clientHeight);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/>wxMemoryDC<sp/>dc;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(*mBackgroundBitmap);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/>dc.SetBrush(*wxWHITE_BRUSH);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/>dc.DrawRectangle(0,<sp/>0,<sp/>clientWidth,<sp/>clientHeight);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/>dc.SetFont(wxFont(10,<sp/>wxFONTFAMILY_SWISS,<sp/>wxFONTSTYLE_NORMAL,</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFONTWEIGHT_NORMAL));</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/>dc.SetTextForeground(*wxBLACK);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/>dc.SetTextBackground(*wxWHITE);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>duckAmountDb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>innerFadeDownLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>innerFadeUpLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>outerFadeDownLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>outerFadeUpLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;mDuckAmountDbBox-&gt;GetValue().ToDouble(&amp;duckAmountDb);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;mInnerFadeDownLenBox-&gt;GetValue().ToDouble(&amp;innerFadeDownLen);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;mInnerFadeUpLenBox-&gt;GetValue().ToDouble(&amp;innerFadeUpLen);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;mOuterFadeDownLenBox-&gt;GetValue().ToDouble(&amp;outerFadeDownLen);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;mOuterFadeUpLenBox-&gt;GetValue().ToDouble(&amp;outerFadeUpLen);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(innerFadeDownLen<sp/>&lt;<sp/>MIN_InnerFadeDownLen<sp/>||<sp/>innerFadeDownLen<sp/>&gt;<sp/>MAX_InnerFadeDownLen<sp/>||</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>innerFadeUpLen<sp/>&lt;<sp/>MIN_InnerFadeUpLen<sp/><sp/><sp/><sp/><sp/>||<sp/>innerFadeUpLen<sp/>&gt;<sp/>MAX_InnerFadeUpLen<sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerFadeDownLen<sp/>&lt;<sp/>MIN_OuterFadeDownLen<sp/>||<sp/>outerFadeDownLen<sp/>&gt;<sp/>MAX_OuterFadeDownLen<sp/>||</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerFadeUpLen<sp/>&lt;<sp/>MIN_OuterFadeUpLen<sp/><sp/><sp/><sp/><sp/>||<sp/>outerFadeUpLen<sp/>&gt;<sp/>MAX_OuterFadeUpLen<sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duckAmountDb<sp/>&lt;<sp/>MIN_DuckAmountDb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>duckAmountDb<sp/>&gt;<sp/>MAX_DuckAmountDb)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>values<sp/>are<sp/>out<sp/>of<sp/>range,<sp/>no<sp/>preview<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>message<sp/>=<sp/>wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Preview<sp/>not<sp/>available&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textWidth<sp/>=<sp/>0,<sp/>textHeight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.GetTextExtent(message,<sp/>&amp;textWidth,<sp/>&amp;textHeight);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawText(message,<sp/>(clientWidth<sp/>-<sp/>textWidth)<sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(clientHeight<sp/>-<sp/>textHeight)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ResetControlPoints();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>preview</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(*wxTRANSPARENT_BRUSH);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(wxPen(<ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(clrGraphLines),<sp/>3,<sp/>wxSOLID));</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxPoint<sp/>points[6];</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points[0].x<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points[0].y<sp/>=<sp/><ref refid="_auto_duck_8cpp_1abe46772fa63e1b5ab4ac122a8b911725" kindref="member">DUCK_AMOUNT_START</ref>;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points[1].x<sp/>=<sp/><ref refid="_auto_duck_8cpp_1a2601c8b0cfe95e5e0610ddbe31dd76e2" kindref="member">FADE_DOWN_START</ref><sp/>-<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(outerFadeDownLen<sp/>*<sp/><ref refid="_auto_duck_8cpp_1a5a3b6696316dadd7e6639da97a45177c" kindref="member">FADE_SCALE</ref>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points[1].y<sp/>=<sp/><ref refid="_auto_duck_8cpp_1abe46772fa63e1b5ab4ac122a8b911725" kindref="member">DUCK_AMOUNT_START</ref>;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points[2].x<sp/>=<sp/><ref refid="_auto_duck_8cpp_1a2601c8b0cfe95e5e0610ddbe31dd76e2" kindref="member">FADE_DOWN_START</ref><sp/>+<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(innerFadeDownLen<sp/>*<sp/>FADE_SCALE);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points[2].y<sp/>=<sp/><ref refid="_auto_duck_8cpp_1abe46772fa63e1b5ab4ac122a8b911725" kindref="member">DUCK_AMOUNT_START</ref><sp/>-</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(duckAmountDb<sp/>*<sp/><ref refid="_auto_duck_8cpp_1abd740c71bbf17d18d412af3d172efde6" kindref="member">DUCK_AMOUNT_SCALE</ref>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points[3].x<sp/>=<sp/><ref refid="_auto_duck_8cpp_1a49b4b2dc58a598009d3dd37ddc0b05a1" kindref="member">FADE_UP_START</ref><sp/>-<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(innerFadeUpLen<sp/>*<sp/>FADE_SCALE);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points[3].y<sp/>=<sp/><ref refid="_auto_duck_8cpp_1abe46772fa63e1b5ab4ac122a8b911725" kindref="member">DUCK_AMOUNT_START</ref><sp/>-</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(duckAmountDb<sp/>*<sp/>DUCK_AMOUNT_SCALE);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points[4].x<sp/>=<sp/><ref refid="_auto_duck_8cpp_1a49b4b2dc58a598009d3dd37ddc0b05a1" kindref="member">FADE_UP_START</ref><sp/>+<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(outerFadeUpLen<sp/>*<sp/>FADE_SCALE);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points[4].y<sp/>=<sp/><ref refid="_auto_duck_8cpp_1abe46772fa63e1b5ab4ac122a8b911725" kindref="member">DUCK_AMOUNT_START</ref>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points[5].x<sp/>=<sp/>clientWidth<sp/>-<sp/>10;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points[5].y<sp/>=<sp/><ref refid="_auto_duck_8cpp_1abe46772fa63e1b5ab4ac122a8b911725" kindref="member">DUCK_AMOUNT_START</ref>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawLines(6,<sp/>points);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(wxPen(*wxBLACK,<sp/>1,<sp/>wxDOT));</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/><ref refid="_auto_duck_8cpp_1a2601c8b0cfe95e5e0610ddbe31dd76e2" kindref="member">FADE_DOWN_START</ref>,<sp/>10,<sp/><ref refid="_auto_duck_8cpp_1a2601c8b0cfe95e5e0610ddbe31dd76e2" kindref="member">FADE_DOWN_START</ref>,<sp/>clientHeight<sp/>-<sp/>10);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/><ref refid="_auto_duck_8cpp_1a49b4b2dc58a598009d3dd37ddc0b05a1" kindref="member">FADE_UP_START</ref>,<sp/>10,<sp/><ref refid="_auto_duck_8cpp_1a49b4b2dc58a598009d3dd37ddc0b05a1" kindref="member">FADE_UP_START</ref>,<sp/>clientHeight<sp/>-<sp/>10);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(<ref refid="class_a_color_1a9706bc519ec6f6b7f93ddc6371331f07" kindref="member">AColor::envelopePen</ref>);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(*wxWHITE_BRUSH);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mControlPoints[outerFadeDown]<sp/>=<sp/>points[1];</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mControlPoints[innerFadeDown]<sp/>=<sp/>points[2];</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mControlPoints[innerFadeUp]<sp/>=<sp/>points[3];</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mControlPoints[outerFadeUp]<sp/>=<sp/>points[4];</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mControlPoints[duckAmount]<sp/>=<sp/>wxPoint(</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(points[2].<ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>+<sp/>points[3].<ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)<sp/>/<sp/>2,<sp/>points[2].y);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="_auto_duck_8h_1ac3f17c31414a2557aee6d9af1fb79975" kindref="member">AUTO_DUCK_PANEL_NUM_CONTROL_POINTS</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EControlPoint<sp/>cp<sp/>=<sp/>(EControlPoint)<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>digits;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp<sp/>==<sp/>innerFadeDown)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>innerFadeDownLen;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digits<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp<sp/>==<sp/>innerFadeUp)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>innerFadeUpLen;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digits<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp<sp/>==<sp/>outerFadeDown)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>outerFadeDownLen;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digits<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp<sp/>==<sp/>outerFadeUp)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>outerFadeUpLen;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digits<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>duckAmountDb;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digits<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>valueStr<sp/>=<sp/><ref refid="class_internat_1a1fa6d78784af32b72d5f9c69ae05accf" kindref="member">Internat::ToDisplayString</ref>(value,<sp/>digits);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueStr<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp<sp/>==<sp/>duckAmount)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>short<sp/>form<sp/>of<sp/>&apos;decibels&apos;.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueStr<sp/>+=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>short<sp/>form<sp/>of<sp/>&apos;seconds&apos;.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueStr<sp/>+=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textWidth<sp/>=<sp/>0,<sp/>textHeight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetTextExtent(valueStr,<sp/>&amp;textWidth,<sp/>&amp;textHeight);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textPosX<sp/>=<sp/>mControlPoints[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].x<sp/>-<sp/>textWidth<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textPosY<sp/>=<sp/>mControlPoints[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].y;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp<sp/>==<sp/>duckAmount<sp/>||<sp/>cp<sp/>==<sp/>outerFadeDown<sp/>||<sp/>cp<sp/>==<sp/>outerFadeUp)</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textPosY<sp/>-=<sp/><ref refid="_auto_duck_8cpp_1ade04c5fd12730b5a4e85fa2da36e989d" kindref="member">TEXT_DISTANCE</ref><sp/>+<sp/>textHeight;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textPosY<sp/>+=<sp/><ref refid="_auto_duck_8cpp_1ade04c5fd12730b5a4e85fa2da36e989d" kindref="member">TEXT_DISTANCE</ref>;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawText(valueStr,<sp/>textPosX,<sp/>textPosY);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawEllipse(mControlPoints[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].x<sp/>-<sp/>3,</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mControlPoints[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].y<sp/>-<sp/>3,<sp/>6,<sp/>6);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>background<sp/>buffer<sp/>to<sp/>paint<sp/>dc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/>wxPaintDC<sp/>paintDC(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/>paintDC.Blit(0,<sp/>0,<sp/>clientWidth,<sp/>clientHeight,<sp/>&amp;dc,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>up:<sp/>necessary<sp/>to<sp/>free<sp/>resources<sp/>on<sp/>Windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(wxNullPen);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/>dc.SetBrush(wxNullBrush);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/>dc.SetFont(wxNullFont);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/>dc.SelectObject(wxNullBitmap);</highlight></codeline>
<codeline lineno="808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectAutoDuckPanel::OnMouseCaptureChanged(</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/>wxMouseCaptureChangedEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="812"><highlight class="normal">{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/>SetCursor(wxNullCursor);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/>mCurrentControlPoint<sp/>=<sp/>none;</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectAutoDuckPanel::OnMouseCaptureLost(</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/>wxMouseCaptureLostEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/>mCurrentControlPoint<sp/>=<sp/>none;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HasCapture())</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseMouse();</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal">EffectAutoDuckPanel::EControlPoint</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/>EffectAutoDuckPanel::GetNearestControlPoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPoint<sp/>&amp;<sp/>pt)</highlight></codeline>
<codeline lineno="830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_scripting_1ade42ef48015fcded2eb15f341967ff47" kindref="member">dist</ref>[<ref refid="_auto_duck_8h_1ac3f17c31414a2557aee6d9af1fb79975" kindref="member">AUTO_DUCK_PANEL_NUM_CONTROL_POINTS</ref>];</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_auto_duck_8h_1ac3f17c31414a2557aee6d9af1fb79975" kindref="member">AUTO_DUCK_PANEL_NUM_CONTROL_POINTS</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dist[i]<sp/>=<sp/>GetDistance(pt,<sp/>mControlPoints[i]);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curMinimum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_auto_duck_8h_1ac3f17c31414a2557aee6d9af1fb79975" kindref="member">AUTO_DUCK_PANEL_NUM_CONTROL_POINTS</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist[i]<sp/>&lt;<sp/>dist[curMinimum])</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curMinimum<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist[curMinimum]<sp/>&lt;=<sp/><ref refid="_auto_duck_8cpp_1a5b614884f8690945eaf040c37259628b" kindref="member">CONTROL_POINT_REGION</ref>)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(EControlPoint)curMinimum;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>none;</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectAutoDuckPanel::OnLeftDown(wxMouseEvent<sp/>&amp;<sp/>evt)</highlight></codeline>
<codeline lineno="849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/>EControlPoint<sp/>nearest<sp/>=<sp/>GetNearestControlPoint(evt.GetPosition());</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nearest<sp/>!=<sp/>none)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>control<sp/>point<sp/>has<sp/>been<sp/>clicked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMouseDownPoint<sp/>=<sp/>evt.GetPosition();</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentControlPoint<sp/>=<sp/>nearest;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mControlPointMoveActivated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="_auto_duck_8h_1ac3f17c31414a2557aee6d9af1fb79975" kindref="member">AUTO_DUCK_PANEL_NUM_CONTROL_POINTS</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMoveStartControlPoints[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>mControlPoints[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CaptureMouse();</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectAutoDuckPanel::OnLeftUp(wxMouseEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentControlPoint<sp/>!=<sp/>none)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentControlPoint<sp/>=<sp/>none;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseMouse();</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal">}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectAutoDuckPanel::OnMotion(wxMouseEvent<sp/>&amp;<sp/>evt)</highlight></codeline>
<codeline lineno="877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(GetNearestControlPoint(evt.GetPosition()))</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>none:</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetCursor(wxNullCursor);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>innerFadeDown:</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>innerFadeUp:</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>outerFadeDown:</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>outerFadeUp:</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetCursor(wxCursor(wxCURSOR_SIZEWE));</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>duckAmount:</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetCursor(wxCursor(wxCURSOR_SIZENS));</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentControlPoint<sp/>!=<sp/>none)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mControlPointMoveActivated)</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_scripting_1ade42ef48015fcded2eb15f341967ff47" kindref="member">dist</ref>;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurrentControlPoint<sp/>==<sp/>duckAmount)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>abs(evt.GetY()<sp/>-<sp/>mMouseDownPoint.y);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>abs(evt.GetX()<sp/>-<sp/>mMouseDownPoint.x);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&gt;=<sp/><ref refid="_auto_duck_8cpp_1afb98e6bf32cc7be29a96ef3bd81f2a78" kindref="member">CONTROL_POINT_MIN_MOVE</ref>)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mControlPointMoveActivated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mControlPointMoveActivated)</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newValue;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mCurrentControlPoint)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>outerFadeDown:</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newValue<sp/>=<sp/>((double)(<ref refid="_auto_duck_8cpp_1a2601c8b0cfe95e5e0610ddbe31dd76e2" kindref="member">FADE_DOWN_START</ref><sp/>-<sp/>evt.GetX()))<sp/>/<sp/><ref refid="_auto_duck_8cpp_1a5a3b6696316dadd7e6639da97a45177c" kindref="member">FADE_SCALE</ref>;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;mOuterFadeDownLen<sp/>=<sp/><ref refid="src_2effects_2_effect_8h_1a7b4f06966df2808cc2c40bd2b96d7447" kindref="member">TrapDouble</ref>(newValue,<sp/>MIN_OuterFadeDownLen,<sp/>MAX_OuterFadeDownLen);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>outerFadeUp:</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newValue<sp/>=<sp/>((double)(evt.GetX()<sp/>-<sp/><ref refid="_auto_duck_8cpp_1a49b4b2dc58a598009d3dd37ddc0b05a1" kindref="member">FADE_UP_START</ref>))<sp/>/<sp/><ref refid="_auto_duck_8cpp_1a5a3b6696316dadd7e6639da97a45177c" kindref="member">FADE_SCALE</ref>;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;mOuterFadeUpLen<sp/>=<sp/><ref refid="src_2effects_2_effect_8h_1a7b4f06966df2808cc2c40bd2b96d7447" kindref="member">TrapDouble</ref>(newValue,<sp/>MIN_OuterFadeUpLen,<sp/>MAX_OuterFadeUpLen);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>innerFadeDown:</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newValue<sp/>=<sp/>((double)(evt.GetX()<sp/>-<sp/><ref refid="_auto_duck_8cpp_1a2601c8b0cfe95e5e0610ddbe31dd76e2" kindref="member">FADE_DOWN_START</ref>))<sp/>/<sp/><ref refid="_auto_duck_8cpp_1a5a3b6696316dadd7e6639da97a45177c" kindref="member">FADE_SCALE</ref>;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;mInnerFadeDownLen<sp/>=<sp/><ref refid="src_2effects_2_effect_8h_1a7b4f06966df2808cc2c40bd2b96d7447" kindref="member">TrapDouble</ref>(newValue,<sp/>MIN_InnerFadeDownLen,<sp/>MAX_InnerFadeDownLen);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>innerFadeUp:</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newValue<sp/>=<sp/>((double)(<ref refid="_auto_duck_8cpp_1a49b4b2dc58a598009d3dd37ddc0b05a1" kindref="member">FADE_UP_START</ref><sp/>-<sp/>evt.GetX()))<sp/>/<sp/><ref refid="_auto_duck_8cpp_1a5a3b6696316dadd7e6639da97a45177c" kindref="member">FADE_SCALE</ref>;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;mInnerFadeUpLen<sp/>=<sp/><ref refid="src_2effects_2_effect_8h_1a7b4f06966df2808cc2c40bd2b96d7447" kindref="member">TrapDouble</ref>(newValue,<sp/>MIN_InnerFadeUpLen,<sp/>MAX_InnerFadeUpLen);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>duckAmount:</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newValue<sp/>=<sp/>((double)(<ref refid="_auto_duck_8cpp_1abe46772fa63e1b5ab4ac122a8b911725" kindref="member">DUCK_AMOUNT_START</ref><sp/>-<sp/>evt.GetY()))<sp/>/<sp/><ref refid="_auto_duck_8cpp_1abd740c71bbf17d18d412af3d172efde6" kindref="member">DUCK_AMOUNT_SCALE</ref>;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;mDuckAmountDb<sp/>=<sp/><ref refid="src_2effects_2_effect_8h_1a7b4f06966df2808cc2c40bd2b96d7447" kindref="member">TrapDouble</ref>(newValue,<sp/>MIN_DuckAmountDb,<sp/>MAX_DuckAmountDb);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>none:</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>should<sp/>not<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;TransferDataToWindow();</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp"/>
  </compounddef>
</doxygen>
