<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_delay_l_8cpp" kind="file" language="C++">
    <compoundname>DelayL.cpp</compoundname>
    <includes refid="_delay_l_8h" local="yes">DelayL.h</includes>
    <incdepgraph>
      <node id="14873">
        <label>Delay.h</label>
        <link refid="_delay_8h"/>
        <childnode refid="14874" relation="include">
        </childnode>
      </node>
      <node id="14871">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/DelayL.cpp</label>
        <link refid="DelayL.cpp"/>
        <childnode refid="14872" relation="include">
        </childnode>
      </node>
      <node id="14872">
        <label>DelayL.h</label>
        <link refid="_delay_l_8h"/>
        <childnode refid="14873" relation="include">
        </childnode>
      </node>
      <node id="14876">
        <label>string</label>
      </node>
      <node id="14879">
        <label>vector</label>
      </node>
      <node id="14874">
        <label>Filter.h</label>
        <link refid="libnyquist_2nyquist_2nyqstk_2include_2_filter_8h"/>
        <childnode refid="14875" relation="include">
        </childnode>
        <childnode refid="14879" relation="include">
        </childnode>
      </node>
      <node id="14878">
        <label>sstream</label>
      </node>
      <node id="14875">
        <label>Stk.h</label>
        <link refid="_stk_8h"/>
        <childnode refid="14876" relation="include">
        </childnode>
        <childnode refid="14877" relation="include">
        </childnode>
        <childnode refid="14878" relation="include">
        </childnode>
      </node>
      <node id="14877">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************/</highlight></codeline>
<codeline lineno="23"><highlight class="comment">/***************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_delay_l_8h" kindref="compound">DelayL.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_nyq" kindref="compound">Nyq</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_nyq_1_1_delay_l_1ac109de7df1c152d99253328c219c137f" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_delay_l_1ac109de7df1c152d99253328c219c137f" kindref="member">DelayL :: DelayL</ref>()<sp/>:<sp/><ref refid="class_nyq_1_1_delay" kindref="compound">Delay</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_l_1aacd4425cc72d8e118ff24d89551c021f" kindref="member">doNextOut_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_nyq_1_1_delay_l_1a7035e06a7a8b54e2520215b79e38bfe2" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_delay_l_1ac109de7df1c152d99253328c219c137f" kindref="member">DelayL :: DelayL</ref>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>delay,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_pit_shift_8cpp_1a1c8f8a7c16de309a72f07cddd0de0eb2" kindref="member">maxDelay</ref>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delay<sp/>&lt;<sp/>0.0<sp/>||<sp/>maxDelay<sp/>&lt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DelayL::DelayL:<sp/>delay<sp/>must<sp/>be<sp/>&gt;=<sp/>0.0,<sp/>maxDelay<sp/>must<sp/>be<sp/>&gt;<sp/>0!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a4339d7920a5723176c3d127f7e5aa96d" kindref="member">StkError::FUNCTION_ARGUMENT</ref><sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delay<sp/>&gt;<sp/>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref>)<sp/>maxDelay<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DelayL::DelayL:<sp/>maxDelay<sp/>must<sp/>be<sp/>&gt;<sp/>than<sp/>delay<sp/>argument!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a4339d7920a5723176c3d127f7e5aa96d" kindref="member">StkError::FUNCTION_ARGUMENT</ref><sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writing<sp/>before<sp/>reading<sp/>allows<sp/>delays<sp/>from<sp/>0<sp/>to<sp/>length-1.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>maxDelay<sp/>&gt;<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.size()-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.resize(<sp/>maxDelay+1<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_nyq_1_1_delay_1aaf915f5e3f9f5d1c1391459fb90a433f" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_1ac5deb6e923f40803da4dbfafc6d522ea" kindref="member">inPoint_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_nyq_1_1_delay_l_1a70c87c2ce4be2e2d97d573737805b583" kindref="member">setDelay</ref>(delay);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_l_1aacd4425cc72d8e118ff24d89551c021f" kindref="member">doNextOut_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_nyq_1_1_delay_l_1acb9069b7dcb8e2c4c15db2caa76aa731" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_delay_l_1acb9069b7dcb8e2c4c15db2caa76aa731" kindref="member">DelayL :: ~DelayL</ref>()</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_nyq_1_1_delay_l_1a70c87c2ce4be2e2d97d573737805b583" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_delay_l_1a70c87c2ce4be2e2d97d573737805b583" kindref="member">DelayL :: setDelay</ref>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>delay)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>outPointer;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delay<sp/>&gt;<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.size()<sp/>-<sp/>1<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>The<sp/>value<sp/>is<sp/>too<sp/>big.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DelayL::setDelay:<sp/>argument<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>delay<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>too<sp/>big<sp/>...<sp/>setting<sp/>to<sp/>maximum!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8acb482764c9cbdc9579619325193c75a8" kindref="member">StkError::WARNING</ref><sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>delay<sp/>to<sp/>maxLength</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>outPointer<sp/>=<sp/><ref refid="class_nyq_1_1_delay_1ac5deb6e923f40803da4dbfafc6d522ea" kindref="member">inPoint_</ref><sp/>+<sp/>1.0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_1af2a95a6acc9b4073b670e23994351699" kindref="member">delay_</ref><sp/>=<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delay<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DelayL::setDelay:<sp/>argument<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>delay<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>less<sp/>than<sp/>zero<sp/>...<sp/>setting<sp/>to<sp/>zero!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8acb482764c9cbdc9579619325193c75a8" kindref="member">StkError::WARNING</ref><sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>outPointer<sp/>=<sp/><ref refid="class_nyq_1_1_delay_1ac5deb6e923f40803da4dbfafc6d522ea" kindref="member">inPoint_</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_1af2a95a6acc9b4073b670e23994351699" kindref="member">delay_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>outPointer<sp/>=<sp/><ref refid="class_nyq_1_1_delay_1ac5deb6e923f40803da4dbfafc6d522ea" kindref="member">inPoint_</ref><sp/>-<sp/>delay;<sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>chases<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_1af2a95a6acc9b4073b670e23994351699" kindref="member">delay_</ref><sp/>=<sp/>delay;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(outPointer<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>outPointer<sp/>+=<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.size();<sp/></highlight><highlight class="comment">//<sp/>modulo<sp/>maximum<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref><sp/>=<sp/>(long)<sp/>outPointer;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>integer<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref><sp/>==<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.size()<sp/>)<sp/><ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_l_1aad0789a039a849f62fd78d3eb1c7e375" kindref="member">alpha_</ref><sp/>=<sp/>outPointer<sp/>-<sp/><ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref>;<sp/></highlight><highlight class="comment">//<sp/>fractional<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_l_1a6261bcfc6baacb48770c0c320da5fb82" kindref="member">omAlpha_</ref><sp/>=<sp/>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref>)<sp/>1.0<sp/>-<sp/><ref refid="class_nyq_1_1_delay_l_1aad0789a039a849f62fd78d3eb1c7e375" kindref="member">alpha_</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="class_nyq_1_1_delay_l_1ad87d848480a2bb8bb2d447cda27a20c5" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="class_nyq_1_1_delay_l_1ad87d848480a2bb8bb2d447cda27a20c5" kindref="member">DelayL :: getDelay</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="95"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_delay_1af2a95a6acc9b4073b670e23994351699" kindref="member">delay_</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_nyq_1_1_delay_l_1a1c22aca75c8c7f17bdb9e0cff705ce50" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="class_nyq_1_1_delay_l_1a1c22aca75c8c7f17bdb9e0cff705ce50" kindref="member">DelayL :: nextOut</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_nyq_1_1_delay_l_1aacd4425cc72d8e118ff24d89551c021f" kindref="member">doNextOut_</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>1/2<sp/>of<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_l_1a88f658bdf8c26ae2b104a6791d4fd3f1" kindref="member">nextOutput_</ref><sp/>=<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>[<ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref>]<sp/>*<sp/><ref refid="class_nyq_1_1_delay_l_1a6261bcfc6baacb48770c0c320da5fb82" kindref="member">omAlpha_</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Second<sp/>1/2<sp/>of<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref>+1<sp/>&lt;<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.size())</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_l_1a88f658bdf8c26ae2b104a6791d4fd3f1" kindref="member">nextOutput_</ref><sp/>+=<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>[<ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref>+1]<sp/>*<sp/><ref refid="class_nyq_1_1_delay_l_1aad0789a039a849f62fd78d3eb1c7e375" kindref="member">alpha_</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_l_1a88f658bdf8c26ae2b104a6791d4fd3f1" kindref="member">nextOutput_</ref><sp/>+=<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>[0]<sp/>*<sp/><ref refid="class_nyq_1_1_delay_l_1aad0789a039a849f62fd78d3eb1c7e375" kindref="member">alpha_</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_l_1aacd4425cc72d8e118ff24d89551c021f" kindref="member">doNextOut_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_delay_l_1a88f658bdf8c26ae2b104a6791d4fd3f1" kindref="member">nextOutput_</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_nyq_1_1_delay_l_1abd3962719237672dcd4712cb8cbc6575" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="class_nyq_1_1_delay_l_1abd3962719237672dcd4712cb8cbc6575" kindref="member">DelayL :: computeSample</ref>(<sp/><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>input<sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>[<ref refid="class_nyq_1_1_delay_1ac5deb6e923f40803da4dbfafc6d522ea" kindref="member">inPoint_</ref>++]<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>input<sp/>pointer<sp/>modulo<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_nyq_1_1_delay_1ac5deb6e923f40803da4dbfafc6d522ea" kindref="member">inPoint_</ref><sp/>==<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.size())</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_1ac5deb6e923f40803da4dbfafc6d522ea" kindref="member">inPoint_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>[0]<sp/>=<sp/><ref refid="class_nyq_1_1_delay_l_1a1c22aca75c8c7f17bdb9e0cff705ce50" kindref="member">nextOut</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_l_1aacd4425cc72d8e118ff24d89551c021f" kindref="member">doNextOut_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>output<sp/>pointer<sp/>modulo<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++<ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref><sp/>==<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.size())</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>[0];</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/DelayL.cpp"/>
  </compounddef>
</doxygen>
