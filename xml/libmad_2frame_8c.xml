<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="libmad_2frame_8c" kind="file" language="C++">
    <compoundname>frame.c</compoundname>
    <includes refid="libmad_2global_8h" local="yes">global.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="bit_8h" local="yes">bit.h</includes>
    <includes refid="stream_8h" local="yes">stream.h</includes>
    <includes refid="libmad_2frame_8h" local="yes">frame.h</includes>
    <includes refid="timer_8h" local="yes">timer.h</includes>
    <includes refid="layer12_8h" local="yes">layer12.h</includes>
    <includes refid="layer3_8h" local="yes">layer3.h</includes>
    <incdepgraph>
      <node id="10139">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c</label>
        <link refid="libmad/frame.c"/>
        <childnode refid="10140" relation="include">
        </childnode>
        <childnode refid="10141" relation="include">
        </childnode>
        <childnode refid="10142" relation="include">
        </childnode>
        <childnode refid="10143" relation="include">
        </childnode>
        <childnode refid="10144" relation="include">
        </childnode>
        <childnode refid="10146" relation="include">
        </childnode>
        <childnode refid="10147" relation="include">
        </childnode>
        <childnode refid="10148" relation="include">
        </childnode>
      </node>
      <node id="10144">
        <label>frame.h</label>
        <link refid="libmad_2frame_8h"/>
        <childnode refid="10145" relation="include">
        </childnode>
        <childnode refid="10146" relation="include">
        </childnode>
        <childnode refid="10143" relation="include">
        </childnode>
      </node>
      <node id="10141">
        <label>stdlib.h</label>
      </node>
      <node id="10142">
        <label>bit.h</label>
        <link refid="bit_8h"/>
      </node>
      <node id="10140">
        <label>global.h</label>
        <link refid="libmad_2global_8h"/>
      </node>
      <node id="10143">
        <label>stream.h</label>
        <link refid="stream_8h"/>
        <childnode refid="10142" relation="include">
        </childnode>
      </node>
      <node id="10146">
        <label>timer.h</label>
        <link refid="timer_8h"/>
      </node>
      <node id="10147">
        <label>layer12.h</label>
        <link refid="layer12_8h"/>
        <childnode refid="10143" relation="include">
        </childnode>
        <childnode refid="10144" relation="include">
        </childnode>
      </node>
      <node id="10148">
        <label>layer3.h</label>
        <link refid="layer3_8h"/>
        <childnode refid="10143" relation="include">
        </childnode>
        <childnode refid="10144" relation="include">
        </childnode>
      </node>
      <node id="10145">
        <label>fixed.h</label>
        <link refid="libmad_2fixed_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="libmad_2frame_8c_1af6939134755d96372e19ca376b6a52c0" prot="public" static="yes" mutable="no">
        <type>unsigned long <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref></type>
        <definition>unsigned long const bitrate_table[5][15]</definition>
        <argsstring>[5][15]</argsstring>
        <name>bitrate_table</name>
        <initializer>= {
  
  { 0,  32000,  64000,  96000, 128000, 160000, 192000, 224000,  
       256000, 288000, 320000, 352000, 384000, 416000, 448000 },
  { 0,  32000,  48000,  56000,  64000,  80000,  96000, 112000,  
       128000, 160000, 192000, 224000, 256000, 320000, 384000 },
  { 0,  32000,  40000,  48000,  56000,  64000,  80000,  96000,  
       112000, 128000, 160000, 192000, 224000, 256000, 320000 },

  
  { 0,  32000,  48000,  56000,  64000,  80000,  96000, 112000,  
       128000, 144000, 160000, 176000, 192000, 224000, 256000 },
  { 0,   8000,  16000,  24000,  32000,  40000,  48000,  56000,  
        64000,  80000,  96000, 112000, 128000, 144000, 160000 } 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="libmad_2frame_8c_1a32e301f85234c0ed338655e9daa461eb" prot="public" static="yes" mutable="no">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref></type>
        <definition>unsigned int const samplerate_table[3]</definition>
        <argsstring>[3]</argsstring>
        <name>samplerate_table</name>
        <initializer>= { 44100, 48000, 32000 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" line="55" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="libmad_2frame_8c_1a403e14eaf2af6aefe025e2e4530fac75" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref></type>
        <definition>int(*const decoder_table[3])(struct mad_stream *, struct mad_frame *)</definition>
        <argsstring>[3])(struct mad_stream *, struct mad_frame *)</argsstring>
        <name>decoder_table</name>
        <initializer>= {
  <ref refid="layer12_8h_1a5a8aefe25dd116b84d081fcf395549ff" kindref="member">mad_layer_I</ref>,
  <ref refid="layer12_8h_1a88dc7db9eb6a9a04fb2a0993fc0571f6" kindref="member">mad_layer_II</ref>,
  <ref refid="layer3_8h_1a2d21d6cf7063ab06cf44b7d4232e4fb2" kindref="member">mad_layer_III</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="libmad_2frame_8c_1a5debb670b4ea5e1976eb9e923aac1541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void mad_header_init</definition>
        <argsstring>(struct mad_header *header)</argsstring>
        <name>mad_header_init</name>
        <param>
          <type>struct <ref refid="structmad__header" kindref="compound">mad_header</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" bodystart="68" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="libmad_2frame_8c_1a7f710d89a63ed918b1a0026e066a66c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void mad_frame_init</definition>
        <argsstring>(struct mad_frame *frame)</argsstring>
        <name>mad_frame_init</name>
        <param>
          <type>struct <ref refid="structmad__frame" kindref="compound">mad_frame</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" line="91" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" bodystart="91" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="libmad_2frame_8c_1a05ae14ebfe3b12e2746b1cf21d047aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void mad_frame_finish</definition>
        <argsstring>(struct mad_frame *frame)</argsstring>
        <name>mad_frame_finish</name>
        <param>
          <type>struct <ref refid="structmad__frame" kindref="compound">mad_frame</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" line="105" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" bodystart="105" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="libmad_2frame_8c_1a5d195edfe14d0445d0ce0611f744311e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int decode_header</definition>
        <argsstring>(struct mad_header *header, struct mad_stream *stream)</argsstring>
        <name>decode_header</name>
        <param>
          <type>struct <ref refid="structmad__header" kindref="compound">mad_header</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>struct <ref refid="structmad__stream" kindref="compound">mad_stream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" line="120" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" bodystart="120" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="libmad_2frame_8c_1abd2e2fa1337ccecfc94accfe0205cbc7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int free_bitrate</definition>
        <argsstring>(struct mad_stream *stream, struct mad_header const *header)</argsstring>
        <name>free_bitrate</name>
        <param>
          <type>struct <ref refid="structmad__stream" kindref="compound">mad_stream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>struct <ref refid="structmad__header" kindref="compound">mad_header</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" line="239" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" bodystart="239" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="libmad_2frame_8c_1a2121fb34306c8e948221be38253b38e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int mad_header_decode</definition>
        <argsstring>(struct mad_header *header, struct mad_stream *stream)</argsstring>
        <name>mad_header_decode</name>
        <param>
          <type>struct <ref refid="structmad__header" kindref="compound">mad_header</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>struct <ref refid="structmad__stream" kindref="compound">mad_stream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" line="300" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" bodystart="300" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="libmad_2frame_8c_1ada815bd56a3e1b4d4af2e99f592866ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int mad_frame_decode</definition>
        <argsstring>(struct mad_frame *frame, struct mad_stream *stream)</argsstring>
        <name>mad_frame_decode</name>
        <param>
          <type>struct <ref refid="structmad__frame" kindref="compound">mad_frame</ref> *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>struct <ref refid="structmad__stream" kindref="compound">mad_stream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" line="438" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" bodystart="438" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="libmad_2frame_8c_1adbcf0be1952f90369a6969d7008e8e47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void mad_frame_mute</definition>
        <argsstring>(struct mad_frame *frame)</argsstring>
        <name>mad_frame_mute</name>
        <param>
          <type>struct <ref refid="structmad__frame" kindref="compound">mad_frame</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" line="484" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c" bodystart="484" bodyend="503"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>libmad<sp/>-<sp/>MPEG<sp/>audio<sp/>decoder<sp/>library</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2000-2004<sp/>Underbit<sp/>Technologies,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>frame.c,v<sp/>1.2<sp/>2005-09-12<sp/>07:01:30<sp/>dmazzoni<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="libmad_2global_8h" kindref="compound">global.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="bit_8h" kindref="compound">bit.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="stream_8h" kindref="compound">stream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="libmad_2frame_8h" kindref="compound">frame.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="timer_8h" kindref="compound">timer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="layer12_8h" kindref="compound">layer12.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="layer3_8h" kindref="compound">layer3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lame_8h_1a324239d9eaba0645a7fb9fd9e272ae2d" kindref="member">bitrate_table</ref>[5][15]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>MPEG-1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>{<sp/>0,<sp/><sp/>32000,<sp/><sp/>64000,<sp/><sp/>96000,<sp/>128000,<sp/>160000,<sp/>192000,<sp/>224000,<sp/><sp/></highlight><highlight class="comment">/*<sp/>Layer<sp/>I<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>256000,<sp/>288000,<sp/>320000,<sp/>352000,<sp/>384000,<sp/>416000,<sp/>448000<sp/>},</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{<sp/>0,<sp/><sp/>32000,<sp/><sp/>48000,<sp/><sp/>56000,<sp/><sp/>64000,<sp/><sp/>80000,<sp/><sp/>96000,<sp/>112000,<sp/><sp/></highlight><highlight class="comment">/*<sp/>Layer<sp/>II<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128000,<sp/>160000,<sp/>192000,<sp/>224000,<sp/>256000,<sp/>320000,<sp/>384000<sp/>},</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>{<sp/>0,<sp/><sp/>32000,<sp/><sp/>40000,<sp/><sp/>48000,<sp/><sp/>56000,<sp/><sp/>64000,<sp/><sp/>80000,<sp/><sp/>96000,<sp/><sp/></highlight><highlight class="comment">/*<sp/>Layer<sp/>III<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>112000,<sp/>128000,<sp/>160000,<sp/>192000,<sp/>224000,<sp/>256000,<sp/>320000<sp/>},</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>MPEG-2<sp/>LSF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{<sp/>0,<sp/><sp/>32000,<sp/><sp/>48000,<sp/><sp/>56000,<sp/><sp/>64000,<sp/><sp/>80000,<sp/><sp/>96000,<sp/>112000,<sp/><sp/></highlight><highlight class="comment">/*<sp/>Layer<sp/>I<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128000,<sp/>144000,<sp/>160000,<sp/>176000,<sp/>192000,<sp/>224000,<sp/>256000<sp/>},</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>{<sp/>0,<sp/><sp/><sp/>8000,<sp/><sp/>16000,<sp/><sp/>24000,<sp/><sp/>32000,<sp/><sp/>40000,<sp/><sp/>48000,<sp/><sp/>56000,<sp/><sp/></highlight><highlight class="comment">/*<sp/>Layers<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>64000,<sp/><sp/>80000,<sp/><sp/>96000,<sp/>112000,<sp/>128000,<sp/>144000,<sp/>160000<sp/>}<sp/></highlight><highlight class="comment">/*<sp/>II<sp/>&amp;<sp/>III<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lame_8h_1ab3f3a3fdea335efb0d51a75a6a9bcb80" kindref="member">samplerate_table</ref>[3]<sp/>=<sp/>{<sp/>44100,<sp/>48000,<sp/>32000<sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>decoder_table[3])(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__frame" kindref="compound">mad_frame</ref><sp/>*)<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="layer12_8c_1addf1465dacfe2ad0539442f426528f57" kindref="member">mad_layer_I</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="layer12_8c_1a80759b0311c429b4b7521b514c8b5f89" kindref="member">mad_layer_II</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="layer3_8c_1ad1d86c6f04764597294113498fc311f7" kindref="member">mad_layer_III</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>NAME:<sp/><sp/><sp/><sp/>header-&gt;init()</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>DESCRIPTION:<sp/>initialize<sp/>header<sp/>struct</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="mac_2config_2i386_2lib-src_2libmad_2mad_8h_1a5e6a310d0e929761f5498bf7a7f23566" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libmad_2frame_8c_1a5debb670b4ea5e1976eb9e923aac1541" kindref="member">mad_header_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__header" kindref="compound">mad_header</ref><sp/>*<ref refid="structmad__frame_1a65c2d01fcd43fefff994d61c55433307" kindref="member">header</ref>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1a766a554a9ab575209f4bbd595e4f942c" kindref="member">mode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1a1ba44705779d2ce1160f092cd3d2a158" kindref="member">mode_extension</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1a355a4e10075f8304c7533998bef268a2" kindref="member">emphasis</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1aa26b0a9c946065e7b39df10c4e8f3995" kindref="member">bitrate</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1ac6ca4dc0cbab5c4a7014bb8c26b9d06e" kindref="member">samplerate</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1a8ea6796703f278702c76098af6ccd762" kindref="member">crc_check</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1a56c1726d166d76d55ee09fb681f1ace9" kindref="member">crc_target</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1a420fd7325353f23c81192a0cc7adbf1b" kindref="member">private_bits</ref><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1a44026fde9a7e3bef31a901c3ae5e1268" kindref="member">duration</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a99b7db3d65e6508fc9952f421c08e6a6" kindref="member">mad_timer_zero</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>NAME:<sp/><sp/><sp/><sp/>frame-&gt;init()</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>DESCRIPTION:<sp/>initialize<sp/>frame<sp/>struct</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="mac_2config_2i386_2lib-src_2libmad_2mad_8h_1a3c78ba961e454462c18cfeba70d1137c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libmad_2frame_8c_1a7f710d89a63ed918b1a0026e066a66c9" kindref="member">mad_frame_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__frame" kindref="compound">mad_frame</ref><sp/>*frame)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="libmad_2frame_8c_1a5debb670b4ea5e1976eb9e923aac1541" kindref="member">mad_header_init</ref>(&amp;frame-&gt;<ref refid="structmad__frame_1a65c2d01fcd43fefff994d61c55433307" kindref="member">header</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>frame-&gt;<ref refid="structmad__frame_1a9a7cdd4253810f2ec5ff5bace7144e53" kindref="member">options</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>frame-&gt;<ref refid="structmad__frame_1afc8e2e262968a482023531799e2c8d2e" kindref="member">overlap</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="libmad_2frame_8c_1adbcf0be1952f90369a6969d7008e8e47" kindref="member">mad_frame_mute</ref>(frame);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>NAME:<sp/><sp/><sp/><sp/>frame-&gt;finish()</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>DESCRIPTION:<sp/>deallocate<sp/>any<sp/>dynamic<sp/>memory<sp/>associated<sp/>with<sp/>frame</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="mac_2config_2i386_2lib-src_2libmad_2mad_8h_1a92fbcef46fd20f35426f5ad0853a8649" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libmad_2frame_8c_1a05ae14ebfe3b12e2746b1cf21d047aa2" kindref="member">mad_frame_finish</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__frame" kindref="compound">mad_frame</ref><sp/>*frame)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="libmad_2frame_8h_1a007c83550e5d338c294c9ba573612556" kindref="member">mad_header_finish</ref>(&amp;frame-&gt;<ref refid="structmad__frame_1a65c2d01fcd43fefff994d61c55433307" kindref="member">header</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame-&gt;<ref refid="structmad__frame_1afc8e2e262968a482023531799e2c8d2e" kindref="member">overlap</ref>)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>free(frame-&gt;<ref refid="structmad__frame_1afc8e2e262968a482023531799e2c8d2e" kindref="member">overlap</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>frame-&gt;<ref refid="structmad__frame_1afc8e2e262968a482023531799e2c8d2e" kindref="member">overlap</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>NAME:<sp/><sp/><sp/><sp/>decode_header()</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>DESCRIPTION:<sp/>read<sp/>header<sp/>data<sp/>and<sp/>following<sp/>CRC<sp/>word</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decode_header(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__header" kindref="compound">mad_header</ref><sp/>*<ref refid="structmad__frame_1a65c2d01fcd43fefff994d61c55433307" kindref="member">header</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/>*stream)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1a420fd7325353f23c81192a0cc7adbf1b" kindref="member">private_bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>header()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>syncword<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="bit_8c_1a058df638af296aac7efdd525ff327066" kindref="member">mad_bit_skip</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>11);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>MPEG<sp/>2.5<sp/>indicator<sp/>(really<sp/>part<sp/>of<sp/>syncword)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bit_8c_1a11655f4eef6b968f59ffcc2f0e18767c" kindref="member">mad_bit_read</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>1)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>|=<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051eaa3a9b72a0bc8246559527bdd3e368caa" kindref="member">MAD_FLAG_MPEG_2_5_EXT</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>ID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bit_8c_1a11655f4eef6b968f59ffcc2f0e18767c" kindref="member">mad_bit_read</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>1)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>|=<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051ea3acf380d524284c96b17b4566bab6a29" kindref="member">MAD_FLAG_LSF_EXT</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051eaa3a9b72a0bc8246559527bdd3e368caa" kindref="member">MAD_FLAG_MPEG_2_5_EXT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1ac9a8e6b43a422325e581d73d28bb538a" kindref="member">error</ref><sp/>=<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a03f249e372a63a329b780307f4e2c2dfafaf0f360cb3d728085d86abaa39a67a8" kindref="member">MAD_ERROR_LOSTSYNC</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>layer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/>=<sp/>4<sp/>-<sp/><ref refid="bit_8c_1a11655f4eef6b968f59ffcc2f0e18767c" kindref="member">mad_bit_read</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1ac9a8e6b43a422325e581d73d28bb538a" kindref="member">error</ref><sp/>=<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a03f249e372a63a329b780307f4e2c2dfa5fa12043a1626a60761a0740de5c40b9" kindref="member">MAD_ERROR_BADLAYER</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>protection_bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bit_8c_1a11655f4eef6b968f59ffcc2f0e18767c" kindref="member">mad_bit_read</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>1)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/><sp/><sp/><sp/>|=<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051ea2cf90693fcae6053976907946cfa5b9f" kindref="member">MAD_FLAG_PROTECTION</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1a8ea6796703f278702c76098af6ccd762" kindref="member">crc_check</ref><sp/>=<sp/><ref refid="bit_8c_1a138aa4083765054f0ae501be5872a03c" kindref="member">mad_bit_crc</ref>(stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>16,<sp/>0xffff);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>bitrate_index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>index<sp/>=<sp/><ref refid="bit_8c_1a11655f4eef6b968f59ffcc2f0e18767c" kindref="member">mad_bit_read</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1ac9a8e6b43a422325e581d73d28bb538a" kindref="member">error</ref><sp/>=<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a03f249e372a63a329b780307f4e2c2dfa44ec86353ebd317806d0ae3d6a7448de" kindref="member">MAD_ERROR_BADBITRATE</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051ea3acf380d524284c96b17b4566bab6a29" kindref="member">MAD_FLAG_LSF_EXT</ref>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1aa26b0a9c946065e7b39df10c4e8f3995" kindref="member">bitrate</ref><sp/>=<sp/><ref refid="lame_8h_1a324239d9eaba0645a7fb9fd9e272ae2d" kindref="member">bitrate_table</ref>[3<sp/>+<sp/>(header-&gt;<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/>&gt;&gt;<sp/>1)][index];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1aa26b0a9c946065e7b39df10c4e8f3995" kindref="member">bitrate</ref><sp/>=<sp/><ref refid="lame_8h_1a324239d9eaba0645a7fb9fd9e272ae2d" kindref="member">bitrate_table</ref>[header-&gt;<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/>-<sp/>1][index];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>sampling_frequency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>index<sp/>=<sp/><ref refid="bit_8c_1a11655f4eef6b968f59ffcc2f0e18767c" kindref="member">mad_bit_read</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1ac9a8e6b43a422325e581d73d28bb538a" kindref="member">error</ref><sp/>=<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a03f249e372a63a329b780307f4e2c2dfa5941bcb25e752771be4bcdbfcd63ed31" kindref="member">MAD_ERROR_BADSAMPLERATE</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1ac6ca4dc0cbab5c4a7014bb8c26b9d06e" kindref="member">samplerate</ref><sp/>=<sp/><ref refid="lame_8h_1ab3f3a3fdea335efb0d51a75a6a9bcb80" kindref="member">samplerate_table</ref>[index];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051ea3acf380d524284c96b17b4566bab6a29" kindref="member">MAD_FLAG_LSF_EXT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1ac6ca4dc0cbab5c4a7014bb8c26b9d06e" kindref="member">samplerate</ref><sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051eaa3a9b72a0bc8246559527bdd3e368caa" kindref="member">MAD_FLAG_MPEG_2_5_EXT</ref>)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1ac6ca4dc0cbab5c4a7014bb8c26b9d06e" kindref="member">samplerate</ref><sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>padding_bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bit_8c_1a11655f4eef6b968f59ffcc2f0e18767c" kindref="member">mad_bit_read</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>1))</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>|=<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051eaa9a2e6e1d049687af7403b89f390c1eb" kindref="member">MAD_FLAG_PADDING</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>private_bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bit_8c_1a11655f4eef6b968f59ffcc2f0e18767c" kindref="member">mad_bit_read</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>1))</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1a420fd7325353f23c81192a0cc7adbf1b" kindref="member">private_bits</ref><sp/>|=<sp/><ref refid="libmad_2frame_8h_1a79e9f285d34216706a748fd7ba8941b7a0ff8b422c34ae6b5e18445b9a6d29cca" kindref="member">MAD_PRIVATE_HEADER</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1a766a554a9ab575209f4bbd595e4f942c" kindref="member">mode</ref><sp/>=<sp/>3<sp/>-<sp/><ref refid="bit_8c_1a11655f4eef6b968f59ffcc2f0e18767c" kindref="member">mad_bit_read</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>mode_extension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1a1ba44705779d2ce1160f092cd3d2a158" kindref="member">mode_extension</ref><sp/>=<sp/><ref refid="bit_8c_1a11655f4eef6b968f59ffcc2f0e18767c" kindref="member">mad_bit_read</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>copyright<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bit_8c_1a11655f4eef6b968f59ffcc2f0e18767c" kindref="member">mad_bit_read</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>1))</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>|=<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051eaba41e9f06dea6efda3812ba4f9880496" kindref="member">MAD_FLAG_COPYRIGHT</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>original/copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bit_8c_1a11655f4eef6b968f59ffcc2f0e18767c" kindref="member">mad_bit_read</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>1))</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>|=<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051ea806925be9c77d407598b38913527dff9" kindref="member">MAD_FLAG_ORIGINAL</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>emphasis<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1a355a4e10075f8304c7533998bef268a2" kindref="member">emphasis</ref><sp/>=<sp/><ref refid="bit_8c_1a11655f4eef6b968f59ffcc2f0e18767c" kindref="member">mad_bit_read</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(OPT_STRICT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/>*<sp/>ISO/IEC<sp/>11172-3<sp/>says<sp/>this<sp/>is<sp/>a<sp/>reserved<sp/>emphasis<sp/>value,<sp/>but</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/>*<sp/>streams<sp/>exist<sp/>which<sp/>use<sp/>it<sp/>anyway.<sp/>Since<sp/>the<sp/>value<sp/>is<sp/>not<sp/>important</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>decoder<sp/>proper,<sp/>we<sp/>allow<sp/>it<sp/>unless<sp/>OPT_STRICT<sp/>is<sp/>defined.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structmad__header_1a355a4e10075f8304c7533998bef268a2" kindref="member">emphasis</ref><sp/>==<sp/><ref refid="libmad_2frame_8h_1a5c0ea84f562e9b8a2ba78bb32dba48d8ad9b9a315730768fc6fbbd110099598da" kindref="member">MAD_EMPHASIS_RESERVED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1ac9a8e6b43a422325e581d73d28bb538a" kindref="member">error</ref><sp/>=<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a03f249e372a63a329b780307f4e2c2dfaf544c615ce2fea480cbb8b4acf1c9f9f" kindref="member">MAD_ERROR_BADEMPHASIS</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>error_check()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>crc_check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051ea2cf90693fcae6053976907946cfa5b9f" kindref="member">MAD_FLAG_PROTECTION</ref>)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1a56c1726d166d76d55ee09fb681f1ace9" kindref="member">crc_target</ref><sp/>=<sp/><ref refid="bit_8c_1a11655f4eef6b968f59ffcc2f0e18767c" kindref="member">mad_bit_read</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>16);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/>NAME:<sp/><sp/><sp/><sp/>free_bitrate()</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>DESCRIPTION:<sp/>attempt<sp/>to<sp/>discover<sp/>the<sp/>bitstream&apos;s<sp/>free<sp/>bitrate</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>free_bitrate(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/>*stream,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__header" kindref="compound">mad_header</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*header)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__bitptr" kindref="compound">mad_bitptr</ref><sp/>keep_ptr;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_slot,<sp/>slots_per_frame;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>keep_ptr<sp/>=<sp/>stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>pad_slot<sp/>=<sp/>(header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051eaa9a2e6e1d049687af7403b89f390c1eb" kindref="member">MAD_FLAG_PADDING</ref>)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>slots_per_frame<sp/>=<sp/>(header-&gt;<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/>==<sp/><ref refid="libmad_2frame_8h_1abbd9de27e20bcf285c28ee515548d650a851195f014842ded957735128be78f0f" kindref="member">MAD_LAYER_III</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051ea3acf380d524284c96b17b4566bab6a29" kindref="member">MAD_FLAG_LSF_EXT</ref>))<sp/>?<sp/>72<sp/>:<sp/>144;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a57761cd21ad16f10dde3c0b3e6ad2d95" kindref="member">mad_stream_sync</ref>(stream)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/>peek_stream;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__header" kindref="compound">mad_header</ref><sp/>peek_header;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>peek_stream<sp/>=<sp/>*stream;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>peek_header<sp/>=<sp/>*header;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decode_header(&amp;peek_header,<sp/>&amp;peek_stream)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>peek_header.<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/>==<sp/>header-&gt;<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>peek_header.<ref refid="structmad__header_1ac6ca4dc0cbab5c4a7014bb8c26b9d06e" kindref="member">samplerate</ref><sp/>==<sp/>header-&gt;<ref refid="structmad__header_1ac6ca4dc0cbab5c4a7014bb8c26b9d06e" kindref="member">samplerate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/><ref refid="bit_8c_1a566f5f7058df278bdfb7970d3f939ef7" kindref="member">mad_bit_nextbyte</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=<sp/>ptr<sp/>-<sp/>stream-&gt;<ref refid="structmad__stream_1a7618e13aaba1d5817d30f3aea45a3c3c" kindref="member">this_frame</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/>==<sp/><ref refid="libmad_2frame_8h_1abbd9de27e20bcf285c28ee515548d650ab7cc72d7876cff555f4df5209ab2cf29" kindref="member">MAD_LAYER_I</ref>)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>rate<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)<sp/>header-&gt;<ref refid="structmad__header_1ac6ca4dc0cbab5c4a7014bb8c26b9d06e" kindref="member">samplerate</ref><sp/>*</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(N<sp/>-<sp/>4<sp/>*<sp/>pad_slot<sp/>+<sp/>4)<sp/>/<sp/>48<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>rate<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)<sp/>header-&gt;<ref refid="structmad__header_1ac6ca4dc0cbab5c4a7014bb8c26b9d06e" kindref="member">samplerate</ref><sp/>*</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(N<sp/>-<sp/>pad_slot<sp/>+<sp/>1)<sp/>/<sp/>slots_per_frame<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rate<sp/>&gt;=<sp/>8)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bit_8c_1a058df638af296aac7efdd525ff327066" kindref="member">mad_bit_skip</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref><sp/>=<sp/>keep_ptr;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rate<sp/>&lt;<sp/>8<sp/>||<sp/>(header-&gt;<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/>==<sp/><ref refid="libmad_2frame_8h_1abbd9de27e20bcf285c28ee515548d650a851195f014842ded957735128be78f0f" kindref="member">MAD_LAYER_III</ref><sp/>&amp;&amp;<sp/>rate<sp/>&gt;<sp/>640))<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1ac9a8e6b43a422325e581d73d28bb538a" kindref="member">error</ref><sp/>=<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a03f249e372a63a329b780307f4e2c2dfafaf0f360cb3d728085d86abaa39a67a8" kindref="member">MAD_ERROR_LOSTSYNC</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1a28a048e98187e7ba0225f76136a1d295" kindref="member">freerate</ref><sp/>=<sp/>rate<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*<sp/>NAME:<sp/><sp/><sp/><sp/>header-&gt;decode()</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/>DESCRIPTION:<sp/>read<sp/>the<sp/>next<sp/>frame<sp/>header<sp/>from<sp/>the<sp/>stream</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="mac_2config_2i386_2lib-src_2libmad_2mad_8h_1ac98c06c5e85cb8c0842b0383096f9ee9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libmad_2frame_8c_1a2121fb34306c8e948221be38253b38e2" kindref="member">mad_header_decode</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__header" kindref="compound">mad_header</ref><sp/>*header,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/>*stream)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*ptr,<sp/>*<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_slot,<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>ptr<sp/>=<sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>end<sp/>=<sp/>stream-&gt;<ref refid="structmad__stream_1ade2600fa5c62b5ea540c592ed5b4823c" kindref="member">bufend</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1ac9a8e6b43a422325e581d73d28bb538a" kindref="member">error</ref><sp/>=<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a03f249e372a63a329b780307f4e2c2dfa784e0bae3549783d321b0701c25d9860" kindref="member">MAD_ERROR_BUFPTR</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>stream<sp/>skip<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stream-&gt;<ref refid="structmad__stream_1a380775f9816d642c8de9eb0f80b6ac01" kindref="member">skiplen</ref>)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stream-&gt;<ref refid="structmad__stream_1a1f11c60768caff2595ce4c94b1172d5a" kindref="member">sync</ref>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>stream-&gt;<ref refid="structmad__stream_1a7618e13aaba1d5817d30f3aea45a3c3c" kindref="member">this_frame</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>-<sp/>ptr<sp/>&lt;<sp/>stream-&gt;skiplen)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1a380775f9816d642c8de9eb0f80b6ac01" kindref="member">skiplen</ref><sp/><sp/><sp/>-=<sp/>end<sp/>-<sp/>ptr;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref><sp/>=<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1ac9a8e6b43a422325e581d73d28bb538a" kindref="member">error</ref><sp/>=<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a03f249e372a63a329b780307f4e2c2dfaacda66fa6ae5e8a953ef1a4a9ea90319" kindref="member">MAD_ERROR_BUFLEN</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>stream-&gt;<ref refid="structmad__stream_1a380775f9816d642c8de9eb0f80b6ac01" kindref="member">skiplen</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1a380775f9816d642c8de9eb0f80b6ac01" kindref="member">skiplen</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1a1f11c60768caff2595ce4c94b1172d5a" kindref="member">sync</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/>sync:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>synchronize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stream-&gt;<ref refid="structmad__stream_1a1f11c60768caff2595ce4c94b1172d5a" kindref="member">sync</ref>)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>-<sp/>ptr<sp/>&lt;<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a39eef28d796acc4a186bb06e1171f882" kindref="member">MAD_BUFFER_GUARD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref><sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1ac9a8e6b43a422325e581d73d28bb538a" kindref="member">error</ref><sp/>=<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a03f249e372a63a329b780307f4e2c2dfaacda66fa6ae5e8a953ef1a4a9ea90319" kindref="member">MAD_ERROR_BUFLEN</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(ptr[0]<sp/>==<sp/>0xff<sp/>&amp;&amp;<sp/>(ptr[1]<sp/>&amp;<sp/>0xe0)<sp/>==<sp/>0xe0))<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mark<sp/>point<sp/>where<sp/>frame<sp/>sync<sp/>word<sp/>was<sp/>expected<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1a7618e13aaba1d5817d30f3aea45a3c3c" kindref="member">this_frame</ref><sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref><sp/>=<sp/>ptr<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1ac9a8e6b43a422325e581d73d28bb538a" kindref="member">error</ref><sp/>=<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a03f249e372a63a329b780307f4e2c2dfafaf0f360cb3d728085d86abaa39a67a8" kindref="member">MAD_ERROR_LOSTSYNC</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bit_8c_1a123dabe76966366b4862de11981384b1" kindref="member">mad_bit_init</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>ptr);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a57761cd21ad16f10dde3c0b3e6ad2d95" kindref="member">mad_stream_sync</ref>(stream)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>-<sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref><sp/>&gt;=<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a39eef28d796acc4a186bb06e1171f882" kindref="member">MAD_BUFFER_GUARD</ref>)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref><sp/>=<sp/>end<sp/>-<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a39eef28d796acc4a186bb06e1171f882" kindref="member">MAD_BUFFER_GUARD</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1ac9a8e6b43a422325e581d73d28bb538a" kindref="member">error</ref><sp/>=<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a03f249e372a63a329b780307f4e2c2dfaacda66fa6ae5e8a953ef1a4a9ea90319" kindref="member">MAD_ERROR_BUFLEN</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/><ref refid="bit_8c_1a566f5f7058df278bdfb7970d3f939ef7" kindref="member">mad_bit_nextbyte</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>begin<sp/>processing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1a7618e13aaba1d5817d30f3aea45a3c3c" kindref="member">this_frame</ref><sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref><sp/>=<sp/>ptr<sp/>+<sp/>1;<sp/><sp/></highlight><highlight class="comment">/*<sp/>possibly<sp/>bogus<sp/>sync<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="bit_8c_1a123dabe76966366b4862de11981384b1" kindref="member">mad_bit_init</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>stream-&gt;<ref refid="structmad__stream_1a7618e13aaba1d5817d30f3aea45a3c3c" kindref="member">this_frame</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decode_header(header,<sp/>stream)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>frame<sp/>duration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a27bfecee054e0d86ce736cdb129a6531" kindref="member">mad_timer_set</ref>(&amp;header-&gt;<ref refid="structmad__header_1a44026fde9a7e3bef31a901c3ae5e1268" kindref="member">duration</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32<sp/>*<sp/><ref refid="libmad_2frame_8h_1a4bbe44f918d4b0afdaaef82741ae924d" kindref="member">MAD_NSBSAMPLES</ref>(header),<sp/>header-&gt;<ref refid="structmad__header_1ac6ca4dc0cbab5c4a7014bb8c26b9d06e" kindref="member">samplerate</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>free<sp/>bit<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structmad__header_1aa26b0a9c946065e7b39df10c4e8f3995" kindref="member">bitrate</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((stream-&gt;<ref refid="structmad__stream_1a28a048e98187e7ba0225f76136a1d295" kindref="member">freerate</ref><sp/>==<sp/>0<sp/>||<sp/>!stream-&gt;<ref refid="structmad__stream_1a1f11c60768caff2595ce4c94b1172d5a" kindref="member">sync</ref><sp/>||</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(header-&gt;<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/>==<sp/><ref refid="libmad_2frame_8h_1abbd9de27e20bcf285c28ee515548d650a851195f014842ded957735128be78f0f" kindref="member">MAD_LAYER_III</ref><sp/>&amp;&amp;<sp/>stream-&gt;<ref refid="structmad__stream_1a28a048e98187e7ba0225f76136a1d295" kindref="member">freerate</ref><sp/>&gt;<sp/>640000))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>free_bitrate(stream,<sp/>header)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1aa26b0a9c946065e7b39df10c4e8f3995" kindref="member">bitrate</ref><sp/>=<sp/>stream-&gt;<ref refid="structmad__stream_1a28a048e98187e7ba0225f76136a1d295" kindref="member">freerate</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/><sp/>|=<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051ea52b9f7065011b92f10e94ae52e31049b" kindref="member">MAD_FLAG_FREEFORMAT</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>beginning<sp/>of<sp/>next<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>pad_slot<sp/>=<sp/>(header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051eaa9a2e6e1d049687af7403b89f390c1eb" kindref="member">MAD_FLAG_PADDING</ref>)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/>==<sp/><ref refid="libmad_2frame_8h_1abbd9de27e20bcf285c28ee515548d650ab7cc72d7876cff555f4df5209ab2cf29" kindref="member">MAD_LAYER_I</ref>)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>=<sp/>((12<sp/>*<sp/>header-&gt;<ref refid="structmad__header_1aa26b0a9c946065e7b39df10c4e8f3995" kindref="member">bitrate</ref><sp/>/<sp/>header-&gt;<ref refid="structmad__header_1ac6ca4dc0cbab5c4a7014bb8c26b9d06e" kindref="member">samplerate</ref>)<sp/>+<sp/>pad_slot)<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slots_per_frame;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>slots_per_frame<sp/>=<sp/>(header-&gt;<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/>==<sp/><ref refid="libmad_2frame_8h_1abbd9de27e20bcf285c28ee515548d650a851195f014842ded957735128be78f0f" kindref="member">MAD_LAYER_III</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051ea3acf380d524284c96b17b4566bab6a29" kindref="member">MAD_FLAG_LSF_EXT</ref>))<sp/>?<sp/>72<sp/>:<sp/>144;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>=<sp/>(slots_per_frame<sp/>*<sp/>header-&gt;<ref refid="structmad__header_1aa26b0a9c946065e7b39df10c4e8f3995" kindref="member">bitrate</ref><sp/>/<sp/>header-&gt;<ref refid="structmad__header_1ac6ca4dc0cbab5c4a7014bb8c26b9d06e" kindref="member">samplerate</ref>)<sp/>+<sp/>pad_slot;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>verify<sp/>there<sp/>is<sp/>enough<sp/>data<sp/>left<sp/>in<sp/>buffer<sp/>to<sp/>decode<sp/>this<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N<sp/>+<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a39eef28d796acc4a186bb06e1171f882" kindref="member">MAD_BUFFER_GUARD</ref><sp/>&gt;<sp/>end<sp/>-<sp/>stream-&gt;<ref refid="structmad__stream_1a7618e13aaba1d5817d30f3aea45a3c3c" kindref="member">this_frame</ref>)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref><sp/>=<sp/>stream-&gt;<ref refid="structmad__stream_1a7618e13aaba1d5817d30f3aea45a3c3c" kindref="member">this_frame</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1ac9a8e6b43a422325e581d73d28bb538a" kindref="member">error</ref><sp/>=<sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1a03f249e372a63a329b780307f4e2c2dfaacda66fa6ae5e8a953ef1a4a9ea90319" kindref="member">MAD_ERROR_BUFLEN</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref><sp/>=<sp/>stream-&gt;<ref refid="structmad__stream_1a7618e13aaba1d5817d30f3aea45a3c3c" kindref="member">this_frame</ref><sp/>+<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stream-&gt;<ref refid="structmad__stream_1a1f11c60768caff2595ce4c94b1172d5a" kindref="member">sync</ref>)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>that<sp/>a<sp/>valid<sp/>frame<sp/>header<sp/>follows<sp/>this<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(ptr[0]<sp/>==<sp/>0xff<sp/>&amp;&amp;<sp/>(ptr[1]<sp/>&amp;<sp/>0xe0)<sp/>==<sp/>0xe0))<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref><sp/>=<sp/>stream-&gt;<ref refid="structmad__stream_1a7618e13aaba1d5817d30f3aea45a3c3c" kindref="member">this_frame</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>sync;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1a1f11c60768caff2595ce4c94b1172d5a" kindref="member">sync</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>|=<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051ea35836164988bb2858aadeecb53febba5" kindref="member">MAD_FLAG_INCOMPLETE</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1a1f11c60768caff2595ce4c94b1172d5a" kindref="member">sync</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*<sp/>NAME:<sp/><sp/><sp/><sp/>frame-&gt;decode()</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*<sp/>DESCRIPTION:<sp/>decode<sp/>a<sp/>single<sp/>frame<sp/>from<sp/>a<sp/>bitstream</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="mac_2config_2i386_2lib-src_2libmad_2mad_8h_1abcee46b2b808ebf6e0d1c3748b590a38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libmad_2frame_8c_1ada815bd56a3e1b4d4af2e99f592866ef" kindref="member">mad_frame_decode</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__frame" kindref="compound">mad_frame</ref><sp/>*frame,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/>*stream)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>frame-&gt;<ref refid="structmad__frame_1a9a7cdd4253810f2ec5ff5bace7144e53" kindref="member">options</ref><sp/>=<sp/>stream-&gt;<ref refid="structmad__stream_1a870d5724cee7de5af658c92dfcb48236" kindref="member">options</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>header()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>error_check()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(frame-&gt;<ref refid="structmad__frame_1a65c2d01fcd43fefff994d61c55433307" kindref="member">header</ref>.<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051ea35836164988bb2858aadeecb53febba5" kindref="member">MAD_FLAG_INCOMPLETE</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libmad_2frame_8c_1a2121fb34306c8e948221be38253b38e2" kindref="member">mad_header_decode</ref>(&amp;frame-&gt;<ref refid="structmad__frame_1a65c2d01fcd43fefff994d61c55433307" kindref="member">header</ref>,<sp/>stream)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>audio_data()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>frame-&gt;<ref refid="structmad__frame_1a65c2d01fcd43fefff994d61c55433307" kindref="member">header</ref>.<ref refid="structmad__header_1ac7b0399dfabb2192aa1ed7ef07a7c7a7" kindref="member">flags</ref><sp/>&amp;=<sp/>~<ref refid="libmad_2frame_8h_1a7859c0a3efa8b1c360f5c2376baf051ea35836164988bb2858aadeecb53febba5" kindref="member">MAD_FLAG_INCOMPLETE</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decoder_table[frame-&gt;<ref refid="structmad__frame_1a65c2d01fcd43fefff994d61c55433307" kindref="member">header</ref>.<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/>-<sp/>1](stream,<sp/>frame)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1ae8609d0ec1b8c5c6ca5743f0dae0c5a9" kindref="member">MAD_RECOVERABLE</ref>(stream-&gt;<ref refid="structmad__stream_1ac9a8e6b43a422325e581d73d28bb538a" kindref="member">error</ref>))</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref><sp/>=<sp/>stream-&gt;<ref refid="structmad__stream_1a7618e13aaba1d5817d30f3aea45a3c3c" kindref="member">this_frame</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>ancillary_data()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame-&gt;<ref refid="structmad__frame_1a65c2d01fcd43fefff994d61c55433307" kindref="member">header</ref>.<ref refid="structmad__header_1a69ea17540b7b9292a37b8dd86b9d7787" kindref="member">layer</ref><sp/>!=<sp/><ref refid="libmad_2frame_8h_1abbd9de27e20bcf285c28ee515548d650a851195f014842ded957735128be78f0f" kindref="member">MAD_LAYER_III</ref>)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__bitptr" kindref="compound">mad_bitptr</ref><sp/>next_frame;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bit_8c_1a123dabe76966366b4862de11981384b1" kindref="member">mad_bit_init</ref>(&amp;next_frame,<sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1ae9e60e90ae0ada3e6b86f323da60b8e9" kindref="member">anc_ptr</ref><sp/><sp/><sp/><sp/>=<sp/>stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1a9c0f59e34e285be5ef1d188c87f99fe6" kindref="member">anc_bitlen</ref><sp/>=<sp/><ref refid="bit_8c_1aa71656ef69d19e3a9b81e4ab5deaf98a" kindref="member">mad_bit_length</ref>(&amp;stream-&gt;<ref refid="structmad__stream_1a987cf5a3e8ab950311e7afeda3ef34db" kindref="member">ptr</ref>,<sp/>&amp;next_frame);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bit_8h_1ab291aa2e85bda4a9b9fba0e86cdd4dbd" kindref="member">mad_bit_finish</ref>(&amp;next_frame);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>:</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>stream-&gt;<ref refid="structmad__stream_1a9c0f59e34e285be5ef1d188c87f99fe6" kindref="member">anc_bitlen</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>*<sp/>NAME:<sp/><sp/><sp/><sp/>frame-&gt;mute()</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>*<sp/>DESCRIPTION:<sp/>zero<sp/>all<sp/>subband<sp/>values<sp/>so<sp/>the<sp/>frame<sp/>becomes<sp/>silent</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="mac_2config_2i386_2lib-src_2libmad_2mad_8h_1a1c0f45d2bbf2b433bc18159a01639b68" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libmad_2frame_8c_1adbcf0be1952f90369a6969d7008e8e47" kindref="member">mad_frame_mute</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__frame" kindref="compound">mad_frame</ref><sp/>*frame)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/>sb;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>36;<sp/>++<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sb<sp/>=<sp/>0;<sp/>sb<sp/>&lt;<sp/>32;<sp/>++sb)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frame-&gt;<ref refid="structmad__frame_1a9c70d94f445671d5d7cf09bbbc9cbfef" kindref="member">sbsample</ref>[0][<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>][sb]<sp/>=</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frame-&gt;<ref refid="structmad__frame_1a9c70d94f445671d5d7cf09bbbc9cbfef" kindref="member">sbsample</ref>[1][<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>][sb]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame-&gt;<ref refid="structmad__frame_1afc8e2e262968a482023531799e2c8d2e" kindref="member">overlap</ref>)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>18;<sp/>++<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sb<sp/>=<sp/>0;<sp/>sb<sp/>&lt;<sp/>32;<sp/>++sb)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>(*frame-&gt;<ref refid="structmad__frame_1afc8e2e262968a482023531799e2c8d2e" kindref="member">overlap</ref>)[0][sb][s]<sp/>=</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>(*frame-&gt;<ref refid="structmad__frame_1afc8e2e262968a482023531799e2c8d2e" kindref="member">overlap</ref>)[1][sb][<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/frame.c"/>
  </compounddef>
</doxygen>
